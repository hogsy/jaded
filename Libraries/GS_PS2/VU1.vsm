.global		LABEL_FIRSTLINE;
.global		UV_WorldCompute
.global		UV_WorldCompute_For_Shadows
.global		UV_ObjectCompute_X
.global		UV_ObjectCompute_Y
.global		UV_ObjectCompute_Z
.global		UV_ComputeFinished
.global		STRIP_UV_WorldCompute
.global		STRIP_UV_WorldCompute_For_Shadows
.global		STRIP_UV_ObjectCompute_X
.global		STRIP_UV_ObjectCompute_Y
.global		STRIP_UV_ObjectCompute_Z
.global		STRIP_UV_ComputeFinished
.global		SYM_STRIP_UV_WorldCompute
.global		SYM_STRIP_UV_WorldCompute_For_Shadows
.global		SYM_STRIP_UV_ObjectCompute_X
.global		SYM_STRIP_UV_ObjectCompute_Y
.global		SYM_STRIP_UV_ObjectCompute_Z
.global		SYM_STRIP_UV_ComputeFinished
.global		INFLATE_Start

/* 
VU1 MEM ORGANISATION :
	0x100  -0x104			Matrix 3x3 (I,J,K,T)
	0x104  -0x105			EOP. X must be = to 0x00008000
	0x105  -0x106			W = ZMin for clipping near
	0x106  -0x107			X = CX(320) Y = CY(112) Z = CZ(Bigest as possible) W = FOCALE
	0x107  -0x108			GIF TAG for triangles
	0x10A  -0x10B			UV Matrix ab
	0x10B  -0x10C			UV Matrix cd
	0x10C  -0x10D			UV Matrix T
	
	0x110  -0x120 			Z Clipping 4 Points buffer
	0x120 - 0x140			XY Clipping buffer 1
	0x140 - 0x160			XY Clipping buffer 2
	0x190 - 0x1ff			Push stack
	
	0x000  -0x080 			Destination buffer 1
	0x080  -0x100 			Destination buffer 2
	0x200 - 0x2ff  			source buffer 1 = MAXI 85 triangles 
	0x300 - 0x3ff  			source buffer 2

VU1 REGISTER ORGANISATION
	VI01 				tmp
	VI02 				TriangleCounter
	VI03 				TriangleDestination
	VI04 				GoodTriangleNumber
	VI05 				TriangleBase
	VI06				tmp
	VI07				EOP
	VI08				-------------------------
	VI09				-------------------------
	VI10				-------------------------
	VI11				Number Of ResultPoints XY CLIPPING
	VI12				LOOP Adress Save XYClipping + LOCAL JUMPS
	VI13				LOOP Adress Save ZClipping
	VI14				LOOP Adress
	VI15				-------------------------

	VF01 tmp Cliping
	VF02 tmp Cliping
	VF03 tmp Cliping
	VF04 tmp Cliping
	VF05 P1 Turned-moved
	VF06 P2 Turned-moved
	VF07 P3 Turned-moved
	VF08 Compute UV Vector U
	VF09 Compute UV Vector V
	VF10 P1
	VF11 P2
	VF12 P3
	VF13 C1
	VF14 C2
	VF15 C3
	VF16 UV1
	VF17 UV2
	VF18 UV3
	VF19 Compute UV Trans
	VF20 I
	VF21 J
	VF22 K
	VF23 T
	VF24 XMEC/2 YMEC/2 ZMIN 	<- for clipping, culling & projections
	VF25 SCISORX MAX SCISORY MAX 	<- for clipping & projections
	VF26 PT 1
	VF27 PT 2
	VF28 PT 3
	VF29 xy -> UV Matrix ab	/ zw -> Shadow Z xy
	VF30 xy -> UV Matrix cd	/ zw -> Shadow Z z & Shadow Z dist
	VF31 UV Matrix T
*/
SwapBufferSize			=	0x40
ZClippingBuf 			=	0x80
XYClippingBuf1 			=	0x90
XYClippingBuf2 			=	0xB0
MatrixBase 				=	0xD0
FUR_INFO_SAVE			=   0xD7
ColorMul_Add_Base		=  	0xD8
MatrixUVBase 			=	0xDA
XYClippingStack			=	0xE0
CommandWBase 			=	0xF0
CommandWBaseSave		=	0xF1
CommandWBase2 			=	0xF2
CommandWBase2Save		=	0xF3
PlanarMatrixTransSave	=	0xF4
PlanarProjMatrixBase	=   0xf5 /* 0xF5 , 0xF6 , 0xF7 , 0xF8 */
PlanarMatrixZSave		=	0xF9
TRIANGLESGIF			= 	0xFA
STRIPSGIF				= 	0xFB
EOPGIF					= 	0xFC
ColorMul_Add_Base_Save	=  	0xFD
FUR_INFO				=   0xFF

LIGHT_INFO				=  	0x3FF0
LIGHT_INFO_SAVE			=  	0x3FE0
LIGHT_INFO_SAVE_REG		=  	0x3FD0

NUMBEROFXKICKTRIANGLES	= 	5


.macro Light_Detector 
		NOP								NOP
		NOP								ILW.x VI05,LIGHT_INFO_SAVE(VI00)
		NOP								IBEQ VI05,VI00,NO_LIGHT\@
		NOP								NOP
		NOP								bal VI14 , LIGHT_Start
		NOP								NOP
NO_LIGHT\@:	
.endm									

.macro Light_Detector_MatrixSet
		NOP								ISW.x VI00,LIGHT_INFO_SAVE(VI00)
		NOP								ILW.x VI05,LIGHT_INFO(VI00)
		NOP								IBEQ VI05,VI00,NO_LIGHT\@
		NOP								NOP
		
		NOP								LQ	VF20,LIGHT_INFO+0(VI00)
		NOP								LQ	VF21,LIGHT_INFO+1(VI00)
		NOP								LQ	VF22,LIGHT_INFO+2(VI00)
		NOP								LQ	VF24,LIGHT_INFO+3(VI00)
		NOP								SQ	VF20,LIGHT_INFO_SAVE+0(VI00)
		NOP								SQ	VF21,LIGHT_INFO_SAVE+1(VI00)
		NOP								SQ	VF22,LIGHT_INFO_SAVE+2(VI00)
		NOP								SQ	VF24,LIGHT_INFO_SAVE+3(VI00)
		
		NOP								LQ	VF20,LIGHT_INFO+4(VI00)
		NOP								LQ	VF21,LIGHT_INFO+5(VI00)
		NOP								LQ	VF22,LIGHT_INFO+6(VI00)
		NOP								LQ	VF24,LIGHT_INFO+7(VI00)
		NOP								SQ	VF20,LIGHT_INFO_SAVE+4(VI00)
		NOP								SQ	VF21,LIGHT_INFO_SAVE+5(VI00)
		NOP								SQ	VF22,LIGHT_INFO_SAVE+6(VI00)
		NOP								SQ	VF24,LIGHT_INFO_SAVE+7(VI00)
		
		NOP								LQ	VF20,LIGHT_INFO+8(VI00)
		NOP								LQ	VF21,LIGHT_INFO+9(VI00)
		NOP								LQ	VF22,LIGHT_INFO+10(VI00)
		NOP								LQ	VF24,LIGHT_INFO+11(VI00)
		NOP								SQ	VF20,LIGHT_INFO_SAVE+8(VI00)
		NOP								SQ	VF21,LIGHT_INFO_SAVE+9(VI00)
		NOP								SQ	VF22,LIGHT_INFO_SAVE+10(VI00)
		NOP								SQ	VF24,LIGHT_INFO_SAVE+11(VI00)

		NOP								LQ	VF20,LIGHT_INFO+12(VI00)
		NOP								LQ	VF21,LIGHT_INFO+13(VI00)
		NOP								LQ	VF22,LIGHT_INFO+14(VI00)
		NOP								LQ	VF24,LIGHT_INFO+15(VI00)
		NOP								SQ	VF20,LIGHT_INFO_SAVE+12(VI00)
		NOP								SQ	VF21,LIGHT_INFO_SAVE+13(VI00)
		NOP								SQ	VF22,LIGHT_INFO_SAVE+14(VI00)
		NOP								SQ	VF24,LIGHT_INFO_SAVE+15(VI00)

NO_LIGHT\@:		
		NOP								ISW.x VI00,LIGHT_INFO(VI00)
.endm									


LABEL_FIRSTLINE:
/* GO ! = 0 */
Go_Triangles:
		NOP								B DrawTrianglesStart
		NOP								LQ   VF02, CommandWBase(VI00)		; Load control word
/* Matrix load = 2 */
		NOP								B LoadMatrix
		NOP								LQ   VF02, CommandWBase(VI00)		; Load control word
/* render state= 4 */
		NOP								B SetRenderState
		NOP								ILW.z VI05, CommandWBase2(VI00)z   	; Points source base 
/* render state= 6 */
		NOP								B SetRenderState
		NOP								ILW.z VI05, CommandWBase2(VI00)z   	; Points source base 
/* SHADOWS RENDERING = 8 */
		NOP								B SDW_DrawTrianglesStart
		NOP								LQ   VF02, CommandWBase(VI00)		; Load control word
/* SHADOWS RENDERING & load matrix = 10 */
		NOP								B SDW_LoadMatrix
		NOP								LQ   VF02, CommandWBase(VI00)		; Load control word
/* SPRITE RENDERING = 12 */
		NOP								B SPR_DrawSpritesStart
		NOP								LQ   VF02, CommandWBase(VI00)		; Load control word
/* SPRITE RENDERING & load Matrix = 14 */
		NOP								B SPR_LoadMatrix
		NOP								LQ   VF02, CommandWBase(VI00)		; Load control word
/* Draw strip = 16 */
		NOP								B HJR_STRIP_DrawTrianglesStart
		NOP								LQ   VF02, CommandWBase(VI00)		; Load control word
/* Draw strip + Matrix = 18 */
		NOP								B STRIP_LoadMatrix
		NOP								LQ   VF02, CommandWBase(VI00)		; Load control word
/* Draw strip clipped = 20 */
		NOP								B STRIP2TRI_DrawTrianglesStart;
		NOP								LQ   VF02, CommandWBase(VI00)		; Load control word
/* Draw strip clipped + Matrix = 22 */
		NOP								B STRIP2TRI_LoadMatrix;
		NOP								LQ   VF02, CommandWBase(VI00)		; Load control word
/* STRIP SHADOWS RENDERING = 24 */
		NOP								B STRIP_SDW_DrawTrianglesStart
		NOP								LQ   VF02, CommandWBase(VI00)		; Load control word
/* STRIP SHADOWS RENDERING & load matrix = 26 */
		NOP								B STRIP_SDW_LoadMatrix
		NOP								LQ   VF02, CommandWBase(VI00)		; Load control word
/* STRIP CLIPPED SHADOWS RENDERING = 28 */
		NOP								B STRIP_SDW_DrawTrianglesStart
		NOP								LQ   VF02, CommandWBase(VI00)		; Load control word
/* STRIP CLIPPED SHADOWS RENDERING & load matrix = 30 */
		NOP								B STRIP_SDW_LoadMatrix
		NOP								LQ   VF02, CommandWBase(VI00)		; Load control word

/* Water symetry = + 32 */
		
		NOP								B Finished
		NOP								NOP
/* Matrix load = 2 */
		NOP								B Finished
		NOP								NOP
/* render state= 4 */
		NOP								B Finished
		NOP								NOP
/* render state= 6 */
		NOP								B Finished
		NOP								NOP
/* SHADOWS RENDERING = 8 */
		NOP								B Finished
		NOP								NOP
/* SHADOWS RENDERING & load matrix = 10 */
		NOP								B Finished
		NOP								NOP
/* SPRITE RENDERING = 12 */
		NOP								B Finished
		NOP								NOP
/* SPRITE RENDERING & load Matrix = 14 */
		NOP								B Finished
		NOP								NOP
/* Draw strip = 16 */
		NOP								B HJR_SYM_STRIP_DrawTrianglesStart
		NOP								LQ   VF02, CommandWBase(VI00)		; Load control word
/* Draw strip + Matrix = 18 */
		NOP								B HJR_SYM_STRIP_LoadMatrix
		NOP								LQ   VF02, CommandWBase(VI00)		; Load control word
/* Draw strip clipped = 20 */
		NOP								B HJR_SYM_STRIP_DrawTrianglesStart
		NOP								LQ   VF02, CommandWBase(VI00)		; Load control word
/* Draw strip clipped + Matrix = 22 */
		NOP								B HJR_SYM_STRIP_LoadMatrix
		NOP								LQ   VF02, CommandWBase(VI00)		; Load control word
/* STRIP SHADOWS RENDERING = 24 */
		NOP								B Finished
		NOP								NOP
/* STRIP SHADOWS RENDERING & load matrix = 26 */
		NOP								B Finished
		NOP								NOP
/* STRIP CLIPPED SHADOWS RENDERING = 28 */
		NOP								B Finished
		NOP								NOP
/* STRIP CLIPPED SHADOWS RENDERING & load matrix = 30 */
		NOP								B Finished
		NOP								NOP
		
/* First int =  64 */
		NOP								LQ   VF01, 0x0(VI00)						; Load TRIANGLES GIF TAG
		NOP								LQ   VF02, 0x1(VI00)						; Load STRIPS GIF TAG
		NOP								LQ   VF03, 0x2(VI00)						; Load EOP GIF TAG
		NOP								IADDIU VI09, VI00, SwapBufferSize			; Base of triangles dest and
		NOP								SQ   VF01, SwapBufferSize(VI00)				; Save GIF TAG
		NOP								SQ   VF01, TRIANGLESGIF(VI00)				; save triangles Gif Tag
		NOP								SQ   VF02, STRIPSGIF(VI00)					; save strips Gif Tag
		NOP								SQ   VF03, EOPGIF(VI00)						; save EOP Gif Tag
		NOP								IADDIU VI03, VI00, 0x001 					; Base of triangles dest = 1
		NOP								ILW.x VI07, 0(VI00)x    					; 0x00008000 Get EOP
		NOP								IADDIU VI08, VI00, NUMBEROFXKICKTRIANGLES	; Triangle dest max number
		NOP								IADDIU VI04, VI00, 0    					; reset destination triangle number 
		NOP								NOP
		NOP[e]							NOP
		NOP								NOP
		
SetRenderState:		
		NOP								LQ   VF20, MatrixBase + 0(VI00)		; load I
		addx.w	VF23,VF00,VF00x			LQ   VF21, MatrixBase + 1(VI00)		; load J
		MULw.xz VF21,VF21,VF21w			LQ   VF22, MatrixBase + 2(VI00)		; load K
		MULw.xz VF22,VF22,VF21w			LQ.xyz   VF23, MatrixBase + 3(VI00)		; load T
		MULw.xz VF20,VF20,VF21w			LQ   VF24, MatrixBase + 4(VI00)		; load 2048
		MULw.xz VF23,VF23,VF21w			LQ   VF25, MatrixBase + 5(VI00)		; load EC/2
		MULw.y  VF21,VF21,VF22w			ILW.w VI14, CommandWBase2(VI00)w   	; Numregs
		MULw.y  VF22,VF22,VF22w			NOP
		MULw.y  VF20,VF20,VF22w			IADDIU VI14,VI14,2
		MULw[e].y VF23,VF23,VF22w		NOP
SRS_Loop:								
		NOP 							IADDI	VI14,VI14,-1
		NOP								LQI.xyzw VF26,(VI05++)
		NOP								IBNE	VI14,VI00,SRS_Loop
		NOP								SQI.xyzw VF26,(VI03++)
		NOP								IAND VI03,VI03,VI09	; Base of triangles dest = & 0x080
		NOP								IADDIU VI03,VI03,0x01   ; Swap buffers
		NOP								XGKICK VI03
		NOP								IADDIU VI03,VI03,SwapBufferSize   ; Swap buffers
		NOP								IAND VI03,VI03,VI09	; Base of triangles dest  = & 0x080
		NOP								IADDIU VI03,VI03,0x01   ; Swap buffers
		NOP								NOP
		NOP[e]							NOP
		NOP								NOP
		
/*-------------------------------------------------------------------------------------------------------------------------------------------------------*/
/*------------------------------------------------------------------ STRIPS RENDERING -------------------------------------------------------------------*/
/*------------------------------------------------------------------- (With Clipping) -------------------------------------------------------------------*/
/*-------------------------------------------------------------------------------------------------------------------------------------------------------*/
STRIP2TRI_LoadMatrix:
		Light_Detector_MatrixSet
		NOP								LQ   VF20, MatrixBase + 0(VI00)		; load I
		addx.w	VF23,VF00,VF00x			LQ   VF21, MatrixBase + 1(VI00)		; load J
		MULw.xz VF21,VF21,VF21w			LQ   VF22, MatrixBase + 2(VI00)		; load K
		MULw.xz VF22,VF22,VF21w			LQ   VF23, MatrixBase + 3(VI00)		; load T
		MULw.xz VF20,VF20,VF21w			LQ   VF24, MatrixBase + 4(VI00)		; load 2048
		MULw.xz VF23,VF23,VF21w			LQ   VF25, MatrixBase + 5(VI00)		; load EC/2
		MULw.y  VF21,VF21,VF22w			LQ   VF29, MatrixUVBase + 0(VI00)		; load UV MAtrix ab
		MULw.y  VF22,VF22,VF22w			LQ   VF30, MatrixUVBase + 1(VI00)		; load UV MAtrix cd
		MULw.y  VF20,VF20,VF22w			B 	 STRIP2TRI_DrawTrianglesStartAfterMAtrix
		MULw.y  VF23,VF23,VF22w			LQ   VF31, MatrixUVBase + 2(VI00)		; load UV MAtrix T
STRIP2TRI_DrawTrianglesStart:		
/*--------------------------------- init STRIP2TRI triangleloop ---------------------------------------------------------------------------------------------- */
		NOP								LQ   VF29, MatrixUVBase + 0(VI00)		; load UV MAtrix ab
		NOP								LQ   VF30, MatrixUVBase + 1(VI00)		; load UV MAtrix cd
		NOP								LQ   VF31, MatrixUVBase + 2(VI00)		; load UV MAtrix T
STRIP2TRI_DrawTrianglesStartAfterMAtrix:		
		NOP								LQ   VF08, PlanarProjMatrixBase + 0(VI00)		; load Planar Matrix VUU X
		NOP								LQ   VF09, PlanarProjMatrixBase + 1(VI00)		; load Planar Matrix VUU Y
		NOP								LQ   VF19, PlanarProjMatrixBase + 2(VI00)		; load Planar Matrix VUU Z
		NOP								LQ   VF01, PlanarProjMatrixBase + 3(VI00)		; load Planar Matrix VUU T
		NOP								SQ   VF01, PlanarMatrixTransSave(VI00)			; load Planar Matrix VUU T

		NOP								LQ   VF01, ColorMul_Add_Base      + 0(VI00)		; ColorMul
		NOP								LQ   VF03, ColorMul_Add_Base      + 1(VI00)		; ColorAdd
		NOP								SQ   VF01, ColorMul_Add_Base_Save + 0(VI00)		; ColorMul
		NOP								SQ   VF03, ColorMul_Add_Base_Save + 1(VI00)		; ColorAdd
		
		NOP[e]							IADDIU VI04, VI00, 0    						; semaphore + reset destination triangle number
		NOP								SQ   VF02, CommandWBaseSave(VI00)				; Save control word
		Light_Detector 
		NOP								ILW.z VI05, CommandWBaseSave(VI00)z   			; Points source base 
		NOP								ILW.x VI15, CommandWBaseSave(VI00)x   			; Compute UV Jump
		NOP								LQ   VF26, TRIANGLESGIF(VI00)					; Load triangles Gif Tag
		NOP								SQ   VF26, 0(VI00)								; save triangles Gif Tag
		NOP								SQ   VF26, SwapBufferSize(VI00)					; save triangles Gif Tag
		NOP								ILW.y VI02, CommandWBaseSave(VI00)y   	; number of strips src
		
STRIP2TRI_DrawTLOOP_BEGIN:		
		NOP								BAL VI14,STRIP2TRI_DrawTrianglesLOOP	; Save label DrawTrianglesLOOP in VI14
		NOP								ILW.y VI02, CommandWBaseSave(VI00)y   	; number of triangles src
STRIP2TRI_DrawTrianglesLOOP:
		NOP								IADDI	VI05,VI05,-6
		NOP								ILW.w VI06, 8(VI05)
		NOP								LQ   VF26, 2(VI05)								; load pt 1
		NOP								IBNE VI06 , VI00 , STRIP2TRI_DontDraw
		NOP								LQ   VF27, 5(VI05)								; load pt 2
		NOP								B	DrawTrianglesLOOP
		NOP								LQ   VF28, 8(VI05)								; load pt 3
STRIP2TRI_DontDraw:		
		NOP								IADDIU VI05, VI05, 9    	; VI05 = *Nexttriangle
		NOP								B DrawTrianglesLOOPEND
		NOP								IADDI VI02, VI02, -1		; decrement number of source triangles 
		/* Test don't draw flags */
/*--------------------------------- init triangleloop ---------------------------------------------------------------------------------------------- */
LoadMatrix:
		Light_Detector_MatrixSet
		NOP								LQ   VF20, MatrixBase + 0(VI00)		; load I
		addx.w	VF23,VF00,VF00x			LQ   VF21, MatrixBase + 1(VI00)		; load J
		MULw.xz VF21,VF21,VF21w			LQ   VF22, MatrixBase + 2(VI00)		; load K
		MULw.xz VF22,VF22,VF21w			LQ   VF23, MatrixBase + 3(VI00)		; load T
		MULw.xz VF20,VF20,VF21w			LQ   VF24, MatrixBase + 4(VI00)		; load 2048
		MULw.xz VF23,VF23,VF21w			LQ   VF25, MatrixBase + 5(VI00)		; load EC/2
		MULw.y  VF21,VF21,VF22w			LQ   VF29, MatrixUVBase + 0(VI00)		; load UV MAtrix ab
		MULw.y  VF22,VF22,VF22w			LQ   VF30, MatrixUVBase + 1(VI00)		; load UV MAtrix cd
		MULw.y  VF20,VF20,VF22w			B DrawTrianglesStartAfterMAtrix
		MULw.y  VF23,VF23,VF22w			LQ   VF31, MatrixUVBase + 2(VI00)		; load UV MAtrix T
DrawTrianglesStart:		
/*--------------------------------- init triangleloop ---------------------------------------------------------------------------------------------- */
		NOP								LQ   VF29, MatrixUVBase + 0(VI00)		; load UV MAtrix ab
		NOP								LQ   VF30, MatrixUVBase + 1(VI00)		; load UV MAtrix cd
		NOP								LQ   VF31, MatrixUVBase + 2(VI00)		; load UV MAtrix T
DrawTrianglesStartAfterMAtrix:		
		NOP								LQ   VF08, PlanarProjMatrixBase + 0(VI00)		; load Planar Matrix VUU X
		NOP								LQ   VF09, PlanarProjMatrixBase + 1(VI00)		; load Planar Matrix VUU Y
		NOP								LQ   VF19, PlanarProjMatrixBase + 2(VI00)		; load Planar Matrix VUU Z
		NOP								LQ   VF01, PlanarProjMatrixBase + 3(VI00)		; load Planar Matrix VUU T
		NOP								SQ   VF01, PlanarMatrixTransSave(VI00)			; load Planar Matrix VUU T

		NOP								LQ   VF01, ColorMul_Add_Base      + 0(VI00)		; ColorMul
		NOP								LQ   VF03, ColorMul_Add_Base      + 1(VI00)		; ColorAdd
		NOP								SQ   VF01, ColorMul_Add_Base_Save + 0(VI00)		; ColorMul
		NOP								SQ   VF03, ColorMul_Add_Base_Save + 1(VI00)		; ColorAdd

		
		NOP[e]							IADDIU VI04, VI00, 0    						; semaphore + reset destination triangle number
		NOP								SQ   VF02, CommandWBaseSave(VI00)				; Save control word
		Light_Detector 
		NOP								ILW.z VI05, CommandWBaseSave(VI00)z   			; Points source base 
		NOP								ILW.x VI15, CommandWBaseSave(VI00)x   			; Compute UV Jump
		NOP								LQ   VF26, TRIANGLESGIF(VI00)					; Load triangles Gif Tag
		NOP								SQ   VF26, 0(VI00)								; save triangles Gif Tag
		NOP								SQ   VF26, SwapBufferSize(VI00)					; save triangles Gif Tag
		NOP								LQ   VF26, 2(VI05)								; load pt 1
		NOP								LQ   VF27, 5(VI05)								; load pt 2
		NOP								LQ   VF28, 8(VI05)								; load pt 3
DrawTLOOP_BEGIN:		
		NOP								BAL VI14,DrawTrianglesLOOP	; Save label DrawTrianglesLOOP in VI14
		NOP								ILW.y VI02, CommandWBaseSave(VI00)y   	; number of triangles src
/*--------------------------------- Load triangle & turn & rotate ----------------------------------------------------------------------- BEGIN LOOP */
DrawTrianglesLOOP:
		MULAx.xyz  ACC, VF20, VF26x		LQ   VF13, 1(VI05)		; load col 1
		MADDAy.xyz ACC, VF21, VF26y		LQ   VF14, 4(VI05)		; load col 2
		MADDAz.xyz ACC, VF22, VF26z		LQ   VF15, 7(VI05)		; load col 3
		MADDw.xyz VF05, VF23, VF00w		LQ   VF16, 0(VI05)		; load uv 1
		MULAx.xyz  ACC, VF20, VF27x		LQ   VF17, 3(VI05)		; load uv 2
		MADDAy.xyz ACC, VF21, VF27y		LQ   VF18, 6(VI05)		; load uv 3

;// MULADD
		MADDAz.xyz ACC, VF22, VF27z		IADDIU VI05, VI05, 9    	; VI05 = *Nexttriangle
		CLIPw.xyz VF05xyz, VF00w		DIV Q, VF24z, VF05z 		; 1 over VF05z
		ITOF0.xyzw VF13,VF13			LQ   VF01, ColorMul_Add_Base_Save + 0(VI00)		; ColorMul
		ITOF0.xyzw VF14,VF14			LQ   VF03, ColorMul_Add_Base_Save + 1(VI00)		; ColorMul
		MADDw.xyz VF06, VF23, VF00w		IADDI VI02, VI02, -1		; decrement number of source triangles 
		ITOF0.xyzw VF15,VF15			NOP
		MUL.xyzw	VF13,VF13,VF01		NOP
		MULAx.xyz  ACC, VF20, VF28x		LOI 	1.0
		MUL.xyzw	VF14,VF14,VF01		NOP
		MUL.xyzw	VF15,VF15,VF01		NOP
		MADDAy.xyz ACC, VF21, VF28y		MOVE.w VF05,VF00w
		ADD.xyzw	VF13,VF13,VF03 		NOP
		ADD.xyzw	VF14,VF14,VF03 		NOP
		MADDAz.xyz ACC, VF22, VF28z		MOVE.w VF06,VF00w
		ADD.xyzw	VF15,VF15,VF03 		NOP
		FTOI0.xyzw VF13,VF13			NOP
		CLIPw.xyz VF06xyz, VF00w		JR	VI15 			;VI15 <- Compute UV
		MADDw.xyz VF07, VF23, VF00w		NOP
UV_ComputeFinished:
		CLIPw.xyz VF07xyz, VF00w		NOP
		FTOI0.xyzw VF14,VF14			NOP
		FTOI0.xyzw VF15,VF15			NOP
		MULq.xyzw VF10, VF05, Q			DIV Q, VF24z, VF06z 		; 1 over VF06z & project VF05
		MULAx.xy  ACC, VF29, VF16		B ZClipping
		MADDAy.xy  ACC, VF30, VF16		MOVE.w VF07,VF00w
NOZClippng:
/* ----------------------------------------- Projection --------------------------------------------------------------------------------------------- */
		CLIPw.xyz VF10xyz, VF00w		MR32.z VF10z,VF10z
		MUL.xyw	VF10, VF10, VF25	NOP
		MULq.xyzw VF06, VF06, Q			DIV Q, VF24z, VF07z 		; 1 over Z
		CLIPw.xyz VF06xyz, VF00w		MR32.z VF06z,VF06z		; Z = 1 over w
		MADDAy.xy  ACC, VF30, VF17		LQ   VF28, 8(VI05)		; UV MATRIX 	; load pt 3		
		MADDw.xy  VF17, VF31, VF00		LQ   VF27, 5(VI05)		; UV MATRIX	; load pt 2
		MULAx.xy  ACC, VF29, VF18		LQ   VF26, 2(VI05)		; UV MATRIX	; load pt 1
		MADDAy.xy  ACC, VF30, VF18		NOP				; UV MATRIX
		MADDw.xy  VF18, VF31, VF00		NOP				; UV MATRIX
		MUL.xyw	VF06, VF06, VF25	WAITQ
		MULq.xyzw VF07, VF07, Q			MOVE.z  VF16z , VF10z
/* ----------------------------------------- Culling XY --------------------------------------------------------------------------------------------- */
		CLIPw.xyz VF07xyz, VF00w		MR32.z VF07z,VF07z
		MUL.xyw	VF07, VF07, VF25		MOVE.z  VF17z , VF06z
		MULz.xy	VF16, VF16, VF16z		MOVE.z  VF18z , VF07z
		MULz.xy	VF17, VF17, VF17z		FCAND  VI01,0x00F3CF	; X+ | Y+ | X- | X+
		MULz.xy	VF18, VF18, VF18z		IBEQ   VI01,VI00, Noclipping;
		NOP								FCOR   VI01,0xffefbe   	; ^0x1041 X+ <- Culling X+
		NOP								IBNE   VI01,VI00, DrawTrianglesLOOPEND
		NOP								FCOR   VI01,0xffbefb	; ^0x4104 Y+ <- Culling Y+
		NOP								IBNE   VI01,VI00, DrawTrianglesLOOPEND
		NOP								FCOR   VI01,0xffdf7d   	; ^0x2082 X- <- Culling X-
		NOP								IBNE   VI01,VI00, DrawTrianglesLOOPEND
		CLIPw.xyz VF10xyz, VF20w		FCOR   VI01,0xff7df7	; ^0x8208 Y- <- Culling Y-
		CLIPw.xyz VF06xyz, VF20w		IBNE   VI01,VI00, DrawTrianglesLOOPEND
		CLIPw.xyz VF07xyz, VF20w		NOP
		NOP								B ClippingXY2
		NOP								NOP
Noclipping:		/* Fog compute */
/* VF24.w = Fog min */
/* VF25.w = Fog Factor */
/* Quel fog de merde!!! */
/* ----------------------------------------- FOG + store triangle ------------------------------------------------------------------------------------ */
	/*	NOP									LOI 	0.000000001
		muli.xyzw VF16,VF16,I			NOP
		muli.xyzw VF17,VF17,I			NOP
		muli.xyzw VF18,VF18,I			NOP
		NOP									LOI 	1.0//*/
		MUL.z	VF10, VF10, VF25		NOP
		MUL.z	VF07, VF07, VF25		NOP
		MUL.z	VF06, VF06, VF25		NOP
		MULw	VF16, VF16, VF23w		NOP
		MULw	VF17, VF17, VF23w		NOP
		MULw	VF18, VF18, VF23w		NOP
		ADD.xyw  VF10, VF10, VF24		SQ	VF16,0 + 0(VI03) 	; UV
		ADD.xyw  VF06, VF06, VF24		SQ  VF13,1 + 0(VI03) 	; Color
		ADD.xyw  VF07, VF07, VF24		SQ 	VF17,0 + 4(VI03) 	; UV
		MAXx.w	VF10,VF10,VF00x			LOI	255.0
		MINIi.w	VF10,VF10,I				SQ 	VF14,1 + 4(VI03) 	; Color		
		FTOI4.xyzw VF10,VF10			SQ 	VF18,0 + 8(VI03) 	; UV
		MAXx.w	VF06,VF06,VF00x			SQ 	VF15,1 + 8(VI03) 	; Color
		MINIi.w	VF06,VF06,I				SQ.w VF10w,2 + 0(VI03) 	; fog
		FTOI4.xyzw VF06,VF06			SQ.xyzw VF10xyzw,3 + 0(VI03) 	; point
		MAXx.w	VF07,VF07,VF00x			IADDI VI04, VI04, 1    ; destination triangle number plus one
		MINIi.w	VF07,VF07,I				IADDI VI03,VI03,(3 * 4)	; destination triangle pointer plus one
		FTOI4.xyzw VF07,VF07			SQ.w VF06w,2 + 4  - (3 * 4)(VI03) 	; fog
		NOP								SQ.xyzw VF06xyzw,3 + 4 - (3 * 4)(VI03) 	; point
		NOP								SQ.w VF07w,2 + 8       - (3 * 4)(VI03) 	; fog
		NOP								SQ.xyzw	VF07xyzw,3 + 8 - (3 * 4)(VI03) 	; point
DrawTrianglesLOOPEND:					
/*-------------------------------------------------------------------------------------------------------------------------------------------- END LOOP */
/*NOP								*/
		NOP								LQ   VF28, 8(VI05)		; UV MATRIX ; load pt 3		
		NOP								IBEQ  VI02, VI00, DrawTrianglesLOOPFinished
		NOP								LQ   VF27, 5(VI05)		; UV MATRIX	; load pt 2
		NOP								IBEQ VI04,VI08,GO_GS   ; VI04 = 14?
		NOP								LQ   VF26, 2(VI05)		; UV MATRIX	; load pt 1
		NOP								JR VI14 		; DrawTrianglesLOOP or ZClipping
		NOP								NOP

DrawTrianglesLOOPFinished:				
		NOP								IBEQ  VI04, VI00, Finished; nothing to draw
		NOP								NOP
		NOP  							BAL VI14,GO_GS
		NOP								NOP
Finished:								
		NOP[e]							NOP
		NOP								NOP
		NOP[e]							NOP
		NOP								NOP
GO_GS:									
		NOP  							IOR 	VI04,VI04,VI07		; EOP in GIF TAG = | 0x00008000
		NOP								IAND 	VI03,VI03,VI09		; Base of triangles dest = & 0x080
		NOP								ISW.x  	VI04, 0(VI03)    	; Set number of triangle in GIF TAG + EOP
		NOP								XGKICK 	VI03
		NOP								IADDIU 	VI04, VI00, 0    	; reset destination triangle number 
		NOP								IADDIU 	VI03,VI03,SwapBufferSize   ; Swap buffers
		NOP								IAND 	VI03,VI03,VI09		; Base of triangles dest  = & 0x080
		NOP								JR 		VI14 				; DrawTrianglesLOOP or ZClipping or XYClipping or Shadowloop
		NOP								IADDIU 	VI03,VI03,0x01   	; Swap buffers
										
ZClipping:								
/* *****************************************************************************************************************************************************************/
/* *****************************************************************************************************************************************************************/
/* ***************************************** ZCLIPING **************************************************************************************************************/
/* *****************************************************************************************************************************************************************/
/* *****************************************************************************************************************************************************************/
/* ----------------------------------------- no Z clip (most of the time)----------------------------------------------------------------------------------------- */
		MADDw.xy  VF16, VF31, VF00		FCOR  	VI01,0xfefbef      			; ^0x10410 -> Z+ 
		MULAx.xy  ACC, VF29, VF17		IBNE   	VI01, VI00, NOZClippng;
/* ----------------------------------------- culling (most of the time after noZClip) ---------------------------------------------------------------------------- */
		NOP								FCAND  	VI01,0x10410      			; 5,6 & 7 are in
		NOP								IBEQ   	VI01, VI00, DrawTrianglesLOOPEND	; <- Culling */
/* ----------------------------------------- cutting  ------------------------------------------------------------------------------------------------------------ */
		ITOF0.xyzw  VF13,VF13			IADDIU VI06,VI00,ZClippingBuf
		ITOF0.xyzw  VF14,VF14			LQ   	VF16, 0 - 9(VI05)		; REload uv 1
		ITOF0.xyzw  VF15,VF15			FCOR  	VI01,0xfefbff      			; 5 & 6 are in*/
		NOP								IBNE   	VI01, VI00, ZClipping_Case6;
		NOP								FCOR  	VI01,0xfeffef      			; 5 & 7 are in
		NOP								IBNE   	VI01, VI00, ZClipping_Case5;
		NOP								FCOR  	VI01,0xfffbef      			; 6 & 7 are in
		NOP								IBNE   	VI01, VI00, ZClipping_Case3;
		NOP								FCAND  	VI01,0x010000      			; 5 is in
		NOP								IBNE   	VI01, VI00, ZClipping_Case4;
		NOP								FCAND 	VI01,0x000400      			; 6 is in
		NOP								IBNE   	VI01, VI00, ZClipping_Case2;
		NOP								NOP
/* ----------------------------------------- 6 different cases --------------------------------------------------------------------------------------------------- */
ZClipping_Case1: /* VF07 is in -----------------------------------------------------------------------------------------------------  0x50 -> VF07 I(0706) I(0507) */
		SUBw.xyzw VF01,VF07,VF00w		SQI.xyzw   VF18, (VI06++)	; store uv  1
		SUB.xyzw  VF02,VF07,VF06		SQI.xyzw   VF15, (VI06++)	; store col 1
		SUB.xyzw  VF03,VF15,VF14		DIV Q,VF01z,VF02z
		SUB.xyzw  VF04,VF18,VF17		BAL  VI13,Iterpol76o
		NOP								SQI.xyzw   VF07, (VI06++)	; store pt  1
		NOP								BAL  VI13,Iterpol75
		NOP								NOP
		NOP								B EndZClipping
		NOP								IADDIU VI06,VI00,ZClippingBuf
ZClipping_Case6: /* VF07 is out	 ----------------------------------------------------------------------------------------------  0x50 -> VF05 VF06 I(0607) I(0705) */
		SUBw.xyzw VF01,VF06,VF00w		SQI.xyzw   VF16, (VI06++)	; store uv  1
		SUB.xyzw  VF02,VF06,VF07		SQI.xyzw   VF13, (VI06++)	; store col 1
		SUB.xyzw  VF03,VF14,VF15		DIV Q,VF01z,VF02z
		SUB.xyzw  VF04,VF17,VF18		SQI.xyzw   VF05, (VI06++)	; store pt  1
		NOP								SQI.xyzw   VF17, (VI06++)	; store uv  2
		NOP								SQI.xyzw   VF14, (VI06++)	; store col 2
		NOP								BAL  VI13,Iterpol67o
		NOP								SQI.xyzw   VF06, (VI06++)	; store pt  2
		NOP								BAL  VI13,Iterpol57
		NOP								NOP
		NOP								B TwoTrianglesPump
		NOP								IADDIU VI06,VI00,ZClippingBuf
										
ZClipping_Case2: /* VF06 is in ---------------------------------------------------------------------------------------------------  0x50 -> VF06 I(0607) I(0506) */
		SUBw.xyzw VF01,VF06,VF00w		SQI.xyzw   VF17, (VI06++)	; store uv  1
		SUB.xyzw  VF02,VF06,VF07		SQI.xyzw   VF14, (VI06++)	; store col 1
		SUB.xyzw  VF03,VF14,VF15		DIV Q,VF01z,VF02z
		SUB.xyzw  VF04,VF17,VF18		BAL  VI13,Iterpol67o
		NOP								SQI.xyzw   VF06, (VI06++)	; store pt  1
		NOP								BAL  VI13,Iterpol65
		NOP								NOP
		NOP								B EndZClipping
		NOP								IADDIU VI06,VI00,ZClippingBuf
ZClipping_Case5: /* VF06 is out ----------------------------------------------------------------------------------------------  0x50 -> VF07 VF05 I(0506) I(0607) */
		SUBw.xyzw VF01,VF05,VF00w		SQI.xyzw   VF18, (VI06++)	; store uv  1
		SUB.xyzw  VF02,VF05,VF06		SQI.xyzw   VF15, (VI06++)	; store col 1
		SUB.xyzw  VF03,VF13,VF14		DIV Q,VF01z,VF02z
		SUB.xyzw  VF04,VF16,VF17		SQI.xyzw   VF07, (VI06++)	; store pt  1
		NOP								SQI.xyzw   VF16, (VI06++)	; store uv  2
		NOP								SQI.xyzw   VF13, (VI06++)	; store col 2
		NOP								BAL  VI13,Iterpol56o
		NOP								SQI.xyzw   VF05, (VI06++)	; store pt  2
		NOP								BAL  VI13,Iterpol76
		NOP								NOP
		NOP								B TwoTrianglesPump
		NOP								IADDIU VI06,VI00,ZClippingBuf
										
ZClipping_Case4: /* VF05 is in -----------------------------------------------------------------------------------------------------  0x50 -> VF05 I(0506) I(0705) */
		SUBw.xyzw VF01,VF05,VF00w		SQI.xyzw   VF16, (VI06++)	; store uv  1
		SUB.xyzw  VF02,VF05,VF06		SQI.xyzw   VF13, (VI06++)	; store col 1
		SUB.xyzw  VF03,VF13,VF14		DIV Q,VF01z,VF02z
		SUB.xyzw  VF04,VF16,VF17		BAL  VI13,Iterpol56o
		NOP								SQI.xyzw   VF05, (VI06++)	; store pt  1
		NOP								BAL  VI13,Iterpol57
		NOP								NOP
		NOP								B EndZClipping
		NOP								IADDIU VI06,VI00,ZClippingBuf
ZClipping_Case3: /* VF05 is out -----------------------------------------------------------------------------------------------  0x50 -> VF06 VF07 I(0705) I(0506) */
		SUBw.xyzw VF01,VF07,VF00w		SQI.xyzw   VF17, (VI06++)	; store uv  1
		SUB.xyzw  VF02,VF07,VF05		SQI.xyzw   VF14, (VI06++)	; store col 1
		SUB.xyzw  VF03,VF15,VF13		DIV Q,VF01z,VF02z
		SUB.xyzw  VF04,VF18,VF16		SQI.xyzw   VF06, (VI06++)	; store pt  1
		NOP								SQI.xyzw   VF18, (VI06++)	; store uv  2
		NOP								SQI.xyzw   VF15, (VI06++)	; store col 2
		NOP								BAL  VI13,Iterpol75o
		NOP								SQI.xyzw   VF07, (VI06++)	; store pt  2
		NOP								BAL  VI13,Iterpol65
		NOP								NOP
		NOP								B TwoTrianglesPump
		NOP								IADDIU VI06,VI00,ZClippingBuf
Iterpol56: /* -----------------------------------------------------------------------------------------------------------------------  Interpol Points 1-2 (color UV XYZ)*/
		SUBw.xyzw VF01,VF05,VF00w		NOP
		SUB.xyzw  VF02,VF05,VF06		NOP
		SUB.xyzw  VF03,VF13,VF14		DIV Q,VF01z,VF02z
		SUB.xyzw  VF04,VF16,VF17		NOP
Iterpol56o:								
		MULAi.xyzw ACC,VF16,I			WAITQ
		MSUBq.xyzw VF04,VF04,Q			NOP
		MULAi.xyzw ACC,VF13,I			NOP
		MSUBq.xyzw VF03,VF03,Q			SQI.xyzw   VF04, (VI06++)	; store uv  I
		MULAi.xyzw ACC,VF05,I			SQI.xyzw   VF03, (VI06++)	; store col I
		MSUBq.xyzw VF02,VF02,Q			JR VI13
		NOP								SQI.xyzw   VF02, (VI06++)	; store pt  I
Iterpol67:/* -----------------------------------------------------------------------------------------------------------------------  Interpol Points 2-3 (color UV XYZ)*/
		SUBw.xyzw VF01,VF06,VF00w		NOP
		SUB.xyzw  VF02,VF06,VF07		NOP
		SUB.xyzw  VF03,VF14,VF15		DIV Q,VF01z,VF02z
		SUB.xyzw  VF04,VF17,VF18		NOP
Iterpol67o:								
		MULAi.xyzw ACC,VF17,I			WAITQ
		MSUBq.xyzw VF04,VF04,Q			NOP;*/
		MULAi.xyzw ACC,VF14,I			NOP
		MSUBq.xyzw VF03,VF03,Q			SQI.xyzw   VF04, (VI06++)	; store uv  I
		MULAi.xyzw ACC,VF06,I			SQI.xyzw   VF03, (VI06++)	; store col I
		MSUBq.xyzw VF02,VF02,Q			JR VI13
		NOP								SQI.xyzw   VF02, (VI06++)	; store pt  I
Iterpol75:/* ----------------------------------------------------------------------------------------------------------------------- Interpol Points 1-3 (color UV XYZ)*/
		SUBw.xyzw VF01,VF07,VF00w		NOP
		SUB.xyzw  VF02,VF07,VF05		NOP
		SUB.xyzw  VF03,VF15,VF13		DIV Q,VF01z,VF02z
		SUB.xyzw  VF04,VF18,VF16		NOP
Iterpol75o:								
		MULAi.xyzw ACC,VF18,I			WAITQ
		MSUBq.xyzw VF04,VF04,Q			NOP;*/
		MULAi.xyzw ACC,VF15,I			NOP
		MSUBq.xyzw VF03,VF03,Q			SQI.xyzw   VF04, (VI06++)	; store uv  I
		MULAi.xyzw ACC,VF07,I			SQI.xyzw   VF03, (VI06++)	; store col I
		MSUBq.xyzw VF02,VF02,Q			JR VI13
		NOP								SQI.xyzw   VF02, (VI06++)	; store pt  I
Iterpol65: /* -----------------------------------------------------------------------------------------------------------------------  Interpol Points 1-2 (color UV XYZ)*/
		SUBw.xyzw VF01,VF06,VF00w		NOP
		SUB.xyzw  VF02,VF06,VF05		NOP
		SUB.xyzw  VF03,VF14,VF13		DIV Q,VF01z,VF02z
		SUB.xyzw  VF04,VF17,VF16		NOP
Iterpol65o:								
		MULAi.xyzw ACC,VF17,I			WAITQ
		MSUBq.xyzw VF04,VF04,Q			NOP
		MULAi.xyzw ACC,VF14,I			NOP
		MSUBq.xyzw VF03,VF03,Q			SQI.xyzw   VF04, (VI06++)	; store uv  I
		MULAi.xyzw ACC,VF06,I			SQI.xyzw   VF03, (VI06++)	; store col I
		MSUBq.xyzw VF02,VF02,Q			JR VI13
		NOP								SQI.xyzw   VF02, (VI06++)	; store pt  I
Iterpol76:/* -----------------------------------------------------------------------------------------------------------------------  Interpol Points 2-3 (color UV XYZ)*/
		SUBw.xyzw VF01,VF07,VF00w		NOP
		SUB.xyzw  VF02,VF07,VF06		NOP
		SUB.xyzw  VF03,VF15,VF14		DIV Q,VF01z,VF02z
		SUB.xyzw  VF04,VF18,VF17		NOP
Iterpol76o:								
		MULAi.xyzw ACC,VF18,I			WAITQ
		MSUBq.xyzw VF04,VF04,Q			NOP;*/
		MULAi.xyzw ACC,VF15,I			NOP
		MSUBq.xyzw VF03,VF03,Q			SQI.xyzw   VF04, (VI06++)	; store uv  I
		MULAi.xyzw ACC,VF07,I			SQI.xyzw   VF03, (VI06++)	; store col I
		MSUBq.xyzw VF02,VF02,Q			JR VI13
		NOP								SQI.xyzw   VF02, (VI06++)	; store pt  I
Iterpol57:/* ----------------------------------------------------------------------------------------------------------------------- Interpol Points 1-3 (color UV XYZ)*/
		SUBw.xyzw VF01,VF05,VF00w		NOP
		SUB.xyzw  VF02,VF05,VF07		NOP
		SUB.xyzw  VF03,VF13,VF15		DIV Q,VF01z,VF02z
		SUB.xyzw  VF04,VF16,VF18		NOP
Iterpol57o:								
		MULAi.xyzw ACC,VF16,I			WAITQ
		MSUBq.xyzw VF04,VF04,Q			NOP;*/
		MULAi.xyzw ACC,VF13,I			NOP
		MSUBq.xyzw VF03,VF03,Q			SQI.xyzw   VF04, (VI06++)	; store uv  I
		MULAi.xyzw ACC,VF05,I			SQI.xyzw   VF03, (VI06++)	; store col I
		MSUBq.xyzw VF02,VF02,Q			JR VI13
		NOP								SQI.xyzw   VF02, (VI06++)	; store pt  I
/* ----------------------------------------- result is 2 triangles ------------------------------------------------------------------------------------------------------ */
TwoTrianglesPump:						
/* reload first triangle */				
		NOP								LQ   VF05, 2(VI06)	; load pt 1
		NOP								LQ   VF16, 0(VI06)	; load uv 1
		NOP								LQ   VF17, 6(VI06)	; load uv 2
		NOP								LQ   VF13, 1(VI06)	; load col 1
		NOP								DIV Q, VF24z, VF05z 	; 1 over VF05z
		NOP								LQ   VF14, 7(VI06)	; load col 2
		MULAx.xy  ACC, VF29, VF16		LQ   VF15,10(VI06)	; load col 3
		FTOI0.xyzw VF13,VF13			LQ   VF06, 8(VI06)	; load pt 2
		FTOI0.xyzw VF14,VF14			LQ   VF07,11(VI06)	; load pt 3
		FTOI0.xyzw VF15,VF15			LQ   VF18, 9(VI06)	; load uv 3
		MADDAy.xy  ACC, VF30, VF16		IADD VI13,VI14,VI00 	; Copy VI14 in VI13 (Save Loop Call )
		MADDw.xy  VF16, VF31, VF00		IADDI VI02, VI02, 1 	; Increment number of triangles source of 1 
		MULAx.xy  ACC, VF29, VF17		BAL VI14,NOZClippng 	; First Triangle 
		MULq.xyzw VF10, VF05, Q			DIV Q, VF24z, VF06z 	; 1 over VF06z & project VF05
		NOP								IADD VI14,VI13,VI00 	; restaure Loop call
		NOP								IADDIU VI06,VI00,ZClippingBuf
		NOP								IADDI VI02, VI02, -1
/* ----------------------------------------- result is 1 triangles ------------------------------------------------------------------------------------------------------ */
EndZClipping:							
/* reload second triangle */				
		NOP								LQ   VF05, 2(VI06)	; load pt 1
		NOP								LQ   VF16, 0(VI06)	; load uv 1
		NOP								LQ   VF17, 3(VI06)	; load uv 2
		MULAx.xy  ACC, VF29, VF16		LQ   VF13, 1(VI06)	; load col 1
		MADDAy.xy  ACC, VF30, VF16		DIV Q, VF24z, VF05z 	; 1 over VF05z
		MADDw.xy  VF16, VF31, VF00		LQ   VF14, 4(VI06)	; load col 2
		MULAx.xy  ACC, VF29, VF17		LQ   VF15, 7(VI06)	; load col 3
		FTOI0.xyzw  VF13,VF13			LQ   VF06, 5(VI06)	; load pt 2
		FTOI0.xyzw  VF14,VF14			LQ   VF07, 8(VI06)	; load pt 3		
		FTOI0.xyzw  VF15,VF15			LQ   VF18, 6(VI06)	; load uv 3
		MULAx.xy  ACC, VF29, VF17		B NOZClippng
		MULq.xyzw VF10, VF05, Q			DIV Q, VF24z, VF06z 	; 1 over VF06z & project VF05
/* ***************************************** END ZCLIPING ************************************************************************************************************* */

/* ************************************************************************************************************************/
/* ************************************************************************************************************************/
/* ************************************************************************************************************************/
/* ***************************************** XY CLIPING ************************************************************************************************************ */
/* ************************************************************************************************************************/
/* ************************************************************************************************************************/
.macro xyCutXmin
		SUB.xyzw VF13,VF04,VF01			NOP
		ADDw.xyzw VF14,VF04,VF20w		NOP
		NOP								DIV	Q,VF14x,VF13x
.endm									
.macro xyCutXmax						
		SUB.xyzw VF13,VF04,VF01			NOP
		SUBw.xyzw VF14,VF04,VF20w		NOP
		NOP								DIV	Q,VF14x,VF13x
.endm									
.macro xyCutYmin						
		SUB.xyzw VF13,VF04,VF01			NOP
		ADDw.xyzw VF14,VF04,VF20w		NOP
		NOP								DIV	Q,VF14y,VF13y
.endm									
.macro xyCutYmax						
		SUB.xyzw VF13,VF04,VF01			NOP
		SUBw.xyzw VF14,VF04,VF20w		NOP
		NOP								DIV	Q,VF14y,VF13y
.endm									
										
.macro xyCutXminR						
		SUB.xyzw VF13,VF01,VF04			NOP
		ADDw.xyzw VF14,VF01,VF20w		NOP
		NOP								DIV	Q,VF14x,VF13x
.endm									
.macro xyCutXmaxR						
		SUB.xyzw VF13,VF01,VF04			NOP
		SUBw.xyzw VF14,VF01,VF20w		NOP
		NOP								DIV	Q,VF14x,VF13x
.endm									
.macro xyCutYminR						
		SUB.xyzw VF13,VF01,VF04			NOP
		ADDw.xyzw VF14,VF01,VF20w		NOP
		NOP								DIV	Q,VF14y,VF13y
.endm
.macro xyCutYmaxR
		SUB.xyzw VF13,VF01,VF04			NOP
		SUBw.xyzw VF14,VF01,VF20w		NOP
		NOP								DIV	Q,VF14y,VF13y
.endm
/* ************************************************************************************************************************/
/* ************************************************************************************************************************/
.macro XYCopyPoint BaseDost,BaseSerc 
		NOP				LQ   	VF01, \BaseSerc + 0(VI10) ; Pt 1
		NOP				LQ   	VF02, \BaseSerc + 1(VI10) ; Color 1
		NOP				LQ   	VF03, \BaseSerc + 2(VI10) ; UV 1
		NOP				SQ   	VF01, \BaseDost + 0(VI05) ; Pt 1
		NOP				SQ   	VF02, \BaseDost + 1(VI05) ; Color 1
		NOP				SQ   	VF03, \BaseDost + 2(VI05) ; UV 1
		NOP				IADDI	VI11,VI11,1
.endm
/* ************************************************************************************************************************/
/* ************************************************************************************************************************/
.macro XYInterpolePoints BaseDest,BaseSorc
		SUB.xyzw  VF16,VF01,VF10	LQ   	VF03, \BaseSorc + 2(VI10) ; UV 1
		SUB.xyzw  VF17,VF02,VF11	LOI 1.0
		SUB.xyzw  VF18,VF03,VF12	IADDI	VI11,VI11,1
		MULAi.xyzw ACC,VF10,I		WAITQ
		MADDq.xyzw VF01,VF16,Q		IADDI	VI05,VI05,3
		MULAi.xyzw ACC,VF11,I		NOP
		MADDq.xyzw VF02,VF17,Q		NOP
		MULAi.xyzw ACC,VF12,I		SQ   	VF01, \BaseDest - 3(VI05) ; Pt 1
		MADDq.xyzw VF03,VF18,Q		SQ   	VF02, \BaseDest - 2(VI05) ; Color 1
		NOP							SQ   	VF03, \BaseDest - 1(VI05) ; UV 1
.endm
/* ************************************************************************************************************************/
/* ************************************************************************************************************************/
.macro XYInterpolePointsR BaseDest,BaseSorc
		SUB.xyzw  VF16,VF10,VF01	LQ   	VF03, \BaseSorc + 2(VI10) ; UV 1
		SUB.xyzw  VF17,VF11,VF02	LOI 1.0
		SUB.xyzw  VF18,VF12,VF03	IADDI	VI11,VI11,1
		MULAi.xyzw ACC,VF01,I		WAITQ
		MADDq.xyzw VF01,VF16,Q		IADDI	VI05,VI05,3
		MULAi.xyzw ACC,VF02,I		NOP
		MADDq.xyzw VF02,VF17,Q		NOP
		MULAi.xyzw ACC,VF03,I		SQ   	VF01, \BaseDest - 3(VI05) ; Pt 1
		MADDq.xyzw VF03,VF18,Q		SQ   	VF02, \BaseDest - 2(VI05) ; Color 1
		NOP							SQ   	VF03, \BaseDest - 1(VI05) ; UV 1
.endm
/* ************************************************************************************************************************/
/* ************************************************************************************************************************/
.macro xyCut xyClippingAnd,xyInterpolMacro,xyInterpolMacroR,BaseDST,BaseSRC
		NOP							LQ	VF04, \BaseSRC(VI00) ; Pt n + 1
		NOP							IADD	VI05,VI10,VI10
		NOP							IADD 	VI11,VI00,VI00		; I11 = 0
		NOP							IADD	VI10,VI05,VI10		; I10 *= 3
		CLIPw.xyz VF04xyz, VF20w	IADD	VI08,VI00,VI00		; I8 = 0
		NOP							IADDIU 	VI02,VI00,0x3f
		NOP							IADDIU	VI09,VI00,\xyClippingAnd
		NOP							IAND	VI02,VI09,VI02
ClippingXM\@:
		NOP							LQ	VF01, \BaseSRC - 3(VI10) 	; Pt n
		CLIPw.xyz VF01xyz, VF20w	IADDI   VI10,VI10,-3		; I10 -= 3
		NOP							IADD	VI05,VI11,VI11
		NOP							IADD	VI05,VI05,VI11
		NOP							LQ   	VF01, \BaseSRC + 0(VI10) ; Pt 1
		NOP							FCGET  	VI01
		NOP							LQ   	VF10, \BaseSRC + 0(VI08) ; Pt n+ 1
		NOP							IAND	VI01,VI01,VI09
		NOP							LQ   	VF02, \BaseSRC + 1(VI10) ; Color 1
		NOP							IBEQ   	VI01,VI00, ClippingXM_SI\@
		NOP							LQ   	VF11, \BaseSRC + 1(VI08) ; Color n+1
		NOP							IBEQ   	VI01,VI09, ClippingXM_SO\@
		NOP							LQ   	VF12, \BaseSRC + 2(VI08) ; UV n+1
		NOP							IBEQ   	VI01,VI02,ClippingXM_GO\@
		NOP							NOP
		\xyInterpolMacro
		XYInterpolePoints		\BaseDST,\BaseSRC;
ClippingXM_SI\@:
		XYCopyPoint 			\BaseDST,\BaseSRC
		NOP							B   	ClippingXM_SO\@
		NOP							NOP
ClippingXM_GO\@:
		\xyInterpolMacroR
		XYInterpolePointsR		\BaseDST,\BaseSRC;
ClippingXM_SO\@:
		NOP							LQ	VF04, \BaseSRC(VI10) ; Pt n + 1
		NOP							IBNE	VI10,VI00,ClippingXM\@
		NOP							IADD	VI08,VI10,VI00
		NOP							IBEQ	VI11,VI00,XYAllIsOut
		NOP							IADD 	VI10,VI11,VI00
.endm								
/* ************************************************************************************************************************/
/* ************************************************************************************************************************/
.macro XYPop						
		NOP							ILW.x  	VI02, XYClippingStack + 0(VI00)
		NOP							ILW.y  	VI05, XYClippingStack + 0(VI00)
		NOP							ILW.z  	VI06, XYClippingStack + 0(VI00)
		NOP							ILW.w  	VI08, XYClippingStack + 0(VI00)
		NOP							ILW.x  	VI10, XYClippingStack + 1(VI00)
		NOP							ILW.y  	VI09, XYClippingStack + 1(VI00)
		NOP							ILW.z  	VI01, XYClippingStack + 1(VI00)
.endm
/* ************************************************************************************************************************/
/* ************************************************************************************************************************/
ClippingXY2: 
/* ************************************************************************************************************************/
		NOP							ISW.x  	VI02, XYClippingStack + 0(VI00)
		NOP							FCAND  VI01,0x00F3CF	; X+ | Y+ | X- | X+
		NOP							IBEQ   VI01,VI00, Noclipping
		NOP							ISW.y  	VI05, XYClippingStack + 0(VI00)
		NOP							ISW.z  	VI06, XYClippingStack + 0(VI00)
		NOP							ISW.w  	VI08, XYClippingStack + 0(VI00)
		NOP							ISW.x  	VI10, XYClippingStack + 1(VI00)
		NOP							ISW.y  	VI09, XYClippingStack + 1(VI00)
		NOP							ISW.z  	VI01, XYClippingStack + 1(VI00)
/* ************************************************************************************************************************/
		ITOF0.xyzw  VF13,VF13		SQ   	VF10, XYClippingBuf1 + 0(VI00) ; Pt 1
		ITOF0.xyzw  VF14,VF14		SQ   	VF16, XYClippingBuf1 + 2(VI00) ; UV 1
		ITOF0.xyzw  VF15,VF15		SQ   	VF06, XYClippingBuf1 + 3(VI00) ; Pt 2
		NOP							SQ   	VF17, XYClippingBuf1 + 5(VI00) ; UV 2
		NOP							SQ   	VF07, XYClippingBuf1 + 6(VI00) ; Pt 3
		NOP							SQ   	VF13, XYClippingBuf1 + 1(VI00) ; Color 1
		NOP							SQ   	VF14, XYClippingBuf1 + 4(VI00) ; Color 2
		NOP							SQ   	VF15, XYClippingBuf1 + 7(VI00) ; Color 3
		NOP							SQ   	VF18, XYClippingBuf1 + 8(VI00) ; UV 3
		NOP							IADDIU  VI10,VI00,3
		xyCut 	0x82 ,	xyCutXmin , xyCutXminR , XYClippingBuf2 , XYClippingBuf1
		xyCut 	0x41,	xyCutXmax , xyCutXmaxR , XYClippingBuf1 , XYClippingBuf2
		xyCut 	0x208,	xyCutYmin , xyCutYminR , XYClippingBuf2 , XYClippingBuf1
		xyCut 	0x104,	xyCutYmax , xyCutYmaxR , XYClippingBuf1 , XYClippingBuf2;//*/
		XYPop						
		NOP							IADDI 	VI11,VI11,-3
		NOP							IADD	VI12,VI14,VI00	; Save Bigloop
		NOP							IADDI 	VI02,VI02, 1 	; Increment number of triangles source of 1 (Case of last triangle)
XYPumpTrianglesLOOP:				
		NOP							IADD	VI06,VI11,VI11
		NOP							IADD	VI06,VI06,VI11
		NOP							LQ   	VF13, XYClippingBuf1 + 1(VI00)	; load Col 1
		NOP							LQ   	VF14, XYClippingBuf1 + 7(VI06)	; load Col 2 (VI11 + 2)
		NOP							LQ   	VF15, XYClippingBuf1 + 4(VI06)	; load Col 3 (VI11 + 1)
		NOP							LQ   	VF10, XYClippingBuf1 + 0(VI00)	; load pt 1
		FTOI0.xyzw VF13,VF13		LQ   	VF06, XYClippingBuf1 + 6(VI06)	; load pt 2  (VI11 + 2)
		FTOI0.xyzw VF14,VF14		LQ   	VF07, XYClippingBuf1 + 3(VI06)	; load pt 3  (VI11 + 1)
		FTOI0.xyzw VF15,VF15		LQ   	VF16, XYClippingBuf1 + 2(VI00)	; load UV 1
		NOP							IBEQ	VI11,VI00,XYPumpTrianglesLOOPEnd
		NOP							LQ   	VF17, XYClippingBuf1 + 8(VI06)	; load UV 2  (VI11 + 2)
		NOP							BAL	VI14,Noclipping
		NOP							LQ   	VF18, XYClippingBuf1 + 5(VI06)	; load UV 3  (VI11 + 1)
		NOP							B	XYPumpTrianglesLOOP
		NOP							IADDI 	VI11,VI11,-1
XYPumpTrianglesLOOPEnd:					
		NOP							LQ   	VF18, XYClippingBuf1 + 5(VI06)	; load UV 3  (VI11 + 1)
		NOP							IADDI 	VI02,VI02, -1 	; Decrement number of triangles source of 1 
		NOP							B	Noclipping
		NOP							IADD	VI14,VI12,VI00	; Restore Bigloop & leave
XYAllIsOut:							
		XYPop						
		NOP							B 	DrawTrianglesLOOPEND
		NOP							NOP
									

/*-------------------------------------------------------------------------------------------------------------------------------------------------------*/
/*------------------------------------------------------------------ INFLATE FOR FUR  -------------------------------------------------------------------*/
/*-----------------------------------------------------------------  POST TRAIETMENT ------------------------------------------------------------------*/
/*-------------------------------------------------------------------------------------------------------------------------------------------------------*/
INFLATE_Start:		
/*--------------------------------- init triangleloop ---------------------------------------------------------------------------------------------- */

		NOP								ILW.x 	VI02, CommandWBase(VI00)x   			; number of strips src
		NOP								IBEQ	VI02, VI00, INFLATE_Finished
		NOP								ILW.z 	VI05, CommandWBase(VI00)z   			; Points source base 
		NOP								ILW.y 	VI04, CommandWBase(VI00)y   			; number of strips src
		NOP								LQ		VF05 , FUR_INFO(VI00)
		NOP								IADD	VI02,VI04,VI04
		NOP								IADD	VI02,VI02,VI04
		NOP								IADD	VI02,VI02,VI05
		NOP								IBEQ  	VI02, VI05, INFLATE_Finished					; Finished?/*-------------------------------------------------------------------------------------------------------------------------------------------------  */
/*--------------------------------- Load triangle & turn & rotate ----------------------------------------------------------------------- BEGIN LOOP */
/*-------------------------------------------------------------------------------------------------------------------------------------------------  */
INFLATE_StartLoop:
; Load data
; inflate
; Save data
		NOP								LQ   	VF13, 1(VI05)									; load col
		ITOF0.xyzw VF13,VF13			LQ   	VF27, 2(VI05)									; load pt 1
		SUBy.xyz	VF13,VF13,VF05		NOP
		MULx.xyz	VF13,VF13,VF05		IADDI 	VI05, VI05 ,3
		ADD.xyz VF27,VF27,VF13			IBNE  	VI02, VI05, INFLATE_StartLoop					; Finished?
		NOP								SQ.xyz 	VF27, 2 - 3(VI05)									; load pt 1
/*-------------------------------------------------------------------------------------------------------------------------------------------------  */
/*--------------------------------- Load triangle & turn & rotate ----------------------------------------------------------------------- END LOOP */
/*-------------------------------------------------------------------------------------------------------------------------------------------------  */
INFLATE_Finished:
		NOP								NOP
		NOP[e]							NOP
		NOP								NOP
		NOP[e]							NOP
		NOP								NOP
		NOP[e]							NOP
		NOP								NOP

/*-------------------------------------------------------------------------------------------------------------------------------------------------------*/
/*------------------------------------------------------------------ LIGHTING		-------------------------------------------------------------------*/
/*-----------------------------------------------------------------  POST TRAIETMENT ------------------------------------------------------------------*/
/*-------------------------------------------------------------------------------------------------------------------------------------------------------*/
LIGHT_Start:		/* Light_Detector  */
/*
	Light Struct :
			X		Y		Z		W
			DTCTOR	NumP
AMBIENT_COL	AR		AG		AB 		AA
DIRECT_COL 	DR		DG		DB		DA
DIRECT_VEC	DX		DY		DZ		__
POINT_COL	S1R		S1G		S1B		OoNear
POINT_VEC	S1X		S1Y		S1Z		OoFar
*/
/*
AMBIENT_REG VF10
DIRECT_REG  VF11
DIRECT_COL  VF12
POINT_COL  	VF13
POINT_VEC  	VF14
COLOR_ACC  	VF15
TEMP		VF16
*/
/*--------------------------------- init Light loop  ---------------------------------------------------------------------------------------------- */
		NOP								LOI		0.125; 1/128
		ADDI	VF26,VF00,I				NOP
		NOP								LOI		255; 1/128
		ADDI.y	VF26,VF00,I				NOP
		NOP								LOI		0.0078125 ; 1/128
		NOP								ILW.x 	VI02, CommandWBaseSave(VI00)x   			; number of strips src
		NOP								IBEQ	VI02, VI00, LIGHT_Finished
		NOP								ILW.z 	VI05, CommandWBaseSave(VI00)z   			; Points source base 
		NOP								ILW.y 	VI04, CommandWBaseSave(VI00)y   			; number of strips src
		NOP								IADD	VI02,VI04,VI04
		NOP								IADD	VI02,VI02,VI04
		NOP								IADD	VI02,VI02,VI05
		NOP								IBEQ  	VI02, VI05, LIGHT_Finished					; Finished?/*-------------------------------------------------------------------------------------------------------------------------------------------------  */
		NOP								SQ		VF10,LIGHT_INFO_SAVE_REG+1(vi00)		
		NOP								SQ		VF11,LIGHT_INFO_SAVE_REG+2(vi00)		
		NOP								SQ		VF12,LIGHT_INFO_SAVE_REG+3(vi00)		
		NOP								SQ		VF13,LIGHT_INFO_SAVE_REG+4(vi00)		
		NOP								SQ		VF14,LIGHT_INFO_SAVE_REG+5(vi00)		
		NOP								SQ		VF15,LIGHT_INFO_SAVE_REG+6(vi00)		
		NOP								SQ		VF16,LIGHT_INFO_SAVE_REG+7(vi00)		
		NOP								SQ		VF17,LIGHT_INFO_SAVE_REG+8(vi00)		
		NOP								LQ		VF10,LIGHT_INFO_SAVE+1(vi00)		;AMBIENT_REG  
		NOP								LQ		VF11,LIGHT_INFO_SAVE+2(vi00)		;DIRECT_COL  
		NOP								LQ		VF12,LIGHT_INFO_SAVE+3(vi00)		;DIRECT_REG  
		NOP								LQ		VF16,LIGHT_INFO_SAVE+4(vi00)		;POINT_COL  	
		NOP								LQ		VF17,LIGHT_INFO_SAVE+5(vi00)		;POINT_VEC  	
		SUB	VF15,VF15,VF15				NOP
/*-------------------------------------------------------------------------------------------------------------------------------------------------  */
/*--------------------------------- Light loop ----------------------------------------------------------------------- BEGIN LOOP */
/*-------------------------------------------------------------------------------------------------------------------------------------------------  */
LIGHT_StartLoop:
; Load data
; inflate
; Save data
		NOP								LQ   	VF13, 1(VI05)			; load Normal
		ITOF0.xyzw VF13,VF13			LQ   	VF27, 2(VI05)			; load pt 1
		MULI.xyz VF13,VF13,I			IADDI 	VI05, VI05 ,3
/* Spherical Precomp */
		SUB.xyz	VF15,VF17,VF27			NOP
		NOP								ERLENG 	P,VF15
/* Spherical Precomp end */
		SUBw.xyz VF13,VF13,VF00w		NOP
		NOP								NOP
/* Dot product Direct */		
		MUL.xyz	VF14,VF13,VF12			NOP
		ADDy.x  VF14,VF14,VF14			NOP
		ADDz.x  VF14,VF14,VF14			NOP
		MAXx	VF14,VF14,VF00			NOP
/* Add to color res */
		MULx VF14,VF11,VF14				NOP
		ADD VF14,VF14,VF10				NOP
/* Spherical compute */
		NOP								WAITP
		NOP								MFP.w 	VF13w,P
		MULw.xyz VF15,VF15,VF13w		NOP
/* Dot product point*/		
		MUL.xyz	VF15,VF13,VF15			NOP
		ADDy.x  VF15,VF15,VF15			NOP
		ADDz.x  VF15,VF15,VF15			NOP
		MUL.w  VF15,VF13,VF00w			NOP
		SUB.w  VF15,VF15,VF16			NOP ;// VF16.w = 1/FAR
		MUL.w  VF15,VF15,VF17			NOP ;// VF17.w = 1/(1/NEAR - 1/FAR)

		MULw VF15,VF15,VF15				NOP
		MAXx	VF15,VF15,VF00			NOP
		MINIw	VF15,VF15,VF00w			NOP
/* compute color res */
		MULx VF15,VF16,VF15				NOP
/* Add to result */
		ADD	VF14,VF14,VF15			NOP


		MINIy	VF15,VF15,VF26			NOP
		
		

		FTOI0.xyzw VF14,VF14  			NOP
		NOP								IBNE  	VI02, VI05, LIGHT_StartLoop					; Finished?
		NOP								SQ.xyz 	VF14, 1 - 3(VI05)									; load pt 1
		
/*-------------------------------------------------------------------------------------------------------------------------------------------------  */
/*--------------------------------- Load triangle & turn & rotate ----------------------------------------------------------------------- END LOOP */
/*-------------------------------------------------------------------------------------------------------------------------------------------------  */
LIGHT_Finished:
		NOP								IADDIU VI08, VI00, NUMBEROFXKICKTRIANGLES	; Triangle dest max number
		NOP								IADDIU VI04, VI00, 0    					; reset destination triangle number 
		NOP								LQ		VF10,LIGHT_INFO_SAVE_REG+1(vi00)		;AMBIENT_REG  
		NOP								LQ		VF11,LIGHT_INFO_SAVE_REG+2(vi00)		;DIRECT_REG  
		NOP								LQ		VF12,LIGHT_INFO_SAVE_REG+3(vi00)		;DIRECT_COL  
		NOP								LQ		VF13,LIGHT_INFO_SAVE_REG+4(vi00)		;POINT_COL  	
		NOP								LQ		VF14,LIGHT_INFO_SAVE_REG+5(vi00)		;POINT_VEC  	
		NOP								LQ		VF15,LIGHT_INFO_SAVE_REG+6(vi00)		
		NOP								LQ		VF16,LIGHT_INFO_SAVE_REG+7(vi00)		
		NOP								LQ		VF17,LIGHT_INFO_SAVE_REG+8(vi00)		
		
		NOP								NOP
		NOP								JR VI14
		NOP								NOP

/* Hi jump indirection */
HJR_SYM_STRIP_DrawTrianglesStart:
		NOP								B SYM_STRIP_DrawTrianglesStart
		NOP 							NOP
HJR_SYM_STRIP_LoadMatrix:
		NOP								B SYM_STRIP_LoadMatrix
		NOP 							NOP
		
HJR_STRIP_DrawTrianglesStart:
		NOP								B STRIP_DrawTrianglesStart
		NOP 							NOP
HJR_STRIP_LoadMatrix:
		NOP								B STRIP_LoadMatrix
		NOP 							NOP
		

/* ************************************************************************************************************************/
/* ************************************************************************************************************************/
/* ************************************************************************************************************************/
/* ***************************************** UV Compute ***************************************************************** */
/* ************************************************************************************************************************/
/* ************************************************************************************************************************/
;// Result must be stored in VF16,VF17,VF18
;//	VF08 Compute UV Vector U
;//	VF09 Compute UV Vector V
;//	VF19 Compute UV Trans

;// VF26, VF27 & VF28 are object coordinates
UV_WorldCompute :
	MULAx.xy  ACC, VF08, VF26x		LQ   VF01, PlanarMatrixTransSave(VI00)		; load Planar Matrix VUU T
	MADDAy.xy ACC, VF09, VF26y		NOP
	MADDz.xy VF16, VF19, VF26z		NOP
	MULAx.xy  ACC, VF08, VF27x		NOP
	MADDAy.xy ACC, VF09, VF27y		NOP
	MADDz.xy VF17, VF19, VF27z		NOP
	ADD.xy	 VF16, VF01, VF16		NOP
	MULAx.xy  ACC, VF08, VF28x		NOP
	MADDAy.xy ACC, VF09, VF28y		NOP
	MADDz.xy VF18, VF19, VF28z		NOP
	ADD.xy	 VF17, VF01, VF17		B	UV_ComputeFinished
	ADD.xy	 VF18, VF01, VF18		SQ   	VF16, -9(VI05)		; REStore uv 1

/* Available registers */									
;//	VF01
;// VF02
;// VF03
;// VF04
;//	VF29 xy -> UV Matrix ab	/ zw -> Shadow Z xy
;//	VF30 xy -> UV Matrix cd	/ zw -> Shadow Z z & Shadow Z dist
;//	VF31 UV Matrix T
UV_WorldCompute_For_Shadows:
	MULAx.xy  ACC, VF08, VF26x		LQ   VF01, PlanarMatrixTransSave(VI00)		; load Planar Matrix VUU T
	MADDAy.xy ACC, VF09, VF26y		NOP
	MADDz.xy VF16, VF19, VF26z		NOP
	MULAx.xy  ACC, VF08, VF27x		NOP
	MADDAy.xy ACC, VF09, VF27y		NOP
	MADDz.xy VF17, VF19, VF27z		LOI	0.5
	ADD.xy	 VF16, VF01, VF16		NOP
	MULAx.xy  ACC, VF08, VF28x		IADDIU VI11,VI00,127 /* DP_MaxNumSTRP */
	MADDAy.xy ACC, VF09, VF28y		NOP
	MADDz.xy VF18, VF19, VF28z		NOP
	ADD.xy	 VF17, VF01, VF17		NOP
	ADD.xy	 VF18, VF01, VF18		NOP
	add.xyzw VF16, VF16, VF16		NOP
	add.xyzw VF17, VF17, VF17		NOP
	add.xyzw VF18, VF18, VF18		NOP;MFIR.w	VF13, VI11
	subw.xyzw VF16, VF16, VF00w		NOP;MFIR.w	VF14, VI11
	subw.xyzw VF17, VF17, VF00w		NOP;MFIR.w	VF15, VI11
	subw.xyzw VF18, VF18, VF00w		NOP
	CLIPw.xyz VF16xyz, VF00w		NOP
	CLIPw.xyz VF17xyz, VF00w		NOP
	CLIPw.xyz VF18xyz, VF00w		NOP
	addw.xyzw VF16, VF16, VF00w		NOP
	addw.xyzw VF17, VF17, VF00w		NOP	
	addw.xyzw VF18, VF18, VF00w		NOP
	muli.xyzw VF16, VF16, I			FCOR   VI01,0xffefbe   	; ^0x1041 X+ <- Culling X+
	muli.xyzw VF17, VF17, I			IBNE   VI01,VI00, DrawTrianglesLOOPEND
	muli.xyzw VF18, VF18, I			FCOR   VI01,0xffbefb	; ^0x4104 Y+ <- Culling Y+
	NOP								IBNE   VI01,VI00, DrawTrianglesLOOPEND
	NOP								FCOR   VI01,0xffdf7d   	; ^0x2082 X- <- Culling X-
	NOP								IBNE   VI01,VI00, DrawTrianglesLOOPEND
	NOP								FCOR   VI01,0xff7df7	; ^0x8208 Y- <- Culling Y-
	NOP								IBNE   VI01,VI00, DrawTrianglesLOOPEND
	NOP								NOP
	
	sub.w		VF02,VF02,VF02		NOP
	mulw.xyz	VF01,VF28,VF00W		NOP
	mulz.x		VF01,VF01,VF29z		NOP
	mulw.y		VF01,VF01,VF29w		NOP
	mulz.z		VF01,VF01,VF30z		NOP
	addy.z		VF01,VF01,VF01y		NOP
	addx.z		VF01,VF01,VF01x		NOP
	subw.z		VF01,VF01,VF30w		NOP
	NOP								NOP
	CLIPw.xyz VF01xyz, VF02w		NOP
	NOP								NOP
	NOP								NOP
	sub.w		VF02,VF02,VF02		NOP
	mulw.xyz	VF01,VF26,VF00W		NOP
	mulz.x		VF01,VF01,VF29z		NOP
	mulw.y		VF01,VF01,VF29w		NOP
	mulz.z		VF01,VF01,VF30z		NOP
	addy.z		VF01,VF01,VF01y		NOP
	addx.z		VF01,VF01,VF01x		NOP
	subw.z		VF01,VF01,VF30w		NOP
	NOP								NOP
	CLIPw.xyz VF01xyz, VF02w		NOP
	NOP								NOP
	NOP								NOP
	sub.w		VF02,VF02,VF02		NOP
	mulw.xyz	VF01,VF27,VF00W		NOP
	mulz.x		VF01,VF01,VF29z		NOP
	mulw.y		VF01,VF01,VF29w		NOP
	mulz.z		VF01,VF01,VF30z		NOP
	addy.z		VF01,VF01,VF01y		NOP
	addx.z		VF01,VF01,VF01x		NOP
	subw.z		VF01,VF01,VF30w		NOP
	NOP								NOP
	CLIPw.xyz VF01xyz, VF02w		NOP
	NOP								NOP
	NOP								NOP
	NOP								NOP
	NOP								FCAND  	VI01,0x20|(0x20<<6)|(0x20<<12)      			; 7 are in
	NOP								IBEQ   	VI01, VI00, DrawTrianglesLOOPEND	; <- Culling */
	NOP								NOP
	
	
/*	sub.xyzw	VF01,VF28,VF26		NOP
	sub.xyzw	VF02,VF27,VF26		NOP
	sub.w		VF02,VF02,VF02		NOP
	OPMULA.xyz ACC, VF01,VF02		NOP
	OPMSUB.xyz VF03,VF02,VF01		NOP
	NOP								NOP
	NOP								NOP
	CLIPw.xyz VF03xyz, VF02w		NOP
	NOP								NOP
	NOP								NOP
	NOP								NOP
	NOP								FCAND  	VI01,0x00010      			; 7 are in
	NOP								IBEQ   	VI01, VI00, DrawTrianglesLOOPEND	; <- Culling */
	
	
;//	B	DrawTrianglesLOOPEND
	CLIPw.xyz VF05xyz, VF00w		LOI 	1.0
	CLIPw.xyz VF06xyz, VF00w		B	UV_ComputeFinished	
	NOP								SQ   	VF16, -9(VI05)		; REStore uv 1
	
	
	
									
									
									
;// VF26, VF27 & VF28 are object coordinates
UV_ObjectCompute_X:
	NOP		MR32.xy	VF16,VF26
	NOP		MR32.xy	VF17,VF27
	NOP		MR32.xy	VF18,VF28
	NOP		B	UV_ComputeFinished
	NOP		SQ   	VF16, -9(VI05)		; REStore uv 1
UV_ObjectCompute_Y:
	NOP		MOVE.x	VF16,VF26
	NOP		MOVE.x	VF17,VF27
	NOP		MOVE.x	VF18,VF28
	NOP		MR32.y	VF16,VF26
	NOP		MR32.y	VF17,VF27
	NOP		MR32.y	VF18,VF28
	NOP		B	UV_ComputeFinished
	NOP		SQ   	VF16, -9(VI05)		; REStore uv 1
UV_ObjectCompute_Z:
	NOP		MOVE.xy	VF16,VF26
	NOP		MOVE.xy	VF17,VF27
	NOP		MOVE.xy	VF18,VF28
	NOP		B	UV_ComputeFinished
	NOP		SQ   	VF16, -9(VI05)		; REStore uv 1
		
									

/*-----------------------------------------------------------------------------------------------------------------------*/
/*-----------------------------------------------------------------------------------------------------------------------*/
/*-----------------------------------------------------------------------------------------------------------------------*/
/*-------------------------------------------------- SHADOWS RENDERING --------------------------------------------------*/
/*-----------------------------------------------------------------------------------------------------------------------*/
/*-----------------------------------------------------------------------------------------------------------------------*/
/*-----------------------------------------------------------------------------------------------------------------------*/

SDW_LoadMatrix:		
		addx.w	VF23,VF00,VF00x			LQ   VF20, MatrixBase + 0(VI00)		; load I
		NOP								LQ   VF21, MatrixBase + 1(VI00)		; load J
		NOP								LQ   VF22, MatrixBase + 2(VI00)		; load K
		NOP								LQ.xyz   VF23, MatrixBase + 3(VI00)		; load T
		NOP								LQ   VF24, MatrixBase + 4(VI00)		; load 2048
		NOP								LQ   VF25, MatrixBase + 5(VI00)		; load EC/2//*/
SDW_DrawTrianglesStart:		
/*--------------------------------- init triangleloop ---------------------------------------------------------------------------------------------- */
		NOP								LQ   VF13, ColorMul_Add_Base + 1(VI00)		; Color ADD
		NOP[e]							IADDIU VI04, VI00, 0    		; reset destination triangle number 
		NOP								LQ   VF26, TRIANGLESGIF(VI00)						; Load strips Gif Tag
		NOP								SQ   VF26, 0(VI00)								; save strips Gif Tag
		FTOI0.xyzw VF13,VF13			SQ   VF26, SwapBufferSize(VI00)					; save strips Gif Tag
		SUB.w VF10,VF10,VF10			SQ   VF02, CommandWBaseSave(VI00)	; Save control word
		ADD.w VF10,VF10,VF00			ILW.z VI05, CommandWBaseSave(VI00)z   	; Points source base 
		SUB.w VF11,VF11,VF11			LQ.xyz   VF26, 2(VI05)		; load pt 1
		ADD.w VF11,VF11,VF00			LQ.xyz   VF27, 5(VI05)		; load pt 2		
		SUB.w VF12,VF12,VF12			LQ.xyz   VF28, 8(VI05)		; load pt 3
		ADD.w VF12,VF12,VF00			BAL VI14,SDW_DrawTrianglesLOOP	; Save label DrawTrianglesLOOP in VI14
		NOP								ILW.y VI02, CommandWBaseSave(VI00)y   	; number of triangles src
/*--------------------------------- Load triangle & turn & rotate ----------------------------------------------------------------------- BEGIN LOOP */
SDW_DrawTrianglesLOOP:
		MULAx.xyzw  ACC, VF20, VF26x	NOP
		MADDAy.xyzw ACC, VF21, VF26y	NOP
		MADDAz.xyzw ACC, VF22, VF26z	NOP
		MADDw.xyzw VF05, VF23, VF00w	SQ   	VF13, 1(VI03)		; store col 1
		MULAx.xyzw  ACC, VF20, VF27x	SQ   	VF13, 5(VI03)		; store col 1
		MAX.xy	VF05 , VF05 , VF24		NOP
		MADDAy.xyzw ACC, VF21, VF27y	SQ   	VF13, 9(VI03)		; store col 1
		MINI.xy	VF05 , VF05 , VF25		NOP
		FTOI4.xyz VF10,VF05				IADDI 	VI04, VI04,1    	; destination triangle number plus one
		MADDAz.xyzw ACC, VF22, VF27z	IADDIU 	VI05, VI05, 9    	; VI05 = *Nexttriangle
		MADDw.xyzw VF06, VF23, VF00w	IADDI 	VI02, VI02, -1		; decrement number of source triangles 
		MULAx.xyzw  ACC, VF20, VF28x	SQ 	VF10, 3(VI03) 			; point
		MAX.xy	VF06 , VF06 , VF24		NOP
		MADDAy.xyzw ACC, VF21, VF28y	LQ.xyz 	VF26, 2(VI05)		; load pt 1
		MINI.xy	VF06 , VF06 , VF25		NOP
		FTOI4.xyz VF11,VF06				LQ.xyz 	VF27, 5(VI05)		; load pt 2
		MADDAz.xyzw ACC, VF22, VF28z	IADDI 	VI03,VI03,12
		MADDw.xyzw VF07, VF23, VF00w	LQ.xyz 	VF28, 8(VI05)		; load pt 3
		MAX.xy	VF07 , VF07 , VF24		NOP
		MINI.xy	VF07 , VF07 , VF25		SQ	VF11,3 + 4 - 12(VI03) 			; point
		FTOI4.xyz VF12,VF07				IBEQ  	VI02, VI00,SDW_DrawTrianglesLOOPFinished
		NOP								SQ	VF12,3 + 8 - 12(VI03) 			; point
		NOP								IBEQ 	VI04,VI08,GO_GS   				; VI04 = 14?
		NOP								NOP
		NOP								B SDW_DrawTrianglesLOOP 			; SDW_DrawTrianglesLOOP
		NOP								NOP
SDW_DrawTrianglesLOOPFinished:		
		NOP								IBEQ  VI04, VI00, Finished; nothing to draw
		NOP								NOP
		NOP  							BAL VI14,GO_GS
		NOP								NOP
		NOP[e]							NOP
		NOP								NOP


/*-------------------------------------------------------------------------------------------------------------------------------------------------------*/
/*------------------------------------------------------------------ SPRITES RENDERING ------------------------------------------------------------------*/
/*-------------------------------------------------------------------------------------------------------------------------------------------------------*/

SPR_LoadMatrix: 
		addx.w	VF23,VF00,VF00x			LQ   VF20, MatrixBase + 0(VI00)		; load I
		NOP								LQ   VF21, MatrixBase + 1(VI00)		; load J
		MULw.xz VF21,VF21,VF21w			LQ   VF22, MatrixBase + 2(VI00)		; load K
		MULw.xz VF22,VF22,VF21w			LQ.xyz   VF23, MatrixBase + 3(VI00)		; load T
		MULw.xz VF20,VF20,VF21w			LQ   VF24, MatrixBase + 4(VI00)		; load 2048
		MULw.xz VF23,VF23,VF21w			LQ   VF25, MatrixBase + 5(VI00)		; load EC/2
		MULw.y  VF21,VF21,VF22w			NOP
		MULw.y  VF22,VF22,VF22w			NOP
		MULw.y  VF20,VF20,VF22w			NOP
		MULw.y  VF23,VF23,VF22w			NOP
SPR_DrawSpritesStart:		
/*--------------------------------- init triangleloop ---------------------------------------------------------------------------------------------- */
		NOP[e]							SQ   		VF02, CommandWBaseSave(VI00)	; Save control word
		NOP								IADDIU 		VI04, VI00, 0    				; reset destination sprites number 
		NOP								ILW.z 		VI05, CommandWBaseSave(VI00)z 	; Points source base 
		SUB.xyzw VF06,VF06,VF06			ILW.x		VI02, 1(VI05)x					; Load Number of sprites source
		SUB.xyzw VF07,VF07,VF07			IBEQ  		VI02,VI00,SPR_DrawSpritesLOOPFinished
		ADDw.w	VF06,VF06,VF00w			LQ.xyzw   	VF18, 2(VI05)					; load GIF TAG
		ADDw.w 	VF07,VF07,VF00w			SQ.xyzw   	VF18, 0(VI03)					; store GIF TAG
		SUB.xyzw VF09,VF09,VF09			LOI		3000.0
		SUB.xyzw VF08,VF08,VF08			NOP
		MAXi.xy VF08, VF08, I			LOI		1000.0
		MAXi.xy VF09, VF09, I			LOI		255.0
		MAXi.w VF08, VF08, I			NOP

/* Compute UV 1 & 2 */
		SUB.xyzw VF16,VF16,VF16			LQ.xyzw   	VF12, 5(VI05)					; LOAD GIGSCALE0 | GIGSCALE0 * YCoef | ? | ? 
		SUB.xyzw VF17,VF17,VF17			IADDIU 		VI05, VI05, 6    				; First sprite data
		ADDw.yzw	  VF16,VF16,VF00w		BAL 		VI14, SPR_DrawSpritesLOOP		; Save label DrawSpritesLOOP in VI14
		ADDw.xzw VF17,VF17,VF00w		LQ		VF26, 2(VI05)		; load pt

/*--------------------------------- Load triangle & turn & rotate ----------------------------------------------------------------------- BEGIN LOOP */

SPR_DrawSpritesLOOP:
/* Rotate point ---------------------------------------------------------------------------------------------------------------------------------------*/
		MULAx.xyz  ACC, VF20, VF26x		LQ   	VF13, 1(VI05)		; load col
		MADDAy.xyz ACC, VF21, VF26y		IADDIU 	VI05, VI05,3    	; VI05 = *NextSprite
		MADDAz.xyz ACC, VF22, VF26z		IADDI 	VI02, VI02,-1		; decrement number of source Sprites
		MADDw.xyz VF05, VF23, VF00w		MR32.z VF06z,VF00z
		CLIPw.xyz VF05xyz, VF00w		DIV Q, VF24z, VF05z 		; 1 over VF05z
		MULw.xy	   VF11, VF12,VF26w		MR32.z VF07z,VF00z
/* Compute the 2 points of the sprite -----------------------------------------------------------------------------------------------------------------*/
		SUB.xy	   VF06, VF05, VF11		FCAND  	VI01,0x00010      			; 5,6 & 7 are in
		ADD.xy	   VF07, VF05, VF11		IBEQ   	VI01, VI00, SPR_DrawSpritesLOOPStopped	; <- Culling */
/* Project & Store result------------------------------------------------------------------------------------------------------------------------------*/
		NOP								MOVE.w	VF06,VF00
		NOP								MOVE.w	VF07,VF00
		NOP								WAITQ
		MULq.xyzw VF06, VF06, Q			NOP
		MULq.xyzw VF07, VF07, Q			NOP
		MUL.xyzw VF06, VF06, VF25		NOP
		MUL.xyzw VF07, VF07, VF25		NOP
		ADD.xyw  VF06, VF06, VF24		IADDI 	VI03,VI03,6			; Increment *dst
		ADD.xyw  VF07, VF07, VF24		LOI		3000.0
		MINI.xyw VF06, VF06, VF08		IADDI 	VI04, VI04,1    	; destination sprite number plus one
		MINI.xyw VF07, VF07, VF08		LOI		1000.0
		MAX.xyw	VF06, VF06, VF09		SQ 		VF13, 1 - 6(VI03) 		; Color
		MAX.xyw	VF07, VF07, VF09		SQ 		VF16, 3 - 6(VI03) 		; UV 1
		FTOI4.xyzw VF06,VF06			SQ 		VF17, 5 - 6(VI03) 		; UV 2
		FTOI4.xyzw VF07,VF07			SQ.w	VF06, 2 - 6(VI03) 		; fog
		NOP								SQ 		VF06, 4 - 6(VI03) 		; Pt 1
		NOP								SQ 		VF07, 6 - 6(VI03) 		; Pt 2

/* Loop end -------------------------------------------------------------------------------------------------------------------------------------------*/
SPR_DrawSpritesLOOPStopped:
		NOP								IBEQ  	VI02,VI00,SPR_DrawSpritesLOOPFinished
		NOP								NOP
		NOP								IBEQ 	VI04,VI08,SPR_GO_GS   	; VI04 = 14?
		NOP								LQ		VF26, 2(VI05)		; load next pt
		NOP								JR VI14 		; SPR_DrawSpritesLOOP
		NOP								NOP

SPR_DrawSpritesLOOPFinished:
		NOP								IBEQ  VI04, VI00, SPR_DrawSpritefinished	; nothing to draw
		NOP								NOP
		NOP  							BAL VI14,SPR_GO_GS
		NOP								NOP
		
SPR_DrawSpritefinished:		
		NOP[e]							NOP
		NOP								NOP
		
SPR_GO_GS:
		NOP  							IOR 	VI04,VI04,VI07		; EOP in GIF TAG = | 0x00008000
		NOP								IAND 	VI03,VI03,VI09		; Base of triangles dest = & 0x080
		NOP								IADDIU  VI03,VI03,1			;
		NOP								ISW.x  	VI04, 0(VI03)    	; Set number of sprite in GIF TAG + EOP
		NOP								XGKICK 	VI03
		NOP								IADDIU 	VI04, VI00, 0    	; reset destination triangle number 
		NOP								IADDIU 	VI03,VI03,SwapBufferSize   ; Swap buffers
		NOP								IAND 	VI03,VI03,VI09		; Base of triangles dest  = & 0x080
		NOP								SQ.xyzw  VF18, 1(VI03)		; store GIF TAG
		NOP								JR 		VI14 				; DrawTrianglesLOOP or ZClipping or XYClipping or Shadowloop
		NOP								IADDIU 	VI03,VI03,0x01   	; Swap buffers
		
/*-----------------------------------------------------------------------------------------------------------------------*/
/*-----------------------------------------------------------------------------------------------------------------------*/
/*-----------------------------------------------------------------------------------------------------------------------*/
/*----------------------------------------------- STRIP SHADOWS RENDERING -----------------------------------------------*/
/*-----------------------------------------------------------------------------------------------------------------------*/
/*-----------------------------------------------------------------------------------------------------------------------*/
/*-----------------------------------------------------------------------------------------------------------------------*/

STRIP_SDW_LoadMatrix:		
		addx.w	VF23,VF00,VF00x			LQ   VF20, MatrixBase + 0(VI00)		; load I
		NOP								LQ   VF21, MatrixBase + 1(VI00)		; load J
		NOP								LQ   VF22, MatrixBase + 2(VI00)		; load K
		NOP								LQ.xyz   VF23, MatrixBase + 3(VI00)		; load T
		NOP								LQ   VF24, MatrixBase + 4(VI00)		; load 2048
		NOP								LQ   VF25, MatrixBase + 5(VI00)		; load EC/2//*/
STRIP_SDW_DrawTrianglesStart:		
/*--------------------------------- init triangleloop ---------------------------------------------------------------------------------------------- */
		NOP								LQ   VF13, ColorMul_Add_Base + 1(VI00)		; Color ADD
		NOP[e]							IADDIU VI04, VI00, 0    		; reset destination triangle number 
		ADD.w VF10,VF10,VF00			SQ   VF02, CommandWBaseSave(VI00)	; Save control word
		SUB.w VF11,VF11,VF11			ILW.z VI05, CommandWBaseSave(VI00)z   	; Points source base 
		FTOI0.xyzw VF13,VF13			LQ   VF26, STRIPSGIF(VI00)						; Load strips Gif Tag
		NOP								SQ   VF26, 0(VI00)								; save strips Gif Tag
		NOP								SQ   VF26, SwapBufferSize(VI00)					; save strips Gif Tag
		NOP								LQ.xyz   VF26, 2(VI05)		; load pt 1
		NOP								IADDIU VI08, VI00, 15				; Triangle dest max number
		NOP								BAL VI14,STRIP_SDW_DrawTrianglesLOOP	; Save label DrawTrianglesLOOP in VI14
		NOP								ILW.y VI02, CommandWBaseSave(VI00)y   	; number of triangles src
/*--------------------------------- Load triangle & turn & rotate ----------------------------------------------------------------------- BEGIN LOOP */
STRIP_SDW_DrawTrianglesLOOP:
		NOP								ILW.w VI10, 2(VI05)									; load pt 1 Strip command
		MULAx.xyzw  ACC, VF20, VF26x	NOP
		MADDAy.xyzw ACC, VF21, VF26y	IADDI 	VI04, VI04,1    	; destination triangle number plus one
		MADDAz.xyzw ACC, VF22, VF26z	IADDIU 	VI05, VI05,3    	; VI05 = *Nexttriangle
		MADDw.xyzw VF05, VF23, VF00w	SQ   	VF13, 1(VI03)		; store col 1
		MAX.xy	VF05 , VF05 , VF24		LQ.xyz 	VF26, 2(VI05)		; load pt 1
		MINI.xy	VF05 , VF05 , VF25		IADDI 	VI03,VI03,4
		FTOI4.xyz VF10,VF05				IADDI 	VI02, VI02, -1		; decrement number of source triangles 
		NOP								ISW.w   VI10, 3-4(VI03)									; SAVE pt 1 Strip command
		NOP								IBEQ  	VI02, VI00,STRIP_SDW_DrawTrianglesLOOPFinished
		NOP								SQ.xyz 	VF10, 3-4(VI03) 			; point
		NOP								IBEQ 	VI04,VI08,GO_GS   				; VI04 = 14?
		NOP								NOP
		NOP								B STRIP_SDW_DrawTrianglesLOOP 			; SDW_DrawTrianglesLOOP
		NOP								NOP
STRIP_SDW_DrawTrianglesLOOPFinished:		
		NOP								IBEQ  VI04, VI00, STRIP_SDW_Finished; nothing to draw
		NOP								IADDIU VI08, VI00, NUMBEROFXKICKTRIANGLES			; restaure Triangle dest max number
		NOP  							BAL VI14,GO_GS
		NOP								NOP
STRIP_SDW_Finished:
		NOP								NOP
		NOP[e]							NOP
		NOP								NOP
		NOP[e]							NOP
		NOP								NOP

		
/*-------------------------------------------------------------------------------------------------------------------------------------------------------*/
/*------------------------------------------------------------------ STRIPS RENDERING -------------------------------------------------------------------*/
/*------------------------------------------------------------------(Without Clipping)-------------------------------------------------------------------*/
/*-------------------------------------------------------------------------------------------------------------------------------------------------------*/
STRIP_LoadMatrix:
		Light_Detector_MatrixSet
		addx.w	VF23,VF00,VF00x			LQ   VF20, MatrixBase + 0(VI00)		; load I
		NOP								LQ   VF21, MatrixBase + 1(VI00)		; load J
		MULw.xz VF21,VF21,VF21w			LQ   VF22, MatrixBase + 2(VI00)		; load K
		MULw.xz VF22,VF22,VF21w			LQ   VF23, MatrixBase + 3(VI00)		; load T
		MULw.xz VF20,VF20,VF21w			LQ   VF24, MatrixBase + 4(VI00)		; load 2048
		MULw.xz VF23,VF23,VF21w			LQ   VF25, MatrixBase + 5(VI00)		; load EC/2
		MULw.y  VF21,VF21,VF22w			LQ   VF29, MatrixUVBase + 0(VI00)		; load UV MAtrix ab
		MULw.y  VF22,VF22,VF22w			LQ   VF30, MatrixUVBase + 1(VI00)		; load UV MAtrix cd
		MULw.y  VF20,VF20,VF22w			B 	 STRIP_DrawTrianglesStartAfterMAtrix
		MULw.y  VF23,VF23,VF22w			LQ   VF31, MatrixUVBase + 2(VI00)		; load UV MAtrix T
STRIP_DrawTrianglesStart:		
/*--------------------------------- init triangleloop ---------------------------------------------------------------------------------------------- */
		NOP								LQ   VF29, MatrixUVBase + 0(VI00)		; load UV MAtrix ab
		NOP								LQ   VF30, MatrixUVBase + 1(VI00)		; load UV MAtrix cd
		NOP								LQ   VF31, MatrixUVBase + 2(VI00)		; load UV MAtrix T
STRIP_DrawTrianglesStartAfterMAtrix:
		NOP								LQ   VF08, PlanarProjMatrixBase + 0(VI00)		; load Planar Matrix VUU X
		NOP								LQ   VF09, PlanarProjMatrixBase + 1(VI00)		; load Planar Matrix VUU Y
		NOP								LQ   VF19, PlanarProjMatrixBase + 2(VI00)		; load Planar Matrix VUU Z
		NOP								LQ   VF01, PlanarProjMatrixBase + 3(VI00)		; load Planar Matrix VUU T

		NOP								LQ   VF10, ColorMul_Add_Base + 0(VI00)		; Color MUL
		NOP								LQ   VF11, ColorMul_Add_Base + 1(VI00)		; Color ADD
		NOP								LQ   VF12, FUR_INFO + 0(VI00)			; FUR INFO
		
		

		NOP								SQ   VF01, PlanarMatrixTransSave(VI00)			; SAVE Planar Matrix VUU T
		NOP								LQ   VF26, STRIPSGIF(VI00)						; Load strips Gif Tag
		NOP[e]							NOP
		ADDw.x VF07,VF00,VF00w			SQ   VF26, 0(VI00)								; save strips Gif Tag
		NOP								SQ   VF26, SwapBufferSize(VI00)					; save strips Gif Tag
		NOP								SQ   VF02, CommandWBaseSave(VI00)				; Save control word
		Light_Detector 

	/* Possibly jump to fur inflate */
	/* Read info from INFLATE_Start(0xff)*/
/*
		NOP								SQ   VF12, FUR_INFO_SAVE + 0(VI00)			; FUR INFO
		NOP								ILW.x VI15, FUR_INFO_SAVE + 0(VI00)
		NOP								IBNE  VI15, VI00 ,STRIP_no_fur
		NOP								NOP
		NOP								BAL	 VI14, INFLATE_Start
		NOP								NOP
STRIP_no_fur:		
*/
		
		/* end inflate code */
		
		SUBw.y VF07,VF00,VF00w			ILW.z VI05, CommandWBaseSave(VI00)z   			; Points source base 
		NOP								ILW.x VI15, CommandWBaseSave(VI00)x   			; Compute UV Jump
		NOP								LQ   VF27, 2(VI05)								; load pt 1
		NOP								IADDIU VI08, VI00, 15				; Triangle dest max number
		MULAx.xyz  ACC, VF20, VF27x		ILW.y VI04, CommandWBaseSave(VI00)y   	; number of strips src
		MADDAy.xyz ACC, VF21, VF27y		IADD	VI02,VI04,VI04
		MADDAz.xyz ACC, VF22, VF27z		IADD	VI02,VI02,VI04
		MADDw.xyz VF05, VF23, VF00w		IADD	VI02,VI02,VI05
		ADD.xy VF07,VF07,VF07			MOVE.w  VF05w , VF00w
STRIP_DrawTLOOP_BEGIN:
		ADDw.z	VF16,VF00,VF00w			MOVE.w  VF06w , VF00w
		NOP								IADDI VI11 , VI00 , -1
		NOP								IADDI VI12,VI03,0
		NOP								LOI	255.0
		NOP								BAL VI14,STRIP_DrawTrianglesLOOP	; Save label DrawTrianglesLOOP in VI14
		NOP								IADDIU VI04, VI00, 0    						; semaphore + reset destination triangle number

/*-------------------------------------------------------------------------------------------------------------------------------------------------  */
/*--------------------------------- Load triangle & turn & rotate ----------------------------------------------------------------------- BEGIN LOOP */
/*-------------------------------------------------------------------------------------------------------------------------------------------------  */
STRIP_DrawTrianglesLOOP:
; Load data
; Turn & rotate point
; Test ZClipping
; Project
; Compute New UV
; fog

							ADDx.xyzw VF26,VF27,VF00x		LQ   VF27, 2 + 3(VI05)								; load pt 1
							MUL.xyzw VF28, VF28, VF25		DIV Q, VF24z, VF05z 								; 1 over VF05z
							CLIPw.xyz VF05xyz, VF00w		LQ   VF13, 1(VI05)									; load col
							ADD.xyw  VF28, VF28, VF24		LQ.xy   VF16, 0(VI05)								; load uv
							ITOF0.xyzw VF13,VF13			NOP;//MULADD
							MULAx.xyz  ACC, VF20, VF27x		IADDI VI04 , VI04 ,1 	 						 	; destination triangle number plus one
							MUL.xyzw	VF13,VF13,VF10		NOP;//MULADD
							MADDAy.xyz ACC, VF21, VF27y		IADDI VI05 , VI05 ,3								; *pSrc + 1
							MAXx.w	VF28,VF28,VF00x			FCOR  	VI01,0xfefbef				     			; ^0x10410 -> Z+ 
							ADD.xyzw	VF13,VF13,VF11 		NOP;//MULADD
							MADDAz.xyz ACC, VF22, VF27z		JR	VI15 			;VI15 <- Compute UV
							MADDw.xyz VF06, VF23, VF00w		MR32.z VF05z,VF00z									; Z = 1 over w
STRIP_UV_ComputeFinished:	MINIi.w	VF28,VF28,I				ILW.w VI10, 2 - 3(VI05)								; load pt 1 Strip command
							MULAx.xy  ACC, VF29, VF16		NOP 									; Color
							FTOI0.xyzw VF13,VF13			NOP;//MULADD
							MADDAy.xy  ACC, VF30, VF16		IBEQ  VI02, VI05, STRIP_DrawTrianglesLOOPFinished	; Finished?
							FTOI4.xyzw VF28,VF28			ISW.w VI10, 3(VI03)
							MADDw.xy  VF16, VF31, VF00		SQ  VF13,1(VI03)
							MULq.xyzw VF05, VF05, Q			SQ.w	VF28,2(VI12) 								; FOG
							MULq.xyz	VF02, VF16, Q		IBNE   	VI01, VI00, NOZClippng_STRIP
							MINIx.xy VF05 , VF05 , vf07x	SQ.xyz	VF28,3(VI12) 								; point
							NOP								ISW.w VI11, 3(VI03)									; Don t draw
NOZClippng_STRIP: 			MULw.xyzw VF02,VF02,VF23w		IADDI VI12,VI03,0									; MIPMAPPING CORRECTION
							ADDw.z	VF16,VF00,VF00w			IBEQ VI04,VI08,STRIP_GO_GS 								; VI04 = 14?
							MAXy.xyzw	VF28 , VF05 , vf07y	SQ	VF02,0(VI03) 									; UV
							NOP								JR VI14 											; DrawTrianglesLOOP or ZClipping
							ADDx.xyzw	VF05,VF06,VF00		IADDI VI03,VI03,4									; destination triangle pointer plus one
/*-------------------------------------------------------------------------------------------------------------------------------------------------  */
/*--------------------------------- Load triangle & turn & rotate ----------------------------------------------------------------------- END LOOP */
/*-------------------------------------------------------------------------------------------------------------------------------------------------  */
STRIP_DrawTrianglesLOOPFinished:
		MADDw.xy  VF16, VF31, VF00		SQ  	VF13,1(VI03)
		MULq.xyzw VF05, VF05, Q			SQ.w	VF28,2(VI12) 								; FOG
		MULq.xyz	VF02, VF16, Q		IBNE   	VI01, VI00, NOZClippng_STRIP_F
		MINIx.xy VF05 , VF05 , vf07x	SQ.xyz	VF28,3(VI12) 								; point
		NOP								ISW.w VI11, 3(VI03)									; Don t draw
NOZClippng_STRIP_F:
		MULw.xyzw VF02,VF02,VF23w		IADDI VI12,VI03,0
		MAXy.xyzw	VF28 , VF05 , vf07y	IBEQ  VI04, VI00, Finished							; nothing to draw
		NOP								IADDIU VI08, VI00, NUMBEROFXKICKTRIANGLES			; restaure Triangle dest max number
		NOP  							BAL VI14,STRIP_GO_GS
		NOP  							SQ	VF02,0(VI03) 									; UV
		NOP[e]							NOP
		NOP								NOP
		NOP[e]							NOP
		NOP								NOP
		
STRIP_GO_GS:									
		MUL.xyzw VF28, VF28, VF25		IOR 	VI04,VI04,VI07		; EOP in GIF TAG = | 0x00008000
		ADD.xyw  VF28, VF28, VF24		IAND 	VI03,VI03,VI09		; Base of triangles dest = & 0x080
		MAXx.w	VF28,VF28,VF00x			ISW.x  	VI04, 0(VI03)    	; Set number of triangle in GIF TAG + EOP
		MINIi.w	VF28,VF28,I				NOP
		FTOI4.xyzw VF28,VF28			IADDIU 	VI04, VI00, 0    	; reset destination triangle number 
		NOP								SQ.w	VF28,2(VI12) 								; FOG
		NOP								SQ.xyz	VF28,3(VI12) 								; point
		NOP								XGKICK 	VI03
		NOP								IADDIU 	VI03,VI03,SwapBufferSize   ; Swap buffers
		NOP								IAND 	VI03,VI03,VI09		; Base of triangles dest  = & 0x080
		NOP								IADDIU 	VI12,VI03,0x01
		NOP								JR 		VI14 				; DrawTrianglesLOOP or ZClipping or XYClipping or Shadowloop
		ADDx.xyzw	VF05,VF06,VF00		IADDIU 	VI03,VI03,0x01   	; Swap buffers
		
;// VF26 is object coordinates
STRIP_UV_ObjectCompute_X:
		NOP		B	STRIP_UV_ComputeFinished
		NOP		MR32.xy	VF16,VF26
STRIP_UV_ObjectCompute_Y:
		NOP		MOVE.x	VF16,VF26
		NOP		B	STRIP_UV_ComputeFinished
		NOP		MR32.y	VF16,VF26
STRIP_UV_ObjectCompute_Z:
		NOP		B	STRIP_UV_ComputeFinished
		NOP		MOVE.xy	VF16,VF26

STRIP_UV_WorldCompute_For_Shadows:
STRIP_UV_WorldCompute:
		MULAx.xy  ACC, VF08, VF26x		LQ   VF01, PlanarMatrixTransSave(VI00)		; load Planar Matrix VUU T
		MADDAy.xy ACC, VF09, VF26y		NOP
		MADDz.xy VF16, VF19, VF26z		B	STRIP_UV_ComputeFinished
		ADD.xy	 VF16, VF01, VF16		NOP
									
		

/*-------------------------------------------------------------------------------------------------------------------------------------------------------*/
/*------------------------------------------------------------------ STRIPS RENDERING -------------------------------------------------------------------*/
/*----------------------------------------------------------------- WITH WATER SYMETRY ------------------------------------------------------------------*/
/*------------------------------------------------------------------(Without Clipping)-------------------------------------------------------------------*/
/*-------------------------------------------------------------------------------------------------------------------------------------------------------*/
SYM_STRIP_LoadMatrix:
							NOP								LQ   VF20, MatrixBase + 0(VI00)		; load I
							addx.w	VF23,VF00,VF00x			LQ   VF21, MatrixBase + 1(VI00)		; load J
							MULw.xz VF21,VF21,VF21w			LQ   VF22, MatrixBase + 2(VI00)		; load K
							MULw.xz VF22,VF22,VF21w			LQ.xyz   VF23, MatrixBase + 3(VI00)		; load T
							MULw.xz VF20,VF20,VF21w			LQ   VF24, MatrixBase + 4(VI00)		; load 2048
							MULw.xz VF23,VF23,VF21w			LQ   VF25, MatrixBase + 5(VI00)		; load EC/2
							MULw.y  VF21,VF21,VF22w			LQ   VF29, MatrixUVBase + 0(VI00)		; load UV MAtrix ab
							MULw.y  VF22,VF22,VF22w			LQ   VF30, MatrixUVBase + 1(VI00)		; load UV MAtrix cd
							MULw.y  VF20,VF20,VF22w			B SYM_STRIP_DrawTrianglesStartAfterMAtrix
							MULw.y  VF23,VF23,VF22w			LQ   VF31, MatrixUVBase + 2(VI00)		; load UV MAtrix T
SYM_STRIP_DrawTrianglesStart:		
/*--------------------------------- init triangleloop ---------------------------------------------------------------------------------------------- */
							NOP								LQ   VF29, MatrixUVBase + 0(VI00)		; load UV MAtrix ab
							NOP								LQ   VF30, MatrixUVBase + 1(VI00)		; load UV MAtrix cd
							NOP								LQ   VF31, MatrixUVBase + 2(VI00)		; load UV MAtrix T
SYM_STRIP_DrawTrianglesStartAfterMAtrix:
							NOP								LQ   VF18, MatrixBase + 6(VI00)		; load WaterPlane
							NOP								LQ   VF17, MatrixBase + 7(VI00)		; load WaterPlane 2
							NOP								LQ   VF08, PlanarProjMatrixBase + 0(VI00)		; load Planar Matrix VUU X
							ADD.xyzw VF14,VF18,VF00			LQ 	 VF09, PlanarProjMatrixBase + 1(VI00)		; load Planar Matrix VUU Y
							mulx.y VF14,VF14,VF17x			LQ   VF19, PlanarProjMatrixBase + 2(VI00)		; load Planar Matrix VUU Z
							mulx.y VF14,VF14,VF17x			LQ   VF01, PlanarProjMatrixBase + 3(VI00)		; load Planar Matrix VUU T
							
							NOP								LQ   VF10, ColorMul_Add_Base + 0(VI00)		; Color MUL
							NOP								LQ   VF04, ColorMul_Add_Base + 1(VI00)		; Color ADD
							
							NOP								SQ   VF01, PlanarMatrixTransSave(VI00)			; SAVE Planar Matrix VUU T
							NOP[e]							LQ   VF26, STRIPSGIF(VI00)						; Load strips Gif Tag
							NOP								LQ.w   VF23, MatrixBase + 3(VI00)		; load T
							SUBw.y VF07,VF00,VF00w			SQ	 VF24, ZClippingBuf(VI00)
							ADDw.x VF07,VF00,VF00w			SQ	 VF25, ZClippingBuf+1(VI00)
							
							ADDy.x	VF25,VF00,VF17y			NOP ; MULX
							ADDz.y	VF25,VF00,VF17z			NOP ; MULY
							ADDw.x	VF24,VF00,VF23w			NOP ; ADDX
							ADDw.y	VF24,VF00,VF17w			NOP ; ADDY
							
							NOP								SQ   VF02, CommandWBaseSave(VI00)				; Save control word
							addx.w	VF23,VF00,VF00x			ILW.z VI05, CommandWBaseSave(VI00)z   			; Points source base 
							NOP								BAL  VI14,SYM_Symetrise_Camera
							ADD.xy VF07,VF07,VF07			LQ   VF27, 2(VI05)								; load pt 1
							MULAx.xyz  ACC, VF20, VF27x		SQ   VF26, 0(VI00)								; save strips Gif Tag
							MADDAy.xyz ACC, VF21, VF27y		SQ   VF26, SwapBufferSize(VI00)					; save strips Gif Tag
							MADDAz.xyz ACC, VF22, VF27z		NOP
							MADDw.xyz VF05, VF23, VF00w		ILW.x VI15, CommandWBaseSave(VI00)x   			; Compute UV Jump
							ADD.xy VF07,VF07,VF07			IADDIU VI08, VI00, 15				; Triangle dest max number
							MUL.xyz	VF17,VF18,VF05			ILW.y VI04, CommandWBaseSave(VI00)y   	; number of strips src
							ADDz.x	VF17,VF17,VF17z			IADD	VI02,VI04,VI04
							ADDy.x	VF17,VF17,VF17y			IADD	VI02,VI02,VI04
							subw.x	VF17,VF17,VF18w			IADD	VI02,VI02,VI05
							subw.x	VF12,VF17,VF00w			MOVE.w  VF05w , VF00w
							ADDw.z	VF16,VF00,VF00w			MOVE.w  VF06w , VF00w
							MINIx.x	VF11,VF17,VF00x			IADDI VI11 , VI00 , -1
							MAXx.x	VF17,VF17,VF00x			IADDI VI12,VI03,0
							add.x 	VF17,VF17,VF11			LOI	255.0
							add.x 	VF17,VF17,VF11			IADDIU VI04, VI00, 0    						; semaphore + reset destination triangle number
							MULx.xyz VF15,VF14,VF17x		NOP
							sub.xyz	VF05,VF05,VF15			BAL VI14,SYM_STRIP_DrawTrianglesLOOP	; Save label DrawTrianglesLOOP in VI14
							sub.w	VF15,VF15,VF15		MOVE.z VF12,VF05
/*-------------------------------------------------------------------------------------------------------------------------------------------------  */
/*--------------------------------- Load triangle & turn & rotate ----------------------------------------------------------------------- BEGIN LOOP */
/*-------------------------------------------------------------------------------------------------------------------------------------------------  */
SYM_STRIP_DrawTrianglesLOOP:
; Load data
; Turn & rotate point
; Test ZClipping
; Project
; Compute New UV
; fog
; water symetry & culling
							NOP								MOVE.z 	VF12 ,  VF05
							ADDx.xyzw VF26,VF27,VF00x		LQ   VF27, 2 + 3(VI05)								; load pt 1
							MUL.xyzw VF28, VF28, VF25		DIV Q, VF24z, VF05z 								; 1 over VF05z
							CLIPw.xyz VF12xyz, VF00w		LQ   VF13, 1(VI05)									; load col
							ADD.xyw  VF28, VF28, VF24		LQ.xy   VF16, 0(VI05)								; load uv
							MULAx.xyz  ACC, VF20, VF27x		IADDI VI04 , VI04 ,1 	 						 	; destination triangle number plus one
							MADDAy.xyz ACC, VF21, VF27y		IADDI VI05 , VI05 ,3								; *pSrc + 1
							MAXx.w	VF28,VF28,VF00x			FCAND  	VI01,0x2082				     			;  -> X- 
							MADDAz.xyz ACC, VF22, VF27z		JR	VI15 			;VI15 <- Compute UV
							MADDw.xyz VF06, VF23, VF00w		MR32.z VF05z,VF00z									; Z = 1 over w
SYM_STRIP_UV_ComputeFinished:
							MINIi.w	VF28,VF28,I				NOP
							MUL.xyz	VF17,VF18,VF06			ILW.w VI10, 2 - 3(VI05)								; load pt 1 Strip command
							FTOI4.xyzw VF28,VF28			NOP
							ADDz.x	VF17,VF17,VF17z			NOP

;// MULADD							

							ITOF0.xyzw VF13,VF13			NOP
							MUL.xyzw	VF13,VF13,VF10		NOP
							ADD.xyzw	VF13,VF13,VF04 		NOP
							FTOI0.xyzw VF13,VF13			NOP
							
							
							MULAx.xy  ACC, VF29, VF16		NOP							
							ADDy.x	VF17,VF17,VF17y			IADDI VI06,VI01,0
							MADDAy.xy  ACC, VF30, VF16		NOP
							subw.x	VF17,VF17,VF18w			NOP
							MADDw.xy  VF16, VF31, VF00		FCOR	VI01 ,0xfefbef					     			; ^0x10410 -> Z+ 
							subw.x	VF12,VF17,VF00w			SQ  	VF13 ,1(VI03) 									; Color
							MULq.xyz	VF02, VF16, Q		IBEQ  	VI02 ,  VI05 , SYM_STRIP_DrawTrianglesLOOPFinished	; Finished?
							MINIx.x	VF11,VF17,VF00x			IAND	VI01 , VI01 , VI06
							MULq.xyzw VF05, VF05, Q			ISW.w VI10, 3(VI03)
							MAXx.x	VF17,VF17,VF00x			SQ.w	VF28 ,2(VI12) 									; fog



							MINIx.xy VF05 , VF05 , vf07x	IBNE   	VI01 ,  VI00 , SYM_NOZClippng_STRIP
							add.x 	VF17,VF17,VF11			SQ.xyz	VF28 ,3(VI12) 									; point
							
							NOP								ISW.w 	VI11 ,3(VI03)									; Don t draw
SYM_NOZClippng_STRIP: 		add.x 	VF17,VF17,VF11			IADDI 	VI12 ,  VI03 , 0
							MULx.xyz VF15,VF14,VF17x		IBEQ 	VI04 ,  VI08 , SYM_STRIP_GO_GS 								; VI04 = 14?
							MAXy.xyzw	VF28 , VF05 , vf07y	SQ		VF02 ,0(VI03) 									; UV
							ADDw.z	VF16,VF00,VF00w			JR 		VI14 											; DrawTrianglesLOOP or ZClipping
							sub.xyzw VF05,VF06,VF15			IADDI 	VI03 ,  VI03 , 4								; destination triangle pointer plus one

/*-------------------------------------------------------------------------------------------------------------------------------------------------  */
/*--------------------------------- Load triangle & turn & rotate ----------------------------------------------------------------------- END LOOP */
/*-------------------------------------------------------------------------------------------------------------------------------------------------  */

SYM_STRIP_DrawTrianglesLOOPFinished:
							MULq.xyzw VF05, VF05, Q			NOP
							MINIx.xy VF05 , VF05 , vf07x	NOP
							NOP								ISW.w VI10, 3(VI03)
							NOP								SQ.w	VF28,2(VI12) 								; FOG
							NOP								IBNE   	VI01, VI00, SYM_NOZClippng_STRIP_F
							NOP								SQ.xyz	VF28,3(VI12) 								; point
							NOP								ISW.w VI11, 3(VI03)									; Don t draw
SYM_NOZClippng_STRIP_F:
							NOP								IADDI VI12,VI03,0
							MAXy.xyzw	VF28 , VF05 , vf07y	IBEQ  VI04, VI00, SYM_Finished							; nothing to draw
							NOP								IADDIU VI08, VI00, NUMBEROFXKICKTRIANGLES			; restaure Triangle dest max number
							NOP  							BAL VI14,SYM_STRIP_GO_GS
							NOP  							SQ	VF02,0(VI03) 									; UV
SYM_Finished:
							NOP  							BAL VI14,SYM_Symetrise_Camera
							NOP								NOP
							NOP								LQ	 VF24, ZClippingBuf(VI00)
							NOP								LQ	 VF25, ZClippingBuf+1(VI00)
							NOP[e]							NOP
							NOP								NOP
							NOP[e]							NOP
							NOP								NOP

SYM_Symetrise_Camera:
							NOP								jr VI14
							NOP								NOP

		
SYM_STRIP_GO_GS:									
		MUL.xyzw VF28, VF28, VF25		IOR 	VI04,VI04,VI07		; EOP in GIF TAG = | 0x00008000
		ADD.xyw  VF28, VF28, VF24		IAND 	VI03,VI03,VI09		; Base of triangles dest = & 0x080
		MAXx.w	VF28,VF28,VF00x			ISW.x  	VI04, 0(VI03)    	; Set number of triangle in GIF TAG + EOP
		MINIi.w	VF28,VF28,I				NOP
		FTOI4.xyzw VF28,VF28			IADDIU 	VI04, VI00, 0    	; reset destination triangle number 
		ADDw.z	VF16,VF00,VF00w			SQ.w	VF28,2(VI12) 								; FOG
		NOP								SQ.xyz	VF28,3(VI12) 								; point
		NOP								XGKICK 	VI03
		NOP								IADDIU 	VI03,VI03,SwapBufferSize   ; Swap buffers
		NOP								IAND 	VI03,VI03,VI09		; Base of triangles dest  = & 0x080
		NOP								IADDIU 	VI12,VI03,0x01
		NOP								JR 		VI14 				; DrawTrianglesLOOP or ZClipping or XYClipping or Shadowloop
		sub.xyzw	VF05,VF06,VF15			IADDIU 	VI03,VI03,0x01   	; Swap buffers

SYM_STRIP_UV_ObjectCompute_X:
		NOP		B	SYM_STRIP_UV_ComputeFinished
		NOP		MR32.xy	VF16,VF26
SYM_STRIP_UV_ObjectCompute_Y:
		NOP		MOVE.x	VF16,VF26
		NOP		B	SYM_STRIP_UV_ComputeFinished
		NOP		MR32.y	VF16,VF26
SYM_STRIP_UV_ObjectCompute_Z:
		NOP		B	SYM_STRIP_UV_ComputeFinished
		NOP		MOVE.xy	VF16,VF26

SYM_STRIP_UV_WorldCompute_For_Shadows:
SYM_STRIP_UV_WorldCompute:
		MULAx.xy  ACC, VF08, VF26x		LQ   VF01, PlanarMatrixTransSave(VI00)		; load Planar Matrix VUU T
		MADDAy.xy ACC, VF09, VF26y		NOP
		MADDz.xy VF16, VF19, VF26z		B	SYM_STRIP_UV_ComputeFinished
		ADD.xy	 VF16, VF01, VF16		NOP

