xps.1.1						// pixel shader version

//specular color c0 - c2 Amb,Diff,Spec color entry
def c4,0.3f,0.3f,0.3f,  1.0f//rgb A
//diffuse
def c5,1.0f,1.0f,1.0f,  1.0f//rgb A
//amb
def c6,0.25f,0.25f,0.25f,  1.0f//rgb A
/*
tex      t0      ; base texture
tex      t1      ; normal map
texcoord t2      ; L vector
texcoord t3      ; H vector

dp3  r1, t1_bx2, t3_bx2     ; N.H
mov r1,r1_sat

dp3  r0.rgb, t1_bx2, t2_bx2 ; N.L
mov r0.rgb,r0_sat

+mul     r0.a, r1.a, r1.a       ; N.H^2

mad      r0.rgb, r0, c5, c6     ; D*N.L + A
+mul     r0.a, r0.a, r0.a       ; N.H^4

mul      r0.rgb, r0, t0         ; (D*N.L + A)*Base
+mul     r0.a, r0.a, r0.a       ; N.H^8

//mul      r0.a, r0.a, r0.a       ; N.H^16

mad      r0, r0.a, c4, r0       ; S*N.H^16 + (D*N.L + A)*Base//c4
mul		 r0,r0,v1	//vertex color	 
*/

// -----------------------
tex  t0						// Diffuse texture
tex  t1						// Normal texture

//texcoord t2      ; L vector
//texcoord t3      ; H vector

texm3x2pad  t2, t1_bx2		//  u = ( t1=N ) dot ( t2=L ) diffuse
texm3x2tex  t3, t1_bx2		//  texture exponenpopo v = ( t1=N ) dot ( t3=H ) specular

/*
//  Diffuse lighting dotproduct
dp3 r1,t1_bx2,v0_bx2   // bias t0 and v1 (light color)
mul r1,t0,r1 // = diffuse
mov r0,r1
*/

/*
//mov r0,t3
mul r0, t0.a, t3 //blend whith gloss//t3
//add r0,r0,t0//test
mul r0, c4, r0 //couleur specular//c4

add r0,r0,r1 //add diffuse
mul r0,r0,v1//vertex color
*/

//mul r0,r1,r1

//add r0,r0,r1 //add diffuse

mad r0,t3,c5,c6//c5//v1 si rajou dans le vsh
//mul r0,r0,v1
mul r1,t3.a,c4//c4


//mul r1,r1,t1.a

//mad r1,r1,t1.a,r1
//mul r1,t1.a,c4

mad r0,c4,t0,r1

//mul r0,r0,v0//v1 si rajou dans le vsh


//xfc zero, zero, r0, zero, zero, zero, r0.a


/*
tex         t0                ; base texture
tex         t1                ; normal map
texm3x2pad  t2, t1_bx2        ; u = L.N
texm3x2tex  t3, t1_bx2        ; v = H.N, t3 = Texture_3( u, v)
                              ; texture 3: RGB = v, A = u^exp
mad      r0, t3, c1, c0       ; D*N.L + A
mul      r1, t3.a, c2         ; S*N.H^exp
mad      r0, r0, t1, r1       ; (D*N.L + A)*Base + S*N.H^exp

xfc zero, zero, r0, zero, zero, zero, r0.a
*/
