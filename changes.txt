Jaded - Community Patched Jade Engine
	Email:		hogsy@oldtimes-software.com
	Discord:	hogsy
	Mastodon:	@hogsy@mastodon.social 
-----------------------------------------------------------

2023-08-xx (v0.3.0)
- Fixed a crash when exporting some skinned meshes
- Default export path is now relative to the current working directory (<dir>/exports)
	~ You'll need to create the 'exports' directory if it doesn't exist, of course (or just choose a different directory)
- Removed DirectX 8 renderer (https://github.com/OldTimes-Software/jaded/issues/24)

2023-07-23 (v0.2.0)
- Added support for anisotropic filtering (automatically used if texture is using mipmaps w/ max supported samples)
- Added 'legal.txt' that includes a disclaimer, and legal notices for other libraries we're using (or will be using)
- Fixed "Export World To Mad..." option causing a crash (https://github.com/OldTimes-Software/jaded/issues/2)
	~ There appears to be a memory fault when exporting multiple times, will look into this for the next release
- Fixed several dozen potential buffer-overflows
- Fixed audio subsystem not initialising again until restart when switching between projects
- Fixed an issue with blurry textures resulting from very pessimistic assumptions about available VRAM/RAM
- Fixed a crash that occurred when attempting to clean up an object that wasn't loaded correctly
- Fixed additional flags (such as fur) getting cleared when opening material in editor (https://github.com/OldTimes-Software/jaded/issues/28)
- Fixed a case where the input handling would interpret a key as always being active, causing controller input to cease working
- Reintroduced script checks, but clicking 'Cancel' will now ignore the error and attempt to continue limping along (at your own peril)
- Bumped object limits in the intersection/collision system (https://github.com/OldTimes-Software/jaded/issues/20)
	+ Rewrote how collision flags are handled, which should be marginally easier on the CPU (and so we can eventually move away from hard-limits)
- Removed "Perforce Refresh" option from Browser, given it's redundant now
- Removed warning on 3,000 tris / 5,000 vert for geometry per request (https://github.com/OldTimes-Software/jaded/issues/26)
- Changed some defaults for view in editor
	+ Tris/obj warnings are now disabled by default
	+ AfterEffects in editor are now enabled by default
- It's now possible to use both PCM and ADPCM formats in the same project (https://github.com/OldTimes-Software/jaded/issues/12)
- Simplified mipmap generation (works best if you have an OpenGL 3+ capable card)
- Introduced a new splash screen
- Translated internal exception warning to English
- Translated material-type names to English
- Additional assertions have been introduced to try and catch other faults, with better error handling in these situations
- Continued massaging in JADEFUSION changes

2023-04-19
- Introduced fix for ShiftUsingNormal flag using wrong variable for storage (thanks Droolie!)
	WARNING: this will break materials using fur in the original leaked BF, to resolve please use Droolie's patched BF via the link below.
	https://www.raymanpc.com/forum/viewtopic.php?t=75066

2023-04-13
- Changed drag-camera shortcut to use SHIFT instead of ALT, as ALT is causing problems (UNDONE)

2023-04-12
- Fixed spelling for dialog presented when closing world without saving
- Fixed 3D view displaying incorrectly if selection/toolbox dialog is not enabled
- Removed some redundant checks
- Disabled Perforce log
- Now using C standard stdint.h, rather than Ubisoft's own, given we no longer live in the dark ages
- Continued massaging in JADEFUSION changes (lightmap generation is partially in as of last release + other minor bits in this one)

2023-04-11 (big thanks to MaeDaGoof for help with testing and Droolie for additional fixes!)
- Fixed 3D View objects list not updating when it should
- Fixed an oversight with the group association function (thanks to Droolie!)
- Fixed paletted textures not working for DX8 renderer w/ some GPUs/drivers
- Fixed a potential issue with pixel format setup relating to MSAA
- Changed drag-camera shortcut to use SHIFT instead of ALT, as ALT is causing problems
- SSE optimisations are now used by the editor
- Bumped engine limits to match Droolie's fork
- Executable has been renamed, again, for the last time to "Jaded"
- Removed Perforce tool panels and eliminated Perforce-related requests
- Incorporated remaining changes from Droolie's fork to ensure compatibility with patch

2023-01-31
- Fixed pixel format failing to set for some GPUs (thanks to Nimitz for their help testing!)
- Fixed a crash that could occur after destroying and creating the GL context

2023-01-30 (big thanks to MaeDaGoof for help with testing!)
- Added support for MSAA and alpha-to-coverage if available (OpenGL only + disabled by default)
- Added a new "Anti Aliasing" option under 3D View Options
- Added shortcut for RayDevWiki under Help menu
- Fixed Prefab browser crash that impacted some folks when previews are enabled
- Fixed an issue with paletted textures under the Direct3D 8 renderer
- Fixed "Full Maximized" resulting in menus to no longer be visible, making it hard to switch back
- Fixed a possible issue that might arise when using the "Full Maximized" while a frame is already maximized
- Changed how 3D View "Full Maximized" works, so it behaves more like a borderless fullscreen mode
- Switched over to using GLEW for handling GL extensions
- A debug dump will automatically be generated, if possible, if and when the application crashes
	(this won't catch *all* cases right now but I'll improve on it next time)

2023-01-22
- Added "Limit FPS" toggle under Engine menu
- Added more information to display upon saving a map (including time taken)
- Added some additional sanity checks for Preview pane in Prefabs browser
	(unlikely to fix the crash some folks are having, but who knows)
- Fixed long save time when saving a world
- Fixed menu string for second "Save World" option
- Fixed missing icon for prefabs in browser
- Renamed editor executable to JadedEditor to avoid conflicts with other fan bug-fixes
- Disabled prompt if warnings are present in log (obnoxious and unnecessary imo)

2023-01-16
- Overhauled joystick input to use SDL2's game controller API instead of DirectInput
	+ Fixed input issue when unplugging a controller at run-time
	+ You can now unplug/plug a controller in during run-time to your hearts content <3
- Disabled FPS cap for now (will provide a toggle next release)
- Fixed a crash when attempting to open a different level from the browser while the engine is active

2023-01-15
- Enabled "Jade Fusion" clipboard toggle for material editor
- Cleaned up elements of the interface to display better with new common controls
- Continued removing Perforce integration
- Improvements to the "Run Engine (Speed)" option
	+ Now automatically enables fog
	+ Automatically sets 'Active Engine World' if necessary
	+ Renamed so it's a little more obvious what it does; "Run Engine (Game Mode)"
	(still not a perfect name, but to explain this will basically hide all editor-specific information and automatically set camera to engine)
- Fixed an exception that was thrown upon duplicating an object
- Fixed crash that occurred with prefab preview
- Fixed a crash that occurred in the last release when opening a material
	+ This gave me an opportunity to clean up a lot of this, so generally it should be a lot more stable!
- Fixed error dialog when performing check on BF
- Fixed BF check displaying nothing for some invalid entries, now will display key if no valid name exists

2023-01-05
- Rotating and moving the camera around should no longer slow to a crawl, particularly with the browser open
- Introduced a rough FPS cap when running the engine within the editor
- Editor will now use newer common controls (i.e. more modern appearance)
- Started gradually scraping out Perforce code (will replace with a better solution in long-term)
- Fixed flickering with animation graph
- Fixed malformed strings in texture editor
- Fixed some issues with the OpenGL backend which could potentially cause issues w/ modern drivers
- Fixed missing key error by automatically setting it up on launch if it doesn't exist
- Fixed an issue with displaying paletted textures on some AMD GPUs / drivers
	disclaimer: might incorrectly display some textures due to nature of fix, but I've not encountered any issues
