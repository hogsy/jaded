vector				tv_pos
vector				tv_kong 
object				to_kong
vector				tv_ann_kong
vector				tv_ann_kong_crossh 
vector				tv_ann_kong_crossv
float					tf_z_ref
int						tf_RefAxis_AKA_AnnDecentrageH
 
f_k_GC_DecentrageHorizCoef = 0.0				// Coef multiplicateur du decentrage Horizontal
f_k_GC_DecentrageVertiCoef = 0.0					// Coef multiplicateur du decentrage Vertical
i_k_GC_offsetZ_Local = faux							// Est ce que l'offset Z sur la target est en Local ou en Global (En Waling le Banking Change)
i_k_GC_Dodge_on = faux								// Est ce qu'on dodge ou pas ? NON on ne dodge pas car on veut ANN en premier plan !!

tv_pos = @o_RefAxis_AKA_Ann OBJ_PosGet()
tf_z_ref = tv_pos.z

if (o_k_GC_fixe_target)
{
	to_kong  = o_k_GC_fixe_target
	tv_kong = @to_kong OBJ_PosGet()
}
else
{
	to_kong = get_rayman
	tv_kong = @to_kong OBJ_PosGet()

	// Rajout de l'offset tete
	if (i_k_GC_offsetZ_Local)
		tv_kong += @to_kong OBJ_BankingGet() * 3.0
	else
		tv_kong += cvector(0,0,3.0)
}

tv_ann_kong = tv_kong - tv_pos


if (f_RefAxis_AKA_FoffsetZCoef)
{
	f_k_GC_offsetZ = f_RefAxis_AKA_FoffsetZCoef * -tv_ann_kong.z
	f_k_GC_offsetZ += f_RefAxis_AKA_FoffsetZDelta
}

if (i_RefAxis_AKA_FlatCalculation)
	tv_ann_kong.z = 0

MATH_VecSetNormalize(tv_ann_kong)

tv_ann_kong_crossh = MATH_VecCrossProduct(tv_ann_kong,Cv_VerticalVector)
tv_ann_kong_crossv = MATH_VecCrossProduct(tv_ann_kong,tv_ann_kong_crossh)

tf_RefAxis_AKA_AnnDecentrageH = f_RefAxis_AKA_AnnDecentrageH
if (o_RefAxis_AKA_OppositeDecH)
{
	// Decentrage a l'opposé de ce Gao
	if (!i_RefAxis_AKA_AnnDecentrageHSign)
		i_RefAxis_AKA_AnnDecentrageHSign = MATH_FloatSign(MATH_VecDotProduct( MATH_VecCrossProduct(tv_ann_kong,Cv_VerticalVector), tv_kong - @o_RefAxis_AKA_OppositeDecH OBJ_PosGet() ) )
	tf_RefAxis_AKA_AnnDecentrageH *= i_RefAxis_AKA_AnnDecentrageHSign
}

tv_pos -= tv_ann_kong_crossv * (f_RefAxis_AKA_AnnDecentrageV )
tv_pos += tv_ann_kong_crossh * (tf_RefAxis_AKA_AnnDecentrageH) 
tv_pos  -= tv_ann_kong * f_RefAxis_AKA_AnnRecul

tv_pos.z = MATH_FloatLimit(tv_pos.z, tf_z_ref+f_RefAxis_AKA_z_min, tf_z_ref+f_RefAxis_AKA_z_max)  

@o_cam_pos OBJ_PosSet( tv_pos )
