
//============================================================
// Camera Modifier
//
// Il y a deux modes 'Contre Champ' et 'Fixed Axis'
//
// CC: contre champ
// CC force la camera a passer en mode Champs par rapport a moi même.
// Ma position est fixe si o_wp_reseau_pos n'est pas rataché a un reseau
// Ma position est variable si o_wp_reseau_pos est rataché a un reseau
// En mode reseau, la position est calculé en pro jetant un AXE sur le reseau
// L'axe de projection peut etre soit un axe fixe (i_fixed_axis a vrai) l'axe c'est le sight du o_ref_axis 
// Si i_fixed_axis a faux alors l'axe est la droite passant entre o_ref_axis & Kong.
//---------------------------------------------------------------------------------------------------------
// FA: Fixed Axis
// FA modifie des paramatres de la camera Normal (axe de retour dans le dos)
//
// Mode 1 (sans network):
// 
// La Camera suit kong en gardant toujours le meme axe.
// Si i_singleDirection est vrai elle reste toujours dans la meme direction
// sinon (i_singleDirection == faux) elle prendra la direction la plus pres de la
// position de la caméra courrante (donc + ou - o_ref_axis)
//
// Mode 2 (avec network):
//
// A tout instant, Kong se trouve dans un des segments du network. On determine
// ce segment en projetant la position de kong dans la direction de o_ref_axis en 
// trouvant un segment qui intersecte. ou bien on prendra le premier ou dernier segment
// qui sera le plus proche de la position de Kong
//============================================================

#include "KM_Defines.var"

// Define at least one function in a track
// function track0 = "name"
// function track1 = "name"
function track2 = "KM_init"
// function track3 = "name"
// function track4 = "name"

#define	nb_wp_max		40

separator "Type de Fonctionnement"
int				i_mode = enum ( "Create New LD Kam" 0 "Adjust Generic Kam" 1 ) // Mode de fonctionnement


separator "Activation"
trigger 		t_activation													// CC/FA: Trigger d'activation
int				i_activationOp_1 = enum ( "et" 0 "ou" 1 "ou exclu" 2 )
trigger		t_activation2
int				i_activationOp_2  = enum ( "et" 0 "ou" 1 "ou exclu" 2 )
trigger		t_activation3
private int	mi_TriggerTest

separator "Activation (Expert Mode)"
float					f_autodestroy_life_time = -1				// (Default = -1 : No life time) Autodestroy KamMod if ACTIVE that long

float					f_active_time_min							// (Default = 0  : No time min) Set the minimum duration of an activation (even if trigger false)
private float			f_active_time_cur

int 					i_trigger_forced_true_until_activated = vrai_faux 	// Enable to force the resut of the trigger to be true until you really enter activate the KamMod.

float					f_delai_time									// (Default = 0 : No delay really activate the Kam) Wait n seconds after trigger ON before really activate the Kam
private float			f_delai_time_cur

float					f_extra_time									// (Default = 0 : No extra time) Add an activation Extra Time after the trigger is OFF
private float			f_extra_time_cur
private float			i_proc_forced

separator "Destruction"
trigger 		t_destruction												// CC/FA: Trigger de destruction

separator "ADJUST GENERIC KAM = ADJUST GENERIC KAM = ADJUST GENERIC KAM"
float			f_Adjust_Distance = 0									// (Default : 0) Change la distance a RM
float			f_Adjust_Angle = 0										// (Default : 0) Change l'angle par rapport a l'Horizontal (pour filmé de plus ou moins haut)
float			f_Adjust_CoefDecentrageHoriz = 1.0				// (Default : 1) Coef multiplicateur du décentrage Horizontal de RM a l'écran
float			f_Adjust_ChutePlat = 666								// Entre 1 et -1 (666 par defaut)
float			f_Adjust_ChuteTornade = 666						// Entre 1 et -1 (666 par defaut)
separator "CREATE NEW LD KAM = CREATE NEW LD KAM = CREATE NEW LD KAM"
private int i_specific_separator_ne_pas_virer

separator "WP Fixe ou Network"
object		o_wp_reseau_pos										// CC/FA: Premier element du Network

separator "En Network: Type de Projection"
object		o_ref_axis													// CC/FA: WP servant a definir l'axe de projection de Kong sur le Network (Axe fixe ou Axe Calculé Kong & WP) Inutile sur un WP simple
int				i_fixed_axis = vrai_faux									// CC/FA: Projection on network is with fixed axis or using o_ref_axis as a position
int				i_axis_single_direction = faux_vrai					// CC/FA: Projection on network is with fixed axis or using o_ref_axis as a position
object		o_k_GC_ActeurReference								// Acteur de reference pour la projection sur le reseau (Par defaut KONG)
int				debug_show_axis_on_ActeurReference = vrai_faux

separator "Params Camera LevelDesign"
float			f_k_GC_TransitionSpeed_In= 0						// Durée de la transition IN (0 = cut, 1 = lent, 5 moyen, 10, rapide, 100000 = cut) (ATTENTION : Valeur pouvant etre ecrasé par une transition OUT)
float			f_k_GC_TransitionSpeed_Out = -1					// Durée de la transition OUT (-1 = NONE, 0 = cut, 1 = lent, 5 moyen, 10, rapide, 100000 = cut) (ATTENTION : Ceci ecrase une transition IN)
int				i_k_GC_active_occlution = faux_vrai				// Permet de desactiver les tests d'obstacle sur la camera.
int				i_prio_modifier_actif	= 0								// Prio en mode actif (de 1 a 255)
int				i_prio_modifier_inactif = 0								// Prio en mode inactif (de 1 a 255)

float			f_k_GC_DecentrageHorizCoef = 1.0				// Coef multiplicateur du decentrage Horizontal
float			f_k_GC_DecentrageVertiCoef = 1.0					// Coef multiplicateur du decentrage Vertical
int				i_k_GC_offsetZ_Local = faux_vrai					// Est ce que l'offset Z sur la target est en Local ou en Global (En Waling le Banking Change)
int				i_k_GC_Dodge_on = faux_vrai						// Est ce qu'on Dodge les ennemis ?

//int				i_Fight_UseSpecialParameter = vrai_faux			// Permet de forcer l'utilisation de ces parametres en FIGHT
//float				f_Fight_TransitionSpeed = 4.0						// (0 = cut, 1 = lent, 5 moyen, 10, rapide...)

object		o_k_GC_fixe_target										// Target Fixe

separator "Specific LD OutOfFIGHT"
float			f_k_GC_dist_max_a_kong = 30.0					// Contrainte1: Distance Max a Kong
float			f_k_GC_dist_max_devant_la_cam = 10.0			// Contrainte2: Distance Max d'eloignement devant la camera
float			f_k_GC_dist_max_derriere_la_cam = 3.0			// Contrainte3: Distance Max d'eloignement a l'arriere de la camera.
//int				i_k_GC_include_all_ennemies = faux_vrai		// Contrainte4: Permet de demander inclure a l'ecran tous les ennemis (Ne fait que reculer la camera)
//float			f_k_GC_recul_max_all_ennemies = 30.0			// Contrainte5: Permet de limiter le recul pour voir tous les ennemis, Forcement qd on limite le recul on perd les perso les plus eloignées
float			f_k_GC_cam_focale = 1.0								// Focale de la camera
float			f_k_GC_look_amplitude = 0.5						// Pour autoriser le pilotage au stickD (Valeur de 0 a 1maxi)
float			f_k_GC_offsetZ = 0.0									// Offset Z a rajouter sur la Target

//separator "Specific LD InFIGHT"
//
//float			f_k_GC_Fdist_max_a_kong = 30.0					// Contrainte1: Distance Max a Kong
//float			f_k_GC_Fdist_max_devant_la_cam = 10.0		// Contrainte2: Distance Max d'eloignement devant la camera
//float			f_k_GC_Fdist_max_derriere_la_cam = 3.0		// Contrainte3: Distance Max d'eloignement a l'arriere de la camera.
//int				i_k_GC_Finclude_all_ennemies = faux_vrai		// Contrainte4: Permet de demander inclure a l'ecran tous les ennemis (Ne fait que reculer la camera)
//float			f_k_GC_Frecul_max_all_ennemies = 30.0		// Contrainte5: Permet de limiter le recul pour voir tous les ennemis, Forcement qd on limite le recul on perd les perso les plus eloignées
//float			f_k_GC_Fcam_focale = 1.0							// Focale de la camera
//float			f_k_GC_Flook_amplitude = 0.5						// Pour autoriser le pilotage au stickD (Valeur de 0 a 1maxi)
//float			f_k_GC_FoffsetZ = 0.0									// Offset Z a rajouter sur la Target

//separator "Param Camera AdjustCamNormale"
//int				i_fa_activeForceAxis = vrai_faux
//int				i_singleDirection = vrai_faux							// FA: vrai = one side,   faux = bi-sided
//float			f_returnSpeed	= 10.0									// FA: speed at which cam returns to axis
//float			f_fa_dist = 0												// FA: Change la distance a la camera normale. (13m par defaut)


private int			i_active = faux
private object		o_cam_pos
private int			i_nbr_wp
private object		o_WP_liste[nb_wp_max]
private float			f_dist[nb_wp_max]
private vector		v_axis_norm[nb_wp_max]
private vector		v_pos_kong

separator "REFAXIS MODE"
int						i_RefAxis_mode = enum("0 - None" 0 "1 - RepulseInCircle" 1 "2 - ForceDeltaZ" 2 "3 - AnnKongAxis" 3 "4 - AutoReverseShoot" 4 "5 - DDeltaZ & AutoRShoot" 5 "6 - Math Axis" 6)
separator "Repulse in Circle Params"
private vector		v_RefAxis_RIC_Pos
float					f_RefAxis_RIC_Size = 10.0
float					f_RefAxis_RIC_Speed = 4.0
separator "Force DeltaZ Params"
float					f_RefAxis_FDZ_Delta = 5.0
separator "AnnKongAxis"
object				o_RefAxis_AKA_Ann
float					f_RefAxis_AKA_AnnRecul				= 20
float					f_RefAxis_AKA_AnnDecentrageH	= 5
float					f_RefAxis_AKA_AnnDecentrageV	= 5
int						i_RefAxis_AKA_FlatCalculation		= vrai_faux
float					f_RefAxis_AKA_z_min					= -Cf_Infinit
float					f_RefAxis_AKA_z_max					= Cf_Infinit
float					f_RefAxis_AKA_FoffsetZDelta
float					f_RefAxis_AKA_FoffsetZCoef
object				o_RefAxis_AKA_OppositeDecH
int						i_RefAxis_AKA_OcclutionAvantAnnUniquement = vrai_faux
private int			i_RefAxis_AKA_AnnDecentrageHSign

separator"AutoReverseShoot"
float					f_RefAxis_ARS_Angle = Cf_Cos70
float					f_RefAxis_ARS_Duration = 1.0
float					f_RefAxis_ARS_DurationCur = 0
vector				v_old_target = Cv_NullVector

separator"MathAxis"
object				o_Max_Pivot								// Objet Pivot Centre du Network Virtuel.
float					f_Max_DistPivot	=	1000.0			// Distance du Network Virtuel
float					f_Max_Rotation 	=	0.0				// Angle de Rotation Vertival
float					f_Max_RotationHoriz = 0.0			// Angle de Rotation Horiz Contant
float					f_Max_DecentrageTropProche		// Angle de Rotation Horiz Max qd on est au plus proche du network mathematique
int						i_Max_Horizontal = enum ("0 - Faux" 0 "1 - Reference Pivot" 1 "2 - Reference Rayman Tete" 2)	// Type de Calcul (3D, A plat (Reference Pivot), A plat (Reference RM tete)

private float			f_Max_Sign
private int			i_Max_Trame
private int			i_cc_kam_KamModifierID

//private float		f_INOUT_Blend_Blend
//private float		f_INOUT_Blend
private float			f_kam_infinit = Cf_Infinit
private float			f_INOUT_Blend_Tgt = -1

separator "Expert: TransitionSpeed_In"
object				ATM_KamTransitionFrom[10]
float					ATM_KamTransitionSpeed[10]

separator "Expert++: Controle Divers"
int						i_global_kam_ID = -1
int						i_global_kam_Mode = enum("0-KamCC_SurGao" 0)
int						i_KM_family
float					f_cut_if_backshoot = 666			// Cos de l'angle a partir de laquel le blend devient cut

private int			SpecialParameterFlag  = vrai_faux
private object		SpecialParameterGao1
private object		SpecialParameterGao2
private vector		SpecialParameterVec1
private vector		SpecialParameterVec2

private function	fct_before
private function	fct_after

private object		o_car_manager 
private function 	f_CallBack