Include_UltraProcedure_Header

object		to_perso
object		to_camera
int				ti_txt
int				ti_proc

to_camera = @get_global o_camera

// Reset l'axe de decentrage ===========================
if ( i_RefAxis_AKA_AnnDecentrageHSign && @get_Kamera_Path to_camera o_cc_kam_modifier_old != OBJ_Me() )
	i_RefAxis_AKA_AnnDecentrageHSign = 0

// Delete la derniere CallBack du KamMod =================
to_perso = @get_Kamera_Path to_camera 	Kam_CallBack_KamMod_GAO_OLD
if (to_perso)
{
	@to_perso AI_CBDel(to_perso,CallBack_KamMod, @get_Kamera_Path to_camera Kam_CallBack_KamMod_Fct)
	@get_Kamera_Path to_camera 	Kam_CallBack_KamMod_GAO_OLD = nobody
}
// Delete la derniere CallBack du KamMod =================

// ---------- Destruction ---------------------------------------------------------------
if ( (AI_TriggerIsValid(t_destruction) && call_trigger(t_destruction) ) || !f_autodestroy_life_time)
	OBJ_Destroy()
// ---------- Destruction ---------------------------------------------------------------


ti_proc = 0

if (i_trigger_forced_true_until_activated)
{
	if(!i_proc_forced)
	{
		ti_proc = Proc_Trigger_TestAll()
		if (ti_proc)
			i_proc_forced = vrai
	}
}
else 
{
	if (i_global_kam_ID >= 0)
	{
		switch (i_global_kam_Mode)
		{
			case 0:
				if (SpecialParameterFlag)
				{
					ti_proc = vrai
					SpecialParameterFlag = faux
					o_RefAxis_AKA_Ann = SpecialParameterGao1
				}
		}
	}
	else
		ti_proc = Proc_Trigger_TestAll()
}


// Gestion du Delay avant l'activation du KamModifier =============
if (ti_proc || i_proc_forced)
{
	f_delai_time_cur -= MATH_FloatMin(f_delai_time_cur, TIME_GetDt())
	if (f_delai_time_cur)
		ti_proc = faux
	else
		ti_proc = vrai
}
else
	f_delai_time_cur = f_delai_time
// Gestion du Delay avant l'activation du KamModifier =============



if ((ti_proc || f_active_time_cur > 0.0) || f_extra_time_cur > 0.0)
{
	// KAM MODIFIER PROPOSE (ACTIF si selectionné par la KAM)

	i_proc_forced =faux

	// Extra time apres trigger off ===========================
	if (ti_proc)
		f_extra_time_cur = f_extra_time
	else
		f_extra_time_cur -= MATH_FloatMin(f_extra_time_cur, TIME_GetDt())
	// Extra time apres trigger off ===========================

	// Delete la derniere CallBack du KamMod =================
	to_perso = @get_Kamera_Path to_camera 	Kam_CallBack_KamMod_GAO
	if (to_perso)
		@to_perso AI_CBDel(to_perso,CallBack_KamMod, @get_Kamera_Path to_camera Kam_CallBack_KamMod_Fct)
	// Delete la derniere CallBack du KamMod =================
	
	AI_CBAdd(OBJ_Me(),CallBack_KamMod,f_CallBack)
	@get_Kamera_Path to_camera 	Kam_CallBack_KamMod_GAO = OBJ_Me()
	@get_Kamera_Path to_camera Kam_CallBack_KamMod_Fct = f_CallBack

	// DBG =====================================================================================
	if (@"univ" i_cheat_page == 2)
	{
		@get_global i_cheat_2_nbr++
		if (AI_PriorityGet() == @get_global i_cheat_2_last_prio)
		{
			DBG_TraceString("Warning : ")
			DBG_TraceObject(@get_global i_cheat_2_last_gao)
			DBG_TraceString(" and ")
			DBG_TraceObject(OBJ_Me())
			DBG_TraceString(" have the same priority. This could produce unknown result. Please set a different priority!\n")
		}			
		@get_global i_cheat_2_last_prio = AI_PriorityGet()
		@get_global i_cheat_2_last_gao = OBJ_Me()
		
		ti_txt = STR_CreateText("", cvector(0.03,0.11+(0.04 * (@get_global i_cheat_2_nbr)),0), 0)
		STR_AppendGao(ti_txt, OBJ_Me())
		STR_AppendText(ti_txt," (Prio: ")
		STR_AppendInt(ti_txt,AI_PriorityGet())
		STR_AppendText(ti_txt,")")		
	}
	// DBG =====================================================================================
}
else
{
	// KAM MODIFIER NON ACTIF

	// Prio pour hysteresis ---------------------------------
	if (i_prio_modifier_inactif)
		AI_PrioritySet(i_prio_modifier_inactif)

	f_active_time_cur = -f_active_time_min

	f_INOUT_Blend_Tgt = -1.0
	f_kam_infinit = Cf_Infinit
	i_active = faux
	
	// Specifique ReverseShoot
	v_old_target = Cv_NullVector
}