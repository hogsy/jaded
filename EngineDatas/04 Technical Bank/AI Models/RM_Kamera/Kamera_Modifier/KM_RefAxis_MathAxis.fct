
object		to_perso 
vector		tv_ax
vector		tv_pos 
float			tf_dist

to_perso = Proc_Kam_ActeurReference_Get()

tv_ax = @to_perso OBJ_PosGet() + Cv_VerticalVector - @o_Max_Pivot OBJ_PosGet()

if (i_Max_Horizontal)
	tv_ax = Proc_Vec_HorzNormalise(tv_ax, @get_camera OBJ_SightGet())

MATH_VecSetNorm(tv_ax, f_Max_DistPivot)

switch (i_Max_Horizontal)
{
	case 0:
	case 1:
		@o_cam_pos OBJ_PosSet( @o_Max_Pivot OBJ_PosGet() + tv_ax )
		break

	case 2:
		tv_pos = @o_Max_Pivot OBJ_PosGet()
		tv_pos.z = @to_perso OBJ_PosGet().z + 1.0
		@o_cam_pos OBJ_PosSet( tv_pos + tv_ax )
		break
}

if (f_Max_RotationHoriz)
	tv_ax = MATH_VecRotate(tv_ax, Cv_VerticalVector, f_Max_RotationHoriz)
	
if (f_Max_DecentrageTropProche)
{
	tf_dist = MATH_VecDistance(@o_cam_pos OBJ_PosGet(), @to_perso OBJ_PosGet() + Cv_VerticalVector)
	if (tf_dist < 5.0)
	{
		if ( @get_Kamera Kam_Last_KamMod != OBJ_Me() )
			f_Max_Sign = 0
		if (!f_Max_Sign)
			f_Max_Sign = MATH_FloatSign(MATH_VecDotProduct(@get_camera OBJ_HorizonGet(), @to_perso DYN_SpeedGetVector() ) )

		tv_ax = MATH_VecRotate(tv_ax, Cv_VerticalVector, f_Max_Sign * f_Max_DecentrageTropProche * ((5.0 - tf_dist)/5.0) )
		Str_DisplayFloatOnce( ((5.0 - tf_dist)/5.0), Cv_NullVector)
	}
	else
		f_Max_Sign = 0
}

if (f_Max_Rotation)
	tv_ax = MATH_VecRotate(tv_ax, MATH_VecCrossProduct(tv_ax,Cv_VerticalVector), f_Max_Rotation)


switch (i_Max_Horizontal)
{
	case 0:
	case 1:
		@o_cam_pos OBJ_PosSet( @o_Max_Pivot OBJ_PosGet() + tv_ax )
		break

	case 2:
		tv_pos = @o_Max_Pivot OBJ_PosGet()
		tv_pos.z = @to_perso OBJ_PosGet().z + 1.0
		@o_cam_pos OBJ_PosSet( tv_pos + tv_ax )
		break
}

tv_pos = @o_Max_Pivot OBJ_PosGet()
tv_pos.z = @o_cam_pos OBJ_PosGet().z
DBG_RenderCircle(tv_pos ,f_Max_DistPivot ,Cv_VerticalVector, color_vert)