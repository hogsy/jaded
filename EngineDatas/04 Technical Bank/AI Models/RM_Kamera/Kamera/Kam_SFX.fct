Include_UltraProcedure_Header

#include "Kam_Defines.var"

float		tf_temp
float		tf_temp1
float		tf_blend

int			ti_collision_nb
int			ti_i
int			ti_SensVert 
int			ti_undo_kong_rotation

object	to_actor
object	tao_zde_zde_list[50]
object	to_gao
object	to_cou
object	to_cam
object	to_jack
object	to_kong
object	to_sniper_visor

vector	tv_temp
vector	tv_joy
vector	tv_joy2


// MAIN ACTORS PRESENTS ? ========================
to_jack = AI_MainActorGet(C_ID_Joueur)
to_kong = AI_MainActorGet(C_ID_Kong)


// REWARD =======================================
@get_global i_Reward_count = 0

// SFX ===========================================
v_sfx_sight = OBJ_SightGet()
v_sfx_bank = OBJ_BankingGet()

//////////////////////////////////////////////////////////////////
// MODE SHAKE
//////////////////////////////////////////////////////////////////
if(i_sfx_shake)
{
	tf_temp = MATH_Sin(f_sfx_time * f_sfx_shake_freq)
	tf_temp *= f_sfx_shake_amplitude
	
	tf_temp1 = MATH_Sin(f_sfx_time * f_sfx_shake_bank_freq)
	tf_temp1 *= f_sfx_shake_bank_amplitude
	
	f_sfx_time += TIME_GetDt()
	
	tv_temp = OBJ_HorizonGet()	* tf_temp1
	tv_temp += OBJ_SightGet()	* tf_temp
	
	tv_temp += OBJ_BankingGet()
	OBJ_BankingGeneralSet(OBJ_SightGet(), tv_temp)
	
	f_sfx_shake_amplitude -= (f_sfx_shake_speed * TIME_GetDt())
	f_sfx_shake_bank_amplitude -= (f_sfx_shake_speed * TIME_GetDt())
	if(f_sfx_shake_amplitude <= 0) f_sfx_shake_amplitude = 0
	if(f_sfx_shake_bank_amplitude <= 0) f_sfx_shake_bank_amplitude = 0
	
	f_sfx_shake_speed *= f_sfx_shake_attenuation
	if(f_sfx_shake_amplitude <= 0 && f_sfx_shake_bank_amplitude <= 0)
	{
		f_sfx_shake_amplitude = 0
		i_sfx_shake = 0
	}
}

//////////////////////////////////////////////////////////////////
// MODE RAMBLE SIGHT
//////////////////////////////////////////////////////////////////
if(f_sfx_ramble)
{
	tf_temp = f_sfx_ramble
	tv_temp = OBJ_SightGet() + cvector(MATH_RandFloat(-tf_temp, tf_temp), MATH_RandFloat(-tf_temp, tf_temp), MATH_RandFloat(-tf_temp, tf_temp))
	OBJ_SightGeneralSet(tv_temp, OBJ_BankingGet())

	IO_PafSet(f_sfx_ramble * 50* 250, 2)

	f_sfx_ramble = MATH_FloatMax(MATH_FloatBlend(f_sfx_ramble,-0.0001, 10.0 * TIME_GetDt()), 0)
}

//////////////////////////////////////////////////////////////////
// FOCALE
//////////////////////////////////////////////////////////////////
if( ! OBJ_CapaTest(Kam_Capa_Focale) )
{
	VIEW_FocaleSet(0, f_MECA_cam_focale)
	VIEW_AssignObject(0)
}
OBJ_CapaSet(0, Kam_Capa_Focale)

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// AFTER CAM
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
AI_CBExecute(CallBack_After_Camera, 0)

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// LANCERS DE RAYONS POUR LES TIRS
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
AI_CBExecute(CallBack_Tir, 0)

// NE RIEN PLACER APRES LES CALLBACKS ==================================
// NE RIEN PLACER APRES LES CALLBACKS ==================================
// NE RIEN PLACER APRES LES CALLBACKS ==================================
// NE RIEN PLACER APRES LES CALLBACKS ==================================
// NE RIEN PLACER APRES LES CALLBACKS ==================================
// NE RIEN PLACER APRES LES CALLBACKS ==================================
// NE RIEN PLACER APRES LES CALLBACKS ==================================

if( ! f_fps_duration && i_kong_camera_mode == Ci_Kamera_mode_FPS )
{
	f_fps_duration = f_fps_duration
}