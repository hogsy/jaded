// Define at least one function in a track
function track0 = "Kam_Pilote"
// function track1 = "name"
function track2 = "Kam_init" 
function track3 = "CM_Kong_MECA"
function track4 = "Kam_SFX"

#include "Kam_Defines.var"

////// Global 
separator "global"
int							i_dbg = vrai_faux
int							i_render_finish = vrai_faux
int							i_render_col = vrai_faux
object					o_dbg
int							ControlCamJoyD = faux_vrai
object					o_force_actor = nobody

separator "Config FPS sur Kong"
int							i_fps_epaule_mode = enum("0-Full FPS" 0 "1-Relative à Kong" 1 "2-Cone de Kong" 2 "3-Dissociée" 3 )
int							i_fps_epaule_sight_init = enum("0-Kong nmi ou sight" 0 "1-Kong sight" 1 "2-Kamera sight" 2)

private	int				i_fps_epaule_cone_kong
private	int				i_fps_epaule_relative_kong

private	object		o_mf_actor
private int				i_mf_cut
private vector			v_ideal_sight

private int				i_kam_in_fight
private float				f_kam_in_fight_time

separator "sfx"
private int				i_sfx_shake
private float				f_sfx_shake_amplitude
private float				f_sfx_shake_freq
private float				f_sfx_shake_speed
private float				f_sfx_shake_attenuation
private float				f_sfx_shake_bank_amplitude
private float				f_sfx_shake_bank_freq
private float				f_sfx_time
private int				i_sfx_ramble
private float				f_sfx_ramble_amplitude
private vector			v_sfx_sight
private vector			v_sfx_bank

// =============================================
//                    				MECA
// =============================================

int							i_MECA_Mode = enum("SightDist" 1 "Position" 2)		// Mode de la camera
float						f_MECA_cam_focale = 1.2									// FOCALE	
vector					v_MECA_cam_target											// Position pointé
object					o_MECA_cam_target
vector					v_MECA_cam_target_delta									// Decalage sur la position pointé (Position pointé + Decalage = Position de la Target)
vector					v_MECA_cam_sight = cvector(0,1,0)						// Axis
float						f_MECA_cam_dist = 5											// Distance
int							i_MECA_TestRayCast = vrai									// Active le/les LRayon
vector					v_MECA_cam_pos												// Position de la camera

float						f_MECA_cam_dist_speed = 10

float						f_real_cam_dist

vector					vG_cam_target_delta_tgt 

vector					v_normal
vector					v_axis
vector					v_walling_speed
int							i_walling_grimper_old 
float						f_change_mode_speed

vector	v_kong_speed
float		f_kong_speed_norm
vector		v_walling_lastaxis

float		f_walling_speed_normZ
float		f_blend_vertical
vector	v_swing_pos
vector	v_camera_last_move
vector	v_camera_curent_pos 
vector	v_swing_last_move
float		f_plan_cut_duration

float		i_ask_cut

message		m_msg_plan_cut

object		o_gao_cou
vector		v_sight_cou
vector		vL_plan_cut_offset

vector		av_finish_offset[Ci_Kamera_Finish_id_MAX][Ci_max_nb_finish_offsets]		// leave the unused ones with null vectorsprivate vector	v_finish_offset
vector		av_finish_delta[Ci_Kamera_Finish_id_MAX][Ci_max_nb_finish_offsets]		// 
vector		v_finishtarget_delta

private vector	v_finish_offset

float			f_speed_target 

object		o_lockable_target
object		o_locked_target, o_locked_target_old
float			f_locked_duration
float			f_locked_sign = 1
float			f_locked_sign_old = 1
object		ao_listok[50]
int				i_listok
float			f_br

// Plan Cut
int				i_pc 
int				i_gccc = vrai

vector		v_MECA_cam_banking
int				i_wl_dans_le_dos 
int				i_wl_vu_du_haut
int				i_debug_flag_cc

// =============================================
//                    COMMUN (GESTION DU JOY-D)
// =============================================
vector		v_joyD
float			f_joyD_norm

vector		v_joyD_blend
float			f_joyD_blend_norm

float			f_joyDx_null
float			f_joyDy_null
float			f_joyDx
float			f_joyDy

// JoyD -------------------------------------------------------

vector		v_sight_camera_horiz
vector		v_offset_Z_LR_tete

float			f_last_dist



vector		v_MECA_orientation_locale = Cv_NullVector

float			f_dist_all_ennemies
vector		v_axe_kong_smooth

// Commun Vitesses -----------------
vector		v_o_mf_actor_pos_old
vector		v_o_mf_actor_pos
vector		v_speed_target
vector		v_speed_target_horiz
float			f_speed_target_horiz_norm

float			f_walling_speed_target_horiz_norm
float			f_walling_speed_target_verti_norm

object				o_finish_actor
int				i_cc_type = -1
int				i_cc_type_old = -1

// =============================================
//                COMMUN (GESTION DES MODES)
// =============================================

private int			i_kong_camera_mode = -1
private int			i_Kamera_mode_init_flag
private int			f_Kamera_mode_init_infini

private int			i_kong_camera_status_old
private int			i_kong_camera_status_new

// =============================================
//                            MODE NORMAL
// =============================================
private float			f_normal_cam_dist
private float			f_normal_change_mode_speed
private float			f_normal_vitesse_retour_axe
private vector		v_normal_target_delta
private float			f_normal_cam_target_delta_norm

// =============================================
//                            CAM MODIFIER
// =============================================

// ContreChamp
private object		o_cc_kam_modifier										// Kam modifier pour cette trame
private object		o_cc_kam_modifier_old									// Kam modifier de la trame precedante
private int			i_cc_kam_modifier_prio									// Kam modifier prio
private int			i_cc_kam_KamModifierID								// KamModifier ID counter
private int			i_cc_kam_KamModifierID_Ann						// ID KamModifier ANN
private int			i_cc_kam_KamModifierID_Cur						// ID de la KamModifierCourante

private float			f_k_GC_TransitionSpeed_In							// Kam modifier transition Speed In
private float			f_k_GC_TransitionSpeed_Out						// Kam modifier transition Speed Out

private float			f_k_GC_dist_max_a_kong 							// Contrainte #1 : Dist max a Kong
private float			f_k_GC_dist_max_apres_la_cam					// Contrainte #2 : Dist max devant Camera
private float			f_k_GC_dist_max_avant_la_cam					// Contrainte #3 : Dist max derriere Camera
private int			i_k_GC_include_all_ennemies = vrai_faux		// Contrainte #4 : Reculer pour inclure tous les ennemis
private float			f_k_GC_recul_max_all_ennemies					// Contrainte #5 : Distance max de recul

private int			i_k_GC_active_occlution = vrai						// Ne plus tester les obstacles
private float			f_k_GC_look_amplitude								// Amplitude du mode observation
private float			f_k_GC_cam_focale										// Focale
private float			f_k_GC_offsetZ											// OffsetZ
private float			i_k_GC_Dodge_on

private float			f_k_GC_DecentrageHorizCoef 
private float			f_k_GC_DecentrageVertiCoef
private int			i_k_GC_offsetZ_Local

private float			f_cc_DodgeZmax											// Offset Z de Dodge !
private float			f_cc_dot_target											// Dot CamSight - SightKONG

float			f_cc_duration
object		o_cc_external
object		o_cc_external_gao
int				i_cc_cam_sur_ann
object		o_cc_ann_look_obj
//object		o_cc_target

// ChangeParameter
private int			i_fa_active = faux											// 
private float			f_fa_returnSpeed											// Vitesse de reorientation
private vector		v_fa_axis													// Axis d'orientation naturelle (normalement dans le dos de Kong)
private float			f_fa_dist														// Distance de la Cam a Kong

// SORT HERE -------------------------------------------------------------------

// Pour les changements de mode --------------------
private vector		vG_chm_cam_target
private vector		vG_chm_cam_target_delta
private vector		vG_chm_cam_sight 
private float			fG_chm_cam_dist
private float			fG_chm_cam_focale 
private vector		vG_chm_cam_pos
private float			f_chm_coef
private float			f_chm_coef_bis
private float			f_chm_speed_forced = -1
// Pour les changements de mode --------------------
private vector		v_OldMECA_cam_target
private vector		v_OldMECA_cam_target_delta
private vector		v_OldMECA_cam_sight
private vector		v_OldMECA_cam_pos
private float			f_OldMECA_cam_dist

int						i_sct_kong
int						i_sct_forced = -1
int						i_cc_cam_sur_ann_old

int						i_finish_id
int						i_finish_chosen_plan

vector				v_cc_meca_cam_target
private int			i_wait_too_close

// =============================================
//                            CAM CINE
// =============================================
object		o_cine_gao
object		o_cine_gao_old
float			f_cine_focale
float			f_cine_blendIn
float			f_cine_blendOut

int				ai_finish_PreferedID[Ci_Kamera_Finish_id_MAX]
float			af_finish_BlendInOut[Ci_Kamera_Finish_id_MAX][2]

float			f_sfx_ramble
float			f_sfx_ramble_speed 

int				i_kong_finish
int				i_finish_frame 
float			f_finish_forced_speed 
object		o_finish_actor_backup

// ZDE FIGHT, PAF SUR LES ODE
private		int		i_paf_ODE

private		float	f_cc_meca_cam_transitionspeed

private		object	ATM_KamTransitionFrom[10]
private		float		ATM_KamTransitionSpeed[10]
private 		object	o_k_GC_fixe_target
private 		object	o_mf_actor_blend

private 		int			i_chm_flags
private 		float		f_cine_duration

private 		function	Kam_CallBack_KamMod_Fct
private		object	Kam_CallBack_KamMod_GAO_OLD
private object			Kam_Last_KamMod
private		object	Kam_CallBack_KamMod_GAO
int				ai_finish_Flags[Ci_Kamera_Finish_id_MAX]
private		float		f_death_rotation

vector		v_joyD_blend2
float			f_kam_infinit
float			i_kam_family

private vector	v_FinishLimitAngle
private float		f_FinishLimitAngle

int					i_ray_col
float				f_cut_if_backshoot

object			o_k_GC_active_occlution 
private int		i_kong_camera_mode_old = -1

// FPS MODE =========================================
private	int			i_cam_fps
private	int			i_cam_fps_old
private	vector	v_fps_sight
private	float		f_joy_move_norm
private	float		f_joy_sight_cote
private	float		f_joy_sight_blend
private	int			i_fps_Jack_visible
private	float		f_fps_duration
private	float		f_blend_z
private	float		f_fps_effet_marche_hauteur
private	vector	v_fps_effet_marche_vertical
private	int			i_fps_mf_cut
int						i_fps_no_banking		// mettre à vrai pour ne pas uniformiser le banking à celui de l'objet hiérarchisé
private	float		f_specific_Z
private	int			i_fps_blok_x
private	int			i_fps_disable_joy1
private	int			i_fps_inverse_joy1
private	float		f_fps_time_max_rot_x
private	float		f_fps_time_max_rot_y
private	float		f_fps_time_auto
private	float		f_fps_angle
private	float		f_fps_angle_min
private	float		f_fps_angle_max
private	float		f_focal_jack = Cf_default_focal_jack

// IMPORT FROM JACK'S CAMERA =========================
private	object	o_obj_prendre
private	object	o_obj_lock
private	int			i_danger_lookat
private	object	o_danger_nexttarget
private	float		f_danger_nexttimer
private	object	o_danger_target
private	float		f_danger_timer
private	int			i_disable_joy1
private	float		f_shoot_jack
private	int			i_just_shoot

private	vector	v_fps_kk_relative_dir
private	object	o_fps_kk_relative_bone
private	int			i_fps_epaule_kong_rotation_flag
private	vector	v_fps_temp1
private	vector	v_fps_temp2
private	vector	v_fps_temp3

// REWARD
private	int			i_Reward_Type = -1
private	object	o_Reward_Actor
private	vector	v_Fps_to_Reward_Sight
private	vector	v_Fps_to_Reward_Banking
private	vector	v_Reward_sight_backup

private	float		f_normal_cam_Dist
private	float		f_normal_cam_AngleGround
private	float		f_normal_camT_TargetZ
private	float		f_normal_camT_TargetHorizCoef
private	float		f_normal_camT_TargetHorizDotMin
private 	float		f_normal_AngleGroundMainActor
private	float		f_normal_PadD_Zmin
private	float		f_normal_PadD_Zmax
private	float		f_normal_coef_speed

vector		f_ground_normale
float		f_ground_timer
int			i_ground_flag
float			f_normal_cam_GroundAngleCoef 

// LockKam
object		ao_LockKam[50]
vector		av_LockKam_Pos[50]
int				i_LockKam_Index
int				i_LockKam_Nbr
int				i_LockKam_Nbr_old
vector		v_LockKam_Moyenne
float			f_LockKam_Blend
vector		v_look_axis

float			f_KMAdjust_Distance
float			f_KMAdjust_Angle
float			f_KMAdjust_CoefDecentrageHoriz

int				i_mf_actor_ID
int 			i_mf_actor_Family

vector	v_cam 
vector		v_normal_delta
object			o_mf_actor_old
int		i_flag 

private float			f_tourne
private float			f_duree_col

private int				i_kam_enable_fight_toggle	= faux_vrai
private int				i_kam_enable_fight_trame	= faux_vrai


private int				i_FPS_Flag = faux




private object			o_lock 
private float					f_lock_blend 
private 	vector v_lock_axis
private 	vector		v_lock_pos
private vector			v_lock

private vector		v_lock_cam_axis
private int				i_fight_old
private int				i_fight
private float			f_time

private vector		v_oldpos
private vector		v_delta

private int		i_Kam_ComboFinish
private float		f_Kam_ComboFinish
private object	o_Kam_ComboFinish

private float			f_KMAdjust_ChutePlat
private float			f_KMAdjust_ChuteTornade