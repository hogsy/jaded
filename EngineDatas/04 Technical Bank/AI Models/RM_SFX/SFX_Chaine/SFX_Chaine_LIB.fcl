#include "SFX_Chaine_VAR.var"

//--------------------------------------------------------------------------------------------------------------------------------------------
// 									DESTRUCTION DU DERNIER MODULE
//--------------------------------------------------------------------------------------------------------------------------------------------
procedure_local int PROC_SFX_CHAINE_DESTROY_LAST_MODULE()
{
	int		ti_retour

	ti_retour = faux

	if (i_nb_modules > 0)
	{
		if (i_type == 0)
			@o_modules[i_nb_modules-1] OBJ_Destroy()
		else
		{
			PROC_DESTROY_SFX(i_GFX_Coeurs[i_nb_modules-1])
			PROC_SFX_PETITE_ETOILES(v_pos_modules[i_nb_modules-1], f_taille_coeurs * 10.0, COLOR_SetRGBA(0,0,255,128), 0.0)
		}

		ti_retour = vrai
		i_nb_modules--
	}

	return ti_retour
}


//--------------------------------------------------------------------------------------------------------------------------------------------
// 									RAJOUT D'UN MODULE
//--------------------------------------------------------------------------------------------------------------------------------------------
procedure_local int PROC_SFX_CHAINE_ADD_MODULE()
{
	int			ti_retour
	vector	tv_pos
	object	to_obj

	to_obj = OBJ_Me()
	ti_retour = faux

	if (i_nb_modules < Ci_NB_MODULE_MAX)
	{
		if (i_nb_modules > 0)
			tv_pos = v_pos_modules[i_nb_modules-1] - cvector(0.0,0.0,i_espacement)
		else
			tv_pos = OBJ_PosGet() - cvector(0.0,0.0,i_espacement)

		if (i_type == 0)
			o_modules[i_nb_modules] = @get_WP OBJ_Duplicate(tv_pos)
		else
			PROC_SFX_FLARE_COEUR(to_obj,i_GFX_Coeurs[i_nb_modules], tv_pos, f_taille_coeurs, c_couleur_coeurs)

		v_pos_modules[i_nb_modules] = tv_pos
		i_nb_modules++
		ti_retour = vrai
	}
	return ti_retour
}