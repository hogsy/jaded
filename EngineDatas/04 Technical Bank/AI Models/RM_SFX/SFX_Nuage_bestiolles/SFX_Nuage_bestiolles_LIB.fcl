//---------------------------------------------------------------------------------------------------------------------
//	GENERATION D'UN WP ALEATOIRE DANS LA BV CORRESPONDANTE
//---------------------------------------------------------------------------------------------------------------------
procedure_local vector PROC_GEN_WP(vector V1, vector V2)
{
	vector tv_retour

	tv_retour.x = MATH_RandFloat(V1.x,V2.x)
	tv_retour.y = MATH_RandFloat(V1.y,V2.y)
	tv_retour.z = MATH_RandFloat(V1.z,V2.z)
	
	return tv_retour
}

//---------------------------------------------------------------------------------------------------------------------
//	GENERATION D'UN WP ALEATOIRE DANS LA BV CORRESPONDANTE
//---------------------------------------------------------------------------------------------------------------------
procedure_local vector PROC_GEN_WP_PAPILLON(vector V1, vector V2, vector tv_pos, float dist)
{
	vector tv_retour
	
	tv_retour.x = MATH_RandFloat(tv_pos.x - dist,tv_pos.x + dist)
	tv_retour.y = MATH_RandFloat(tv_pos.y - dist,tv_pos.y + dist)
	tv_retour.z = MATH_RandFloat(tv_pos.z - dist,tv_pos.z + dist)

	if (tv_retour.x < V1.x)
		tv_retour.x = V1.x
	else
	if (tv_retour.x > V2.x)
		tv_retour.x = V2.x

	if (tv_retour.y < V1.y)
		tv_retour.y = V1.y
	else
	if (tv_retour.y > V2.y)
		tv_retour.y = V2.y

	if (tv_retour.z < V1.z)
		tv_retour.z = V1.z
	else
	if (tv_retour.z > V2.z)
		tv_retour.z = V2.z
	
	return tv_retour
}

//---------------------------------------------------------------------------------------------------------------------
//								AFFICHAGE D'UNE CREATURE
//---------------------------------------------------------------------------------------------------------------------
procedure_local void PROC_DISPLAY_WP(vector v_pos, vector v_dir, float f_rayon)
{
	DBG_RenderSphere(v_pos,f_rayon,color_rouge)
	DBG_RenderVector(v_pos,v_dir,color_jaune)
}