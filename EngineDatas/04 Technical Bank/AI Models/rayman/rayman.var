#include "r_defines.var"

// Define at least one function in a track
function track0 = "raym_init"
// function track1 = "name"
// function track2 = "name"
// function track3 = "name"
// function track4 = "name"

// SE CHANGE
separator "RM Se Change"
int							i_RM_SeChange_Anim		= faux_vrai
int							i_RM_SeChange_Frame 	= 17
private int				i_RM_SeChange_Must_Do
// REF
private object			o_Punch

// ETATS
private int				i_sort_etat
private int				i_etat_courant 		= -1
private int				i_dernier_etat			= -1
private function		fct_last_etat
private float				f_time_start_etat

// JOY
private vector		v_joy_sight
private vector		v_joy_sight_normalized 
private float			f_joy_norm 
private int			i_flag_just_punch
private int			i_flag_just_release_punch
private int			i_flag_just_release_grappin
private int			i_flag_just_cle
private int			i_flag_punch
private int			i_flag_just_ride_exit
private int			i_flag_just_jump  
private int			i_flag_just_jump_forced
private int			i_flag_just_jump_from_ground
private int			i_flag_jump_release
private int			i_flag_jump
private int			i_flag_just_grappin
private int			i_flag_just_use 
private int			i_flag_just_drop
private int			i_flag_just_grab
private int			i_flag_just_esquive
private int			i_flag_look
private int			i_flag_look_force_release
private int			i_flag_boost
private int			i_flag_just_super_punch
private float			f_joy_punch_pressed
private float			f_joy_jump_pressed
private float			f_joy_grappin_pressed
private float			f_joy_boost_pressed
private vector		v_orient_JOY

private int			i_flag_just_O
private int			i_flag_just_X
private int			i_flag_just_C
private int			i_flag_just_T

// LOOK
private vector			v_look_direction
private vector			v_look_pivot_pos
private float				f_look_blend_coef

private int				i_head_bone_nb
private object			ao_head_bones[5]

// MOVE_MODE
private int				i_move_mode
private int				i_move_retourne
private int				i_choix_anim

// COUPS
private int				i_buffer_X		= faux
private int				i_buffer_C		= faux
private int				i_buffer_T		= faux
private int				i_buffer_O		= faux

// JUMP
private int				i_jump_copter
private float				f_jump_time
private vector			v_jump_impulsion_force
private vector			v_jump_impulsion_force2
private int				i_move_valid
private float				f_jump_impulsion_time
private float				f_jump_copter_time 
private int				i_jump_mashing
private object			o_jump_rebound
private float				f_jump_glisse_timer
private float				f_jump_speed_limit 
private vector			v_force_jump

// CLIMB EDGE
private vector			v_climb_position
private vector			v_climb_normale
private vector			v_climb_hand_offset
private object			o_climb_WP
private object			o_climb_target_wp 
private vector			v_anim_hand_accroch_offset 

// GROUND
private vector			v_ground_pos
private vector			v_ground_edge_pos
private vector			v_ground_normale
private float				f_ground_timer
private int				i_ground_flag
private float				f_glisse_coef

// SPEED
private vector			v_speed_hor_old
private vector			v_speed_hor
private vector			v_speed_pos
private float				f_speed_hor
private float				f_speed_norm 
private float				f_traction_speed_time
private float				f_traction_multiplier
private float				f_traction_limit

private vector			v_speed_engine
private float				f_speed_engine_hor

// LIFE & PAFS
//private messageid	ID_LIFE
private float				f_display_life
private float				f_display_mana
private float				f_display_life_size
private float				f_display_mana_size
private object			o_paf_actor
private int				i_paf_type
private vector			v_paf_dir
private object			o_paf_detect_actor
private int				i_paf_detect_type
private vector			v_paf_detect_dir
private int				i_paf_ground_flag
private float				f_paf_jauge
private float				f_paf_before_crete
private float				f_paf_time_last_big


// VARAP			
private vector		v_varap_pos
private vector		v_varap_normal
private float			f_varap_tension
private float			f_varap_time

// RIDE
private object		o_ride_actor
private object		o_ride_last_actor 
private int			i_ride_actor_ID = 0
private object		o_ride_cb_actor	// pour couper la cb qd je n'ai plus de o_ride_actor
private messageid	mid_ride_LNK_ID
private float			f_ride_snap_coef
private float			f_ride_jump

// ANIMS
private int				ai_action_index[5][5]
private float				af_action_speed[5][5]
private vector			av_action_speed[5][5]
private int				i_action_nb_each_family
private int				i_action_nb_family
private int				i_family

// BANKING
private vector			v_last_speed
private float				f_bassin_angle

// GRAPPIN
private int				i_grappin_mur					// vrai si planté dans un mur (pas un sol ni un plafond)
private int				i_grappin_snap_to_dest	
private int				i_grappin_mur_accroch_mode		// flag détection du passage en varape
private int				i_grappin_nmi_dodges		// mon nmi dodge mon grappin
private int				i_grappin_nmi_protects		// mon nmi se protege de mon grappin
private int				i_grappin_created			// flag pas 2 générations de grappin pour 1 anim
private int				i_grappin_accroche		// grappin accroché à un hotspot (nmi, item, décor...)
private vector			v_grappin_accroche_offset		// offset pour la position du grappin accroché 
private vector			v_grappin_accroche_dir			// direction pour l'orientation du grappin accroché 
private int				i_grappin_retour			// grappin en train de revenir
private int				i_grappin_rebound		// rebond avant le retour (protect)
private int				i_grappin_must_be_launched		// flag lancer du grappin
private float				f_grappin_blend			// coef snap pos
private float				f_grappin_life				// durée lancer (pas accroché)
private float				f_grappin_nolife			// durée retour
private float				f_grappin_rebound		// durée rebond
private float				f_grappin_speed			// speed du grappin
private float				f_grappin_lancer_distmax
private float				f_grappin_zoom
private object			o_grappin_dup_wp		// le dup wp qui sert à se planter dans les décors
private object			o_grappin_start_actor
private object			o_grappin_dest_actor
private object			o_grappin							// le grappin (le poing)
private object			o_grappin_hotspot_last			// mon dernier hotspot en date
private object			o_grappin_hotspot				// mon hotspot courant
private vector			v_grappin_lance_memo_dir	// backup sens du joy ou de la cam lors du lancer
//private vector			v_grappin_traction				// mémo traction appliquée par le rope manager
private vector			v_grappin_return_startpos
private vector			v_grappin_speed
private vector			v_grappin_last_pos
private vector			v_grappin_normale			// normale du décor à mon point de collision
private vector			v_grappin_launch_axis		// axe de lancer du grappin
private vector			v_grappin_rebound_dir	// axe de rebond
private vector			v_grappin_orient
private float				f_grappin_blend_marto
private int				i_grappin_SFX_Target = -1
private vector			v_grappin_SFX_pos
private float				f_grappin_SFX_blend
private object			o_SFX_target

// GFX
separator "Grappin GFX"
int							i_grappin_gfx_mode = enum("3-Corde" 3 "0-Faisceau" 0 "1-Eclair" 1 "2-Etincelles" 2 "4-Faisceau TipTop" 4)
private color			i_grappin_gfx_color
color						i_color_test = 0x809D51AC
private int				i_grappin_GFX_Halo1 = -1
private int				i_grappin_GFX_Halo2 = -1
private float				f_grappin_collision_timer
private int				GFX_Smoke = -1

//------------------------------------------------------------------------------------------------------------------------------------------------------------
// SFX CHRISTOPHE
//------------------------------------------------------------------------------------------------------------------------------------------------------------
private int         		i_GFX_Feu_bubules = -1
private int         		i_GFX_Feu_torche = -1
private int          		i_GFX_Rochers_torche = -1
private int				i_GFX_Speed = -1
private vector			v_pos_RM = Cv_NullVector
private vector			v_pos_RM_old = Cv_VerticalVector
private vector			v_pos_cam = Cv_NullVector
private vector			v_pos_cam_old = Cv_NullVector
private vector			v_dir_cam = Cv_NullVector
private object			o_speed_RM_particules[C_SFX_NB_SPEED_PARTICLES]
private int				i_cpt_speed_particules[C_SFX_NB_SPEED_PARTICLES]
private vector			v_dir_speed_particules[C_SFX_NB_SPEED_PARTICLES]
//------------------------------------------------------------------------------------------------------------------------------------------------------------
// SFX
//------------------------------------------------------------------------------------------------------------------------------------------------------------


// Faisceau & Eclair
private int				i_grappin_gfx = -1
private int				i_helico_gfx = -1
// TipTop
private vector			av_grappin_tiptop[Ci_Grappin_TipTopNb]
private int				ai_grappin_gfx[Ci_Grappin_TipTopNb]
private int				i_grappin_tiptop_nb
// Corde
private int				ai_grappin_gfx_corde[Ci_Grappin_Corde_Segments_Nb]
private vector			v_grappin_gfx_corde_B_pos
private vector			v_grappin_gfx_corde_B_speed
private vector			v_grappin_gfx_corde_C_pos
private vector			v_grappin_gfx_corde_C_speed
// Réglages
separator "Grappin Réglages"
int							i_grappin_reglage_DISPLAY = vrai_faux
float						f_grappin_norm_max = 30.0
float						f_grappin_norm_Zmin_arret = 30.0
float						f_grappin_norm_min_ground = 5.0
float						f_grappin_frictionZ = 1.0
float						f_grappin_traction_mult = 1.0
float						f_grappin_dist_min_traction = 3.0

// Rope Manager
private object			o_rope_manager
private float				f_rope_coef
private float				f_rope_length

// FIGHT
private object			o_fight_actor
private object			o_fight_actor_best_joy
private message		m_fight_actor_message
private object			ao_frappe_target[30]			
private int				i_frappe_target_nb						// nb de persos paffés ce coup-ci
private vector			v_frappe_joy
private float				f_speed_before_rec
private float				f_coup_speed
private int				i_coup_action = -1
private int				i_coup_action2
private int				i_coup_action3
private float				f_frappe_time
private int				i_frappe_ultra_memo
private int				i_coup_super

// CHEAT
private int				i_cheat_mode
private vector			v_cheat_ride_grav
private int				i_cheat_colset_on

// ADD SPEED
private vector			v_add_speed

// DYNAMIQUE DU SOLIDE :p
private vector			v_force_JOY
private vector			v_force_GRAPPIN
private vector			v_force_STREAM
private vector			v_force_ICE
private vector			v_force_GRAVITY
private vector			v_speed_before_rec

private float				f_water_Z
private float				f_water_jump_add
private int				i_is_in_water
private int				i_walk_in_water
private int				i_water_splash

private float				f_water_blend

// GRAB
//private object			o_client_grab
private object			o_grab_object
private messageid	mid_grab_object
private float				f_grab_object_blend
private object			o_grab_cle
private messageid	mid_grab_cle
private float				f_grab_object_cle
private object			o_grab_dup
private object			o_grab_dup_cle


// USE
private int				i_use_ON
private object			o_use_target 
private vector			v_use_sight
private vector			v_use_offset
private float				f_use_time
private float				f_use_time_mash
private object			o_client_use
private messageid	mid_use

// IK
private vector			v_pied_lastpos[4]
//private vector			v_pied_banking[4]
private object			o_pied[4]
private float				f_pied_blend

// IK LEGS
private float			f_bassin_Z_offset

private int			i_flag_leg_IK[2]

private float			f_IK_Z_offset[2]
private float			f_IK_coef[2]
private float			af_IK_bones_length[2][4]
private float			f_IK_leg_length[2]
private float			f_IK_ground_coef[2]
private vector		v_IK_ref_ground_pos
private vector		v_IK_ground_normale[2]
private object		ao_IK_bones[2][4]

private object		o_bassin

// TOUPIE
private float			f_time_toupie 

// DODGE
private vector		v_esquive_joy

// UNCOL
private	object		ao_uncol[10]
private	object		ao_uncol_old[10]
private	int				i_uncol_nb
private	int				i_uncol_old_nb

// DBG
private int		i_DBG_HS
private int		i_DBG_Target
private int		i_DBG_Anim
private int		i_DBG_action
private int		i_DBG_action_old

private int		i_JOY_version = 1


// SUIVI REGARD
private float		f_look_angle_blend_speed
private vector	v_look_axis
private vector	v_last_look_pos

// MONTE MUR
private vector	v_wall_normale


// SND
private int		i_SND_Grappin
private int		i_SND_Copter = -1
private int		i_SND_BoostL = -1
private int		i_SND_BoostR = -1
private int		i_SND_BoostL_Fly = -1
private int		i_SND_BoostR_Fly = -1
private int		i_SND_Fly = -1
private int		i_SND_BoostL_old = -1
private int		i_SND_BoostR_old = -1
private int		i_SND_BoostL_Fly_old = -1
private int		i_SND_BoostR_Fly_old = -1
private int		i_SND_Fly_old = -1


// BALANCIER
private vector	v_balancier_pos = Cv_NullVector				// position du balancier
private vector	v_balancier_speed = Cv_NullVector				// vitesse du balancier

private float		f_look_coef

// GAME SPEED
private int		i_game_ralenti
private float		f_game_ralenti

// GAME BACKUP SAFE
private vector	v_safe_pos

// HIERARCHY
private int		i_keep_hierarchy

// BASCULE
private object		o_bascule
private vector		v_before_rec_speed


// DANSE
private int			i_danse_synchro
private int			i_danse_beat
private int			i_danse_reussi 				// Appuyé dans la fenetre ou pas?
private float			f_danse_time
private float			f_danse_time_old
private float			f_danse_buffer_time
private vector		v_danse_valid_joy
private int			i_disguise_cut
private int			i_danse_choose_joy
private int			i_danse_cancel

// DOPPELGANGER
private int			i_disguise_init
private object		o_dup[10]