#include "PNJ_Volant_defines.var"

int			ti_i
int			dbg_color

float		tf_coef

vector		tv_pos
vector		tv_X
vector		tv_Y
vector		tv_Z

vector		tv_av_offset
vector		tv_col_pos
vector		tv_torque
vector		tv_rotspeed
vector		tv_stream
vector		tv_temp

#define Cf_grav_force_mult			40.0

if (i_flag_sortie_etat)
{
	i_flag_sortie_etat = faux
	return
}

if (i_etat_courant != ETAT_Plane)
{
	// INTIALISATION
	i_dernier_etat = i_etat_courant
	i_etat_courant = ETAT_Plane
	
	if (fct_last_etat)
	{
		i_flag_sortie_etat = vrai
		AI_Execute(fct_last_etat)
	}
	
	fct_last_etat = AI_TrackCurGet()

		
	COL_SwapToSpecific(C_zdm_pied)
	COL_ZoneSizeSet(C_zdm_pied, cvector(Cf_zdm_size, Cf_zdm_size, Cf_zdm_size))
	COL_ZonePosSet(C_zdm_pied, cvector(0.0, 0.0, COL_ZoneSizeGet(C_zdm_pied)))

//	DYN_On()
//	DYN_FlagsSet(DYN_C_BasicForces | DYN_C_NeverDynamicFather | DYN_C_NeverDynamicHierarchy | DYN_C_HorizontalGrounds | DYN_C_SlipOnGroundEdge, none)
//	DYN_GravitySet(cvector(0.0, 0.0, -20.0))

//	COL_ColSetActivationSet(none, all)

	ODE_Enable(vrai)
	ODE_Setv(0, Cv_NullVector)
	ODE_Setv(3, Cv_NullVector)
	ODE_Setv(4, cvector(0.0, -20.0, 0.0))
	ODE_Setf(0, 500.0) // Masse

	av_offset[0] = cvector(0.0, 4.0, 0.0)
	av_offset[1] = cvector(-3.0, 1.0, 0.0)
	av_offset[2] = cvector(3.0, 1.0, 0.0)
	av_offset[3] = cvector(0.0, 4.0, 0.0)

	// Aile	
	av_offset[4] = cvector(0.0, -0.25, 0.0)

	f_time_start_etat = 0.0
}
else
{
	f_time_start_etat += TIME_GetDt()
}

// ANALYSE ===============================================================
// RIDED ? -----------------------------------------------------------------
o_Rided_Actor = LNK_ServeurGet(Ci_LNK_RIDE_ON_NMI, mid_Rided_LNK_ID, vrai, nofunc, nofunc)
if( o_Rided_Actor )
{
	if (IO_ButtonPressed(joy_button_L) || IO_ButtonPressed(joy_button_L2))
		o_grab_actor = LNK_ClientGet(Ci_LNK_GRAB_RAPTOR, mid_grab_actor_LNK_ID, vrai, "PNJ_Volant_exec_GRAB_Init", nofunc, "PNJ_Volant_exec_GRAB_Init")
	else
		o_grab_actor = LNK_ClientGet(Ci_LNK_GRAB_RAPTOR, mid_grab_actor_LNK_ID, faux, "PNJ_Volant_exec_GRAB_Init", nofunc, "PNJ_Volant_exec_GRAB_Init")	
}
else
{
	o_grab_actor = LNK_ClientGet(Ci_LNK_GRAB_RAPTOR, mid_grab_actor_LNK_ID, faux, "PNJ_Volant_exec_GRAB_Init", nofunc, "PNJ_Volant_exec_GRAB_Init")	
}

// COMPORTEMENT ===============================================================

tv_torque = Cv_NullVector
tv_stream = Cv_NullVector

dbg_color = color_blanc

//ODE_ForceAtPosSet(cvector(0.0, 0.0, 40.0), tv_pos)

// Ailes
tv_pos = OBJ_PosGet() + MATH_VecLocalToGlobal(av_offset[4])
tv_X = OBJ_HorizonGet()
tv_Y = MATH_VecRotate(OBJ_SightGet(), tv_X, -0.08)
tv_Z = MATH_VecCrossProduct(tv_X, tv_Y)
MATH_VecSetNormalize(tv_Z)

tv_temp = PNJ_Volant_Traction_Get(ODE_Getv(0), tv_pos, tv_X, tv_Y, tv_Z, 10.0, 2.0, 0.25, 0.0, 0.0, 1.0) * Cf_grav_force_mult
DBG_RenderVector(tv_pos, tv_temp, color_cyan)
ODE_ForceAtPosSet(tv_temp, tv_pos)

// Roulis
tv_temp = IO_JoyGetMove()
tf_coef = MATH_FloatSign(tv_temp.x) * MATH_FloatMax(MATH_AbsFloat(tv_temp.x) - tolerance_joynull, 0.0)
if (tf_coef)
	dbg_color = color_rouge
else
	dbg_color = color_blanc

tv_pos = OBJ_PosGet() + MATH_VecLocalToGlobal(av_offset[1])
tv_X = OBJ_HorizonGet()
tv_Y = MATH_VecRotate(OBJ_SightGet(), tv_X, tf_coef * Cf_PiBy6)
tv_Z = MATH_VecCrossProduct(tv_X, tv_Y)
MATH_VecSetNormalize(tv_Z)

tv_temp = PNJ_Volant_Traction_Get(ODE_Getv(0), tv_pos, tv_X, tv_Y, tv_Z, 0.75, 0.5, 0.1, 0.0, 0.0, 1.0) * Cf_grav_force_mult
DBG_RenderVector(tv_pos, tv_temp, color_cyan)
ODE_ForceAtPosSet(tv_temp, tv_pos)

tv_pos = OBJ_PosGet() + MATH_VecLocalToGlobal(av_offset[2])
tv_X = OBJ_HorizonGet()
tv_Y = MATH_VecRotate(OBJ_SightGet(), tv_X, -tf_coef * Cf_PiBy6)
tv_Z = MATH_VecCrossProduct(tv_X, tv_Y)
MATH_VecSetNormalize(tv_Z)

tv_temp = PNJ_Volant_Traction_Get(ODE_Getv(0), tv_pos, tv_X, tv_Y, tv_Z, 0.75, 0.5, 0.1, 0.0, 0.0, 1.0) * Cf_grav_force_mult
DBG_RenderVector(tv_pos, tv_temp, color_cyan)
ODE_ForceAtPosSet(tv_temp, tv_pos)

// Tangage
tv_temp = IO_JoyGetMove()
tf_coef = - MATH_FloatSign(tv_temp.y) * MATH_FloatMax(MATH_AbsFloat(tv_temp.y) - tolerance_joynull, 0.0)
if (tf_coef)
	dbg_color = color_rouge
else
	dbg_color = color_blanc

//tf_coef +=0.5

tv_pos = OBJ_PosGet() + MATH_VecLocalToGlobal(av_offset[3])
tv_X = OBJ_HorizonGet()
tv_Y = MATH_VecRotate(OBJ_SightGet(), tv_X, tf_coef * Cf_PiBy8)
tv_Z = MATH_VecCrossProduct(tv_X, tv_Y)
MATH_VecSetNormalize(tv_Z)

tv_temp = PNJ_Volant_Traction_Get(ODE_Getv(0), tv_pos, tv_X, tv_Y, tv_Z, 3.0, 1.0, 0.1, 0.0, 0.0, 1.0) * Cf_grav_force_mult
DBG_RenderVector(tv_pos, tv_temp, color_cyan)
ODE_ForceAtPosSet(tv_temp, tv_pos)

// Lacet
//tv_temp = IO_JoyGetMove1()
tv_temp = IO_JoyGetMove()
tf_coef = MATH_FloatSign(tv_temp.x) * MATH_FloatMax(MATH_AbsFloat(tv_temp.x) - tolerance_joynull, 0.0) * Cf_grav_force_mult
if (tf_coef)
	dbg_color = color_rouge
else
	dbg_color = color_blanc

tv_pos = OBJ_PosGet() + MATH_VecLocalToGlobal(av_offset[0])
tv_Z = OBJ_BankingGet()
tv_Y = MATH_VecRotate(OBJ_SightGet(), tv_Z, tf_coef * Cf_PiBy8)
tv_X = MATH_VecCrossProduct(tv_Z, tv_Y)
MATH_VecSetNormalize(tv_X)

tv_temp = PNJ_Volant_Traction_Get(ODE_Getv(0), tv_pos, tv_X, tv_Y, tv_Z, 0.1, 0.5, 1.0, 1.0, 0.0, 0.0) * Cf_grav_force_mult
DBG_RenderVector(tv_pos, tv_temp, color_cyan)
ODE_ForceAtPosSet(tv_temp, tv_pos)

// Moteur
if( o_Rided_Actor && IO_ButtonPressed(joy_button_R2))
{
	tv_pos = OBJ_PosGet()
	tv_temp = OBJ_SightGet() * 20000.0
	DBG_RenderVector(tv_pos, tv_temp, color_cyan)
	ODE_ForceAtPosSet(tv_temp, tv_pos)
}

//DBG_RenderVector(OBJ_PosGet(), tv_torque, color_cyan)
//
//DYN_StreamSet(tv_stream)
//
//v_rot_speed += tv_torque * TIME_GetDt()
//
//if (MATH_VecSquareNorm(v_rot_speed))
//{
//	tv_X = MATH_VecCrossProduct(v_rot_speed, Cv_VerticalVector)
//	if ( ! MATH_VecSquareNorm(tv_X) )
//		tv_X = MATH_VecCrossProduct(v_rot_speed, cvector(1.0, 0.0, 0.0))
//	MATH_VecSetNormalize(tv_X)
//	
//	f_rot_speed = MATH_VecNorm(v_rot_speed)
//
////	f_rot_speed += MATH_VecNorm(v_rot_speed) * TIME_GetDt()
////	f_rot_speed += MATH_VecNorm(v_rot_speed) * (TIME_GetDt() * TIME_GetDt())
//	
//	tv_Y = MATH_VecRotate(tv_X, v_rot_speed / f_rot_speed, f_rot_speed * TIME_GetDt())
//	OBJ_Rotate_FromTo(MATH_VecGlobalToLocal(tv_X), MATH_VecGlobalToLocal(tv_Y))
//}
//
//v_rot_speed = MATH_VecBlend(v_rot_speed, Cv_NullVector, 10.0 * TIME_GetDt())

if (o_Rided_Actor)
{
	@get_Kamera OBJ_FlagInactiveSet(vrai)
	
	tv_pos = OBJ_PosGet()
	tv_pos -= OBJ_SightGet() * 10.0
	tv_pos += OBJ_BankingGet() * 4.0
	
	@get_Kamera OBJ_PosSet(tv_pos)
	
	tv_pos = OBJ_PosGet()
	tv_pos += OBJ_SightGet() * 10.0
	
	@get_Kamera OBJ_SightGeneralSet(tv_pos - @get_Kamera OBJ_PosGet(), Cv_VerticalVector)
	
	@get_Kamera VIEW_AssignObject(0)
}
else if (@get_Kamera OBJ_FlagsControlGet() & OBJ_C_ControlFlag_ForceInactive)
{
	@get_Kamera OBJ_FlagInactiveSet(faux)
}


//tv_rotspeed = DYN_RotSpeedVectorGet()
//tv_rotspeed = MATH_VecBlend(tv_rotspeed, Cv_NullVector, 6.0 * TIME_GetDt())
////tv_rotspeed = Cv_NullVector
//DYN_RotSpeedVectorSet(tv_rotspeed)
	


