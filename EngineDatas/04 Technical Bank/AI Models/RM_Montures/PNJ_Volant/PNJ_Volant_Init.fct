#include "PNJ_Volant_defines.var"

int			ti_i

vector	tv_X
vector	tv_bv_size

float		tf_bv_size

object	to_visuel
object	to_clone

switch (creature_type)
{
	case Ci_CreatureType_Aigle :
		i_monture_ID = C_ID_Monture_Aigle
		break
		
	case Ci_CreatureType_Bat :
		i_monture_ID = C_ID_Monture_Bat
		break

	case Ci_CreatureType_Soucoupe :
		i_monture_ID = C_ID_Monture_Soucoupe
		break

}
	
i_net_pos_index = 0
i_net_my_pos_index = 0
av_net_pos[i_net_pos_index] = OBJ_PosGet()

o_rope_manager = @get_global o_rope_manager
if ( ! o_rope_manager )
	returntrack

COL_FilterSet(all, OBJ_C_IdentityFlag_Anims, Ci_Filter_IdentityFlag)
COL_ColSetActivationSet(none, C_bit_zdm_recalagespecial)

switch (creature_type)
{
	case Ci_CreatureType_Aigle :
		i_monture_ID = C_ID_Monture_Aigle

		OBJ_ZoomSet(2.0)			// Taille
		tf_bv_size = OBJ_ZoomGet() * 4.0

		// Comportement
		f_ground_speed_Joy	= 5.0
		f_ground_speed_R2 = 8.0 // 15.0 
		f_air_speed_R2 = 36.0
		v_gravity = cvector(0.0, 0.0, -15.0)
		v_friction_air = cvector(6.0, 0.05, 40.0)
		f_ride_dist = 3.0 * 3.0							// Acceptation liaison RIDE

		f_rot_friction = 6.0
		f_rot_speed_max = 2.0

		// ZDE
		COL_SwapToSpecific(C_zdm_pied)
		COL_ZoneSizeSet(C_zdm_pied, cvector(Cf_zdm_size, Cf_zdm_size, Cf_zdm_size))
		COL_ZonePosSet(C_zdm_pied, cvector(0.0, 0.0, 0.0))
	
		// ACTION SPEED
		ACT_MagicBoxMoveGet(&tv_X, &f_action_marche_speed, Action_Marche, 0)
		f_action_marche_speed *= OBJ_ZoomGet()	

		OBJ_PosSet(OBJ_PosGet() + (OBJ_BankingGet() * OBJ_ZoomGet()))
		
		PNJ_Volant_Init_IK()

		break

	case Ci_CreatureType_Soucoupe :
		i_monture_ID = C_ID_Monture_Soucoupe

		OBJ_ZoomSet(1.0)			// Taille
		tf_bv_size = OBJ_ZoomGet() * 2.0

		// Comportement
		f_ground_speed_Joy	= 5.0
		f_ground_speed_R2 = 8.0 // 15.0 
		f_air_speed_R2 = 36.0
		v_gravity = cvector(0.0, 0.0, -15.0)
		v_friction_air = cvector(6.0, 0.05, 40.0)
		f_ride_dist = 3.0 * 3.0							// Acceptation liaison RIDE

		f_rot_friction = 6.0
		f_rot_speed_max = 2.0

		// ZDE
		COL_SwapToSpecific(C_zdm_pied)
		COL_ZoneSizeSet(C_zdm_pied, cvector(Cf_zdm_size, Cf_zdm_size, Cf_zdm_size))
		COL_ZonePosSet(C_zdm_pied, cvector(0.0, 0.0, 0.0))
	
		break
	
	case 	Ci_CreatureType_Bat :
		i_monture_ID = C_ID_Monture_Bat

		OBJ_ZoomSet(0.5)			// Taille
		tf_bv_size = OBJ_ZoomGet() * 4.0
	
		// Comportement
		f_ground_speed_Joy	= 3.5
		f_ground_speed_R2 = 6.0
		f_air_speed_R2 = 20.0
		v_gravity = cvector(0,0,-8)
		v_friction_air = cvector(3.0, 1.0, 40.0)
		f_ride_dist = 1.5 * 1.5							// Acceptation liaison RIDE

		// ZDE
		COL_SwapToSpecific(C_zdm_pied)
		COL_ZonePosSet(C_zdm_pied, cvector(0.0,0.0,1.3))
		COL_ZoneSizeSet(C_zdm_pied, cvector(1.6,1.6,1.6))		// 1.6 et 1.3 C'est normal !!!!
		
		OBJ_FlagsIdentitySet(none, OBJ_C_IdentityFlag_Lights)	
		o_projectile_light	= @get_WP OBJ_Duplicate(OBJ_PosGet())
		if (o_projectile_light)
		{
			@o_projectile_light OBJ_FlagsIdentitySet(OBJ_C_IdentityFlag_Lights,none)	
			@o_projectile_light LIGHT_NearFarSet(5.0,12.0)
			@o_projectile_light LIGHT_ColorSet(0x006A9ABF)
			@o_projectile_light LIGHT_FlagSet(9, vrai)
		}
		
		PNJ_Volant_Init_IK()

		break
}

i_flag_wait_ground_col = vrai

tv_bv_size = cvector(tf_bv_size, tf_bv_size, tf_bv_size)
BV_MinSet(-tv_bv_size)
BV_MaxSet(tv_bv_size)

to_visuel = ANI_CanalObjectGet(Anim_Canal_Bassin)
if (to_visuel)
{
	@to_visuel BV_MinSet(-tv_bv_size)
	@to_visuel BV_MaxSet(tv_bv_size)
}

v_col_ground_pos = OBJ_PosGet()
v_col_ground_normal = Cv_VerticalVector

//AI_RunContext(CTX_AfterRec)
AI_RunContext(CTX_Normal)

OBJ_FlagsControlSet(OBJ_C_ControlFlag_RayInsensitive, none)

v_last_pos = OBJ_PosGet()

AI_CBAdd(OBJ_Me(), CallBack_WhenDestroy, "PNJ_Volant_callback_when_destroy")
AI_CBAdd(OBJ_Me(), CallBack_SectoActOff, "PNJ_Volant_callback_when_SectoOn")

switch(creature_type)
{
	case Ci_CreatureType_Soucoupe :
		AI_CBAdd(OBJ_Me(), CallBack_After_Rec, "PNJ_Volant_callback_afterblend")
		break	
	default:
		AI_CBAdd(OBJ_Me(), CallBack_After_Blend, "PNJ_Volant_callback_afterblend")
		break
}
AI_CBAdd(OBJ_Me(), CallBack_Client, "PNJ_Volant_callback_client")

switch(mode)
{
	case 0 :
		HotSpot_Add_Obj(OBJ_Me(), 0)
		AI_TrackChange(Ci_Track_Etat, "PNJ_Volant_ETAT_Basic")
		break
		
	case 1 :

		if ( ! OBJ_FlagsIdentityTest(OBJ_C_IdentityFlag_Generated) ) 
		{
			for (ti_i = 0; ti_i < StarWars_nb - 1; ti_i++)
			{
				to_clone = OBJ_Duplicate(OBJ_PosGet())
				@to_clone OBJ_BankingGeneralSet(OBJ_SightGet(), OBJ_BankingGet())
				@to_clone OBJ_HierarchySet(OBJ_HierarchyGet())
			}
		}

		AI_TrackChange(Ci_Track_Etat, "PNJ_Volant_ETAT_StarWars")
		break
}
//AI_TrackChange(Ci_Track_Etat, "PNJ_Volant_ETAT_Plane")
AI_TrackCurChangeNow("PNJ_Volant_Reflex")
