// Define at least one function in a track
function track0 = "PNJ_Volant_Init"
// function track1 = "name"
// function track2 = "name"
// function track3 = "name"
// function track4 = "name"


int						creature_type = enum("Aigle" 0 "Bat" 1 "Soucoupe" 2)
int						mode = enum("Normal" 0 "StarWars" 1)
int						StarWars_nb = 30
private int			i_monture_ID = -1

//separator "Dynamique Rotation"
private float					f_rot_friction = 6.0
private float					f_rot_speed_max = 2.0

separator "Reseau"
object				o_start_wp

private float			f_ground_speed_Joy	= 8.0
private float			f_ground_speed_R2 = 40.0
private float			f_air_speed_R2 = 40.0
private vector		v_gravity = cvector(0.0, 0.0, -30.0)
private float			f_ride_dist = 2.0
private vector		v_friction_air

// ETAT
private int			i_etat_courant		= -1
private int			i_dernier_etat		= -1
private int			i_flag_sortie_etat

private int			i_etat_phase

private float			f_time_start_etat
private float			f_etat_phase_duration

private function	fct_main_etat
private function	fct_last_etat

// MAIN ACTOR
private int				i_flag_main_ground_col
private vector			v_main_ground_pos
private object			o_main_actor

// COL
private float				f_on_ground_duration
private float				f_no_ground_col_duration
private vector			v_col_ground_pos
private vector			v_col_ground_normal
private int				i_col_flag_on_ground
private int				i_flag_wait_ground_col

// RIDED
private	object		o_Rided_Actor
private	object		o_Rided_Actor_old
private	messageid	mid_Rided_LNK_ID
private	float			f_Rided_Jump_coef
private	float			f_Rided_last_time
private	int				i_Rided_last_trame

// GRAB
private float				f_jauge_grab_collision
private object			o_grab_actor
private messageid	mid_grab_actor_LNK_ID

// PENCHING
private vector			v_last_speed
private float				f_speed_angle

// IK LEGS
private float			f_bassin_Z_offset

private int			i_flag_leg_IK[2]

private float			f_IK_Z_offset[2]
private float			f_IK_coef[2]
private float			af_IK_bones_length[2][3]
private float			f_IK_leg_length[2]
private float			f_IK_ground_coef[2]

private vector		v_virtual_banking
private vector		v_IK_ref_ground_pos
private vector		v_IK_ground_normale[2]

private object		ao_IK_bones[4][4]

private object		o_bassin

// FLAP FLAP
private int			i_flag_boost
private float			f_flap_duration

// PSEUDO SOLID ROT SPEED
private	float		f_rot_speed
private	float		f_rot_torque

// ROPE MANAGER
private object		o_rope_manager


// SPECIFIQUE BAT
private float		f_wing_speedratio		// Coef speed anim
private object	o_projectile_light			// Gao qui a la lumiere et qu'on peut lancer devant soit.
private vector	v_projectile_pos_old		// Derniere pos pour le LRayon
private float		f_projectile_speed		// Vitesse de deplacement du projectile
private vector	v_projectile_axis			// Axe de deplacement du projectile...
private int		i_projectile_launched	// Flag lancé ou pas...	

// IK SNAP
private float		f_grab_side_sign

// SND
private int		i_snd_vol1	=	-1	
private int		i_snd_vol2	=	-1	
private int		i_snd_vol3	=	-1	
private int		i_snd_vol4	=	-1	
private float		f_snd_crivol = 5.0

// TAKE OFF
private float		f_take_off_duration

// LANDING
private int		i_flag_landing

// VIRTUAL NET
private int		i_net_pos_index
private int		i_net_my_pos_index
private vector	av_net_pos[100]

// ACTION
private float		f_action_marche_speed

// CRI
private float		f_before_cri_delay

// SHOOT
private int				GFX_Shoot = -1
private float				f_shoot_duration
private int				i_flag_fake_shoot

// SPLINE MOVE
private int				i_cam_cut = 2

private float				f_spline_speed
private float				f_spline_coef
private float				f_spline_segment_length

private vector			v_spline_A
private vector			v_spline_B
private vector			v_spline_C
private vector			v_spline_D

private vector			v_last_pos

private object			o_spline_next_wp

// PAF
private int					i_paf_type
private int					i_paf_flag
private vector				v_paf_dir
private float					f_earth_quake_duration
