#include "PNJ_Volant_defines.var"

Include_UltraProcedure_Header

int				ti_i
int				ti_link_nb
int				ti_inactive_bunny_nb

vector		tv_pos
vector		tv_dest_sight
vector		tv_dest_banking
vector		tv_temp

float			tf_wanted_traction
float			tf_coef
float			tf_speed_coef
float			tf_sign
float			tf_norm
float			tf_start_dist
float			tf_dest_dist

object		to_father

if (i_flag_sortie_etat)
{
	i_flag_sortie_etat = faux
	return
}

if (i_etat_courant != ETAT_StarWars || (OBJ_LodVisGet() <= 0.001 && f_time_start_etat > 0.3))
{
	// INTIALISATION
	i_dernier_etat = i_etat_courant
	i_etat_courant = ETAT_StarWars
	
	if (fct_last_etat)
	{
		i_flag_sortie_etat = vrai
		AI_Execute(fct_last_etat)
	}
	
	fct_last_etat = AI_TrackCurGet()

	OBJ_FlagsControlSet(OBJ_C_ControlFlag_RayInsensitive, none)
	OBJ_FlagsTypeSet(none, OBJ_C_TypeFlag_DodgeCamera)
	
	DYN_Off()
	COL_ColSetActivationSet(none, all)
	COL_ColMapActivationSet(all, none)

	COL_UnCollidableAdd(o_main_actor)

	f_time_start_etat = 0.0

	if (i_dernier_etat == -1 && OBJ_HierarchyGet())
	{
		f_spline_speed = 40.0
	}
	else
	{
		f_spline_speed = 60.0
		
		tf_sign = MATH_FloatSign(MATH_RandFloat(-1.0, 1.0))
	
		tv_dest_sight = @get_camera OBJ_SightGet()
		tv_dest_sight.z = 0.0
		tf_norm = MATH_VecSquareNorm(tv_dest_sight)
		if (tf_norm)
			tv_dest_sight /= MATH_FloatSqrt(tf_norm)
		else
			tv_dest_sight = @o_main_actor OBJ_SightGet()
			
		tv_temp = MATH_VecCrossProduct(tv_dest_sight, Cv_VerticalVector)
		MATH_VecSetNormalize(tv_temp)
		
		tf_start_dist = MATH_RandFloat(50.0, 300.0)
	
		tv_pos = @get_camera OBJ_PosGet()
		tv_pos += MATH_VecRotate(tv_dest_sight, Cv_VerticalVector, tf_sign * Cf_PiBy4) * tf_start_dist
		tv_pos.z = MATH_FloatMax(tv_pos.z, @get_camera OBJ_PosGet().z + 200.0)
		COL_RayObject_Dist(tv_pos, -Cv_VerticalVector, 1000.0, all, OBJ_C_IdentityFlag_Anims, Ci_Filter_IdentityFlag, COL_C_Ray_on_ColMap_NoCrossable)
		tv_pos = COL_RayObject_PosGet()
		tv_pos.z += MATH_FloatBlend(3.0, 50.0, tf_start_dist / 300.0)
		OBJ_PosSet(tv_pos)
	
		v_spline_A = tv_pos
	
		tv_pos = tv_temp
		tv_pos *= - MATH_FloatSign(MATH_VecDotProduct(OBJ_PosGet() - @get_camera OBJ_PosGet(), tv_pos))
		OBJ_SightGeneralSet(tv_pos, Cv_VerticalVector)
	
		v_spline_D = @o_main_actor OBJ_PosGet()
		v_spline_D += @o_main_actor MATH_VecLocalToGlobal(cvector(MATH_FloatSign(MATH_RandFloat(-1.0, 1.0)) * MATH_RandFloat(2.0, 8.0), 10.0, MATH_FloatSign(MATH_RandFloat(-1.0, 1.0)) * MATH_RandFloat(2.0, 5.0)))
	
		f_spline_segment_length = MATH_VecNorm(v_spline_D - v_spline_A)
	
		v_spline_B = v_spline_A
		v_spline_B += OBJ_SightGet() * (f_spline_segment_length * MATH_RandFloat(0.33, 1.0))
	
		v_spline_C = v_spline_D
		v_spline_C += @o_main_actor OBJ_SightGet() * (f_spline_segment_length * 0.33)
	}

	f_spline_coef = 0.0

//	if (i_cam_cut == 1)
//		f_spline_coef = MATH_RandFloat(0.0, f_spline_segment_length)

	o_Rided_Actor = LNK_ServeurGet(Ci_LNK_RIDE_ON_NMI, mid_Rided_LNK_ID, faux, nofunc, nofunc)
}
else
{
	f_time_start_etat += TIME_GetDt()
}

// ANALYSE ===============================================================
AI_Execute("PNJ_Volant_exec_check_paf")
if (i_paf_flag)
	macro_change_etat("PNJ_Volant_ETAT_Basic")

to_father = OBJ_HierarchyGet()
if (i_dernier_etat == -1 && to_father)
{
	v_spline_A	= @to_father OBJ_PosGet()
	v_spline_A += @to_father OBJ_SightGet() * 2.0

	v_spline_D = @o_main_actor OBJ_PosGet()
	
	f_spline_segment_length = MATH_VecNorm(v_spline_D - v_spline_A)

	v_spline_B = v_spline_A
	v_spline_B += MATH_VecBlendRotate(@to_father OBJ_SightGet(), @to_father OBJ_BankingGet(), 0.2) * (f_spline_segment_length * 0.33)

	v_spline_C = v_spline_D
	v_spline_C += @o_main_actor OBJ_SightGet() * (f_spline_segment_length * 0.33)
}
else
{
	if (f_spline_speed >= 60.0)
		f_spline_speed -= MATH_FloatMin(f_spline_speed - 60.0, 20.0 * TIME_GetDt())
	else
		f_spline_speed += MATH_FloatMin(60.0 - f_spline_speed, 20.0 * TIME_GetDt())
}

f_spline_coef += f_spline_speed * TIME_GetDt()
//if (f_spline_coef > 30.0)
//	OBJ_HierarchyReset()

if (f_spline_coef > f_spline_segment_length)
{
	OBJ_HierarchyReset()
	OBJ_PosSet(OBJ_PosGet() + (OBJ_SightGet() * 60.0 * TIME_GetDt()))
	returntrack
}

MATH_LIB_Bezier_Display(30, v_spline_A, v_spline_B, v_spline_C, v_spline_D, color_blanc)
tv_pos = MATH_LIB_Bezier_Pos_Get(f_spline_coef / f_spline_segment_length, v_spline_A, v_spline_B, v_spline_C, v_spline_D, tv_dest_sight)

OBJ_PosSet(tv_pos)
OBJ_SightGeneralSet(tv_dest_sight, Cv_VerticalVector)

PNJ_Volant_Penching()

//if (COL_Pivot_BVCollide(o_start_wp))
//{
//	f_boost_duration = 0.5
//	@o_start_wp OBJ_SightSet(@o_start_wp OBJ_PosGet() - @o_main_actor OBJ_PosGet())
//	o_start_wp = @o_start_wp WAY_NetNextWP(@o_start_wp WAY_NetOfObj(), o_start_wp, NetNextWP_Mode_axe_de_visee, 0)
//}


