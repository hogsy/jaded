#include "PNJ_Shark_defines.var"

#define Cf_BV_Size		3.5

vector	tv_bv_size

object	to_visuel

o_rope_manager = @get_global o_rope_manager
if ( ! o_rope_manager )
	returntrack

OBJ_FlagsControlSet(OBJ_C_ControlFlag_AlwaysVisible, none)

switch (creature_type)
{
	case Ci_CreatureType_Requin :

		COL_SwapToSpecific(C_zdm_pied)
		COL_ZoneSizeSet(C_zdm_pied, cvector(0.7, 0.7, 0.7))
		COL_ZonePosSet(C_zdm_pied, cvector(0.0, 0.0, 0.0))
	
		i_monture_ID = C_ID_Monture_Requin
		f_size_coef = 2.4

		f_rot_friction = 5.0
		f_rot_speed_max = 5.0
		f_rot_boost_friction = 12.0
		f_rot_boost_speed_max = 2.5

		f_rotX_boost_speed = 1.0
				
		f_speed_water_boost = 40.0 // 30.0
		f_speed_water_joy = 12.0
		f_speed_water_alone = 16.0
	
		break
	
	case 	Ci_CreatureType_PoissonLumiere :

		i_monture_ID = C_ID_Monture_PoissonLumiere
		f_size_coef = 2.0

		COL_SwapToSpecific(C_zdm_pied)
		COL_ZoneSizeSet(C_zdm_pied, cvector(0.4, 0.4, 0.4))
		COL_ZonePosSet(C_zdm_pied, cvector(0.0, 0.0, 0.0))

		f_rot_friction = 3.0
		f_rot_speed_max = 4.0
		f_rot_boost_friction = 8.0
		f_rot_boost_speed_max = 4.0

		f_rotX_boost_speed = 0.4

		f_speed_water_boost = 12.0
		f_speed_water_joy = 4.0
		f_speed_water_alone = 8.0

		o_projectile_light	= @get_WP OBJ_Duplicate(OBJ_PosGet())
		if (o_projectile_light)
		{
			@o_projectile_light OBJ_FlagsIdentitySet(OBJ_C_IdentityFlag_Lights,none)	
			@o_projectile_light LIGHT_NearFarSet(5.0,12.0)
			@o_projectile_light LIGHT_ColorSet(0x006A9ABF)
			@o_projectile_light LIGHT_FlagSet(9, vrai)
		}
		OBJ_FlagsIdentitySet(none, OBJ_C_IdentityFlag_Lights)	

		
//		OBJ_FlagsIdentitySet(OBJ_C_IdentityFlag_Lights,none)	
//		LIGHT_NearFarSet(5.0,12.0)
//		LIGHT_ColorSet(0x006A9ABF)
//		LIGHT_FlagSet(9, vrai)

		break
}

o_machoire = ANI_CanalObjectGet(Anim_Canal_Machoire)

OBJ_ZoomSet(f_size_coef)

if (MATH_VecNull(v_virtual_sight))
{
	v_virtual_sight = OBJ_SightGet()
	returntrack
}

tv_bv_size = cvector(Cf_BV_Size, Cf_BV_Size, Cf_BV_Size) * f_size_coef
BV_MinSet(-tv_bv_size)
BV_MaxSet(tv_bv_size)

//f_delay_until_last_ground_col = 1000.0
//f_delay_until_last_wall_col = 1000.0
v_ground_pos = OBJ_PosGet()
v_ground_normal = Cv_VerticalVector

COL_CrossableSet(Gmat_RM_Crossable_Default, none)
PNJ_Shark_Init_Modules()
OBJ_FlagsControlSet(none, OBJ_C_ControlFlag_AlwaysVisible)

v_virtual_sight = OBJ_SightGet()
v_water_pos = cvector(0.0, 0.0, -Cf_Infinit)
v_water_normal = Cv_VerticalVector

HotSpot_Add_Obj(OBJ_Me(), 0)

AI_RunContext(CTX_AfterRec)
//AI_RunContext(CTX_Normal)

OBJ_FlagsControlSet(OBJ_C_ControlFlag_RayInsensitive, none)

AI_CBAdd(OBJ_Me(), CallBack_WhenDestroy, "PNJ_Shark_callback_when_destroy")
AI_CBAdd(OBJ_Me(), CallBack_SectoActOn, "PNJ_Shark_callback_when_SectoOn")
AI_CBAdd(OBJ_Me(), CallBack_After_Blend, "PNJ_Shark_callback_afterblend")
AI_CBAdd(OBJ_Me(), CallBack_Client, "PNJ_Shark_callback_client")

AI_TrackChange(4, "PNJ_Shark_after_ETAT")
AI_TrackChange(Ci_Track_Etat, "PNJ_Shark_ETAT_Basic")
//AI_TrackChange(Ci_Track_Etat, "PNJ_Shark_ETAT_Plane")
AI_TrackCurChangeNow("PNJ_Shark_Reflex")
