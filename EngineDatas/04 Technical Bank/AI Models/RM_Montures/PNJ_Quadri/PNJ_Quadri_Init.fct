#include "PNJ_Quadri_defines.var"

i_trame_nb++
if (i_trame_nb < 3)
	returntrack

o_main_actor = AI_MainActorGet(0)
if ( ! o_main_actor )
	returntrack
	
o_rope_manager = @get_global o_rope_manager
if (! o_rope_manager)
	returntrack

// TOUT LE MONDE PAREIL
//f_X_friction = 3.0
//f_X_slide_friction = 1.0
//f_X_limit_speed = 7.0
//f_Y_friction = 6.0
//f_Y_slide_friction = 2.0
//f_Y_limit_speed = 7.0
//f_rot_friction = 2.0
//f_rot_speed_max = 2.5
//f_analog_speed = 8.0
//f_speed_max = 20.0
//f_acceleration = 12.0
//f_decceleration = 4000.0
//
//f_course_pilotage_coef = MATH_RandFloat(-1.0, 1.0)

//COL_UnCollidableAdd(o_main_actor)

//@o_main_actor OBJ_Destroy()
//AI_MainActorSet(0)

switch (creature_type)
{
	case Ci_CreatureType_Tigre :
		i_monture_ID = C_ID_Monture_Tigre
		break

	case 	Ci_CreatureType_Rhino :
		i_monture_ID = C_ID_Monture_Rhino
		break
}

OBJ_ZoomSet(MATH_RandFloat(0.6, 0.8))

#define Cf_bv_size	10.0

BV_MinSet(cvector(-Cf_bv_size, -Cf_bv_size, -1.0))
BV_MaxSet(cvector(Cf_bv_size, Cf_bv_size, 6.0))

v_col_front_left = cvector(1.0, -2.0, 0.0) * OBJ_ZoomGet()
v_col_front_right = cvector(-1.0, -2.0, 0.0 )* OBJ_ZoomGet()
v_col_back = cvector(0.0, 3.0, 0.0 )* OBJ_ZoomGet()

v_last_sight = OBJ_SightGet()

PNJ_Quadri_Init_Action_Speed_Array()
PNJ_Quadri_Init_IK()

o_montures_manager = @get_global o_montures_manager
if (o_montures_manager)
{
	i_my_index = -1
	@o_montures_manager Montures_Manager_Add_Gao(OBJ_Me(), 4.0 * OBJ_ZoomGet(), i_my_index)
}

f_course_pilotage_coef = MATH_FloatLimit(f_course_pilotage_coef, -1.0, 1.0)
f_dodge_extrusion = 1.5 * OBJ_ZoomGet()

//COMMON_HotSpot_Set(OBJ_Me())
HotSpot_Add_Obj(OBJ_Me(), 0)
i_hotspot = vrai

COL_CrossableSet(Gmat_RM_Crossable_Default, none)
//COL_FilterSet(all, OBJ_C_IdentityFlag_Anims, Ci_Filter_IdentityFlag)

//AI_RunContext(CTX_AfterRec)
AI_RunContext(CTX_Normal)

AI_CBAdd(OBJ_Me(), CallBack_WhenDestroy, "PNJ_Quadri_callback_when_destroy")
AI_CBAdd(OBJ_Me(), CallBack_After_Blend, "PNJ_Quadri_callback_afterblend")
//AI_CBAdd(OBJ_Me(), CallBack_After_Rec, "PNJ_Quadri_callback_afterblend")
AI_CBAdd(OBJ_Me(), CallBack_Client, "PNJ_Quadri_callback_client")

AI_CBAdd(OBJ_Me(), CallBack_SectoActOn, "PNJ_Quadri_callback_SectoActOn")
AI_CBAdd(OBJ_Me(), CallBack_SectoActOff, "PNJ_Quadri_callback_SectoActOff")

AI_TrackChange(Ci_Track_Etat, "PNJ_Quadri_ETAT_Basic")
AI_TrackChange(Ci_Track_Etat + 1, "PNJ_Quadri_exec_after_etat")


AI_TrackCurChangeNow("PNJ_Quadri_Reflex")
