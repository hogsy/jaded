#include "PNJ_Snake_defines.var"

int				ti_i
int				ti_flag_locked

float			tf_norm

vector		tv_pos
vector		tv_impulsion
vector		tv_new_sight
vector		tv_new_banking
vector		tv_temp

object		to_duplicated

if (i_flag_sortie_etat)
{
	i_flag_sortie_etat = faux
	
	i_perfored_module_index = -1

	COL_ColSetActivationSet(C_bit_zdm_pied | C_bit_zde_corps, none)

	return
}

if (i_etat_courant != ETAT_Paf)
{
	// INTIALISATION
	i_dernier_etat = i_etat_courant
	i_etat_courant = ETAT_Paf
	
	if (fct_last_etat)
	{
		i_flag_sortie_etat = vrai
		AI_Execute(fct_last_etat)
	}

	fct_last_etat = "PNJ_Snake_ETAT_Paf"

	f_time_start_etat = 0.0

	SND_RequestPlayOnObjCanal(SND_PAF, Anim_Canal_Bassin)

	switch(creature_type)
	{
		case Ci_CreatureType_Snake :

			DYN_Off()
			OBJ_FlagsIdentitySet(none, OBJ_C_IdentityFlag_Dyna)
			COL_ColSetActivationSet(none, C_zdm_pied)
			OBJ_HierarchyReset()	

			// RAGDOLL ============================
			i_on_ground_modules_nb = 0
			i_in_water_modules_nb = 0
		
			f_delay_until_last_wall_col = 1000.0
		
			f_ragdoll_damping = 1.0
			i_flag_start_ragdoll_damping = faux
		
			for (ti_i = 0; ti_i < i_modules_nb; ti_i++)
			{
				av_bone_col_normal[ti_i] = Cv_NullVector
				af_bone_ground_col_timer[ti_i] = 1000.0
		//		af_modules_water_Z[ti_i] = f_water_Z
			}
			// RAGDOLL ============================
			
			break
	
		case Ci_CreatureType_Spider :
		case Ci_CreatureType_Quadri :
			tf_norm = MATH_VecNorm(v_paf_dir)
			
			if (tf_norm)
				v_paf_dir /= tf_norm
			else
				v_paf_dir = -OBJ_SightGet()
		
			tv_impulsion = v_paf_dir * 10.0
			if (f_delay_until_last_ground_col < 0.1)
				tv_impulsion += v_ground_normal * 5.0
			if (f_delay_until_last_wall_col < 0.1)
				tv_impulsion += v_wall_normal * 5.0

			DYN_FlagsSet(DYN_C_GlobalFriction, none)
			DYN_FrictionVectorSet(cvector(1.0, 1.0, 0.0))
			DYN_SpeedSetVector(tv_impulsion)
			DYN_GravitySet(cvector(0.0, 0.0, -30.0))

			for (ti_i = 0; ti_i < 8; ti_i++)
				f_IK_ground_coef[ti_i] = 0.0
				
			ACT_ActionSet(Action_Attente)	
		
			break		
	}
}
else
{
	f_time_start_etat += TIME_GetDt()
}

//if (IO_KeyPressed(VK_SPACE))
//	ai_modules_locked[7] = faux
//else
//	ai_modules_locked[7] = vrai

// ANALYSE ===============================================================
f_earth_quake_duration -= MATH_FloatMin(f_earth_quake_duration, TIME_GetDt())

o_eagle = LNK_ServeurGet(Ci_LNK_GRAB_EAGLE, mid_eagle_LNK, vrai, "PNJ_Snake_exec_LNK_Eagle", nofunc)
if (o_eagle)
	macro_change_etat("PNJ_Snake_ETAT_Grabbed")

switch(creature_type)
{
	case Ci_CreatureType_Snake :

		if ( f_time_start_etat > 1.0)
		{
			if (i_on_ground_modules_nb >= 10 && (! af_bone_ground_col_timer[0] || (af_modules_archimede[0] < 1.5 && av_modules_speed[0].z > -1.0)))
				macro_change_etat("PNJ_Snake_ETAT_Basic")
			else if (f_time_start_etat > 10.0)
				macro_change_etat("PNJ_Snake_ETAT_Basic")
		}
		
		PNJ_Snake_Rag_Doll(0)

		break
		
	case Ci_CreatureType_Spider :
	case Ci_CreatureType_Quadri :

		if (COL_CollideType(COL_C_Ground))
		{
			f_delay_until_last_ground_col = 0.0
			o_ground_actor = COL_ObjectGet(COL_C_Ground)
			OBJ_HierarchySet(o_ground_actor)	
		
			v_ground_pos = COL_CollidedPointGet(COL_C_Ground)
			v_last_collided_pos = v_ground_pos
		
			v_ground_normal	= COL_ZonePosGet(C_zdm_pied)
			v_ground_normal -= v_ground_pos
			MATH_VecSetNormalize(v_ground_normal)
		
			v_ground_col_normal = COL_NormalGet(COL_C_Ground)
			
			if (v_ground_normal.z > 0.0)
				f_on_ground_dist += DYN_SpeedGet() * TIME_GetDt()
			else
				f_on_ground_dist = 0.0
		}
		else
		{
			f_delay_until_last_ground_col += TIME_GetDt()
		
			if (v_ground_normal.z < 0.0 || f_delay_until_last_ground_col > 0.2)
				f_on_ground_dist = 0.0
			else
				f_on_ground_dist += DYN_SpeedGet() * TIME_GetDt()
		}
		
		if (COL_CollideType(COL_C_Wall))
		{
			f_delay_until_last_wall_col = 0.0
		
			o_wall_actor = COL_ObjectGet(COL_C_Wall)
			OBJ_HierarchySet(o_wall_actor)
		
			v_last_collided_pos = COL_CollidedPointGet(COL_C_Wall)
		
			v_wall_normal	= COL_ZonePosGet(C_zdm_pied)
			v_wall_normal -= v_last_collided_pos
			MATH_VecSetNormalize(v_wall_normal)
		
			v_wall_col_normal = COL_NormalGet(COL_C_Wall)
		}
		else
		{
			f_delay_until_last_wall_col += TIME_GetDt()
		}

		if (f_delay_until_last_ground_col < 0.2 || f_delay_until_last_wall_col < 0.2)
		{
			if ( ! f_delay_until_last_ground_col && ! f_delay_until_last_wall_col )
			{
				if (MATH_VecDotProduct(v_ground_normal, OBJ_SightGet()) < MATH_VecDotProduct(v_wall_normal, OBJ_SightGet()))
		//			v_dest_banking = v_ground_normal
					v_dest_banking = MATH_VecBlendRotate(v_ground_normal, v_wall_normal, 0.25)
				else
		//			v_dest_banking = v_wall_normal
					v_dest_banking = MATH_VecBlendRotate(v_ground_normal, v_wall_normal, 0.75)
			}
			else if ( ! f_delay_until_last_wall_col ) 
				v_dest_banking = v_wall_normal
			else if ( ! f_delay_until_last_ground_col ) 
				v_dest_banking = v_ground_normal
			else
				v_dest_banking = MATH_VecNormalize(OBJ_PosGet() - v_last_collided_pos)
		
			if (f_delay_until_last_ground_col && f_delay_until_last_wall_col && COL_RayObject_Dist(OBJ_PosGet(), -v_dest_banking, f_size_coef, all, none, Ci_Filter_IdentityFlag, COL_C_Ray_on_ColMap_NoCrossable))
			{
				v_dest_banking = COL_RayObject_NormalGet()
		
				if (MATH_AbsFloat(v_dest_banking.z) > Cf_Cos60)
				{
					v_ground_col_normal = v_dest_banking
					f_delay_until_last_ground_col = 0.0
				}
				else
				{
					v_wall_col_normal = v_dest_banking
					f_delay_until_last_wall_col = 0.0
				}
		
				tv_temp = OBJ_PosGet() - COL_RayObject_PosGet()
				tf_norm = MATH_VecSquareNorm(tv_temp)
				if (tf_norm)
					v_dest_banking = tv_temp / MATH_FloatSqrt(tf_norm)
			}
		}
		else
		{
			v_dest_banking = MATH_VecBlendRotate(v_dest_banking, Cv_VerticalVector, MATH_FloatMax(f_delay_until_last_ground_col, 8.0 * TIME_GetDt()))
		}

		tv_new_banking = MATH_VecBlendRotate(OBJ_BankingGet(), v_dest_banking, 4.0 * TIME_GetDt())

		if (DYN_SpeedGet() > 1.0)
			tv_new_sight = MATH_VecBlendRotate(OBJ_SightGet(), MATH_FloatSign(MATH_VecDotProduct(OBJ_SightGet(), DYN_SpeedGetVector())) * DYN_SpeedGetVector(), 6.0 * TIME_GetDt())
		else
			tv_new_sight = OBJ_SightGet()

		OBJ_BankingGeneralSet(tv_new_sight, tv_new_banking)

		if ( ( ! f_earth_quake_duration && f_time_start_etat > 0.2 && DYN_SpeedGet() < 2.5) && (COL_CollideType(COL_C_Ground) || COL_CollideType(COL_C_Wall)) ) 
			macro_change_etat("PNJ_Snake_ETAT_Basic")
		break
}
 
