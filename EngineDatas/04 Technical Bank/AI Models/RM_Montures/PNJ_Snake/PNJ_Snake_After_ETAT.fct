#include "PNJ_Snake_defines.var"

if (o_Rided_Actor)
{
	OBJ_CapaSet(Ci_Capa_Rided, none)
	RM_Bascule_Refresh(2.0, v_last_speed, DYN_SpeedGetVector(), o_bascule)
}
else
{
	RM_Bascule_Refresh(1.0, v_last_speed, DYN_SpeedGetVector(), o_bascule)
}

v_last_speed = DYN_SpeedGetVector()

if (o_Rided_Actor == o_main_actor)
	OBJ_CapaSet(Ci_Capa_Main_Rided, none)

PNJ_Snake_GFX_Trace()
PNJ_Snake_Recompute_BV()
PNJ_Snake_Hide_Modules()

o_last_father= OBJ_HierarchyGet()
if (o_last_father)
{
	v_head_last_pos = @o_last_father MATH_VecGlobalToLocal(OBJ_PosGet() - @o_last_father OBJ_PosGet())
	v_last_collided_pos = @o_last_father MATH_VecGlobalToLocal(v_last_collided_pos - @o_last_father OBJ_PosGet())
	v_dest_banking = @o_last_father MATH_VecGlobalToLocal(v_dest_banking)
	v_ground_col_normal = @o_last_father MATH_VecGlobalToLocal(v_ground_col_normal)
	v_wall_col_normal = @o_last_father MATH_VecGlobalToLocal(v_wall_col_normal)
}
else
	v_head_last_pos = OBJ_PosGet()

switch(creature_type)
{
	case Ci_CreatureType_Snake :
		SPG2_AddSphere(@ao_modules[i_modules_nb >> 1] OBJ_PosGet(), 3.0 * f_size_coef)
		break

	case Ci_CreatureType_Spider :
		SPG2_AddSphere(OBJ_PosGet(), 3.0 * f_size_coef)
		break
}

