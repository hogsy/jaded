#include "PNJ_Snake_defines.var"

#define	halo_extraction	0.75
#define	halo_taille			3.0
#define	halo_color			0x7FCCFF88

vector	tv_pos
float		tf_coef
object	to_bone
object	to_dup


if( ! i_atk_charge_flag )
{
	f_atk_charge_duree -= MATH_FloatMin(f_atk_charge_duree, 10 * TIME_GetDt())
}
else
{
	if( i_GFX_charge == -1 )
	{
		i_GFX_charge = GFX_Add(21)	// Halo
		GFX_FlagSet(i_GFX_charge, 4, 1)
		GFX_MaterialSet(i_GFX_charge, get_SFX_light_and_smoke,0) // affectation du matériau
		GFX_Seti(i_GFX_charge, 21103, 1)			// 0 (défaut) flare mural		1 flare très simple 
		GFX_Seti(i_GFX_charge, 21101, halo_color)     // couleur du halo
	}
}
if( i_GFX_charge != -1 )
{
	// GFX (augmentation ou reduction)
	tf_coef = f_atk_charge_duree / Proc_PNJ_Snake_ChargeAttack_DureeGet()
	GFX_Setf(i_GFX_charge, 21000, halo_taille * tf_coef * OBJ_ZoomGet())  // taille du halo
	GFX_Setf(i_GFX_charge, 21002, halo_extraction * OBJ_ZoomGet())		// extraction par rapport au point de génération (vers la cam)
	to_bone = ANI_CanalObjectGet(Anim_Canal_Tete)
	tv_pos = @to_bone OBJ_PosGet()
	tv_pos += ( 1.0 * OBJ_SightGet() * OBJ_ZoomGet() )
	GFX_Setv(i_GFX_charge, 21200, tv_pos )      // position du halo
	if( tf_coef > 0.99 )
	{
		// SHOOT !!!
		to_dup = @get_Bullet OBJ_Duplicate(tv_pos)
		to_dup.des_float1 = 30.0
		to_dup.des_float2 = 30.0
		to_dup.des_object1 = OBJ_Me()
		@get_RM_Bullet_path to_dup i_GFX_color = halo_color
		@get_RM_Bullet_path to_dup f_GFX_extraction = halo_extraction * OBJ_ZoomGet()
		@get_RM_Bullet_path to_dup f_GFX_taille = halo_taille * tf_coef * OBJ_ZoomGet()
		@get_RM_Bullet_path to_dup i_paf_type = C_PAF_RM_Fort
		to_bone = @o_atk_charge_target ANI_CanalObjectGet(Anim_Canal_Tete)
		if( ! to_bone )
			to_bone = o_atk_charge_target
		@to_dup OBJ_SightGeneralSet(@to_bone OBJ_PosGet() - tv_pos, Cv_VerticalVector)
		f_atk_charge_delai = 2.0		// délai réattaque
		f_atk_charge_duree = 0.0		// del gfx
		SND_RequestPlay(SND_SHOOT)
	}
	if (i_SND_atk_charge_Loop == -1)
		i_SND_atk_charge_Loop = SND_RequestPlayLoop(SND_LOOP_CHARGE_SHOOT)
}

if( ! f_atk_charge_duree )
{
	if( i_GFX_charge != -1 )
	{
		GFX_Del(i_GFX_charge)
		i_GFX_charge = -1
	}
	if (i_SND_atk_charge_Loop != -1)
	{
		SND_Stop(i_SND_atk_charge_Loop)
		i_SND_atk_charge_Loop = -1
	}
}

i_atk_charge_flag = faux
o_atk_charge_target = nobody


