int		ti_sf

vector	tv_sight
vector	tv_pos_A
vector	tv_pos_B
network	net_move
int			ti_net
vector	tv_temp, tv_temp1
float		tf_dot, tf_dot1
int			ti_test_size
object	to_save

// RESEAU HUMAIN UPDATE CAPA 7
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
if(mi_ModeHumain)
{
	if(!@get_global move_network) return
	net_move = @get_global move_network
	move_net_1 = WAY_WPNearestOfOBJ(net_move, -1, 0, 0)
	to_save = WAY_NetNextWP(net_move, move_net_1, NetNextWP_Mode_choix_de_lindice, 0)
	
	for(ti_test_size = 0; ti_test_size < 2; ti_test_size++)
	{
		ti_net = 1
		move_net_2 = to_save
		while(move_net_2)
		{
			tv_temp = @move_net_1 OBJ_PosGet() - OBJ_PosGet()
			tv_temp1 = @move_net_2 OBJ_PosGet() - OBJ_PosGet()
			
			if(ti_test_size == 0)
			{
				tf_dot = MATH_VecDotProduct(tv_temp, OBJ_SightGet())
				tf_dot1 = MATH_VecDotProduct(tv_temp1, OBJ_SightGet())
			}
			else
			{
				tf_dot = MATH_VecDotProduct(tv_temp, OBJ_HorizonGet())
				tf_dot1 = MATH_VecDotProduct(tv_temp1, OBJ_HorizonGet())
			}
			
			if(MATH_FloatSign(tf_dot) == MATH_FloatSign(tf_dot1))
			{
				move_net_2 = WAY_NetNextWP(net_move, move_net_1, NetNextWP_Mode_choix_de_lindice, ti_net)
				ti_net++
			}
			else
			{
				break
			}
		}
	}
}

if(!move_net_2) move_net_1 = nobody
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// Si le SF est a VRAI alors je me detruits l
if (AI_TriggerIsValid(trig_detruction))
{
	if (call_trigger(trig_detruction))
		OBJ_Destroy()		// Le trigger demande la destruction
}

if (! OBJ_CustomBitsTest(OBJ_CBits_6) )
{
	OBJ_CustomBitsSet(OBJ_CBits_6, none)
	DBG_Error("Cet ultra tag vient de passer son custom bit 6 à vrai, sauvez et relancez")
}

// Si j'ai pas defini de trigger ou si le trigger me dit ok je m'execute!
if (!AI_TriggerIsValid(trig_activation) || call_trigger(trig_activation))
{
	if (nb_cases_x > 0)
		nb_cases_x--
	else
		nb_cases_x++

	if (nb_cases_y > 0)
		nb_cases_y--
	else
		nb_cases_y++
	
	tv_sight = OBJ_SightGet()
	if (MATH_AbsFloat(tv_sight.y) > MATH_AbsFloat(tv_sight.x))
	{
		tv_sight.x = 0.0
		tv_sight.y = MATH_FloatSign(tv_sight.y)
		tv_sight.z = 0.0
	}
	else
	{
		tv_sight.x = MATH_FloatSign(tv_sight.x)
		tv_sight.y = 0.0
		tv_sight.z = 0.0
	}
	OBJ_SightSet(tv_sight)
	
	tv_pos_A = GRID_PosGet(OBJ_PosGet())
	
	tv_pos_B = tv_pos_A
	tv_pos_B -= OBJ_HorizonGet() * nb_cases_x
	tv_pos_B += OBJ_SightGet() * nb_cases_y
	
	f_X_min = MATH_FloatMin(tv_pos_A.x, tv_pos_B.x)
	f_X_max = MATH_FloatMax(tv_pos_A.x, tv_pos_B.x)
	f_Y_min = MATH_FloatMin(tv_pos_A.y, tv_pos_B.y)
	f_Y_max = MATH_FloatMax(tv_pos_A.y, tv_pos_B.y)

	AI_CBAdd(OBJ_Me(), CallBack_TagOn, "ut_callback_tagon")
	AI_CBAdd(OBJ_Me(), CallBack_TagOff, "ut_callback_tagoff")
	
	if ( !AI_TriggerIsValid(trig_je_tag) || call_trigger(trig_je_tag))
	{
		COL_ColMapActivationSet( all, none)
		AI_TrackCurChangeNow("ut_tag_ON")
	}
	else
	{
		COL_ColMapActivationSet( none, all)
		AI_TrackCurChangeNow("ut_tag_OFF")
	}
}
