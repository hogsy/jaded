// Define at least one function in a track
// function track0 = "name"
// function track1 = "name"
function track2 = "ode_state_init"
// function track3 = "name"
// function track4 = "name" 

#include "ode_defs.var"

int							i_mode_init = enum("ODE Inactif" 1 "ODE Actif / Immovable" 2 "ODE Actif / Pause" 3 )
int							i_SF_ODEStructCasse = vrai_faux
private int				i_SF_AlreadyCP 

separator "Elements de la structure ODE"
float						f_ode_size = 10.0

object 					ao_ode_elements[32]

private float				af_ode_vitesseL_frame[32]
private float				af_ode_deriveeL_frame[32]
private float				af_ode_vitesseA_frame[32]
private float				af_ode_deriveeA_frame[32]

private float				af_ode_vitesseL_old_frame[32]
private float				af_ode_deriveeL_old_frame[32]
private float				af_ode_vitesseA_old_frame[32]
private float				af_ode_deriveeA_old_frame[32]

private int				ai_ode_elements_etat[32] = enum("Inactive" 1 "Pause" 2 "Active" 3 "Vase" 4 "Détruit" 5)

separator "Force des pafs externes générés par chacun des éléments ODE"
int							ai_ode_elements_paf_force[32] = enum("0 - Pas de Paf" 0 "1 - Petit Paf" 1 "2 - Moyen Paf" 2 "3 - Gros Paf" 3 "4 - Mort Paf" 4 )
private	object		ao_objects_paffed[16]
private 	int				ai_objects_paffed_power[16]

separator "Objects extérieurs non paffables par cette structure"
object					ao_objets_non_paffables[8]

separator "Joints de la structure ODE à désactiver à l'INIT"
object					ao_ode_joints[8]

separator "Détection écroulement pour synchro avec d'autres IA"
private int				i_flag_ecroulement_detecte	= vrai_faux	// ecroulement en cours (pour donner info à d'autres IA)
object					o_element_test_ecroulement
float						f_deplacement_max_autorise
private vector			v_pos_init_element_test_ecroulement

separator "Trigger - Declenchement"
trigger					trig_general
private int				i_trig_general_active = vrai_faux
trigger					trig_paf 
private int				i_trig_paf_active = vrai_faux
trigger					trig_projectile
private int				i_trig_projectile_active = vrai_faux

separator "Trigger Exec après Activation"
trigger					trig_exec
float						f_delai_avant_trig_exec

separator "Gestion PAF"
int							i_genere_impulsion_si_paf = vrai_faux
float						f_force_valeur_impulsion
private object			o_element_paf
private vector			v_dir_paf
private vector			v_pos_paf
private int		    		i_power_paf
private int				i_type_paf

separator "Time To Live"
float						f_time_to_live_after_activation
float						f_ttlaa_additional_random = 0
private float				f_ttlaa_additional_random_cur
private float				f_time_at_activation
int							i_reinit = vrai_faux

separator "Vase"
object					o_vase
object					o_vase2
float						f_force_molesse_vase
float						f_force_vitesse_enfoncement_vase

separator "Désactivation - Test en Z des éléments par rapport à o_z_desactivation"
object					o_z_desactivation
float						f_offset_z_desactivation

separator "Action sur un élément pour forcer l'instabilité de la structure"
int							i_force_action_instabilite = enum( "Pas d'instabilité forcée" 0 "Collision Element_test/Vase" 1 "Flag écroulement positionné" 2)
object					o_element_test
int							i_type_action = enum("Rotate Local X" 0 "Rotate Local Y" 1 "Rotate Local Z" 2 "Rotate Global X" 3 "Rotate Global Y" 4 "Rotate Global Z" 5)
object					o_element_action
float						f_valeur_action
private int				i_action_instabilite_en_cours = vrai_faux


separator "Projectile - cinématique"
object					o_projectile_cine
float						f_vitesse_init_projectile
object					o_projectile_gao_stop
float						f_projectile_distance_max
private vector			v_pos_init_projectile	

separator "Son"
//--AUTORISATION
int							i_son_activation_autorise = vrai_faux
int							i_rumble_autorise = vrai_faux
int							i_choc_autorise = vrai_faux
int							i_whoosh_autorise = vrai_faux

//--RUMBLE
private int				i_instance_snd_rumble
private float				f_percent_rumble

//--SEUILS DE DETECTION DES CHOCS LOCAUX
separator "Son --- Seuils de détection de chocs"
float						f_linear_threshold
float						f_angular_threshold
int							i_max_num_instances_per_second = 5
private int				i_cur_num_instances_per_second
float						f_time_sound

//--WHOOSH
separator "Son --- Whoosh"
object					ao_element_whooshable[8]
private int				ai_instance_snd_whoosh[8]
float						f_linear_whoosh

//--FEU
separator "Feu"
int							ai_ode_elements_reaction_feu[32] = enum("Aucune réation" 0 "Inflammable" 1)					
private object			ao_ode_elements_en_feu[32]
private int				ai_gfx_feu_id[32]
private float				af_gfx_feu_param1[32]
private float				af_en_feu_depuis[32]

//JIMI_NOTE: delayed general trigger (for walls to fall BEHIND Kong)
separator "Delay"
	int							mi_UseDelay								= vrai_faux	// put to true to allow for mf_BreakDelay delay between the general trigger and actual destruction
	float						mf_BreakDelay							= 1.0			// number of seconds after General Trigger is triggered that the paf should be registered
	private int				mi_DelayWasTriggered 				= faux
	
separator "Swing"
	object					mo_Swing													// swing object associated with the ODE (if none, the structure behaves as normal)
	private int				mi_SwingState 							= C_KongNeverSwung