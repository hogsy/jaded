int				i, j, k, num
vector		dir_paf
int				skip
object		tao_zdecol_objects[16]
float			tf_paf_force

i = 0
// TOUS LES ELEMENTS DE LA STRUCTURE SONT SUSCEPTIBLES D'ENVOYER DES PAFs. ON LES PARSE TOUS ...
while(ao_ode_elements[i])
{
	// Si la vleur du PAF est à 0, pas de PAF lancé par cet élément.
	if(ai_ode_elements_paf_force[i] == 0)
	{
		i ++
		continue
	}
	
	// Je récupère tous les acteurs ayant une ZDE Corps en collision avec le zone ODE de l'ément courant ...
	num = @ao_ode_elements[i] COL_ZDE_ZDEListGet(&tao_zdecol_objects[0], 50, C_zde_corps, OBJ_C_IdentityFlag_ZDE , 0, 0)

#ifndef FINAL		
	if(num > 15)
			DBG_BreakPoint()
#endif

	// Je parse tous les acteurs trouvés ...
	for( j = 0; j < num; j++ )		
	{			
		// Object ne pouvant pas être paf par cette structure ??			
		k = 0			
		skip= 0			
		while(ao_objets_non_paffables[k])
		{
			if(ao_objets_non_paffables[k] == tao_zdecol_objects[j])
			{
				skip= 1
				break
			}
			k ++
		}
					
		if(skip)
			continue
			
		// Object déjà paffé par le même niveau (ou moins) de paf par cette structure ??
		k = 0			
		while(ao_objects_paffed[k])
		{
			if(ao_objects_paffed[k] == tao_zdecol_objects[j])
			{				
				if(ai_objects_paffed_power[k] >= ai_ode_elements_paf_force[i])
				{
					// Object déjà paf avec un niveau de paf au mieux équivalent, je laisse tomber ...
					skip= 1
					break
				}
				else
				{
					// Object déjà paf mais ce nouveau paf est plus puissant, je vais donc l'envoyer quand même ...
					ai_objects_paffed_power[k] = ai_ode_elements_paf_force[i]						
					break					
				}
			}
			k ++
		}
		
		if(skip)
			continue
			
		// Nouveau object paf, je le rajoute dans la liste des objects paf et on rensigne la puissance du paf aussi ...
		if(!ao_objects_paffed[k])
		{
#ifndef FINAL		
		if(k > 7)
			DBG_BreakPoint()
#endif		
			ao_objects_paffed[k] = tao_zdecol_objects[j]
			ai_objects_paffed_power[k] = ai_ode_elements_paf_force[i]	
		}
		
		dir_paf = @tao_zdecol_objects[j] OBJ_PosGet() - (@ao_ode_elements[i] ODE_Getv(1) + @ao_ode_elements[i] OBJ_PosGet())												
		tf_paf_force = ai_ode_elements_paf_force[i]
		// J'envoie le PAF DA SPACE
		EVENT_AddEventPaf
		(
			 C_EVENT_FILTER_All, 
			 C_PAF_RM_Moyen, 
			 ao_ode_elements[i], 
			 Cf_EVENT_Duree_1Trame, 
			 tao_zdecol_objects[j], 
			 tf_paf_force, 
			 dir_paf
		)								
	}

	i ++
}
