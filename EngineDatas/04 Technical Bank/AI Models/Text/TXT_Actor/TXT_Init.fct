//-----------------------------------------------------------------------------------------------------------------------------------------
// INCLUDES
//-----------------------------------------------------------------------------------------------------------------------------------------
#include "TXT_Constant.var"


//-----------------------------------------------------------------------------------------------------------------------------------------
// LOCAL VARIABLES
//-----------------------------------------------------------------------------------------------------------------------------------------
int ti_idx, ti_sound 
float tf_time, tf_time2
string	ts_text


//-----------------------------------------------------------------------------------------------------------------------------------------
// CODE
//-----------------------------------------------------------------------------------------------------------------------------------------


// -------- Si déjà executé alors je me detruit a l'init de la map ------------- (By FRED)
if (i_SF_NePlusSeRejouer)
{
	int		ti_SF_AlreadyDead

	i_SF_AlreadyCP = AI_SFDynGet(0, SF_MinById, SF_MaxById)		// Alloc

	Super_SpecialFlag_get(i_SF_AlreadyCP, ti_SF_AlreadyDead)		// Test SF
	if (ti_SF_AlreadyDead)																// Si SF = 1 alors DESTROY
	{
		OBJ_CapaSet(OBJ_Capa_15,none)
		OBJ_Destroy()
	}
}



//
// init private variables (usefull for rearm action)
//
i_text_nb = 0
i_current_index = -1
f_time = 0.0


//
// count the present text and initialize the played text array
//
for(ti_idx = 0; ti_idx<TXT_Cte_ReferenceSize; ti_idx++)
{
	if( TEXT_IsEmpty(at_Text[ti_idx]) )
	{
		ai_played_text[ti_idx] = 1
	}
	else
	{
		ai_played_text[ti_idx] = 0
		i_text_nb++
		
		// add sound duration 
		if( (ti_idx+1) < TXT_Cte_ReferenceSize )
		{
			ti_sound = TEXT_ToSound( at_Text[ti_idx] )
			ts_text = TEXT_ToString( at_Text[ti_idx] )
			
			tf_time2 = 0.1 * TEXT_Length(ts_text)
			tf_time = tf_time2
			
			if( ti_sound != -1 )
			{
				tf_time = SND_SoundDurationGet(ti_sound)
				if(tf_time < tf_time2) tf_time = tf_time2				
			}
			
			if(tf_time < 0.4) tf_time = 0.4
			
			af_RequestTimeOut[ti_idx+1] += af_RequestTimeOut[ti_idx] + tf_time + 0.2
		}
	}
}

if((i_text_nb == 1) && (i_Mode == 1) )
{
	i_Mode = 2
}

//
// desactivate the object if unused
//
if( AI_TriggerIsValid(t_Activation0) || AI_TriggerIsValid(t_Activation1) )
{
	AI_TrackChange(0, "TXT_UpdateTriggerState")
	AI_TrackChange(1, "TXT_ActiveLoop")
}
else
{
	DBG_Error("you must assign at least 1 valid trigger")
	OBJ_FlagInactiveSet(1)
}
