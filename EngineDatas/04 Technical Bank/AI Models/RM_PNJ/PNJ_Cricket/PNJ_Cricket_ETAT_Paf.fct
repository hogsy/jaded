#include "PNJ_Cricket_defines.var"

float		tf_dt
float		tf_sin
float		tf_dist

vector	tv_pos
vector	tv_pseuso_speed

if (i_flag_sortie_etat)
{
	i_flag_sortie_etat = faux
	return
}

if (i_etat_courant != ETAT_Paf)
{
	// INTIALISATION
	i_dernier_etat = i_etat_courant
	i_etat_courant = ETAT_Paf
	
	if (fct_last_etat)
	{
		i_flag_sortie_etat = vrai
		AI_Execute(fct_last_etat)
	}

	fct_last_etat = AI_TrackCurGet()
	
	f_time_start_etat = 0.0
}
else
{
	f_time_start_etat += TIME_GetDt()
}

//DYN_LIB_Position_After_N_Seconds(vector tv_init_pos, byref vector tv_init_speed, vector tv_friction, vector tv_gravity, float tf_time, float tf_exp)
//tv_pos = DYN_LIB_Position_After_N_Seconds(OBJ_PosGet(), v_speed, cvector(1.0, 1.0, 0.0), Cv_NormalGravity, TIME_GetDt(), 0.0) 
v_speed.z -= 20.0 * TIME_GetDt()

tv_pos = OBJ_PosGet()
tv_pos += v_speed * TIME_GetDt()
OBJ_PosSet(tv_pos)

i_flag_ground_col = faux

if (f_time_start_etat)
	 PNJ_Cricket_Keep_In_BV()

if (i_flag_ground_col)
	macro_change_etat("PNJ_Cricket_ETAT_Sol")

OBJ_SightSet(MATH_VecBlend(OBJ_SightGet(), OBJ_PosGet()  - v_last_pos, 0.5))
v_last_pos = OBJ_PosGet()

PNJ_Cricket_Update_Modules_Pos()