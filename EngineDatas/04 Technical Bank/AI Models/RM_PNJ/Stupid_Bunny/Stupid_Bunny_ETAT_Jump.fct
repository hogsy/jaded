#include "Stupid_Bunny_defines.var"

Include_UltraProcedure_Header

vector	tv_dest_sight

if (i_flag_sortie_etat)
{
	i_flag_sortie_etat = faux
	return
}

if (i_etat_courant != ETAT_Jump)
{
	// INTIALISATION
	i_dernier_etat = i_etat_courant
	i_etat_courant = ETAT_Jump
	
	if (fct_last_etat)
	{
		i_flag_sortie_etat = vrai
		AI_Execute(fct_last_etat)
	}
	
	fct_last_etat = AI_TrackCurGet()
	
	COL_SwapToSpecific(C_zdm_pied)
	COL_ZoneSizeSet(C_zdm_pied, cvector(Cf_zdm_size, Cf_zdm_size, Cf_zdm_size))
	COL_ZonePosSet(C_zdm_pied, cvector(0.0, 0.0, COL_ZoneSizeGet(C_zdm_pied)))

	DYN_On()
	DYN_FlagsSet(DYN_C_BasicForces | DYN_C_VectorFriction | DYN_C_GlobalFriction | DYN_C_NeverDynamicFather | DYN_C_NeverDynamicHierarchy | DYN_C_HorizontalGrounds | DYN_C_SlipOnGroundEdge, none)
	DYN_FrictionVectorSet(cvector(12.0, 12.0, 0.0))
	DYN_GravitySet(cvector(0.0, 0.0, -40.0))
	
	ACT_ActionSet(0)
	SND_RequestPlay(5)

	i_flag_jump_phase = faux
	DYN_SpeedSetVector(cvector(0.0, 0.0, 10.0))

	f_time_start_etat = 0.0
}
else
{
	f_time_start_etat += TIME_GetDt()
}

// ANALYSE ===============================================================

DYN_StreamSet(Cv_NullVector)
DYN_TractionSet(Cv_NullVector)
DYN_FlagsSet(DYN_C_IgnoreStream, none)

if (f_time_start_etat && COL_CollideType(COL_C_Ground))
	macro_change_etat("Stupid_Bunny_ETAT_Basic")
	
tv_dest_sight = @o_main_actor OBJ_PosGet()
tv_dest_sight -= OBJ_PosGet()

tv_dest_sight = MATH_VecBlendRotate(OBJ_SightGet(), tv_dest_sight, 6.0 * TIME_GetDt())
OBJ_BankingGeneralSet(tv_dest_sight, Cv_VerticalVector)