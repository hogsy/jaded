// Define at least one function in a track
function track0 = "PNJ_Bunny_Saucer_Init"
// function track1 = "name"
// function track2 = "name"
// function track3 = "name"
// function track4 = "name"

separator "Init Mode"
int 					mode = enum("Agressif" 0 "Fuite" 1 "Ride" 2 "Transport de Troupes" 3 "In the Sky" 4 "Buggy" 5)
trigger				trigger_agressif

separator "Dynamique Point"
float					f_X_friction = 8.0
float					f_Y_friction = 12.0

separator "Moteur"
float					f_analog_speed = 30.0
float					f_speed_max = 60.0

float					f_acceleration = 50.0
float					f_decceleration = 50.0

separator "Fuite"
float					f_min_speed = 30.0
 float					f_max_speed = 150.0
float					f_fuite_duree = 60.0
private float			f_fuite_duree_2

separator "Ronde"
float					balade_speed = 10.0

separator "Reseau"
object				o_start_wp
int						RENDER_TRAJECTORY = vrai_faux

separator "Grapin"
int						grappinable = vrai_faux

separator "Bunny"
text					t_text
trigger				trigger_largage
object				o_bunny_model
object				o_bascule
object				o_porte_G
object				o_porte_D
object				o_zone_largage

separator "In the sky"
int						In_The_Sky_Nb = 30

separator "Spawn Soucoupe"
trigger				trigger_soucoupe
object				o_soucoupe

separator "Lums"
int						Total_Lum_Nb = 4

separator "Projectiles"
object				o_projectiles[5]
float					f_projectiles_delay[5]
private int			i_proj_allowed[5]
int						i_proj_rafale_size = 3
int						i_proj_rafale_miss
float					f_proj_rafale_delay = 0.2
private float			f_proj_delay
private int			i_has_projectile = 0
private object		o_projectile_current
private object		o_proj_last_wp
private object		o_proj_prev_wp
private int			i_proj_rafale_nb
private int			i_proj_rafale_type

// ETAT
private int			i_etat_courant		= -1
private int			i_dernier_etat		= -1
private int			i_flag_sortie_etat

private int			i_etat_phase

private float			f_time_start_etat
private float			f_etat_phase_duration

private function	fct_main_etat
private function	fct_last_etat

// MAIN ACTOR
private object		o_main_actor

// JOY
private float			f_embardee_duration
private float			f_embardee_before_duration
private float			f_embardee_offset

// COLLISION
private int			i_col_gmat_id

private float			f_delay_since_last_ground_col
private float			f_ground_col_duration = Cf_Infinit

private float			f_delay_since_last_wall_col

private vector		v_col_ground_pos
private vector		v_col_ground_normal = Cv_VerticalVector

private vector		v_col_wall_normal

private vector			v_before_wall_col_speed
private float				f_wall_walk_coef

// PENCHING TM
private vector			v_last_real_banking
private vector			v_last_pos
private vector			v_last_speed
private float				f_speed_angle

// RIDED
private 	int				i_monture_ID

private int				rabbit_allowed
private object			o_Rided_Actor
private object			o_last_Rided_Actor
private messageid	mid_Rided_LNK_ID

// DYN
private int				i_flag_Y_slide

private float				f_real_speed
private float				f_wanted_speed
private float				f_wanted_traction

private float				f_boost_duration
private float				f_delay_since_last_boost

// ROPE MANAGER
private object		o_rope_manager

// TRAME
private int			i_trame_nb

// WATER
private int			i_flag_water_col

private float			f_in_water_depth

private vector		v_water_pos
private vector		v_water_normal

// GRABED
private object				o_snap_bone
private object				o_eagle
private messageid		mid_eagle_LNK

// PENDULE
private vector				v_grav_pos
private vector				v_grav_speed

// SNAP IK
private float				f_grab_side_sign

private int				i_hotspot

// GFX SMOKE
private int				GFX_Smoke = -1
private vector			v_GFX_Last_Pos

// GFX HALO TRAPPE
private int				GFX_Halo = -1
//private vector			v_Halo_Dir

// TAUNT DURATION
private float				f_taunt_duration
private float				f_main_low_speed_duration

// SPLINE RIDE
private vector			v_spline_start_pos
private vector			v_spline_dest_pos
private vector			v_spline_start_axis
private vector			v_spline_dest_axis
private float				f_spline_segment_length
private float				f_spline_coef
private object			o_spline_next_wp

// PAF
private int				i_flag_paf_check_done
private int				i_flag_paf

// BURN SFX
private int				GFX_Fire = -1
private int				GFX_Fire_Smoke = -1
private vector			v_GFX_Fire_Smoke_Last_Pos

private float				f_burn_duration = 20.0

// BACKUP SIGHT & BANKING
private vector			v_real_banking
private vector			v_real_sight

// SOUND
private int				i_SND_Move_Loop1 = -1
private int				i_SND_Move_Loop2 = -1

// SHOOT
private int				GFX_Shoot = -1
private float				f_shoot_duration

// HIER
private float				f_main_on_me_duration

// BUNNIES
private object			ao_spawn_bunnies[5]

// CAM AXIS
private vector		v_cam_horizon
private vector		v_cam_sight

// PORTE
private float			f_door_coef

// CUT CAM
private int			i_cam_cut = 2

// SF
private int			SF_Lum[10]

// WHEEL
private object		ao_wheel[4]