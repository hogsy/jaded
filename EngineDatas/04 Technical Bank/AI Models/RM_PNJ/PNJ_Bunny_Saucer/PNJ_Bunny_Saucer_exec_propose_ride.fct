#include "PNJ_Bunny_Saucer_defines.var"

messageid		tmid_proposition

object	to_serveur

float		tf_dist
float		tf_dist_test
float		tf_x
float		tf_y
float		tf_ym
float		tf_z
float		tf_zm 
float		tf_zoom 
		
vector	tv_temp
vector	tv_sens
vector	tv_serveur_pos
vector	tv_ma_pos
vector	tv_sight
vector	tv_banking
vector	tv_min 
vector	tv_max

tmid_proposition = pop

// Pour être ridé je dois être proche
to_serveur = MSG_GlobalGetGao(tmid_proposition, SERVEUR)
tv_serveur_pos = @to_serveur OBJ_PosGet()


// TEST SI RM DS VOLUME
switch(i_etat_courant)
{
	case ETAT_Balade :
	case ETAT_Interception :
	case ETAT_Largage :
	case ETAT_Crash :
		if (to_serveur == o_main_actor)
		{
			LNK_ServeurRefuse(tmid_proposition)
			return
		}
		break
}

if ( ! rabbit_allowed && to_serveur != o_main_actor)
{
	LNK_ServeurRefuse(tmid_proposition)
}
else if ( PROC_Valid_Ride( i_monture_ID, @to_serveur OBJ_PosGet(), to_serveur))
{
	tf_dist = MATH_VecDistance( tv_serveur_pos, OBJ_PosGet())
	tf_dist = MATH_FloatMin(tf_dist, 999)
	LNK_ClientPropose(tmid_proposition, tf_dist)
	LNK_GrabObjectIdSet(tmid_proposition, i_monture_ID)			
}
else
{
	LNK_ServeurRefuse(tmid_proposition)
}

