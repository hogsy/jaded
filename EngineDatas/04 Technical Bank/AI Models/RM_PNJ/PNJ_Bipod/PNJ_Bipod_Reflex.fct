#include "PNJ_Bipod_defines.var"

Include_UltraProcedure_Header

int			ti_i

float		tf_dist

object	to_main_father
object	to_monture

//DBG_RenderVector(@col_molet_D OBJ_PosGet(), @col_pied_D OBJ_PosGet() - @col_molet_D OBJ_PosGet(), color_jaune)
//DBG_RenderVector(@col_molet_D OBJ_PosGet(), @col_molet_D OBJ_BankingGet() * MATH_VecDotProduct(@col_pied_D OBJ_PosGet() - @col_molet_D OBJ_PosGet(), @col_molet_D OBJ_BankingGet()), color_blanc)
//
//DBG_RenderVector(@col_cuisse_D OBJ_PosGet(), @col_molet_D OBJ_PosGet() - @col_cuisse_D OBJ_PosGet(), color_jaune)
//DBG_RenderVector(@col_cuisse_D OBJ_PosGet(), @col_cuisse_D OBJ_BankingGet() * MATH_VecDotProduct(@col_molet_D OBJ_PosGet() - @col_cuisse_D OBJ_PosGet(), @col_cuisse_D OBJ_BankingGet()), color_blanc)

PNJ_Bipod_Pilot_Snake()

o_main_actor = AI_MainActorGet(0)

v_me_to_main = @o_main_actor OBJ_PosGet()
v_me_to_main -= OBJ_PosGet()
v_me_to_main.z = 0.0
f_me_to_main = MATH_VecNorm(v_me_to_main)
if (f_me_to_main)
	v_me_to_main /= f_me_to_main
else
	v_me_to_main = OBJ_SightGet()

to_monture = @o_main_actor PROC_RM_MontureGet()
if (to_monture)
	to_main_father = @to_monture OBJ_HierarchyGet()
else
	to_main_father = @o_main_actor OBJ_HierarchyGet()

f_main_hier_duration -= MATH_FloatMin(f_main_hier_duration, TIME_GetDt())

for (ti_i = 0; ti_i < i_col_modules_nb; ti_i++)
{
	if (to_main_father == ao_col_module[ti_i])
	{
		f_main_hier_duration = 2.0
		break
	}
}

if (f_main_hier_duration)
{
	i_flag_main_on_me = vrai

	if ( to_main_father )
		o_last_main_father = to_main_father
//	else
//		@o_main_actor OBJ_HierarchySet(o_last_main_father)
}
else
	i_flag_main_on_me = faux

OBJ_CapaSet(none, all)

switch(i_etat_courant)
{
	case ETAT_Titube :
	case ETAT_Tombe :
	case ETAT_Explose :
	case ETAT_Saute :
	case ETAT_Wii_Move :
	case ETAT_Wii_Rumble :
		break

	default:
	
		if (o_Town)
		{
			tf_dist = @o_Town OBJ_SqrDist(o_main_actor)
			
			if (  ! o_hostile_BV )
			{
				DBG_RenderCircle(@o_Town OBJ_PosGet(), dist_detection, Cv_VerticalVector, color_vert)
				if (tf_dist < dist_detection * dist_detection)
					OBJ_CapaSet(OBJ_Capa_1, none)
			}
		
			if ( AI_TriggerIsValid(trigger_attaque) )
			{
				if (call_trigger(trigger_attaque))
					OBJ_CapaSet(OBJ_Capa_0, none)
			}
			else
			{
				DBG_RenderCircle(@o_Town OBJ_PosGet(), dist_attaque, Cv_VerticalVector, color_rouge)
		
				if (tf_dist < dist_attaque * dist_attaque)
					OBJ_CapaSet(OBJ_Capa_0, none)
			}
		
		}
		else
		{
			if ( ! o_hostile_BV && f_me_to_main < dist_detection )
				OBJ_CapaSet(OBJ_Capa_1, none)
			
			if ( ! AI_TriggerIsValid(trigger_attaque) && f_me_to_main < dist_attaque )
				OBJ_CapaSet(OBJ_Capa_0, none)
		}
		
		//if (IO_KeyPressed(VK_CONTROL))
		//	OBJ_CapaSet(OBJ_Capa_1, none)
		
		if (o_hostile_BV && @o_main_actor COL_Pivot_BVCollide(o_hostile_BV))
			OBJ_CapaSet(OBJ_Capa_1, none)
		
		if (f_me_to_main < dist_capa2)
			OBJ_CapaSet(OBJ_Capa_2, none)
			
		if (i_flag_main_on_me)
			OBJ_CapaSet(OBJ_Capa_3, none)
			
		break
}

f_lastmovetimer_right -= MATH_FloatMin(f_lastmovetimer_right,TIME_GetDt())
f_lastmovetimer_left -= MATH_FloatMin(f_lastmovetimer_left,TIME_GetDt())

//if (IO_KeyPressed(VK_SPACE))
//	OBJ_CapaSet(OBJ_Capa_0, none)

PNJ_Bipod_Sound_Wind()