#include "PNJ_Bipod_defines.var"

int			ti_i
int			ti_flag_force_stop

float		tf_last_angle
float		tf_coef
float		tf_target_speed
float		tf_limit_dt
float		tf_dist
float		tf_acceleration

vector	tv_start_quat
vector	tv_dest_quat

vector	tv_pos
vector	tv_dest_sight
vector	tv_new_sight
vector	tv_new_banking

object	to_main_father
object	to_monture

if (i_flag_sortie_etat)
{
	i_flag_sortie_etat = faux
	return
}

if (i_etat_courant != ETAT_Basic)
{
	// INTIALISATION
	i_dernier_etat = i_etat_courant
	i_etat_courant = ETAT_Basic
	
	if (fct_last_etat)
	{
		i_flag_sortie_etat = vrai
		AI_Execute(fct_last_etat)
	}
	else
	{
		f_walk_angle = MATH_RandFloat(0.1, Cf_Pi)
		f_bassin_blend_coef = 1.0
	}
	
	fct_last_etat = AI_TrackCurGet()

	f_time_start_etat = 0.0
}
else
{
	f_time_start_etat += TIME_GetDt()
}

if (AI_TriggerIsValid(trigger_death))
{
	if (call_trigger(trigger_death))
		macro_change_etat("PNJ_Bipod_ETAT_Titube")
}
//else if (IO_KeyJustPressed(VK_SPACE))
//{
//	macro_change_etat("PNJ_Bipod_ETAT_Titube")
//}

if (AI_TriggerIsValid(trigger_saute))
{
	if (call_trigger(trigger_saute))
		i_flag_jump = vrai
}
//else if (IO_KeyJustPressed(VK_CONTROL))
//{
//	i_flag_jump = vrai
//}
	
if (i_flag_jump && i_lock_feet)
	macro_change_etat("PNJ_Bipod_ETAT_Saute")
	
f_dt += TIME_GetDt()

tf_coef = OBJ_LodVisGet() 

ti_flag_force_stop = faux

if (tf_coef <= 0.001)
	tf_limit_dt = 0.2
else if (f_me_to_main > 800.0)
	ti_flag_force_stop = vrai

tf_limit_dt = TIME_GetDt()
if (f_dt < tf_limit_dt)
	returntrack

if (o_start_wp && OBJ_SqrDistHorz(o_start_wp) < 400.0)
{
	if (o_last_wp) // && o_last_wp != o_start_wp)
	{
		@o_start_wp OBJ_SightSet(@o_start_wp OBJ_PosGet() - @o_last_wp OBJ_PosGet())

		o_last_wp = o_start_wp
		o_start_wp = @o_start_wp WAY_NetNextWP(@o_start_wp WAY_NetOfObj(), o_start_wp, NetNextWP_Mode_axe_de_visee, 0)
	}
	else
	{
		o_last_wp = o_start_wp
		o_start_wp = WAY_NetNextWP(@o_start_wp WAY_NetOfObj(), o_start_wp, NetNextWP_Mode_axe_de_visee, 0)
	}
}

// VITESSE
if (i_flag_main_on_me)
{
	if (i_flag_ik_shoot)
	{
		i_flag_ik_shoot = faux
		f_walk_force_angle = 0.0
	}
	
	tf_acceleration	 = 10.0

	if (o_last_main_father == col_tete)
		tf_target_speed = 0.0
	else if (o_grille && o_last_main_father == o_grille)
		tf_target_speed = 0.0
	else if (o_grille_barreau && o_last_main_father == o_grille_barreau)
		tf_target_speed = 0.0
	else
		tf_target_speed = 5.0
}
else
{
	tf_acceleration	 = 20.0

	if (OBJ_CapaTest(OBJ_Capa_1))
	{
		// ON SE MET EN POSITION DE TIR	
	
		tf_acceleration	 = 200.0	
	
		if (f_me_to_main > 100.0 && MATH_VecDotProduct(v_IK_constraint_sight, v_me_to_main) < Cf_Cos20)
		{
			i_flag_ik_shoot = faux
			f_walk_force_angle = -1.0

			tf_target_speed = 60.0
		}
		else
		{
			if ( i_lock_feet && ! i_flag_ik_shoot )
			{
				i_flag_ik_shoot = vrai
				f_walk_force_angle = 0.0

				if (MATH_VecDotProduct(v_IK_dest_pos[0] - OBJ_PosGet(), v_me_to_main) < MATH_VecDotProduct(v_IK_dest_pos[1] - OBJ_PosGet(), v_me_to_main))
					f_foot_side_sign = 1.0
				else
					f_foot_side_sign = -1.0
			}
			
			tf_target_speed = 0.0
		}
	}
	else
	{
		// ON N'EST PAS NE POSITION DE TIR	
	
		if (i_flag_ik_shoot)
		{
			i_flag_ik_shoot = faux
			f_walk_force_angle = 0.0
		}
	
		if (i_flag_jump)
		{
			tf_acceleration	 = 200.0		
			tf_target_speed = 0.0
		}
		else if (i_flag_spider_on_me)
		{
			tf_target_speed = 0.0
		}
		else if (ti_flag_force_stop)
		{
			tf_target_speed = 0.0
		}
		else
		{
			if (f_me_to_main < 150.0)
			{
				tf_target_speed = 0.0
			}
			else
			{
				tf_coef = f_me_to_main - 150.0
				tf_coef /= 150.0
				tf_coef = MATH_FloatLimit(tf_coef, 0.0, 1.0)
				
				tf_target_speed = MATH_FloatBlend(5.0, 10.0, tf_coef)
			}
		}
	}
}

if ( ! f_time_start_etat && i_dernier_etat == -1)
	f_speed = tf_target_speed
else if (f_speed <= tf_target_speed)
	f_speed += MATH_FloatMin(tf_target_speed - f_speed, tf_acceleration * f_dt)
else
	f_speed -= MATH_FloatMin(f_speed - tf_target_speed, tf_acceleration * f_dt)

tv_pos = OBJ_PosGet()

if (f_speed >= 5.0 || f_walk_force_angle != -1.0)
{
	i_lock_feet = faux
	i_flag_can_stop_ik = faux

	if (i_SND_Motor_Loop == -1)
		i_SND_Motor_Loop = SND_RequestPlayLoopOnObjCanal(Ci_SND_Motor_Loop, Anim_Canal_Tete)

	// OSCILLATION PIED GAUCHE / DROIT
	if ( f_bassin_shake )
	{
		if (i_SND_Move_Loop != -1)
		{
			SND_Stop(i_SND_Move_Loop)
			i_SND_Move_Loop = -1
		}
	}
	else
	{
		tf_last_angle = f_walk_angle
		if (f_walk_force_angle != -1.0)
		{
			f_walk_angle += Cf_Pi * f_dt

			f_walk_force_angle += Cf_Pi * f_dt
			if (f_walk_force_angle >= Cf_Pi)
				f_walk_force_angle = -1.0
		}
		else
		{
			f_walk_angle += f_speed * 0.05 * f_dt
		}

		if (tf_last_angle < Cf_PiBy2 && f_walk_angle >= Cf_PiBy2)
		{
			f_walk_angle = Cf_PiBy2
			i_lock_feet = vrai
		}
		else if (tf_last_angle < Cf_Pi && f_walk_angle >= Cf_Pi)
		{
			f_walk_angle = 0.0
			i_lock_feet = vrai
		}

		// DEPLACEMENT
		if (OBJ_CapaTest(OBJ_Capa_1))
		{
//			v_IK_move_dir = MATH_VecBlendRotate(v_IK_move_dir, v_me_to_main, 10.0 * f_dt)
			tv_new_sight = MATH_VecBlendRotate(OBJ_SightGet(), f_foot_side_sign * -OBJ_HorizonGet(), 0.4)
			v_IK_move_dir = MATH_VecBlendRotate(v_IK_move_dir, tv_new_sight, 10.0 * f_dt)
			
			tv_new_sight = MATH_VecInCone(v_me_to_main, OBJ_SightGet(), Cf_PiBy6, 0)
			v_IK_feet_sight = MATH_VecBlendRotate(v_IK_feet_sight, OBJ_SightGet(), 4.0 * f_dt)
		}
		else
		{
			tv_dest_sight = @o_start_wp OBJ_PosGet()
			tv_dest_sight -= OBJ_PosGet()
			tv_dest_sight.z = 0.0
			MATH_VecSetNormalize(tv_dest_sight)
		
			v_IK_move_dir = MATH_VecBlendRotate(v_IK_move_dir, tv_dest_sight, 2.0 * f_dt)
			tv_pos += v_IK_move_dir * f_speed * f_dt
	
			// AXE POUR LES PIEDS (ANTICIPATION)
			tv_new_sight = MATH_VecInCone(tv_dest_sight, OBJ_SightGet(), Cf_PiBy6, 0)
			v_IK_feet_sight = MATH_VecBlendRotate(v_IK_feet_sight, tv_new_sight, 4.0 * f_dt)
		}
	}

	// VISEE
	if (OBJ_CapaTest(OBJ_Capa_1) || ! o_Town )
		tv_new_sight = MATH_VecInCone(v_me_to_main, v_IK_constraint_sight, Cf_PiBy4, 0)
	else
		tv_new_sight = MATH_VecInCone(MATH_VecNormalize(OBJ_PosGet() - @o_Town OBJ_PosGet()), v_IK_constraint_sight, Cf_PiBy4, 0)

	tv_new_sight = MATH_VecBlendRotate(OBJ_SightGet(), tv_new_sight, 2.0 * f_dt)
	OBJ_BankingGeneralSet(tv_new_sight, OBJ_BankingGet())
}
else
{
	if ( i_lock_feet )
	{
		if ( ! f_bassin_shake )
			i_flag_can_stop_ik = vrai

		if (i_SND_Motor_Loop != -1)
		{
			SND_Stop(i_SND_Motor_Loop)
			i_SND_Motor_Loop = -1
		}
	}
	else
	{
		i_flag_can_stop_ik = faux
	
		if (f_walk_angle <= Cf_PiBy2)
		{
			f_walk_angle += Cf_PiBy2 * f_dt
			if (f_walk_angle > Cf_PiBy2)
			{
				i_lock_feet = vrai
				f_walk_angle = Cf_PiBy2
			}
		}
		else
		{
			f_walk_angle += Cf_PiBy2 * f_dt
			if (f_walk_angle > Cf_Pi)
			{
				i_lock_feet = vrai
				f_walk_angle = 0.0
			}
		}

		// DEPLACEMENT
		if (OBJ_CapaTest(OBJ_Capa_1))
		{
//			v_IK_move_dir = MATH_VecBlendRotate(v_IK_move_dir, v_me_to_main, 10.0 * f_dt)
			tv_new_sight = MATH_VecBlendRotate(OBJ_SightGet(), f_foot_side_sign * -OBJ_HorizonGet(), 0.4)
			v_IK_move_dir = MATH_VecBlendRotate(v_IK_move_dir, tv_new_sight, 10.0 * f_dt)
			
			tv_new_sight = MATH_VecInCone(v_me_to_main, OBJ_SightGet(), Cf_PiBy6, 0)
			v_IK_feet_sight = MATH_VecBlendRotate(v_IK_feet_sight, OBJ_SightGet(), 4.0 * f_dt)
		}
		else
		{
			tv_dest_sight = @o_start_wp OBJ_PosGet()
			tv_dest_sight -= OBJ_PosGet()
			tv_dest_sight.z = 0.0
			MATH_VecSetNormalize(tv_dest_sight)
		
			v_IK_move_dir = MATH_VecBlendRotate(v_IK_move_dir, tv_dest_sight, 2.0 * f_dt)
		
			// AXE POUR LES PIEDS (ANTICIPATION)
			tv_new_sight = MATH_VecInCone(tv_dest_sight, OBJ_SightGet(), Cf_PiBy6, 0)
			v_IK_feet_sight = MATH_VecBlendRotate(v_IK_feet_sight, tv_new_sight, 4.0 * f_dt)
		}
	}
	
	// VISEE
	if ( ! ti_flag_force_stop )
		i_flag_can_stop_ik = faux
	
	if ( ! i_flag_can_stop_ik )
	{
		if (i_flag_main_on_me)
			tv_new_sight = OBJ_SightGet()
		else if (OBJ_CapaTest(OBJ_Capa_1) || ! o_Town )
			tv_new_sight = MATH_VecInCone(v_me_to_main, v_IK_constraint_sight, Cf_PiBy4, 0)
		else
			tv_new_sight = MATH_VecInCone(MATH_VecNormalize(OBJ_PosGet() - @o_Town OBJ_PosGet()), v_IK_constraint_sight, Cf_PiBy4, 0)
	
		tv_new_sight = MATH_VecBlendRotate(OBJ_SightGet(), tv_new_sight, 6.0 * f_dt)
		OBJ_BankingGeneralSet(tv_new_sight, OBJ_BankingGet())
	}
}

DBG_RenderVector(@o_bassin OBJ_PosGet(), v_IK_constraint_sight * 1000.0, color_cyan)
DBG_RenderVector(@o_bassin OBJ_PosGet(), v_IK_feet_sight * 1000.0, color_blanc)
DBG_RenderVector(@o_bassin OBJ_PosGet(), v_IK_move_dir * 1000.0, color_jaune)

if (f_walk_angle <= Cf_PiBy2)
	tv_pos.z = MATH_FloatBlend(tv_pos.z, v_IK_ground_pos[0].z, 8.0 * f_dt)
else
	tv_pos.z = MATH_FloatBlend(tv_pos.z, v_IK_ground_pos[1].z, 8.0 * f_dt)
//tv_pos.z = MATH_FloatBlend(tv_pos.z, (v_IK_ground_pos[0].z + v_IK_ground_pos[1].z) * 0.5, 12.0 * f_dt)
OBJ_PosSet(tv_pos)

PNJ_Bipod_IK()
PNJ_Bipod_Oreille()
PNJ_Bipod_Update_Col()

PNJ_Bipod_Spawn()
////PNJ_Bipod_Bomb()
PNJ_Bipod_Laser()
PNJ_Bipod_GFX_Accumulation()

f_dt = 0.0