#include "PNJ_mr_defines.var"

vector	tv_Traction
vector	tv_pos
string		tstr_txt
int			ti_string


tv_Traction = Cv_NullVector
tv_Traction += v_traction_GOGO*1.0
if(i_NbLink==0)
	tv_Traction += v_traction_MOVE
else	if(i_NbLink==1)
	tv_Traction += v_traction_MOVE * 2.0
else	if(i_NbLink==2)
	tv_Traction += v_traction_MOVE * 0.5
tv_Traction += PNJ_MR_Soft_Col()		// SOFTCOL
tv_Traction += PROC_ForceStreamGet(OBJ_PosGet(), i_stream_aspire_flag)
tv_Traction.x *= Cf_DYN_Friction
tv_Traction.y *= Cf_DYN_Friction
DYN_TractionSet( tv_Traction)
//DBG_RenderVector(OBJ_PosGet(),DYN_SpeedGetVector(),color_rouge)

if( PNJ_MR_DBG_Display() )
{
	switch( i_etat_courant )
	{
		case ETAT_PNJ_MR_Hide:
			tstr_txt = "Hide"
		break
		case ETAT_PNJ_MR_Wait:
			tstr_txt = "Wait"
		break
		case ETAT_PNJ_MR_Move:
			tstr_txt = "Move"
		break
		case ETAT_PNJ_MR_Gogo:
			tstr_txt = "Gogo"
		break
		case ETAT_PNJ_MR_Attaque:
			tstr_txt = "Attack"
		break
		case ETAT_PNJ_MR_Paf:
			tstr_txt = "Paf"
		break
		case ETAT_PNJ_MR_Charge	:
			tstr_txt = "Load"
		break
		case ETAT_PNJ_MR_Retour:
			tstr_txt = "Back"
		break
		case ETAT_PNJ_MR_Contourne:
			tstr_txt = "GoAround"
		default:
			tstr_txt = "???"
		break
	}
	tv_pos = VIEW_3dWorldTo2d(0, OBJ_PosGet())
	ti_string = STR_CreateText("\c000000FF\",tv_pos + cvector(0.0,0.0,-0.2), 0)
	STR_AppendText(ti_string, tstr_txt)
}