#include "PNJ_mr_defines.var"

int ti_rm_territoire


// SORTIE ETAT 	===================================================================
if (i_sort_etat)
{
	i_sort_etat = faux
	DYN_GravitySet( Cv_DYN_Gravity)
	return
}

// INIT ETAT 	=====================================================================
if ( i_etat_courant != ETAT_PNJ_MR_Wait)
{
	i_etat_courant = ETAT_PNJ_MR_Wait
	if( fct_last_etat )
	{
		i_sort_etat = vrai
		AI_Execute(fct_last_etat)
	}
	fct_last_etat = AI_TrackCurGet()	
	f_time_start_etat = 0.0
	OBJ_CapaSet(none,Obj_Capa_Fight)
}
else
{
	f_time_start_etat += TIME_GetDt()
}



// CHANGEMENT D ETAT ============================================================
if(o_BV_Zone)
{
	ti_rm_territoire=@o_BV_Zone COL_BV_PivotCollide( o_fight_target)
}
else 
{
	ti_rm_territoire=vrai
}

if ( (ti_rm_territoire) && (f_time_start_etat>0.5))
{
	AI_TrackCurChangeNow("PNJ_MR_ETAT_Move")
}

if ( o_BV_Zone && !(@o_BV_Zone COL_BV_PivotCollide( OBJ_Me())))
{
	if( !i_grabbed )
		i_Explosion=vrai
//		AI_TrackCurChangeNow("PNJ_MR_ETAT_Explosion")
}

if ( ROBOT_ROPE_Gogo_Mode())
{
	// Gogo mode
	AI_TrackCurChangeNow("PNJ_MR_ETAT_Gogo")
}	



// COMPORTEMENT ================================================================
if(!ti_rm_territoire)
{
//	i_GFX_Laser = GFX_Add(1)
//	GFX_FlagSet(i_GFX_Laser , 0, 1)
//	GFX_FlagSet(i_GFX_Laser, 2, 1)
//	GFX_MaterialSet(i_GFX_Laser, get_SFX_light_and_smoke, 3)
//	GFX_Setf(i_GFX_Laser, 1000, 0.04 * OBJ_ZoomGet())		// Epaisseur de la ligne
//	GFX_Seti(i_GFX_Laser, 1100, 0x00FF00)		// Couleur de la ligne
//	GFX_Setv(i_GFX_Laser, 1200, PNJ_MR_PosGetOeil()+(0.1*OBJ_BankingGet() ) + (OBJ_SightGet() * 0.4 ) )		// Coordonnée de la position 3D du début du faisceau
//	GFX_Setv(i_GFX_Laser, 1201, PNJ_MR_PosGetOeil()-(0.1*OBJ_BankingGet() ) + (OBJ_SightGet() * 0.4 ) )		// Coordonnée de la position 3D de la fin du faisceau
////	GFX_Setv(i_GFX_Laser, 1200, PNJ_MR_PosGetOeil())		// Coordonnée de la position 3D du début du faisceau
////	GFX_Setv(i_GFX_Laser, 1201, PNJ_MR_PosGetOeil()-(1.0*OBJ_BankingGet() - OBJ_SightGet() ) )		// Coordonnée de la position 3D de la fin du faisceau
//	GFX_LifeTimeSet(i_GFX_Laser,0.6)

	OBJ_RotateLocalZ( f_orient_speed  * TIME_GetDt())
}
