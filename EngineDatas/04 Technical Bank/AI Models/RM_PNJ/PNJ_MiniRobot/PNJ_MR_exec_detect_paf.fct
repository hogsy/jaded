messageid		tmid_ID
message	tmsg_filter
int				ti_rank
object		to_pere
int				ti_type
vector		tv_pos
vector		tv_dir
float			tf_dmg
float			tf_recul
vector		tv_sens
float			tf_dot
int				ti_i
vector		tv_nmi_dir
float			tf_best
float			tf_dist

i_paf_detect_type = 0
MSG_SetNull(tmsg_filter)
tmsg_filter.msg_gao1 = OBJ_Me()
ti_rank = -1
for (	tmid_ID = MSG_GlobalSearchIntGao(C_EVENT_TYPE_Paf, &ti_rank, tmsg_filter);
		MSG_GlobalIsValid(tmid_ID);
		tmid_ID = MSG_GlobalSearchIntGao(C_EVENT_TYPE_Paf, &ti_rank, tmsg_filter) )
{
	to_pere = EVENT_PereGet(tmid_ID)
	
	ti_type = EVENT_PafTypeGet(tmid_ID)
	tv_pos = EVENT_PafPositionGet(tmid_ID)
	tv_dir = EVENT_PafDirGet(tmid_ID)
	tf_dmg = EVENT_PafPuisGet(tmid_ID) * PAF_Unit

//	if( i_etat_courant == ETAT_RM_paf )
//		f_paf_jauge += tf_dmg
//	else
//		f_paf_jauge =0.0
//	if( f_paf_jauge >= 20.0 )
//	{
//		i_paf_detect_type |= C_PAF_RM_Fort
//		f_paf_jauge = 0.0
//	}
//

//tf_recul=1.0
	tf_recul=15.0
	
	if(C_PAF_RM_Fort==(ti_type&C_PAF_RM_Fort))
	//	tf_recul=10.0
		tf_recul=20.0
	else if(C_PAF_RM_ComboPetit==(ti_type&C_PAF_RM_ComboPetit))
		tf_recul=0.0
	else if(C_PAF_RM_KiTue==(ti_type&C_PAF_RM_KiTue))
		OBJ_Destroy()
		
	o_paf_actor = to_pere
	i_paf_detect_type |= ti_type
	tv_dir.z=0.0
	if(o_paf_actor==get_rayman)
	{
		if ( ti_type & C_PAF_RM_DiveAttack)
		{
			v_paf_sens = Proc_Vec_HorzNormalise( tv_dir, @o_paf_actor OBJ_SightGet())
			tf_recul=5.0
		}
		else // if(C_PAF_RM_Moyen==(ti_type&C_PAF_RM_Moyen))
		{
			v_paf_sens = @o_paf_actor OBJ_SightGet()
		}

		// Aide au tir
		tf_best=1000
		for (ti_i = 0; ti_i < i_budy_nb; ti_i++)
		{
			tf_dist=MATH_VecNorm(@ao_budy[ti_i] OBJ_PosGet() - OBJ_PosGet())
			tv_nmi_dir=(@ao_budy[ti_i] OBJ_PosGet() - OBJ_PosGet()) / tf_dist
			tf_dot = MATH_VecDotProduct(v_paf_sens,tv_nmi_dir)
			if((tf_dot>Cf_Cos25) && (tf_dist<tf_best))
			{
				tf_best=tf_dist
				v_paf_sens = tv_nmi_dir
			}
		}


		v_paf_sens *= tf_recul*3.0
	}
	else if(!AI_HaveSameModel(o_paf_actor))
		v_paf_sens = MATH_VecNormalize(tv_dir)*tf_recul
	else 
		v_paf_sens = tv_dir
		
	DBG_RenderVector(OBJ_PosGet(),v_paf_sens,color_rouge)
//	EVENT_LIFE_LifeChange(ID_LIFE, tf_dmg)
	f_LIFE_cur -= MATH_FloatMin(f_LIFE_cur, tf_dmg)

	tv_sens = @o_fight_target OBJ_PosGet() - OBJ_PosGet()
	tv_sens.z = 0.0
	f_paf_rotate= MATH_RandFloat(8.0,14.0)*MATH_FloatSign( MATH_VecCrossProduct(OBJ_SightGet(), tv_sens).z)
}