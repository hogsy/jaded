int			ti_WP
int			ti_num
int			ti_group

float		tf_distmin
float		tf_distjack
float		tf_distgroup
float		tf_dot
float		tf_proba

vector	tv_temp

object	to_group
object	to_camera	// kong ou jack


to_camera = @get_global o_camera

if (mi_GenWPSequential)
{
	mi_WPCur = MATH_Modulo (mi_WPCur + 1, mi_WPNb )
	return
}

if (!mi_UsePannel )
{
	mi_WPCur = MATH_RandInt(0, mi_WPNb)
	return		
}

mi_WPFront = 0
mi_WPGroup = 0
tf_distmin = mf_DistanceMin * mf_DistanceMin 

for (ti_WP = 0; ti_WP < mi_WPNb; ti_WP++)
{
	mai_WPFlags[ ti_WP ] = -1
	
	if ( maf_WPTimer[ ti_WP ] > 0 )
		continue
	
	tv_temp = @mao_WP[ ti_WP ] OBJ_PosGet() - @to_camera OBJ_PosGet()
	tf_distjack = MATH_VecDotProduct( tv_temp, tv_temp )
	if (tf_distjack < tf_distmin)
		continue

	tf_dot = MATH_VecDotProduct( tv_temp, @to_camera OBJ_SightGet() )
	if (tf_dot > 0.6)
	{
		mai_WPFlags[ ti_WP ] = 1
		mi_WPFront++
	}
	else
		mai_WPFlags[ ti_WP ] = 0
		
//	for (ti_group = C_ID_Ann; ti_group < C_ID_Marin_dernier; ti_group++)
//	{
//		if (!@"univ" ai_HumainIsHere[ ti_group ])
//			continue
//		to_group = @"univ" ao_AllHumains[ ti_group ]
//		if ( to_group == nobody )
//			continue
//		tf_distgroup = @to_group OBJ_SqrDist( mao_WP[ ti_WP ]  )
//		if ( tf_distgroup < tf_distjack )
//		{
//			mi_WPGroup++
//			mai_WPFlags[ ti_WP ] |=2
//			break
//		}
//	}
}

// Group or not group ?
tf_proba = MATH_RandFloat( 0, 1)
if ( (tf_proba < maf_GroupRatio ) && mi_WPGroup )
{
	ti_num = MATH_RandInt( 0, mi_WPGroup)
	for (ti_WP = 0; ti_WP < mi_WPNb; ti_WP++ )
	{
		if (mai_WPFlags[ ti_WP ] & 2 )
		{
			if (ti_num == 0)
			{
				mi_WPCur = ti_WP
				return
			}
			ti_num--
		}
	}
}

// not group, Front of Back
tf_proba = MATH_RandFloat( 0, 1 )
if ( ( tf_proba < maf_FrontRatio ) && mi_WPFront )
{
	ti_num = MATH_RandInt( 0, mi_WPFront)
	for (ti_WP = 0; ti_WP < mi_WPNb; ti_WP++ )
	{
		if (mai_WPFlags[ ti_WP ] & 1 )
		{
			if (ti_num == 0)
			{
				mi_WPCur = ti_WP
				return
			}
			ti_num--
		}
	}
}

// back
if (mi_WPNb - mi_WPFront > 0)
{
	ti_num = MATH_RandInt( 0, mi_WPNb - mi_WPFront)
	for (ti_WP = 0; ti_WP < mi_WPNb; ti_WP++ )
	{
		if ( !(mai_WPFlags[ ti_WP ] & 1) )
		{
			if (ti_num == 0)
			{
				mi_WPCur = ti_WP
				return
			}
			ti_num--
		}
	}
}

mi_WPCur = -1

