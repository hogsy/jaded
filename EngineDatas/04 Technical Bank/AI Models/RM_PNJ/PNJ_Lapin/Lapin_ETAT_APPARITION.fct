#include "PNJ_Lapin_defines.var"

vector	tv_offset
object	to_wp
float		tf_dist
int			ti_index
vector	tv_start_pos
vector	tv_pos
vector	tv_temp


// SORTIE ETAT ===================================================================
if (i_sort_etat)
{
	i_invisible_flag = faux
	if( o_item )
	{
		@o_item OBJ_FlagInvisibleSet(faux)
	}
	Lapin_TARGETTING(vrai)		// dès le jump (pas dans lo sol)
	if( ! o_App_next_wp )
		fct_main_etat = "Lapin_ETAT_ATTENTE"		// passe en attente à la fin du jump
	i_sort_etat = faux
	return
}

// INITIALISATION ETAT ==============================================================
if (i_etat_courant != ETAT_Lapin_APPARITION) 
{
	i_dernier_etat = i_etat_courant
	i_etat_courant = ETAT_Lapin_APPARITION
	if (fct_last_etat)
	{
		i_sort_etat = vrai
		AI_Execute(fct_last_etat)
	}
	Lapin_DBG_Trace_String(DBG_Trace_Etat, "APPARITION")
	fct_previous_etat = fct_last_etat
	fct_last_etat = AI_TrackCurGet()
	fct_main_etat = AI_TrackCurGet()		//  MAIN ETAT !!!!
	f_time_start_etat = 0.0
	
	WAY_App = @App_WP WAY_NetOfObj()
	f_App_ground_delai = -1.0
	i_App_mode = Ci_APPARITION_mode_Run
	i_frappe_target_nb = 0		// raz acteurs déjà paffés
}
else
{
	if( i_App_Trigger_done )
		f_time_start_etat += TIME_GetDt()		// cpt temps après validation trigger
}

// TRIGGER SPAWN ===================================================================
if( ! i_App_Trigger_done )
{
	OBJ_PosSet(v_Apparition_init_pos)		// sinon si je suis sur une monture je tombe car il n'y a pas la callback car la monture est invisible...
	if( ! AI_TriggerIsValid(App_Trigger) || call_trigger(App_Trigger) )
		i_App_Trigger_done = vrai
	if( OBJ_FlagsIdentityTest(OBJ_C_IdentityFlag_Generated) )
		i_App_Trigger_done = vrai			// pas de test trigger si lapin spawné
}

if( ! i_App_Trigger_done )
	return

if( o_item )
	@o_item OBJ_FlagInvisibleSet(faux)
if( o_key )
	@o_key OBJ_FlagInvisibleSet(faux)
if( o_RideMount_Actor )
	@o_RideMount_Actor OBJ_FlagInvisibleSet(faux)

// STIMULI ===========================================================================
AI_Execute("Lapin_exec_check_paf")
if( i_flag_paf || ! f_LIFE_cur ) // ! EVENT_LIFE_CurLifeGet(ID_LIFE) )
{
	o_App_next_wp = nobody		// apparition terminée
	macro_change_etat("Lapin_ETAT_PAF")
}

// COMPORTEMENT ===================================================================
tv_start_pos = OBJ_PosGet()
if( f_time_start_etat > 0.0 && o_RideMount_Actor && i_RideMount_ID != C_ID_Monture_Rope && @o_RideMount_Actor COL_CollideType(COL_C_Ground) )
{
	// pas au début car j'ai été téléporté donc le rapport de collision est celui de l'ancienne position
	tv_temp = @o_RideMount_Actor COL_CollidedPointGet(COL_C_Ground)
	DBG_RenderVector(OBJ_PosGet(), tv_temp - OBJ_PosGet(),color_blanc)
	tv_pos = tv_start_pos
//			tv_temp = @o_RideMount_Actor OBJ_PosGet()
	tv_pos.z = tv_temp.z
	OBJ_PosSet(tv_pos)
}

if( o_App_next_wp && COL_Pivot_BVCollide(o_App_next_wp) )
{
	if( ! o_RideMount_Actor && @o_App_next_wp OBJ_CustomBitsTest(Cbit_ACTION_Jump) )
	{
		i_App_mode = Ci_APPARITION_mode_Jump
		MACRO_FORCE_VALID_INTERET
		switch( Type )
		{
			case Lapin_Type_Petit :
				tf_dist = Cf_Jump_Dist_Lapin_Petit
				break
			case Lapin_Type_Moyen :
				tf_dist = Cf_Jump_Dist_Lapin_Moyen
				break
			case Lapin_Type_Geant :
				tf_dist = Cf_Jump_Dist_Lapin_Geant
				break
			default:
				DBG_Error("???")
		}
		// continuer en suivi réseau après le jump ?
		to_wp = o_App_next_wp
		if( WAY_App )
			o_App_next_wp = WAY_NetNextWP(WAY_App, o_App_next_wp, NetNextWP_Mode_aleatoire, none)
		else
			o_App_next_wp = nobody		// fin du mode spawn
		if( o_App_next_wp )		// il y a un wp suivant
		{
			i_flag_jump_precis = vrai
			v_jump_dest_pos = @o_App_next_wp OBJ_PosGet()
		}
		else
			v_jump_dest_pos = OBJ_PosGet() + ( tf_dist * @to_wp OBJ_SightGet() )
		macro_change_etat("Lapin_ETAT_JUMP")
	}
	else if( ! o_RideMount_Actor && @o_App_next_wp OBJ_CustomBitsTest(Cbit_ACTION_Sortir_du_Sol) )
	{
		i_App_mode = Ci_APPARITION_mode_Ground
		COL_ColSetActivationSet(none, C_bit_zde_corps)
		// gfx
		f_GFX_smoke_delai = 1.0	// +1 sec en mode jump
		v_GFX_ground_pos = OBJ_PosGet() + (0.5 * Cv_VerticalVector * OBJ_ZoomGet())
		// countdown
		if( f_App_ground_delai == -1.0 )
		{
			f_App_ground_delai = 1.5
			SND_RequestPlay(Ci_SND_Apparition_Sol_Smoke)
		}
		f_App_ground_delai -= MATH_FloatMin(f_App_ground_delai, TIME_GetDt())
		if( f_App_ground_delai == 0.0 )
		{
			MACRO_FORCE_VALID_INTERET
			COL_ColSetActivationSet(none, C_bit_zdm_pied)
			// paffe
			i_flag_zde_fight_enable = vrai
			i_taupe_attack_flag = vrai
			// continuer en suivi réseau après le jump ?
			to_wp = o_App_next_wp
			if( WAY_App )
				o_App_next_wp = WAY_NetNextWP(WAY_App, o_App_next_wp, NetNextWP_Mode_aleatoire, none)
			else
				o_App_next_wp = nobody		// fin du mode spawn
			// JUMP FROM GROUND
			v_jump_dest_pos = OBJ_PosGet() + ( 2.0 * Cv_VerticalVector )
			f_GFX_ground_christophe_delai = Cf_GFX_Ground_Apparition_delai
			i_invisible_flag = faux
			OBJ_FlagInvisibleSet(faux)
			macro_change_etat("Lapin_ETAT_JUMP")
		}
	}
	else if( ! o_RideMount_Actor && @o_App_next_wp OBJ_CustomBitsTest(Cbit_ACTION_Rentrer_dans_Sol) )
	{
		i_invisible_flag = faux
		MACRO_FORCE_VALID_INTERET
		macro_change_etat("Lapin_ETAT_TAUPE")
	}
	else
	{
		Lapin_TARGETTING(vrai)		// en réseau je suis une target
		i_App_mode = Ci_APPARITION_mode_Run
	}
}

// SUIVI RESEAU
if( f_App_ground_delai == -1.0 )
{
	if( WAY_App )
	{
		i_invisible_flag = faux
		if( o_item )
			@o_item OBJ_FlagInvisibleSet(faux)
		if( o_App_next_wp && COL_Pivot_BVCollide(o_App_next_wp) )
			o_App_next_wp = WAY_NetNextWP(WAY_App, o_App_next_wp, NetNextWP_Mode_aleatoire, none)
		if( ! o_App_next_wp )
		{
			OBJ_PosSet(tv_start_pos)		// je me repositionne sur la monture
			macro_change_etat("Lapin_ETAT_ATTENTE")		// rézo terminé
		}
		else
		{
			// offset derrière le wp pour forcer à courir
			tv_offset = @o_App_next_wp OBJ_PosGet() - OBJ_PosGet()
//			MATH_VecSetNorm(tv_offset, 2.0)
			v_way_destpos = @o_App_next_wp OBJ_PosGet() //+ tv_offset
		}
		
		i_target_territory_ID = Lapin_PROC_POS_GET_TERRITORY_ID(v_way_destpos)
		AI_Execute("Lapin_exec_way_find")
		i_action_traction_force_faster = vrai		// apparition = runs !!!
		AI_Execute("Lapin_exec_way_move")
		AI_Execute("Lapin_exec_way_orientation")
		AI_Execute("Lapin_exec_way_select_action")
	}
	else
	{
		// pas de rézo
		if( o_RideMount_Actor && i_RideMount_ID == C_ID_Monture_Rope )
			i_invisible_flag = faux
		else
		{
			o_App_next_wp = nobody
			OBJ_PosSet(tv_start_pos)		// je me repositionne sur la monture
			macro_change_etat("Lapin_ETAT_ATTENTE")		// rézo terminé
		}
	}
}

OBJ_PosSet(tv_start_pos)		// je me repositionne sur la monture
