#include "PNJ_Lapin_defines.var"

int			ti_change
int			ti_action
int			ti_retard
int			ti_freq
int			ti_formation
int			ti_calc
int			ti_index
vector	tv_pos
vector	tv_temp
float		tf_dist


// SORTIE ETAT ===================================================================
if (i_sort_etat)
{	
	Lapin_EXPRESSION(Cf_Expr_Mouth_Closed)
	i_sort_etat = faux
	return
}

// INITIALISATION ETAT ==============================================================
if (i_etat_courant != ETAT_Lapin_BEAT_DANSE) 
{
	i_dernier_etat = i_etat_courant
	i_etat_courant = ETAT_Lapin_BEAT_DANSE
	if (fct_last_etat)
	{
		i_sort_etat = vrai
		AI_Execute(fct_last_etat)
	}
	Lapin_DBG_Trace_String(DBG_Trace_Etat, "BEAT DANSE")
	fct_previous_etat = fct_last_etat
	fct_last_etat = AI_TrackCurGet()
	f_time_start_etat = 0.0
	
	f_time_sous_mode = 0.0
	i_Beat_flag_danse_mode = 1
	
	if( i_Danse_pos_index == -1 )
		SND_RequestPlay(Ci_SND_BEAT_Start)		// 1ère fois que je rentre dans le mode
	
	Lapin_RIDEMOUNT_Cancel()
	i_Danse_pos_ok = faux
}
else
{
	if ( f_time_sous_mode < 0.5)
		OBJ_BankingGeneralSet( MATH_VecBlendRotate( OBJ_SightGet(), @get_rayman OBJ_SightGet(), f_time_start_etat * 2.0), Cv_VerticalVector)

	f_time_start_etat += TIME_GetDt()
	f_time_sous_mode += TIME_GetDt()
}



if( ! i_Beat_flag_danse )
	MACRO_GO_IDLE(0)


// je dois aller me positionner pour danser !!!
ti_calc = faux
//ti_formation = @get_global i_Danse_Actors_nb
//if( i_Danse_formation_nb != ti_formation )
//{
//	ti_calc = vrai
//	i_Danse_formation_nb = ti_formation
//}
if( @get_global i_Danse_Actors_pos_recompute )
	ti_calc = vrai			// rayman relance une danse !
//if( i_Danse_pos_index != -1 )
//{
//	ti_index = ARR_ObjSearch(&@get_global ao_Danse_Actors[0], @get_global i_Danse_Actors_nb, OBJ_Me())
//	if( ti_index != i_Danse_pos_index )
//	{
//		i_Danse_pos_index = ti_index
//		ti_calc = vrai
//	}
//}
if( ti_calc )
{
	i_Danse_pos_ok = faux
	i_Danse_jump_done = faux
}
if( ! i_Danse_pos_ok )
{
	if( ! Lapin_DANSE_PosGet(tv_pos) )
	{
		i_Danse_pos_ok = vrai		// sur place
		f_time_sous_mode = 0.0	// orientation
	}
	else
	{
		// je dois me rendre à une position
		tv_temp = tv_pos - OBJ_PosGet()
		tv_temp.z = 0.0		// en 2d
		tf_dist = MATH_VecDotProduct(tv_temp,tv_temp)
		tf_dist = MATH_FloatSqrt(tf_dist)
//		DBG_RenderVector(OBJ_PosGet() + Cv_VerticalVector, tv_temp, color_rouge)
		if( tf_dist < 1.0 )
		{
			i_Danse_pos_ok = vrai
			f_time_sous_mode = 0.0	// orientation
		}
		else if( tf_dist < 5.0 && ! i_Danse_jump_done )
		{
			i_flag_jump_to_danse = vrai
			i_flag_jump_precis = vrai
			v_jump_dest_pos = tv_pos
			DBG_RenderVector(OBJ_PosGet() + Cv_VerticalVector, tv_pos - (OBJ_PosGet() + Cv_VerticalVector), color_rouge)
			i_Danse_jump_done = vrai
			macro_change_etat("Lapin_ETAT_JUMP")
		}
		else
		{
			v_way_destpos = tv_pos
			i_target_territory_ID = Lapin_PROC_POS_GET_TERRITORY_ID(v_way_destpos)
			AI_Execute("Lapin_exec_way_find")
			AI_Execute("Lapin_exec_way_move")
			AI_Execute("Lapin_exec_way_orientation")
			AI_Execute("Lapin_exec_way_select_action")
		}
	}
	return
}

//// STIMULI ===========================================================================
o_Grabbed_Actor = LNK_ServeurGet(Ci_LNK_GRAB_EAGLE, mid_Grabbed_LNK_ID, vrai, nofunc, nofunc)
if( o_Grabbed_Actor )
	macro_change_etat("Lapin_ETAT_GRABBED")

o_Rided_Actor = LNK_ServeurGet(Ci_LNK_RIDE_ON_NMI, mid_Rided_LNK_ID, vrai, nofunc, nofunc)
if( o_Rided_Actor )
	macro_change_etat("Lapin_ETAT_RIDED")

AI_Execute("Lapin_exec_check_vision")

MACRO_CHECK_PAFS

if( Lapin_ROPE_Gogo_Mode() )
	macro_change_etat("Lapin_ETAT_GOGO")

MACRO_CHECK_CHUTE

if( i_ventilo_flag )
	macro_change_etat("Lapin_ETAT_ASPIRE")

if( o_piege )
	macro_change_etat("Lapin_ETAT_PIEGE")

AI_Execute("Lapin_exec_update_best_interest")

// COMPORTEMENT ===================================================================

//ti_change = faux
//if( ! Beat_Action_Retard )
//	ti_change = vrai
//if( ! f_time_start_etat )
//	ti_change = vrai
//else if( ACT_ActionFinished() )
	ti_change = vrai

//ti_retard = Beat_Action_Retard
Beat_Action_Retard = 0.0
if ( @get_Music_Manager Proc_SND_Juice())
	ti_action = Proc_RM_Danse_Action_Get( Beat_Action_Retard, ti_freq)
else
{
	ti_action = Proc_RM_Danse_Nb_Action_Delayed_Get( i_Beat_memo, ti_freq)
	if ( ACT_ActionFinished())
	{
		i_Beat_memo = MATH_Modulo( i_Beat_memo + 4, 5)
	}
//	ti_action = Action_Danse_Toupie
//	ti_freq = 30
}


if( ti_action == -1 )
	ti_action = Action_Normal_Attente
if( ti_change )
{
	i_action_keep_freq = vrai
//	if ( ti_freq != ANI_FrequencyGet(0))
//		ti_action += Ci_ActionSet_Force_SameAction + Ci_ActionSet_Force_FrameZero
	Lapin_ACTION_Set(ti_action)
	if( ti_freq > 0 && ti_freq < 255)		// blindage !!!
		Lapin_ACTION_FreqSet(ti_freq)
}


#ifndef _FINAL_
if( Lapin_DBG_Display_ON() )
{
	tv_pos = MACRO_2D + cvector(0,0.1,0)
	Str_DisplayTxtIntOnce("\cFF00\\h0.06\", ACT_ActionGet(), tv_pos - cvector(0.05,0,0))
	Str_DisplayTxtIntOnce("\cFFFF\\h0.06\", ANI_CurrentFrameGet(0), tv_pos)
}
#endif

