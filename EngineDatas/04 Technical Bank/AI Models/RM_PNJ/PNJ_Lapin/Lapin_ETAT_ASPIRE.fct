#include "PNJ_Lapin_defines.var"

vector	tv_temp
vector	tv_temp1
vector	tv_sight
vector	tv_banking


// SORTIE ETAT ===================================================================
if( i_sort_etat )
{
	Lapin_EXPRESSION(Cf_Expr_Mouth_Closed)
	i_sort_etat = faux
	return
}

// INITIALISATION ETAT ==============================================================
if( i_etat_courant != ETAT_Lapin_ASPIRE )
{
	i_dernier_etat = i_etat_courant
	i_etat_courant = ETAT_Lapin_ASPIRE
	if( fct_last_etat )
	{
		i_sort_etat = vrai
		AI_Execute(fct_last_etat)
	}
	Lapin_DBG_Trace_String(DBG_Trace_Etat, "ASPIRE")
	fct_previous_etat = fct_last_etat
	fct_last_etat = AI_TrackCurGet()
	f_time_start_etat = 0.0
	
	Lapin_ITEM_Lose()
	Lapin_ITEM_Key_Lose()
	Lapin_LUMS_Cage_Lose()
	Lapin_ZOOM_Reduction()
	
	f_ventilo_scream_delai = 0.0
	i_ventilo_stuck_on_wall_once = faux
	Lapin_GFX_GoutteSueur_Creation()
	Lapin_Del_Interest()
	Lapin_EXPRESSION(Cf_Expr_Mouth_Full)
}
else
{
	f_time_start_etat += TIME_GetDt()
}

// STIMULI ===========================================================================
o_Grabbed_Actor = LNK_ServeurGet(Ci_LNK_GRAB_EAGLE, mid_Grabbed_LNK_ID, vrai, nofunc, nofunc)
if( o_Grabbed_Actor )
	macro_change_etat("Lapin_ETAT_GRABBED")

o_Rided_Actor = LNK_ServeurGet(Ci_LNK_RIDE_ON_NMI, mid_Rided_LNK_ID, vrai, nofunc, nofunc)
if( o_Rided_Actor )
	macro_change_etat("Lapin_ETAT_RIDED")

//AI_Execute("Lapin_exec_check_vision")

// ne repasser en paf que si on prend un nouveau paf et pas car on est (déjà) mort
AI_Execute("Lapin_exec_check_paf")
if( i_flag_paf )
	macro_change_etat("Lapin_ETAT_PAF")

if( Lapin_ROPE_Gogo_Mode() )
	macro_change_etat("Lapin_ETAT_GOGO")

//MACRO_CHECK_CHUTE

//AI_Execute("Lapin_exec_update_best_interest")

if( ! i_ventilo_flag )
{
	fct_main_etat = "Lapin_ETAT_ATTENTE"
	MACRO_GO_IDLE(0)
}

// COMPORTEMENT ===================================================================

if( COL_CollideType(COL_C_Wall) )
{
	tv_temp = COL_NormalGet(COL_C_Wall)
	tv_temp.z = 0.0
	MATH_VecSetNormalize(tv_temp)
	tv_temp1 = OBJ_SightGet()
	tv_temp1.z = 0.0
	MATH_VecSetNormalize(tv_temp1)
	DBG_RenderVector(COL_CollidedPointGet(COL_C_Wall), tv_temp, color_jaune)
	DBG_RenderVector(COL_CollidedPointGet(COL_C_Wall), tv_temp1, color_cyan)
	if( MATH_VecDotProduct(tv_temp, tv_temp1) > Cf_Cos25)
	{
		i_ventilo_stuck_on_wall = vrai
		if( ! i_ventilo_stuck_on_wall_once )
		{
			SND_RequestPlay(Ci_SND_ASPIRE_Choc_Mur)
			i_ventilo_stuck_on_wall_once = vrai
		}
	}
}


//v_force_sight = - v_ventilo_dir
//AI_Execute("Lapin_exec_way_orientation")
tv_sight = - v_ventilo_dir
if( i_ground_flag )
	tv_banking = v_ground_normale
else
{
	MATH_VecSetNormalize(tv_sight)
	DBG_RenderVector(OBJ_PosGet(), tv_sight *5, color_vert)
	tv_banking = MATH_VecCrossProduct(tv_sight, cvector(1,0,0))
	DBG_RenderVector(OBJ_PosGet(), tv_banking*5, color_bleu)
}
OBJ_BankingGeneralSet(MATH_VecBlendRotate(OBJ_SightGet(), tv_sight, 5.0 * TIME_GetDt()), MATH_VecBlendRotate(OBJ_BankingGet(), tv_banking, 5.0 * TIME_GetDt()))

if( ! f_ventilo_scream_delai )
{
	SND_RequestPlay(Ci_SND_ASPIRE_Cri_Presence)
	f_ventilo_scream_delai = MATH_RandFloat(5.0,10.0)
	Lapin_GFX_GoutteSueur_Creation()
}


if( i_is_in_water )
	Lapin_ACTION_Set(Action_Nage_Attente)
else
	Lapin_ACTION_Set(Action_Aspire)

