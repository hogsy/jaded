#include "PNJ_Lapin_defines.var"

procedure_ultra int Proc_Lapin_Grappin_GogoMode()
{
	if( i_etat_courant == ETAT_Lapin_GOGO )	
		return vrai
	return faux
}

procedure_ultra int Proc_PNJ_Lapin_GetRopeTractionCategory(int ti_monture_ID)
{
	int		ti_category
	
	if( i_etat_courant == ETAT_Lapin_GRAPPIN_CONTROL )
		return RopeTractionCategory_Coef_075		// pas de modif derrière !
	else if( Proc_Lapin_Grappin_GogoMode() )
		ti_category = RopeTractionCategory_Coef_0
	else if( ti_monture_ID != C_ID_Rayman )		// Monture
		ti_category = RopeTractionCategory_Coef_0
	else
	{
		// Rayman seul
		switch( Type )
		{
			case Lapin_Type_Petit : 
				ti_category = RopeTractionCategory_Coef_0
				break
			case Lapin_Type_Moyen :
				ti_category = RopeTractionCategory_Coef_05
				break
			case Lapin_Type_Geant :
				ti_category = RopeTractionCategory_Coef_05	// 1
				break
		}
	}
	
	if( (COL_ColSetActivationGet() & C_bit_zdm_pied) && COL_GMAT_FlagsGet(COL_C_Ground) & Gmat_RM_Ice )
		ti_category--
	
//	if( ! EVENT_LIFE_CurLifeGet(ID_LIFE) )
	if( ! f_LIFE_cur )
		ti_category--
	
	return ti_category
}


procedure_ultra float Proc_PNJ_Lapin_GetRopeDistRenormalisation(int ti_monture_ID)
{
	float		tf_dist
	if( Proc_Lapin_Grappin_GogoMode() )
	{
		tf_dist = Cf_Corde_distance_GogoMode
		if( Config_Lapin == Config_Lapin_Boucher )
			tf_dist += (0.5 * OBJ_ZoomGet())
	}
	else if( ti_monture_ID != C_ID_Rayman )		// Monture
		tf_dist = 15.0
	else if( f_LIFE_cur )
	{
		switch( Type )
		{
			case Lapin_Type_Geant :
				tf_dist = 4.0
			default:
				tf_dist = 3.0
		}
	}
	else
	{
		switch( Type )
		{
			case Lapin_Type_Geant :
				tf_dist = 3.0
			default:
				tf_dist = 2.0
		}
	}
	return tf_dist
}


procedure_ultra int Proc_PNJ_Lapin_Grappin_Dodge()
{	
	if( i_etat_courant == ETAT_Lapin_DODGE )
	{
		switch( Atk_Dodge )
		{
			case Ci_Atk_Dodge_All :
			case Ci_Atk_Dodge_Grappin :
				return vrai
			break
		}
	}
	return faux
}


procedure_ultra int Proc_PNJ_Lapin_Grappin_Protege()
{	
	if( i_etat_courant == ETAT_Lapin_PROTECT )
	{
		switch( Atk_Protect )
		{
			case Ci_Atk_Protect_All :
			case Ci_Atk_Protect_Grappin :
				return vrai
			break
		}
	}
	return faux
}


procedure_ultra vector Proc_PNJ_Lapin_HotSpot_PosGet()
{
	object	to_canal
	vector	tv_pos
	if( Config_Lapin == Config_Lapin_Boucher )
	{
		to_canal = o_canal_tete
		tv_pos = @to_canal OBJ_PosGet()
		tv_pos += 0.25 * @to_canal OBJ_SightGet() * OBJ_ZoomGet()
	}
	else
	{
		to_canal = ANI_CanalObjectGet(Anim_Canal_Torse)
		tv_pos = @to_canal OBJ_PosGet()
	}
	return tv_pos
}

procedure_ultra vector Proc_PNJ_Lapin_RidedPosGet()
{
	vector	tv_pos
	vector	tv_offset
	tv_pos = @o_canal_tete OBJ_PosGet()
	tv_offset = Cv_NullVector
	switch( Type )
	{
		case Lapin_Type_Geant :
			tv_offset += @o_canal_tete OBJ_BankingGet() * OBJ_ZoomGet() * 0.25
			tv_offset += 0.1 * OBJ_SightGet() * OBJ_ZoomGet()
			break
		case Lapin_Type_Moyen :
			tv_offset += 0.15 * OBJ_SightGet() * OBJ_ZoomGet()
			break
		case Lapin_Type_Petit :
			tv_offset -= @o_canal_tete OBJ_BankingGet() * OBJ_ZoomGet() * 0.25
//			tv_offset += 0.15 * OBJ_SightGet() * OBJ_ZoomGet()
			break
		default:
			DBG_Error("???")
	}
	tv_pos += tv_offset
	return tv_pos
}

procedure_ultra vector Proc_PNJ_Lapin_RidedSightGet()
{
	return OBJ_SightGet()
}

procedure_ultra vector Proc_PNJ_Lapin_RidedBankingGet()
{
	return OBJ_BankingGet()
}



procedure_ultra int Proc_PNJ_Lapin_Is_Ride_Enabled()
{
//	switch( i_etat_courant )
//	{
//		case ETAT_Lapin_MORT :
//			return Mort_Immortel		// pour être ridé je ne dois pas mourir
//		default:
//		return faux
//	}
	
	if( Proc_Lapin_Grappin_GogoMode() )
		return faux
	
	if( f_Mort_duree )
	{
		// une fois le compteur KO commencé
		if( Mort_SeReleve )
			return vrai
		else
			return faux
	}
	
	if( i_etat_courant == ETAT_Lapin_PIEGE )
		return vrai
	
	return faux
}


procedure_ultra int Proc_Lapin_ModeCompagnon_Get()
{
	return Mode_Compagnon
}

procedure_ultra void Proc_Lapin_ModeCompagnon_Set(int ti_on)
{
	Mode_Compagnon = ti_on
}

procedure_ultra int Proc_Lapin_Type_Get()
{
	return Type
}

// PAF STUN
procedure_ultra float Proc_Lapin_Trampoline_Enabled()
{
	switch( i_etat_courant )
	{
		case ETAT_Lapin_APPARITION : 
		case ETAT_Lapin_CHUTE :
		case ETAT_Lapin_DODGE :
		case ETAT_Lapin_COUNTER :
		case ETAT_Lapin_GOGO :
		case ETAT_Lapin_GRABBED :
		case ETAT_Lapin_JUMP :
		case ETAT_Lapin_MORT :
		case ETAT_Lapin_RIDED :
		case ETAT_Lapin_TAUPE :
		case ETAT_Lapin_ASPIRE :
			return 0.0
		default:
			return 1.3  * OBJ_ZoomGet()
	}
}


procedure_ultra int Proc_PNJ_Lapin_NearDistGet()
{
	// Rayman seul
	switch( Type )
	{
		case Lapin_Type_Petit : 
			return 4.0
			break
		case Lapin_Type_Moyen :
			return 6.0
			break
		case Lapin_Type_Geant :
			return 9.0
			break
	}
}

procedure_ultra vector Proc_PNJ_Lapin_JoyGetMove()
{
	return v_traction_joy * 2.0
}

procedure_ultra vector Proc_PNJ_Lapin_VirtualSightGet()
{
	return v_look_virtual_sight
}

procedure_ultra object Proc_PNJ_Lapin_MontureGet()
{
	return o_RideMount_Actor
}

procedure_ultra int Proc_PNJ_Lapin_MontureIDGet()
{
	return i_RideMount_ID
}

procedure_ultra int Proc_PNJ_Lapin_MontureIDTest(int ti_id)
{
	if( o_RideMount_Actor && ti_id && i_RideMount_ID == ti_id )
		return vrai
	else
		return faux
}

procedure_ultra void Proc_PNJ_Lapin_Push(vector tv_traction)
{
	vector	tv_add
	switch( i_etat_courant )
	{
		case ETAT_Lapin_MORT :
			tv_add = tv_traction
			tv_add /= OBJ_ZoomGet()
			tv_add /= 5.0
			v_traction_push += tv_add
			break
	}
}


procedure_ultra int Proc_PNJ_Lapin_Can_Dodge_Weapon(object to_sender, int ti_weapon_ID)
{
	if( i_etat_courant == ETAT_Lapin_DODGE && to_sender != o_dodge_actor )
		return faux
	if( i_etat_courant == ETAT_Lapin_DODGE 
	|| i_etat_dodge_enabled )
	{
		switch( ti_weapon_ID )
		{
			case RM_WEAPON_TYPE_GRENADE :
				switch( Atk_Dodge )
				{
					case Ci_Atk_Dodge_All :
					case Ci_Atk_Dodge_Grenade :
						return vrai
						break
				}
				break
			case RM_WEAPON_TYPE_GUN :
				switch( Atk_Dodge )
				{
					case Ci_Atk_Dodge_All :
					case Ci_Atk_Dodge_Gun :
						return vrai
						break
				}
				break
		}
	}
	return faux
}

procedure_ultra void Proc_PNJ_Lapin_Dodge_Actor_Set(object to_actor, int ti_mode)
{
	o_external_dodge_actor = to_actor
	i_external_dodge_mode = ti_mode
}


procedure_ultra int Proc_PNJ_Lapin_Can_Protect_Weapon(object to_sender, int ti_weapon_ID)
{
	if( i_etat_courant == ETAT_Lapin_PROTECT && to_sender != o_protect_actor )
		return faux
	if( i_etat_courant == ETAT_Lapin_PROTECT 
	|| i_etat_protect_enabled )
	{
		switch( ti_weapon_ID )
		{
			case RM_WEAPON_TYPE_GRENADE :
				switch( Atk_Protect )
				{
					case Ci_Atk_Protect_All :
					case Ci_Atk_Protect_Grenade :
						return vrai
						break
				}
				break
			case RM_WEAPON_TYPE_GUN :
				switch( Atk_Protect )
				{
					case Ci_Atk_Protect_All :
					case Ci_Atk_Protect_Gun :
						return vrai
						break
				}
				break
		}
	}
	return faux
}

procedure_ultra void Proc_PNJ_Lapin_Protect_Actor_Set(object to_actor, int ti_mode)
{
	o_external_protect_actor = to_actor
	i_external_protect_mode = ti_mode
}


procedure_ultra int Proc_PNJ_Lapin_Paf_Jauge_is_Ready()
{
	if( f_paf_jauge >= f_paf_jauge_max )
		return vrai
	else
		return faux
}

procedure_ultra int Proc_PNJ_Lapin_Paf_Combo_Waiting_for_Finish()
{
	return i_paf_combo_fort_en_cours
}


procedure_ultra int Proc_PNJ_Lapin_ModeTest(int ti_test_etat)
{
	switch( ti_test_etat )
	{
		case Ci_Lapin_Mode_Attente :
			if( i_etat_courant == ETAT_Lapin_ATTENTE )
				return vrai
			break
		case Ci_Lapin_Mode_Fight :
			switch( i_etat_courant )
			{
				case ETAT_Lapin_FIGHT :
				case ETAT_Lapin_BULLRUSH :
				case ETAT_Lapin_COUNTER :
				case ETAT_Lapin_MELEE :
				case ETAT_Lapin_GRAPPIN_CONTROL :
				case ETAT_Lapin_DODGE :
				case ETAT_Lapin_PAF :
				case ETAT_Lapin_PAF_STUN :
				case ETAT_Lapin_GOGO :
				case ETAT_Lapin_USE_POWERMOUNT :
					return vrai
					break
				case ETAT_Lapin_USE_ITEM :
					if( Lapin_ITEM_Has_Weapon() )
						return vrai
					break
			}
			break
		case Ci_Lapin_Mode_Paf :
			if( i_etat_courant == ETAT_Lapin_PAF || i_etat_courant == ETAT_Lapin_PAF_STUN )
				return vrai
			break
		case Ci_Lapin_Mode_KO :
			if( f_Mort_duree )
				return vrai
			break
		case Ci_Lapin_Mode_Rided :
			if( o_Rided_Actor )
				return vrai
			break
		case Ci_Lapin_Mode_Piege :
			if( i_etat_courant == ETAT_Lapin_PIEGE || i_etat_courant == ETAT_Lapin_ASPIRE )
				return vrai
			break
		case Ci_Lapin_Mode_Danse :
			if( i_etat_courant == ETAT_Lapin_BEAT_DANSE )
				return vrai
			break
		case Ci_Lapin_Mode_Cache :
			if( i_etat_courant == ETAT_Lapin_CACHE )
				return vrai
			break
		case Ci_Lapin_Mode_Gogo :
			return Proc_Lapin_Grappin_GogoMode()
			break
		case Ci_Lapin_Mode_Fuite :
			if( i_etat_courant == ETAT_Lapin_FUITE )
				return vrai
			if( i_etat_courant == ETAT_Lapin_CACHE && i_cache_mode == Ci_CACHE_Mode_Fuite )
				return vrai
			break
	}
	return faux
}

procedure_ultra int Proc_PNJ_Lapin_ETAT_Courant_Get()
{
	return i_etat_courant
}

procedure_ultra int Proc_PNJ_Lapin_Best_Interet_Get(byref messageid tmid_interet)
{
	if( MSG_GlobalIsValid(mid_best_interet) )
	{
		tmid_interet = mid_best_interet
		return vrai
	}
	else
	{
		MSG_GlobalSetInvalid(tmid_interet)
		return faux
	}
}

procedure_ultra float Proc_PNJ_Lapin_LIFE_Get()
{
	return f_LIFE_cur
}

procedure_ultra void Proc_PNJ_Lapin_COMMANDER_Set(object to_actor)
{
	Commander = to_actor
}

procedure_ultra void Proc_PNJ_Lapin_COMMANDER_Target_Set(object to_actor)
{
	o_Commander_Force_Target = to_actor
}

procedure_ultra object Proc_PNJ_Lapin_COMMANDER_Target_Get()
{
	object to_target
	to_target = nobody
//	switch( Proc_PNJ_Lapin_ETAT_Courant_Get() )
//	{
//		case ETAT_Lapin_FIGHT :
//		case ETAT_Lapin_BULLRUSH :
//		case ETAT_Lapin_CACHE :
//		case ETAT_Lapin_COUNTER :
//		case ETAT_Lapin_DODGE :
//		case ETAT_Lapin_FUITE :
//		case ETAT_Lapin_GET_ITEM :
//		case ETAT_Lapin_GET_MOUNT :
//		case ETAT_Lapin_GOGO :
//		case ETAT_Lapin_GRABBED :
//		case ETAT_Lapin_GRAPPIN_CONTROL :
//		case ETAT_Lapin_MELEE :
//		case ETAT_Lapin_PAF :
//		case ETAT_Lapin_PAF_STUN :
//		case ETAT_Lapin_PROTECT :
//		case ETAT_Lapin_TAUPE :
//		case ETAT_Lapin_USE_ITEM :
//		case ETAT_Lapin_USE_POWERMOUNT :
//		case ETAT_Lapin_JUMP :
			if( MSG_GlobalIsValid(mid_best_interet) )
				to_target = EVENT_InteretTargetGet(mid_best_interet)
//			break
//	}
	return to_target
}

// retourne vrai si je peux me fier aux tests du commander
procedure_ultra int Proc_PNJ_Lapin_COMMANDER_Etat_Commandant()
{
	switch( i_etat_courant )
	{
		case ETAT_Lapin_PAF :
		case ETAT_Lapin_PAF_STUN :
		case ETAT_Lapin_PIEGE :
		case ETAT_Lapin_ASPIRE :
		case ETAT_Lapin_GRABBED :
		case ETAT_Lapin_BEAT_DANSE :
		case ETAT_Lapin_GOGO :
		case ETAT_Lapin_MORT :
		case ETAT_Lapin_RIDED :
			return faux
			break
		default:
			if( ! f_LIFE_cur )
				return faux
			break
	}
	return vrai
}

//procedure_ultra int Proc_PNJ_Lapin_COMMANDER_Etat_Commandant()
//{
//	switch( i_etat_courant )
//	{
//		case ETAT_Lapin_ATTENTE :
//			return vrai
//			break
//		default:
//			return faux
//			break
//	}
//}
//
//


procedure_local int Lapin_LUMS_Cage_Has()
{
	if( o_lums_cage )
		return vrai
	return faux
}

procedure_local void Lapin_LUMS_Cage_Lose()
{
	o_lums_cage = LNK_ClientGet(Ci_LNK_GRAB_OBJECT, mid_lums_cage_LNK_ID, faux, nofunc, nofunc, nofunc)
}

procedure_local void Lapin_LUMS_Cage_Init_Values()
{
	int		ti_1
	int		ti_2
	int		ti_3
	int		ti_4
	SND_RequestPlay(Ci_SND_ITEM_Get_Clef)
	// secto
	SCT_GetOf(&ti_1,&ti_2,&ti_3,&ti_4)
	@o_lums_cage SCT_SetOf(ti_1,ti_2,ti_3,ti_4)
}


procedure_ultra void Lapin_TYPE_Set(int ti_type)
{
	Type = ti_type
}

procedure_ultra void Lapin_Mode_TRANSPORT_de_TROUPE_Init(object to_bascule)
{
	Mort_SeReleve = faux
	Mort_Destruction = vrai
	Atk_Meute_Dist_Detection = 50.0
	ao_extern_uncol[i_extern_uncol] = to_bascule
	i_extern_uncol++
}

procedure_ultra void Lapin_APPARITION_Monture_Set(object to_monture, int ti_duplicate, int ti_dont_modify)
{
	App_Monture_Gao = to_monture
	App_Monture_duplication = ti_duplicate
	App_Monture_dont_modify = ti_dont_modify
}

procedure_ultra void Lapin_APPARITION_Item_Set(object to_item, int ti_duplicate)
{
	App_Item_Gao = to_item
	App_Item_duplication = ti_duplicate
}

