#include "PNJ_Lapin_defines.var"

vector	tv_pos
vector	tv_sight
vector	tv_banking

if( o_RideMount_Callback_Actor && MSG_GlobalIsValid(mid_RideMount_LNK_ID) )
{
	tv_pos = Proc_PNJ_RidedPosGet(o_RideMount_Callback_Actor)
	tv_sight = Proc_PNJ_RidedSightGet(o_RideMount_Callback_Actor)
	tv_banking = Proc_PNJ_RidedBankingGet(o_RideMount_Callback_Actor)
	
	switch( i_RideMount_ID )
	{
		case C_ID_Monture_Rhino :
		case C_ID_Monture_Serpent :
		case C_ID_Monture_Tigre :
		case C_ID_Monture_Araignee :
		case C_ID_Scooter :
		case C_ID_Monture_Rope :
		case C_ID_Monture_Quadripode :
		case C_ID_Monture_Transport :
		case C_ID_Monture_Soucoupe :
			break
		case C_ID_Monture_Aigle :
		case C_ID_Monture_Bat :
		case C_ID_Monture_PoissonLumiere :
		case C_ID_Monture_Requin :
		default:
			DBG_Error("Monture de type inconnu ou interdit...!?")
			break
	}
	
	OBJ_PosSet(MATH_VecBlend(OBJ_PosGet(), tv_pos, f_RideMount_coef))
	OBJ_BankingGeneralSet(
		MATH_VecBlendRotate(OBJ_SightGet(), tv_sight, f_RideMount_coef),
		MATH_VecBlendRotate(OBJ_BankingGet(), tv_banking, f_RideMount_coef))
}


// suivi regard après !!!
AI_Execute("Lapin_exec_neck")

