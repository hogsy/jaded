#include "PNJ_Lapin_defines.var"

int			ti_action
int			ti_paf_fort
int			ti_ok
float		tf_dot_X
float		tf_dot_Y
float		tf_rand
vector	tv_impulsion
vector	tv_sight
vector	tv_pos


// SORTIE ETAT ===================================================================
if (i_sort_etat)
{
	Lapin_PRIORITY_Set(Ci_AI_Priority_NORMAL)
	if( OBJ_FlagsIdentityTest(OBJ_C_IdentityFlag_Dyna) )
		DYN_GravitySet(Cv_DYN_Gravity)
	i_paf_combo_game_speed_end_flag = vrai
	i_paf_combo_fort_en_cours = faux
	i_paf_combo_fort_finish_en_cours = faux
	i_paf_fort_en_cours = faux
	Lapin_EXPRESSION(Cf_Expr_Mouth_Closed)
	i_sort_etat = faux
	return
}

// INITIALISATION ETAT ==============================================================
if (i_etat_courant != ETAT_Lapin_PAF)
{
	i_dernier_etat = i_etat_courant
	i_etat_courant = ETAT_Lapin_PAF
	if (fct_last_etat)
	{
		i_sort_etat = vrai
		AI_Execute(fct_last_etat)
	}
	Lapin_DBG_Trace_String(DBG_Trace_Etat, "PAF")
	fct_previous_etat = fct_last_etat
	fct_last_etat = AI_TrackCurGet()
	
	REINIT:
	f_time_start_etat = 0.0
	ti_paf_fort = faux
	o_paf_actor = o_paf_detect_actor
	if( MATH_VecNullToler(v_paf_detect_dir, 0.01) )
		v_paf_detect_dir = - OBJ_SightGet()
	v_paf_dir = MATH_VecNormalize(v_paf_detect_dir)
	v_paf_pos = v_paf_detect_pos
	i_paf_type = i_paf_detect_type
	o_paf_detect_actor = nobody
	i_paf_combo_fort_en_cours = faux
	i_paf_combo_fort_finish_en_cours = faux
	i_paf_fort_en_cours = faux
	Lapin_EXPRESSION(Cf_Expr_Mouth_Full)
	i_depl_jump_cpt = 0		// spécial
	
	// Paf Dir
	if( MATH_VecNullToler(v_paf_dir, 0.01) )
	{
		if( o_paf_actor )
			v_paf_dir = OBJ_PosGet() - @o_paf_actor OBJ_PosGet()
		else
			v_paf_dir = - OBJ_SightGet()
	}
	DBG_RenderVector(OBJ_PosGet(), v_paf_dir, color_rouge)
	
	// paf origin (look ensuite)
	if( o_paf_actor )
		v_paf_look_origin_memo = @o_paf_actor OBJ_PosGet()
	else
		v_paf_look_origin_memo = OBJ_PosGet() + (5.0 * v_paf_dir)
	
	// Paf Action
	if( i_flag_paf_combo_fort_finish )
	{
		ti_paf_fort = vrai
		Lapin_SND_Paf(Ci_SND_PAF_Big)
		i_paf_combo_fort_finish_en_cours = vrai
		f_paf_jauge = 0.0
	}
	else if( i_flag_paf_combo_fort )
	{
		ti_paf_fort = vrai
		Lapin_SND_Paf(Ci_SND_PAF_Big)
		i_paf_combo_fort_en_cours = vrai
		f_paf_jauge = 0.0
	}
	else if( ! f_LIFE_cur )
	{
		ti_paf_fort = vrai
		Lapin_SND_Paf(Ci_SND_PAF_Die)
	}
	else if( i_paf_detect_type & C_PAF_RM_Fort )
	{
		ti_paf_fort = vrai
		Lapin_SND_Paf(Ci_SND_PAF_Big)
	}
	else
		Lapin_SND_Paf(Ci_SND_PAF_Medium)
	
	// PAF FORT CONSEQUENCES
	if( ti_paf_fort )
	{
		i_paf_fort_en_cours = vrai
		
		Lapin_PRIORITY_Set(Ci_AI_Priority_APRES)
		
		Lapin_ITEM_Lose()
		
		if( ! f_LIFE_cur )
		{
			Lapin_ITEM_Key_Lose()
			Lapin_LUMS_Cage_Lose()
		}
		
		Lapin_GRAPPIN_Control_Activate(faux)	// perd le contrôle du grappin
		
		Lapin_RIDEMOUNT_Cancel()		// couper le ride !!!
		
		// paf impulsion
		DYN_FrictionVectorSet(Cv_DYN_Friction_Jump)
		if( i_flag_paf_combo_fort_finish )
		{
			tv_impulsion = v_paf_dir * 40.0 + cvector(0.0, 0.0, 5.0)
			DYN_GravitySet(cvector(0.0, 0.0, -10.0))
		}
		else if( i_flag_paf_combo_fort )
		{
			tv_impulsion = Cv_VerticalVector * 4.0
			DYN_GravitySet(cvector(0.0, 0.0, -1.0))
		}
		else
		{
			tv_impulsion = v_paf_dir * 10.0 + cvector(0.0, 0.0, 5.0)
			DYN_GravitySet(cvector(0.0, 0.0, -10.0))
		}
		if( ! i_Mort_JeMeNoie_flag )
			DYN_SpeedSetVector(tv_impulsion)		// pas de bond si mort noyé...
		f_paf_crete_delai = (-tv_impulsion.z / DYN_GravityVectorGet().z) - 0.1
	}
	else
		DYN_GravitySet(Cv_DYN_Gravity)
	v_special_gravity = DYN_GravityVectorGet()
	
	// Dégradation terminator
	if( Config_Lapin == Config_Lapin_Terminator )
	{
		if( i_decomposition_phase < 2 )
		{
			if( i_flag_paf_combo_fort_finish || i_flag_paf_jauge || f_paf_puissance >= 30.0 )
				i_decomposition_phase++
		}
		
		if( ti_paf_fort && i_decomposition_phase )
		{
			i_Terminator_CourtCircuit_flag = vrai
			f_Terminator_CourtCircuit_timer = 0.5
		}
	}

	// ACTION ?
	DBG_RenderVector(OBJ_PosGet() + Cv_VerticalVector, v_paf_dir, color_rouge)
	tf_dot_X = MATH_VecDotProduct(v_paf_dir, OBJ_HorizonGet())
	tf_dot_Y = MATH_VecDotProduct(v_paf_dir, OBJ_SightGet())
	if( ti_paf_fort )
	{
		if( i_flag_paf_combo_fort_finish )
			ti_action = Action_Paf_Combo_Finish
		else if( i_flag_paf_combo_fort )
			ti_action = Action_Paf_Combo_Fort
		else
			ti_action = Action_Paf_fort_face
		i_paf_combo_cpt = -1
	}
	else
	{
		if( i_flag_paf_combo_petit )
		{
			i_paf_combo_cpt = MATH_Modulo(i_paf_combo_cpt +1, 3)
			ti_action = Action_Paf_Combo_Petit1 + i_paf_combo_cpt
		}
		else
		{
			tf_rand = MATH_RandFloat(0.0,1.0)
			if( tf_rand < 0.25 )
				ti_action = Action_Paf_petit_face
			else if( tf_rand < 0.5 )
				ti_action = Action_Paf_Combo_Petit1
			else if( tf_rand < 0.75 )
				ti_action = Action_Paf_Combo_Petit2
			else
				ti_action = Action_Paf_Combo_Petit3
			i_paf_combo_cpt = -1
		}
	}
	Lapin_ACTION_Set(ti_action | Ci_ActionSet_Force_SameAction | Ci_ActionSet_Force_FrameZero)
	Lapin_ACTION_RandomFreqSet(0.8, 1.2)
	
//	if( i_flag_paf_combo_fort_finish )
//		DBG_TraceString("combo FINISH !!!!\n")
//	else if( i_flag_paf_combo_fort )
//		DBG_TraceString("combo FORT\n")
//	else if( i_flag_paf_combo_petit )
//		DBG_TraceString("combo petit\n")
//	DBG_TraceString("paf act = ")
//	DBG_TraceInt(ti_action)
//	DBG_TraceEOL()
	
	// GFX ---------------------------------------------------------------------------------------------------------
//	i_paf_cpt = MATH_Modulo(i_paf_cpt+1,3)
//	if( ! i_paf_cpt || MATH_RandFloat(0.0, 1.0) < 0.33 )
//		Lapin_GFX_GoutteSueur_Creation()
	
//	i_GFX_Couronne_etoiles_cpt = MATH_Modulo(i_GFX_Couronne_etoiles_cpt + 1, i_GFX_Couronne_etoiles_modulo)
//	if( i_GFX_Couronne_etoiles_cpt == 0 || MATH_RandFloat(0.0, 1.0) < 0.15 )
//		f_GFX_Couronne_etoiles_duree = 2.0
}
else
{
	f_time_start_etat += TIME_GetDt()
}


// MORT MANGE.... :'( ===========================================================================================
if( i_Grabbed_Died_flag )
{
	if( f_time_start_etat > 1.0 )	// wait for snd
	{
		MACRO_LAPIN_DESTROY
	}
	returntrack
}

// ANALYSE ===================================================================================================
o_Grabbed_Actor = LNK_ServeurGet(Ci_LNK_GRAB_EAGLE, mid_Grabbed_LNK_ID, vrai, nofunc, nofunc)
if( o_Grabbed_Actor )
	macro_change_etat("Lapin_ETAT_GRABBED")

o_Rided_Actor = LNK_ServeurGet(Ci_LNK_RIDE_ON_NMI, mid_Rided_LNK_ID, vrai, nofunc, nofunc)
if( o_Rided_Actor )
	macro_change_etat("Lapin_ETAT_RIDED")

AI_Execute("Lapin_exec_check_vision")

AI_Execute("Lapin_exec_check_paf")
if( i_flag_paf_stun )
	macro_change_etat("Lapin_ETAT_PAF_STUN")
if( i_Counter_flag )
	macro_change_etat("Lapin_ETAT_COUNTER")
if( i_flag_paf )
{
	goto REINIT		// cumuler les anims de paf jusqu'à l'anim de paf mort
}

if( f_time_start_etat > 0.5 )	// anti ai-loop
{
	if( i_ventilo_flag )
		macro_change_etat("Lapin_ETAT_ASPIRE")
}

if( i_Mort_JeMeNoie_flag )
	MACRO_GO_IDLE(0)		// passer en mort

AI_Execute("Lapin_exec_update_best_interest")

// COMPORTEMENT ===================================================================================================
switch( ACT_ActionGet() )
{
	case Action_Paf_fort_face :
	case Action_Paf_Combo_Fort :
		i_ground_flag = faux		// force no ground pour la track end
		if( ACT_ActionFinished() || f_time_start_etat >= f_paf_crete_delai )
			Lapin_ACTION_Set(Action_Paf_fort_crete)
		break
	case Action_Paf_fort_crete :
	case Action_Paf_Combo_Finish :
		if( i_ground_flag || i_is_in_water )
		{
			Lapin_ACTION_Set(Action_Paf_fort_reception)
			i_paf_combo_fort_en_cours = faux
			i_paf_combo_game_speed_end_flag = vrai
		}
		else if( ACT_ActionFinished() && ! i_paf_combo_fort_en_cours && ! i_paf_combo_fort_finish_en_cours )
			macro_change_etat("Lapin_ETAT_CHUTE")
		break
	case Action_Paf_fort_reception :
		if( ACT_ActionFinished() )
		{
//			if( EVENT_LIFE_CurLifeGet(ID_LIFE) )
			if( f_LIFE_cur )
				Lapin_ACTION_Set(Action_Paf_fort_face_get_up)
			else
				MACRO_GO_IDLE(0)	// DEAD
		}
		break
	case Action_Paf_petit_face :
	case Action_Paf_Combo_Petit1 :
	case Action_Paf_Combo_Petit2 :
	case Action_Paf_Combo_Petit3 :
		if( i_paf_combo_cpt == -1 )		// paf simple pas en combo
			v_traction_joy = v_paf_dir
		// no break !!!
	default:
		if( ACT_ActionFinished() )
			MACRO_GO_IDLE(0)
		break
}

// Orientation
tv_sight = -v_paf_dir
v_force_sight = tv_sight
f_orient_speed = 8.0
AI_Execute("Lapin_exec_way_orientation")


if( i_paf_combo_fort_en_cours )
{
	i_paf_combo_game_speed_flag = vrai
	if( v_speedgetvector.z < 0.0 )
	{
		v_special_gravity = MATH_VecBlend(v_special_gravity, Cv_DYN_Gravity, 2.0 * TIME_GetDt())
		DYN_GravitySet(v_special_gravity)
	}
}

if( i_paf_combo_fort_finish_en_cours )
	i_flag_zde_fight_enable = vrai

//if( i_paf_combo_fort_en_cours )
//	Str_DisplayTextOnce("i_paf_combo_fort_en_cours", MACRO_2D+cvector(0,0.05,0))
//if( i_paf_combo_fort_finish_en_cours )
//	Str_DisplayTextOnce("i_paf_combo_fort_finish_en_cours", MACRO_2D+cvector(0,0.05,0))
//

OBJ_CapaSet(Obj_Capa_Fight, none)

