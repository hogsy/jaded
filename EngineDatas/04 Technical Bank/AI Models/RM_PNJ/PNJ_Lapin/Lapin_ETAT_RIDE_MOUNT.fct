#include "PNJ_Lapin_defines.var"


// SORTIE ETAT ===================================================================
if( i_sort_etat )
{
	i_sort_etat = faux
	return
}

// INITIALISATION ETAT ==============================================================
if( i_etat_courant != ETAT_Lapin_RIDE_MOUNT )
{
	i_dernier_etat = i_etat_courant
	i_etat_courant = ETAT_Lapin_RIDE_MOUNT
	if( fct_last_etat )
	{
		i_sort_etat = vrai
		AI_Execute(fct_last_etat)
	}
	Lapin_DBG_Trace_String(DBG_Trace_Etat, "RIDE MOUNT")
	fct_previous_etat = fct_last_etat
	fct_last_etat = AI_TrackCurGet()
	f_time_start_etat = 0.0
	
	// CALLBACK
	o_RideMount_Callback_Actor = o_RideMount_Actor
	switch( i_RideMount_ID )
	{
		case C_ID_Scooter :
		case C_ID_Monture_Transport :
		case C_ID_Monture_Soucoupe :
			AI_CBAdd(o_RideMount_Callback_Actor, CallBack_After_Rec, "Lapin_callback_RideMount")
			break
		case C_ID_Monture_Rope :
			// no cb tout à la mano :)
			break
		default:
			AI_CBAdd(o_RideMount_Callback_Actor, CallBack_After_Blend, "Lapin_callback_RideMount")
			break
	}
	
	// INIT VALUES
	f_powermount_range = Proc_Monture_ChargeAttack_RangeGet(o_RideMount_Actor)
	f_powermount_charge = Proc_Monture_ChargeAttack_DureeGet(o_RideMount_Actor)
	Lapin_DYNA(faux)
}
else
{
	f_time_start_etat += TIME_GetDt()
}

if( ! i_App_Trigger_done && i_RideMount_ID == C_ID_Scooter )
	i_App_Trigger_done = vrai		// c'est pas moi qui pilote dont exit le mode apparition...

if( i_App_Trigger_done )
{
	if( i_RideMount_ID == C_ID_Monture_Rope )
	{
		return				// attendre de toucher le sol
	}
	MACRO_GO_IDLE(0)
}
else
	macro_change_etat("Lapin_ETAT_APPARITION")
