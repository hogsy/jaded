#include "PNJ_Lapin_defines.var"

vector	tv_temp
vector	tv_temp1
float		tf_dot
float		tf_norm


// SORTIE ETAT ===================================================================
if (i_sort_etat)
{
	Lapin_EXPRESSION(Cf_Expr_Mouth_Closed)
	i_sort_etat = faux
	return
}

// INITIALISATION ETAT ==============================================================
if (i_etat_courant != ETAT_Lapin_DODGE) 
{
	i_dernier_etat = i_etat_courant
	i_etat_courant = ETAT_Lapin_DODGE
	if (fct_last_etat)
	{
		i_sort_etat = vrai
		AI_Execute(fct_last_etat)
	}
	Lapin_DBG_Trace_String(DBG_Trace_Etat, "DODGE")
	fct_last_etat = AI_TrackCurGet()
	f_time_start_etat = 0.0
	
	tv_temp = @o_dodge_actor OBJ_PosGet() - OBJ_PosGet()
	tv_temp.z = 0.0
	DBG_RenderVector(OBJ_PosGet() + Cv_VerticalVector, tv_temp, color_bleu)
	tv_temp1 = OBJ_HorizonGet()
	tv_temp1.z = 0.0
	
	// DODGE D/G
	tf_dot = MATH_VecDotProduct(tv_temp, tv_temp1)
	if( tf_dot > 0.0 )
		Lapin_ACTION_Set(Action_Fight_Dodge_droite)
	else
		Lapin_ACTION_Set(Action_Fight_Dodge_gauche)
	
	i_dodge_last_action = ACT_ActionGet()
	i_dodge_flag = faux
	SND_RequestPlay(Ci_SND_FIGHT_Dodge)
	Lapin_EXPRESSION(Cf_Expr_Mouth_Middle)
}
else
{
	f_time_start_etat += TIME_GetDt()
}

// STIMULI ===========================================================================
o_Grabbed_Actor = LNK_ServeurGet(Ci_LNK_GRAB_EAGLE, mid_Grabbed_LNK_ID, vrai, nofunc, nofunc)
if( o_Grabbed_Actor )
	macro_change_etat("Lapin_ETAT_GRABBED")

o_Rided_Actor = LNK_ServeurGet(Ci_LNK_RIDE_ON_NMI, mid_Rided_LNK_ID, vrai, nofunc, nofunc)
if( o_Rided_Actor )
	macro_change_etat("Lapin_ETAT_RIDED")

if( Lapin_ROPE_Gogo_Mode() )
	macro_change_etat("Lapin_ETAT_GOGO")

MACRO_CHECK_CHUTE

AI_Execute("Lapin_exec_check_vision")

MACRO_CHECK_PAFS

if( i_ventilo_flag )
	macro_change_etat("Lapin_ETAT_ASPIRE")

if( o_piege )
	macro_change_etat("Lapin_ETAT_PIEGE")

// anti_mashing ?
AI_Execute("Lapin_exec_check_anti_mashing")
if( i_anti_mashing_flag )
	MACRO_GO_IDLE(0)

AI_Execute("Lapin_exec_update_best_interest")


// COMPORTEMENT ===================================================================

//COL_ColSetActivationSet(none, C_bit_zde_corps)


if( ACT_ActionFinished() )
{
	// FUITE APRES DODGE ?
	switch( Fuite_Apres_Dodge )
	{
		case Ci_Fuite_Apres_Dodge_Toujours :
			Lapin_FUITE(o_dodge_actor)
			break
		case Ci_Fuite_Apres_Dodge_Grappin :
			if( i_dodge_mode == Ci_Dodge_Mode_Grappin )
				Lapin_FUITE(o_dodge_actor)
			break
		case Ci_Fuite_Apres_Dodge_Gun :
			if( i_dodge_mode == Ci_Dodge_Mode_Gun )
				Lapin_FUITE(o_dodge_actor)
			break
		case Ci_Fuite_Apres_Dodge_Grenade :
			if( i_dodge_mode == Ci_Dodge_Mode_Grenade )
				Lapin_FUITE(o_dodge_actor)
			break
	}
	o_dodge_actor = nobody
	i_dodge_mode = 0
	
//	if( fct_previous_etat )
//		macro_change_etat(fct_previous_etat)		// retour en cache
//	else
//		macro_change_etat(fct_main_etat)
	MACRO_GO_IDLE(0)
}

// Orientation
v_way_destpos = @o_dodge_actor OBJ_PosGet()
i_target_territory_ID = Lapin_PROC_POS_GET_TERRITORY_ID(v_way_destpos)

// Regard ----------------------------------------------------------
i_flag_look = vrai
v_look_pos = v_way_destpos

switch( Type )
{
	case Lapin_Type_Petit :
		tf_norm = 5.0
		break
	case Lapin_Type_Moyen :
		tf_norm = 7.5
		break
	case Lapin_Type_Geant :
		tf_norm = 10.0
		break
	default:
		DBG_Error("???")
}

switch( ACT_ActionGet() )
{
	case Action_Fight_Dodge_droite :
		if( f_time_start_etat < 0.25 )
			v_traction_joy = OBJ_HorizonGet() * tf_norm
		v_force_sight = v_way_destpos - OBJ_PosGet()
		break
	case Action_Fight_Dodge_gauche :
		if( f_time_start_etat < 0.25 )
			v_traction_joy = - OBJ_HorizonGet() * tf_norm
		v_force_sight = v_way_destpos - OBJ_PosGet()
		break
	default:
		v_force_sight = v_way_destpos - OBJ_PosGet()
		break
}

f_orient_speed = 10.0
AI_Execute("Lapin_exec_way_orientation")


OBJ_CapaSet(Obj_Capa_Fight, none)
