#include "PNJ_Lapin_defines.var"

function track0 = "Lapin_track_init"
// function track1 = "name"
// function track2 = "name"
// function track3 = "name"
// function track4 = "name"

separator "LAPIN"
int							Config_Lapin = enum("0-Custom" 0 "1-Fourbe" 1 "2-Splinter Cell" 2 "3-Voleur de Clef Peureux" 3 "4-Brutus" 4 "5-Zombie" 5 "6-Terminator" 6 "7-Voleur de Clef Agressif" 7 "8-Boucher" 8 )
int							Type = enum("0-Moyen" 0 "1-Petit" 1 "2-Géant" 2)
int							Shape = enum("0-Random" 0 "1-Blanc" 1 "3-Blanc - Maigre" 3 "4-Gris - Grand" 4 "5-Gris - PtiGros" 5 )
float						Life_Max = 0.0			// Life Max
int							Beat_Config = enum("0-Ignore" 0 "1-Dance" 1 ) // "2-Alerte" 2 )
float						Beat_Action_Retard = 0.0
int							Grappin_HotSpot =vrai_faux		// par défaut un lapin n'est plus grappinable

separator "BONUS"
int							Bonus_Life = 3
int							Bonus_Mana = 2
private int				Bonus_Lum = 0

separator "DEPLACEMENT"
float						Depl_Speed_Max_Course = 0.0		// Speed Max déplacement attente et attaque
private float				Speed_Max
float						Depl_Speed_Max_Nage = 2.0
private float				Nage_Speed_Max
int							Depl_Jump = faux_vrai
private int				i_depl_jump_cpt
int							Depl_Taupe = faux_vrai
int							Depl_MontureRayman = faux_vrai
float						Depl_Stream_Pct = 1.0		// % d'application des forces de stream

separator "TERRITOIRE"
network					Territory_Colmap = nonet		// Réseau de la Colmap de Territoire
network					Territory_Path = nonet			// Réseau du Path de Territoire
object					Territory_BV                      = nobody			// BV de Territoire
object					Territory_Error_wp_safe = nobody

// BV occluders optim
private int				i_Territory_BV_Occluders_nb
private object			ao_Territory_BV_Occluders[50]

//separator "BEAT"
private int				Beat_Jingle = enum("0-Tous" 0 "1-Jingle 1" 1 "2-Jingle 2" 2 "3-Jingle 3" 3 "4-Jingle 4" 4 )
private int				i_Global_SND_Beat = -1
private int				i_Global_SND_Beat_Tempo = 0
private vector			v_Global_SND_Beat_SwitchPos
private int				i_Beat_flag_danse
private int				i_Beat_flag_danse_mode
private int				i_Beat_flag_alert
private int				i_Beat_flag_alert_mode
private int				i_Beat_memo
private int				i_Danse_pos_index
private int				i_Danse_pos_ok
private int				i_Danse_jump_done
private int				i_Danse_formation_nb

separator "ITEM"
int							Item_Arme_Utilisable = enum("0-Aucune arme" 0 "1-Toutes les armes" 1 "2-Guns" 2 "3-Grenades" 3 "4-Gourdins" 4 )	// Armes maniées
private int				Item_Arme
int							Item_Rafale = 1
int							Item_Rafale_Miss = 0
int							Item_Prioritaire = enum("0-Rien" 0 "1-Clef" 1)		// Item prioritaire
float						Item_Distance_de_Filature = 0.0		// distance de filature pour un objet déjà grabbé
private float				Item_dist_Keep_Safe
int							Item_Appat_Carotte = vrai_faux
int							Item_Lums_Cage_enabled = vrai_faux

separator "APPARITION"
trigger					App_Trigger			// Trigger d'apparition
private int				i_App_Trigger_done
object					App_WP = nobody	// WP d'apparition
private int				i_App_mode
private object			o_App_next_wp = nobody
private network		WAY_App = nonet
// item
object					App_Item_Gao = nobody
int							App_Item_duplication = faux_vrai
private int				App_Item_ID
// monture
object					App_Monture_Gao = nobody
private object			o_App_Monture_Gao_this_one = nobody
private float				f_App_Monture_Gao_this_one_destroy_delai
int							App_Monture_duplication = faux_vrai
private int				App_Monture_ID
private int				App_Monture_dont_modify

private float				f_App_ground_delai		// délai avant jump
float						App_Speed_Max = 0.0			// Speed Max de déplacement pour l'apparition

separator "ATTENTE (Pas d'ennemi)"
private int				Att_Mode
// ronde
network					Att_WAY = nonet		// Réseau de ronde
private object			o_Att_ronde_next_wp = nobody
// BV
object					Att_BV = nobody			// BV d'attente
private float				f_Att_BV_duree
// wp
int							Att_anim = enum("0-Rien" 0 "110-Dodo" 110 "111-Pipi" 111 "112-Ordi" 112 "113-Blabla1" 113 "114-Blabla2" 114 )
object					Att_anim_WP = nobody
int							Att_anim_orientation = enum("1-wp sight" 1 "0-Aucune" 0 )
private float				f_Att_anim_WP_duree
private float				f_Att_anim_WP_duree_anim
// disparition
float						Att_Delai_Disparition
private int				i_Att_Delai_Disparition_flag
// commander
object					Commander = nobody
private object			o_Commander_cur = nobody
private object			o_Commander_Force_Target = nobody
int							Lapin_Chasseur = enum("1-Tout ce qui bouge" 1 "0-Peace and Love" 0 "2-Je hais les pigeons" 2 "3-Que c'est con un mouton" 3 "4-Mmm la belle prune" 4 ) 

separator "ZONE A PROTEGER"
object					Att_Protect_Gao = nobody
float						Att_Protect_Gao_Dist = 5.0
private int				i_Att_Protect_last_trame_in_circle
int							Att_Protect_Gao_Vision = enum("0-Gao à Protéger" 0 "1-Rayman" 1 )

separator "ATTAQUE - Condition"
float						Atk_Vision_Dist = 0.0			// Distance de détection visuelle
float						Atk_Sound_Dist = 0.0			// Distance de détection sonore
float						Atk_Sound_Speed = 0.0		// Vitesse qui déclenche la détection sonore
private float				Atk_Vision_Angle = Cf_Atk_Vision_Angle_default		// Angle de vision ( 0 = rien / Pi = tout )
float						Atk_Meute_Dist_Detection = 0.0		// Distance de détection des attaques en meute
int							Atk_Simultanees_max_nb = -1		// -1 = pas de limite / 0 = j'attaque seul / 1 ou + = nb d'autres attaques simultanées autorisées
private float				f_interet_attack_countdown			// maintenir 1 interet d'attaque
float						Atk_Poing_Delai = 0.0

separator "ATTAQUE - Config"
int							Atk_Deplacement = enum("0-Viens directement au contact" 0 "1-Progression occluders - vient au contact" 1 "2-Progression occluders - ne vient pas au contact" 2)		// mode de depl
private float				f_Atk_Encerclement_sign = 0.0
private float				f_Atk_Encerclement_sign_countdown
private float				f_Atk_Encerclement_coef = 0.0
private float				f_Atk_Encerclement_forbidden
private float				f_Atk_Encerclement_duree
int							Atk_BullRush = vrai_faux
int							Atk_Jump_dans_le_Dos = vrai_faux
int							Atk_Taupe_dans_le_Dos = vrai_faux

separator "ATTAQUE - Réaction"
int							Atk_ContreAtk = enum("0-Aucune" 0 "1-Glissade" 1)
int							Atk_Dodge = enum("0-Jamais" 0 "1-Toujours" 1 "2-Grappin" 2 "3-Gun" 3 "4-Grenade" 4)		// Esquive de projectiles ?
int							Atk_Grappin_Controle = vrai_faux
int							Atk_Protect = enum("0-Jamais" 0 "1-Toujours" 1 "2-Grappin" 2 "3-Gun" 3 "4-Grenade" 4)	// Protection de projectiles ?
int							Atk_Anti_Mashing = vrai_faux
int							Atk_Activate_Explosive_Box = vrai_faux
private int				i_Atk_Activate_Explosive_Box_flag

separator "FUITE - Condition"
int							Fuite_Apres_Pafs = enum("0-Jamais" 0 "1-Toujours" 1 "2-Cumul de pafs" 2)
int							Fuite_HP = enum("0-Jamais" 0 "1-Passage à 50%" 1)
private		int			i_Fuite_HP_50pct
int							Fuite_Apres_Attaque = enum("0-Jamais" 0 "1-Toute cette liste" 1 "2-Poing" 2 "3-Gun" 3 "4-Grenade" 4)
int							Fuite_Apres_BullRush = vrai_faux
int							Fuite_Apres_ContreAtk = vrai_faux
int							Fuite_Apres_Dodge = enum("0-Jamais" 0 "1-Toujours" 1 "2-Grappin" 2 "3-Gun" 3 "4-Grenade" 4)		// Fuite après un dodge ?
int							Fuite_Apres_Protect = vrai_faux
int							Fuite_Explosive_Items = vrai_faux
int							Fuite_Si_Clef = faux_vrai

separator "FUITE - Config"
int							Fuite_Deplacement = enum("0-A l'opposé" 0 "1-Caches (occluders + angles réseau BV)" 1 "2-WP Spécifique" 2 "3-Dans le Sol" 3 "5-BV voisine" 5)	// mode de depl
float						Fuite_Speed_Max = 10.0				// Speed Max pour les déplacements vers les occluders
private float				Fuite_Vision_Angle = Cf_Fuite_Vision_Angle_default

separator "FUITE vers WP - Config"
object					Fuite_wp_specifique[Ci_Fuite_wp_max_nb]		// wp spécifique destination de fuite
int							Fuite_wp_specifique_type = enum("0-Suffisament loin" 0 "1-Le plus loin possible" 1 )
private float				Fuite_dist_min_wp_rayman = 15.0			// distance de sélection d'un wp de fuite
float						Fuite_dist_min_moi_rayman = 0.0		// si 0.0 va jusqu'au wp, sinon s'arrête à cette distance de l'nmi
private float				Fuite_dist_Safe

separator "FUITE vers BV Voisine - Config"
float						FuiteBV_dist_min_moi_rayman = 15.0
private int				i_FuiteBV_safe_flag
float						Fuite_delai_Safe_for_Apparition = 0.0		// 0.0 => OFF
private float				f_Fuite_delai_Safe

separator "SURGIR DU SOL"
object					Surgit_du_sol_wp[5]		// wp spécifique destination de fuite
float						Surgit_du_sol_duree_poursuite = 5.0

separator "MORT / PAS MORT..."
private float				f_Mort_duree
private int				Mort_Immortel = vrai_faux
int							Mort_SeReleve = faux_vrai
float						Mort_SeReleve_Duree = 15.0
int							Mort_Destruction = faux_vrai
int							Mort_Duplication = vrai_faux		// spawne 2 lapins + petits
private int				i_Mort_Duplication_done
int							Mort_JeMeNoie = vrai_faux
private int				i_Mort_JeMeNoie_flag
private int				i_Mort_Destruction_SND_flag
private int				i_Mort_Destruction_flag
private int				i_Terminator_CourtCircuit_flag
private int				i_Terminator_CourtCircuit_SND
private float				f_Terminator_CourtCircuit_timer

separator "MONTURES - Autorisations supplémentaires"
private int							Monture_Aigle = vrai_faux
int							Monture_Araignee = vrai_faux
private int							Monture_Bat = vrai_faux
private int							Monture_PoissonLumiere = vrai_faux
private int							Monture_Requin = vrai_faux
int							Monture_Rhino = vrai_faux
int							Monture_Serpent = vrai_faux
private int							Monture_Tigre = vrai_faux
int							Monture_Scooter = vrai_faux

separator "TEST"
int							Mode_Compagnon = vrai_faux		// vrai = suit Rayman sans l'attaquer

separator "SF"
int							i_SF_NePasSeRejouerSiMort		= vrai_faux		// Flag qui indique si l'acteur gere ou pas un SF de mort
private int				i_SF_AlreadyDead						= -1				// N° du SF (Alloué Dynamiquement)
private int				i_SF_LumRecupere = -1

separator "DEBUG ONLY !!!"
int				DBG_Display_Etat = faux_vrai
int				DBG_Trace_Etat = vrai_faux
int				DBG_Display_Action_Speed = vrai_faux
int				DBG_Display_Territory = vrai_faux
int				DBG_Display_Target = vrai_faux
private int	DBG_Log_Allowed = faux
int				DBG_Use_Joy = vrai_faux
int				DBG_IK_Display_Pilotage = vrai_faux
int				DBG_Display_Vision = vrai_faux
int				DBG_Anim


// ETATS
private int				i_sort_etat
private int				i_etat_courant
private int				i_dernier_etat
private int				i_flag_reinit_etat
private function		fct_last_etat = nofunc
private function		fct_previous_etat = nofunc
private function		fct_main_etat = nofunc
private float				f_time_start_etat
private float				f_time_sous_mode
private int				i_use_previous_etat
private float				f_IDLE_time

private int				i_Perso_ID = C_ID_Lapin

// RESEAU
private int				i_net_wp_nb
private object			ao_net_wp[100] //*
private float				af_net_wp_dist[100] // *

// TERRITOIRES
private int				i_net_territory_ID_nb
private int				ai_net_territory_ID[16] // *
private int				ai_net_territory_first_wp_index[16] // *
private int				ai_net_territory_wp_nb[16] // *
private int				ai_territory_link[16]   // * si bit X == 1 alors il y a un chemin entre les territoires [indice] et X
private int				ai_territory_link2[16] // * (no use - ancien tableau de bit pour jump)
private int				ai_net_territory_ID_index[16] // indice réel du territoire dans les tableaux
private int				i_net_territory_bit_field // bits représentant les INDICES desterritoires dispo à cette trame à partir de ma pos courante
private int				i_net_territory_ID_bit_field // bits représentant les territoires dispo à cette trame à partir de ma pos courante
private int				i_flag_in_my_territory
private object			o_territory_links[40][2] // * tableau des wp de lien entre territoires
private int				ai_territory_links_ID[40] // * code visuel changement de territoire 206 -> 2 à 6
private int				ai_territory_links_bit[40] // * les bits de contraintes pour les liens
private int				i_territory_links
private int				i_territory_links_ID_index[16]
private int				i_territory_skip

private object			o_backup_before_LD_Ter	= nobody

// WAY SEARCH
private int				i_way_status
private vector			v_way_destpos
private int				i_way_moving
private int				i_way_dont_move_dest_in_occluder
private int				i_target_territory_ID
private int				i_dest_pos_territory_ID
private int				i_my_territory_ID = -1			// reste à -1 si rien (colmap bv ou path...)
private object			ao_way_wp[50]	// way to target
private int				i_way_wp_nb	// nb wp of this way

private vector			v_way_old_good_destpos
private int				i_old_good_target_territory_ID
private float				f_time_target_not_reachable

//private object			o_path_start_wp = nobody
//private object			o_path_dest_wp = nobody
private object			o_current_wp = nobody
private object			o_next_wp = nobody
private object			o_next_next_wp = nobody
private vector			v_next_pos
private int				i_next_territory

// INDEX FILE
private int				i_file_start_index
private int				i_file_end_index
private int				i_file_size
private int				ai_file[100]

// MOVE
private int				i_way_move_bit

// PAF
private int				i_paf_canal
private float				f_time_last_shot_paf
private float				f_paf_puissance
private vector			v_paf_speed
private int				i_flag_paf
private int				i_flag_paf_stun
private int				i_paf_fort_en_cours
private int				i_flag_paf_combo_petit
private int				i_flag_paf_combo_fort
private int				i_paf_combo_fort_en_cours
private int				i_flag_paf_combo_fort_finish
private int				i_paf_combo_fort_finish_en_cours
private int				i_paf_combo_game_speed_flag
private int				i_paf_combo_game_speed_end_flag
private float				f_paf_combo_fort_game_speed = 1.0
private int				i_paf_combo_cpt
private int				i_paf_detect_type
private int				i_paf_type
private vector			v_paf_detect_dir
private vector			v_paf_dir
private vector			v_paf_detect_pos
private vector			v_paf_pos
private object			o_paf_detect_actor
private object			o_paf_actor
private vector			v_paf_look_origin_memo
private float				f_paf_crete_delai
private int				i_paf_cpt


// INTERET
private messageid	mid_best_interet
private int				i_interet_force_identification_gao

private int				i_perceived_best_actor_index
private int				i_perceived_bit_field

private int				i_perceived_actor_nb
private int				ai_perceived_seen[Ci_perceived_max_nb]
private int				ai_perceived_accessible[Ci_perceived_max_nb]
private int				ai_perceived_territory[Ci_perceived_max_nb]
private int				ai_perceived_status[Ci_perceived_max_nb]
private int				ai_perceived_targeted[Ci_perceived_max_nb]
private int				ai_perceived_ID[Ci_perceived_max_nb]
private float				af_perceived_dist[Ci_perceived_max_nb]
private float				af_perceived_interest[Ci_perceived_max_nb]
private vector			av_perceived_position[Ci_perceived_max_nb]
private object			ao_perceived_actor[Ci_perceived_max_nb]

// CHANGE TARGET
private float				f_time_change_target

// ANALYSE
private int				i_flag_visual_check_done
private int				i_flag_chck_bst_intrt_done
private int				i_flag_paf_check_done
private int				i_flag_cadavre_check_done

// CANAUX
private object			o_head_bone

// SOFT COL
private object		ao_budy[50]
private int			i_budy_nb

// LIFE & FOODCHAIN
//private messageid	ID_LIFE
//private float				f_point_de_viande = 10.0
//private int				i_foodchain_eat_slots_nb = 1
//private int				i_foodchain_eat_slots_free
//private int				i_fade_flag
private float				f_LIFE_max
private float				f_LIFE_cur

// ON SCREEN ?
private float			f_on_screen_pourcent
private float			f_on_screen_duration

// GROUND COL
private vector		v_ground_normale = Cv_VerticalVector
private float			f_no_ground_timer
private int			i_ground_flag

// WEAPON SPECIFIC
private float			f_distance_attack

// FEU
private float					f_burning_duration

// TEST INERTIE
private vector			v_dyn_speed
private float				f_ani_freq

// ANIMS
private int				ai_action_index[10][10]
private float				af_action_speed[10][10]
private vector			av_action_speed[10][10]
private int				i_action_nb_each_family
private int				i_action_nb_family
private float				f_action_desynchro					// désynchroniser les lapins
private int				i_action_traction_force_faster		// forcer à courir (anim + traction)
private int				i_action_keep_freq
private int				i_disable_select_action

// SPEED && JOY
private vector			v_speed_horiz_old
private vector			v_speed_horiz
private float				f_speed_horiz
private float				f_joy_norm
private vector			v_joy_sight
private int				i_v_joy_sight_computed
private vector			v_traction_joy
private vector			v_traction_stream
private vector			v_traction_push
//private vector			v_traction_grappin
private vector			v_traction_ice
private vector			v_speed_before_rec
private float				f_speed_before_rec
private float				f_traction_courante
private vector			v_force_sight
private vector			v_force_move_occluder_sight
private vector			v_force_move_occluder_sight_last
private float				f_orient_speed
private float				f_friction
private vector			v_special_gravity
private vector			v_traction_rm_jump_repulse
private float				f_traction_rm_jump_repulse

private int				i_frame_nb

// SUIVI REGARD
private int				i_flag_look
private int				i_flag_look_best_interet

private float				f_look_blend_coef
private float				f_look_angle_blend_speed = 8.0
private float				f_look_head_coef
private float				f_look_axis_length
private float				f_look_force_duration
private float				f_look_in_dead_cone_sign

private vector			v_look_pos
private vector			v_last_look_pos
private vector			v_look_pivot_pos
private vector			v_look_axis
private vector			v_look_head_pos
private vector			v_look_banking
private vector			v_look_virtual_sight

private int				i_head_bone_nb
private object			ao_head_bones[5]

// BEZIER NECK
private vector		v_bezier_head_look_pos

private float			f_neck_vert_coef
private float			f_neck_col_duration
private float			f_neck_B_weight
private float			f_neck_C_weight
private float			f_neck_bezier_coef					= 1.0
private float			af_neck_bone_bezier_coef[5]		= (1.0, 0.8, 0.6, 0.4, 0.2)
private float			f_neck_length
private float			af_neck_bone_length[4]

private float			f_head_Z_min
private float			f_head_col_ray_Z_speed			= 1.0
private float			f_head_col_ray_Z_offset
private float			f_time_head_col
private vector		v_neck_head_anti_col_pos
private vector		v_neck_col_normale
private vector		v_neck_col_pos


// IK LEGS
private float			f_bassin_rotation_angle
private float			f_bassin_Z_offset

private int			i_flag_leg_IK[2]

private float			f_IK_Z_offset[2]
private float			f_IK_coef[2]
private float			f_IK_snap_coef[2]
private float			f_IK_speed[2]
private float			f_IK_tenseur[2]
private float			af_IK_bones_length[2][3]
private float			f_IK_leg_length[2]
private float			f_IK_ground_coef[2]

private float			f_IK_bassin_look_rot_coef

private float			f_IK_bassin_ground_rot_coef

private float			f_IK_bassin_eat_rot_coef
private vector		v_IK_bassin_eat_pos

private float			f_IK_bassin_bite_rot_coef
private vector		v_IK_bassin_bite_pos
private vector		v_IK_bassin_bite_start_quat
private object		o_IK_bassin_bite_actor

private vector		v_IK_ref_ground_pos
private vector		v_virtual_banking = Cv_VerticalVector

private vector		v_IK_dest_pos[2]
private vector		v_IK_local_offset[2]
private vector		v_IK_bone_last_valid_sight[2]
private vector		v_IK_bone_last_valid_banking[2]
private vector		v_IK_ground_pos[2]
private vector		v_IK_ground_normale[2]
private vector		v_IK_feet_Z_axis[2]

private vector		v_IK_bassin_banking
private vector		v_IK_bassin_pos

private object		ao_IK_bones[2][4]


// DESTRUCTION CACHE
private int			i_attaque_phase
private int			i_hiding_place_index
private int			i_break_hideout_target_hidden
private float			f_attaque_wait_duration
private object		o_cache_best_wp
private object		o_hiding_place

private float		 	f_use_current_wp_action_duration

private object		o_main_actor


// Orientation lateral fct de ta vitesse precedante
private vector		v_last_speed
private float			f_bassin_angle

// FIGHT
private int			i_flag_zde_fight_enable
private object		ao_frappe_target[20]
private int			i_frappe_target_nb						// nb de persos paffés ce coup-ci
private int			i_frappe_target_nb_backup			// backup du nb de persos paffés au coup d'avant
private int			i_test_zdf_zdc_done
private float			f_melee_delai
private int			i_melee_last_action
private int			i_melee_force_action

// WEAPON
private int				i_find_item_type			// weapon ? key ? ....
// special key
private int				i_flag_item_key_check_done
private float				f_item_key_find_delai
// special weapon
private int				i_flag_item_weapon_check_done
private float				f_item_weapon_find_delai
private vector			v_use_gun_offset
private vector			v_use_grenade_offset
// commun item stuff
private object			o_item = nobody
private object			o_item_nearest = nobody
private object			o_item_to_get = nobody
private messageid	mid_item_LNK_ID
private int				i_item_ID
private int				i_item_to_get_ID
private float				f_item_blend
private float				f_item_dist_too_close
private float				f_item_range
private int				i_item_used
private float				f_item_weapon_use_delai
private float				f_item_reload_delai
private int				i_item_cant_use
// special kay stuff
private object			o_key
private messageid	mid_key_LNK_ID
// miss stuff
private int				i_item_Rafale_Total
private int				i_item_missed_last_side = 1.0
private int				i_item_rafale_ce_tir_ne_rate_pas
private int				i_item_rafale_cpt_good
private int				i_item_rafale_cpt_missed
private int				i_item_rafale_cpt_total

// ITEM SEARCH 1 BY TRAME
//private int				i_item_find_cpu_path_this_trame
//private object			ao_item_find_cpu_path[20]
//private object			i_item_find_

// FUITE
private object			o_fuite_actor
private object			o_fuite_wp
private int				i_fuite_flag
private float				f_paf_jauge
private float				f_paf_jauge_max
private int				i_flag_paf_jauge
private float				f_fuite_delai
private int				i_fuite_pos_safe		// pour les wp specifiques
//private vector			v_fuite_sous_terre_pos_debut_ressort
//private vector			v_fuite_sous_terre_pos_surface		// position à la surface
private int				i_fuite_sous_terre_pos_atteinte		// position à la surface atteinte
//private float				f_fuite_sous_terre_offset				// offset Z sous le sol
//private float				f_fuite_sous_terre_jump_offset		// offset Z pour le jump qui me fait surgir du sol
//private int				i_fuite_sous_terre_phase
//private float				f_pos_sous_terre_ressort_coef
private int				i_fuite_oppose_wall

// TAUPE
//private vector			v_taupe_pos_surface					// position à la surface
private float				f_taupe_offset								// offset Z sous le sol
private float				f_taupe_jump_offset						// offset Z pour le jump qui me fait surgir du sol
private int				i_taupe_phase
//private vector			v_taupe_pos_debut_ressort
//private float				f_taupe_ressort_coef
private vector			v_bassin_visual_offset
private vector			v_bassin_visual_offset_default
private int				i_taupe_attack_flag
private int				i_taupe_paf_done
private object			o_taupe_target
private int				i_taupe_to_keep_moving_flag
private vector			v_taupe_to_keep_moving_pos
private int				i_taupe_destruction_0hp
private int				i_taupe_in_back_flag
private vector			v_taupe_in_back_pos
private float				f_taupe_in_back_delai
private int				i_taupe_in_back_attack_flag

// CACHE
private object			o_cache
private object			o_cache_last				// backup 
private object			o_cache_just_leave		// backup tant qu'elle m'occlude encore
private int				i_cache_mode				// progression ou fuite
private int				i_cache_type				// occluder ou geometrie
private float				f_cache_temps_restant
private object			o_cache_actor
private int				i_cache_reached_once
private vector			v_cache_pos
private vector			v_cache_pos_last			// mémo last pos cache geometrie
private float				f_cache_size
private object			o_cache_not_safe
private vector			v_cache_wait_dir
private float				f_cache_safe_timer				// durée je suis caché
private float				f_cache_not_safe_timer		// durée je sais qu'il me voit
private float				f_cache_prog_display_delai
private vector			v_cache_look_pos				// regarder ici !!!
private int				i_cache_global_index
private int				i_cache_inside_occluder
private float				f_cache_progression_compute
private float				f_cache_hauteur_min

// PATH LIB
private int				i_path_init_done					// flag init done pour ajouter le réseau dynamiquement
private int				i_path_net_wp_nb				// le nb de wp du réseau entier
private object			ao_path_net_wp[200]			// les wp du réseau entier

// RECHERCHE CHEMIN SECONDAIRE
private object			o_path_start_wp
private object			o_path_dest_wp
private object			o_path_dead_end_wp
private int				i_path_way_wp_nb				// le nb de wp que je dois parcourir
private object			ao_path_way_wp[100]			// mon chemin à parcourir
private int				i_path_client_ID = -1
private int				i_path_way_force_recompute_flag
private float				f_path_way_no_way_duree

// RECHERCHE CHEMIN VERS LE MAIN
private object			o_path_current_wp
private object			o_path_main_actor_wp
private int				i_path_way_to_main_wp_nb
private object			ao_path_way_to_main_wp[100]			// mon chemin à parcourir
private vector			v_path_way_to_main_next_pos			// Next pos pour aller vers le main
private int				i_path_to_main_client_ID = -1

// RECHERCHE DES BV VOISINES POUR LES RECHERCHES DE CHEMIN VERS ITEMS
private int				i_path_voisin_wp_nb = 0
private object			ao_path_voisin_wp[50]


// AVOID VISIBILITY
private object			o_path_dodge_actor_wp

// JUMP
private vector			v_jump_dest_pos
private vector			v_jump_start_pos
private vector			v_jump_impulsion_force
private float				f_jump_impulsion_time
private int				i_flag_jump
private int				i_flag_jump_precis
private int				i_flag_jump_to_ride_a_mount
private int				i_flag_jump_to_att_wp_anim
private int				i_flag_jump_to_att_wp_anim_done
private int				i_flag_jump_to_keep_moving
private int				i_flag_jump_to_attack
private int				i_flag_jump_taupe
private int				i_flag_jump_in_back
private int				i_flag_jump_in_back_invincible
private float				f_jump_to_keep_moving
private float				f_jump_to_attack
private vector			v_jump_to_keep_moving_initpos
private float				f_jump_in_back_delai
private int				i_flag_jump_to_danse

// WATER
private float				f_water_Z
private int				i_is_in_water
private int				i_walk_in_water
private float				f_water_blend
private float				f_water_offset_start_blend
private float				f_water_offset_position

// occluder to main actor ??? (=don't shoot)
private int				i_occluder_to_main_actor
private int				i_occluder_to_main_actor_last

// RIDED
private	object		o_Rided_Actor
private	messageid	mid_Rided_LNK_ID
private	float			f_Rided_duree
private	int				i_Rided_attack_flag

// GRABBED
private object			o_Grabbed_Actor
private messageid	mid_Grabbed_LNK_ID
private object			o_Grabbed_Actor_bone
private float				f_Grabbed_coef
private int				i_Grabbed_Died_flag

// DETECT SHOOT
private int				i_flag_shoot_check_done
private int				i_flag_shoot_near_of_me
private object			o_flag_shoot_near_of_actor

// DODGE
private int				i_flag_grappin_check_done
private int				i_dodge_flag
private object			o_dodge_actor
private int				i_dodge_mode
private int				i_dodge_last_action
private vector			v_dodge_roule_boule_axis
private int				i_etat_dodge_enabled
private object			o_external_dodge_actor
private int				i_external_dodge_mode

// PROTECT
private int				i_protect_flag
private object			o_protect_actor
private int				i_protect_mode
private int				i_etat_protect_enabled
private object			o_external_protect_actor
private int				i_external_protect_mode
private object			o_shield = nobody

private vector			v_last_pos

private float				f_dest_pos_is_main_duree

// COLLIDE WALL
private float				f_wall_col_duration
private vector			v_wall_col_normale

private float				f_face_paf_col_last_time

// GOGO MODE
private object			o_rope_manager
private vector			v_traction_gogo
private float				f_main_gogo_duration
private vector			v_last_main_sight
private int				i_gogo_test_done
private int				i_gogo_last_result
private float				f_gogo_paf_timer
private float				f_gogo_backup_joy_dt
//private float				f_gogo_last_speed
//private vector			v_gogo_last_speed
private float				f_gogo_chute_duree
private int				i_gogo_launch_target_checked

// STREAM EN CHUTE ?
private float				f_chute_no_stream_duree
private vector			v_traction_exit_chute

// 1ere pos valide
private vector			v_1st_ingame_valid_pos = Cv_NullVector
private int				i_1st_ingame_valid_pos_goback

// RIDE MOUNT :)
private int				i_RideMount_ID
private object			o_RideMount_Actor
private object			o_RideMount_before_Taupe_backup
private float				f_RideMount_before_Taupe_zoom
private messageid	mid_RideMount_LNK_ID
private object			o_RideMount_Callback_Actor
private float				f_RideMount_coef
private object			o_RideMount_Nearest
private int				i_RideMount_Nearest_ID
private int				i_flag_monture_check_done
private float				f_RideMount_check_delai
private float				f_RideMount_Jump_to_Get_Item

// COUNTER
private int				i_Counter_flag
private vector			v_Counter_start_pos
private vector			v_Counter_start_nmi_pos
private vector			v_Counter_dest_pos
private vector			v_Counter_next_pos
private float				f_Counter_coef
private float				f_Counter_last_time
private int				i_Counter_attack_flag
private object			o_Counter_actor
private float				f_Counter_angle
private int				i_Counter_DodgeOnly_flag
private float				f_Counter_DodgeOnly_last_time

// BULLRUSH
private int				i_BullRush_mode
private float				f_BullRush_last_time
private int				i_BullRush_paf_flag
private float				f_BullRush_traction
private int				i_cannot_BullRush

// GRAPPIN CONTROLE
private object			o_Grappin_Control_actor
private int				i_Grappin_Control_flag
private int				i_Grappin_Control_attack_flag

// INVISIBLE ?
private int				i_invisible_flag

// VENTILO
private int				i_stream_aspire_flag
private float				f_stream_aspire_slave_coef
private int				i_ventilo_flag
private vector			v_ventilo_dir
private float				f_ventilo_scream_delai
private int				i_ventilo_stuck_on_wall
private int				i_ventilo_stuck_on_wall_once

// PIEGE
private object			o_piege
private float				f_piege_scream_delai

// CAROTTE
private object			o_carotte
private int				i_flag_item_carotte_check_done
private float				f_item_carotte_find_delai

// ANTI MASHING
private int				i_flag_anti_mashing_check_done
private int				i_anti_mashing_flag
private int				i_anti_mashing_attack_flag

// GFX
private float				f_GFX_smoke_delai
private vector			v_GFX_ground_pos
private float				f_GFX_ground_christophe_delai
private int				i_GFX_ground_Souffle = -1
private int				i_GFX_ground_Rochers = -1
private int				i_GFX_ground_Nuage_cartoon2 = -1
private float				f_GFX_ground_taille = 5.0
private int				i_GFX_Halo_OeilD = -1
private int				i_GFX_Halo_OeilG = -1
private int				i_GFX_GoutteSueur1 = -1
private int				i_GFX_GoutteSueur2 = -1
private vector			v_GFX_GoutteSueur_pos
private float				f_GFX_GoutteSueur_taille
private float				f_GFX_GoutteSueur_dist
private float				f_GFX_GoutteSueur_duree
private int				i_GFX_Halo_Display_Config = -1
private int				i_GFX_Destruction_Etincelle = -1
//-----------------------------------------
// GFX CHRISTOPHE
//-----------------------------------------
private int				i_GFX_Coeurs_terminator = -1
private int				i_GFX_Eau_Bubulles = -1

// SCREEN
private float				f_OnScreen_Pct

// FUITE DES GRENADES
private int				i_fuite_grenades_flag
private vector			v_fuite_grenades_dangerous_pos
private vector			v_fuite_grenades_dest_pos
private int				i_fuite_grenades_wall


private int				i_AI_computed_dest_pos_flag		// position calculée en IA qui pourrait donc être hors territoire et ce serait pas un bug LD...

//separator "GFX"
//color color_test = 0x0008ABA6
//float	halo_extraction = 0.5
//float	halo_taille = 2.0

// EXPRESSION
private int		i_expr_blink
private float		f_expr_blink_prog = 1.0
private float		f_expr_blink_delay
private float		f_expr_mouth = 1.0
private float		f_expr_mouth_prog = 1.0

// BONES
private object	o_canal_tete
private object	o_canal_bassin

// USE MOUNT POWER
private float		f_powermount_use_delai
private float		f_powermount_range
private float		f_powermount_charge
private int		i_powermount_cant_use

private object	o_gao_init_liaison

// LOD
private int		i_LOD_courant
private int		i_LOD_ancien
private float		f_LOD_duree
private int		i_SHAPE_ID

private int		i_RM_Paf_Mode_Get
private float		i_Territory_OutSide_duree

private int		i_Ptizetre_GFX_display

private vector	v_Apparition_init_pos

private float		f_fuite_gfx_smoke_delai

private int		i_Atk_Simultannees_main_nb
private int		i_Atk_Simultannees_main_flag_done

// DECOMPOSITION
private object	o_canal_decomp
private int		i_decomposition_phase

// SPEED GET DE JADE DE MERDE
private vector	v_speedgetvector
private vector	v_speed_oldpos

// BASCULE
private object	o_bascule
private vector	v_dyn_speed_before_rec

// FUITE HALO
private int		i_fuite_halo_index
private vector	v_fuite_halo_last_pos
private int		ai_fuite_halo[100]
private float		af_fuite_halo_duration[100]

private float		f_anim_speed
private vector	v_anim_speed

// ZOOM DEDUCTION
private float		f_zoom
private int		i_zoom_reduction
private int		i_zoom_reduction_encours

private int		i_flag_genere_lums

// LUMS
private int				i_flag_lums_cage_check_done
private float				f_lums_cage_find_delai
private object			o_lums_cage
private messageid	mid_lums_cage_LNK_ID


private float			f_SND_Cache_Reached

// SFX
private int			i_GFX_Couronne_etoiles[Ci_SFX_NB_ETOILES]
private float			f_GFX_Couronne_angle[Ci_SFX_NB_ETOILES]
private float			f_GFX_Couronne_etoiles_duree
private int			i_GFX_Couronne_etoiles_modulo
private int			i_GFX_Couronne_etoiles_cpt
private int			i_GFX_Zzzz = -1
private int			i_GFX_Pipi = -1


// ZDM
private vector		v_zdm_cur_size
private vector		v_zdm_cur_offset

// UNCOLLIDE
private int			i_extern_uncol
private object		ao_extern_uncol[10]

private object		o_use_target
