#include "credit_d.var"

//procedure_local vector SizeText(int i)
//{
//	return av_size[i]
//}
//
//procedure_local void SetText(int i, text txt, vector v_pos)
//{
//	float	tf
//	int		ti_effect
//	int		ti_length, ti_middle
//	
//	OBJ_TextEffectSeti( 1, -1, i )	
//	OBJ_TextSet( i, txt)
//	OBJ_TextPivotSet( i, v_pos)
//	OBJ_TextFlagSet( i, 16 + 1 )
//	ai_Num[i] = -1
//	
//	if (OBJ_TextCharGet(i,0) == 48 || OBJ_TextCharGet(i,0) == 51)	// '0'
//	{
//		if(OBJ_TextCharGet(i,0) == 51)
//			ai_Num[i] = 3
//		else
//			ai_Num[i] = 0
//		
//		OBJ_TextDelete( i,0,1)
//		OBJ_TextInsert(i, 0, "\p13\+")
//		OBJ_TextInsert(i, -1, "\p13\-")
//		OBJ_TextPageSet( i, 0, -1, 1, 0 )
//		OBJ_TextMaxWidthSet( 1.2)
//		OBJ_TextSizeSet( i, 0, -1, cvector( -1, 0, 0 ) )
//		OBJ_TextMaxWidthSet( 0)
//		OBJ_TextAlign( i, 0, -1, 1 )
//		OBJ_TextColorSet( i, 0, -1, 0xFFAAAAAA)
//		
//		av_size[i] = OBJ_TextSizeGet(i, 0, -1)
//		if( i && ai_Num[i] == 0 )
//			av_size[i - 1].y *= 6
//		av_size[i].y *= 2.0
//
//		
//		ti_length = OBJ_TextLength(i)
//		ti_middle = (ti_length / 2) - 1
//		if (ti_middle > 0)
//		{
//			ti_effect = OBJ_TextEffectAdd( 3, i, 0, ti_middle)
//			OBJ_TextEffectSeti( ti_effect, 300, 0) 
//			OBJ_TextEffectSeti( ti_effect,  301, 0xFFAAAAAA)
//			OBJ_TextEffectSeti( ti_effect,  302, 0xFFAAAAAA)
//			OBJ_TextEffectSeti( ti_effect,  303, 0)
//			
//			ti_effect = OBJ_TextEffectAdd( 3, i, ti_length - ti_middle, -1)
//			OBJ_TextEffectSeti( ti_effect, 300, 0xFFAAAAAA) 
//			OBJ_TextEffectSeti( ti_effect,  301, 0)
//			OBJ_TextEffectSeti( ti_effect,  302, 0)
//			OBJ_TextEffectSeti( ti_effect,  303, 0xFFAAAAAA)
//			
//		}
//	}
//	else if (OBJ_TextCharGet(i,0) == 49)	// '1'
//	{
//		OBJ_TextDelete( i,0,1)
//		OBJ_TextPageSet( i, 0, -1, 1, 0 )
//		OBJ_TextMaxWidthSet( 0.9)
//		OBJ_TextSizeSet( i, 0, -1, cvector( -1, 0, 0 ) )
//		OBJ_TextMaxWidthSet( 0)
//		OBJ_TextColorSet( i, 0, -1, 0xFFAAAAAA)
//		ai_Num[i] = 1
//		av_size[i] = OBJ_TextSizeGet(i, 0, -10)
//		if(i) av_size[i - 1].y *= 3
//		av_size[i].y *= 1.5
//	}
//	else
//	{
//		OBJ_TextMaxWidthSet( 0.9)
//		OBJ_TextSizeSet( i, 0, -1, cvector( -1, 0, 0 ) )
//		OBJ_TextMaxWidthSet( 0)
//		OBJ_TextColorSet( i, 0, -1, 0xFFFFFFFF)
//		av_size[i] = OBJ_TextSizeGet(i, 0, -0)
//	}
//	
//	OBJ_TextAlign(i, 0, -1, 0)	
//	
////	if ( @"univ" VID_gi_DisplayMode == 1)	// 1 = 4/3BB, 2 = 4/3, 3 = 19/9
////	{
////		ti_effect = OBJ_TextEffectAdd( 17, i, 0, -1)
////		OBJ_TextEffectSetf( ti_effect, 1750, 0.124)
////		OBJ_TextEffectSetf( ti_effect, 1751, 0.876)
////	}
//
////	ti_effect = OBJ_TextEffectAdd( 3, i, 0, -1)
////	OBJ_TextEffectSeti( ti_effect, 300, 0xFFFFFFFF)     // couleurs aux 4 coins
////	OBJ_TextEffectSeti( ti_effect,  301, 0xFFFFFFFF)
////	OBJ_TextEffectSeti( ti_effect,  302, 0xFF888888)
////	OBJ_TextEffectSeti( ti_effect,  303, 0xFF888888)
//}

procedure_local int GetUnusedTexte()
{
	int i
	for (i = 0; i < 40; i++)
	{
		if ( !i_STRused[ i ] )
		{
			i_STRused[ i ] = 1
			return i
		}
	}
	return -1
}

procedure_local int AddText()
{
	int			i_texte, i_texte2, i_index
	text		t_Texte
	float		tf
	int			ti_effect
	int			ti_length, ti_middle
	int			ti_type
	vector	v_size
	float		x0, x1
	int			c0, c1
	
	// get Texte
	t_Texte = TEXT_Get( 0x3d0129d0, i_main_text)
	if ( TEXT_Length( t_Texte ) == 0 )
	{
		i_ThisIsTheEnd = 1
		return 0
	}
	i_main_text++
	
	// get unused texte
	i_texte = GetUnusedTexte()
	if (i_texte == -1)
	{
		return -1
	}
	i_index = i_STRnb
	i_STRnb++
	i_STRlist[ i_index ] = i_texte

	// set texte
	OBJ_TextEffectSeti( 1, -1, i_texte )	
	OBJ_TextSet( i_texte, t_Texte )
	
	ti_type = OBJ_TextCharGet(i_texte, 0) - 48
	if ( ( ti_type == 0 ) || (ti_type == 1) || (ti_type == 3 ) )
	{
//		for ( c0 = 0; c0 < SPECIALNAME; c0++)
//			i_STRSpecialName[ c0 ] = 0
//		i_STRSpecialNameNb = SPECIALNAME
	
		OBJ_TextDelete( i_texte,0,1)
		OBJ_TextPosSet( i_texte, 0, -1, Cv_NullVector )
		if (ti_type == 0)
			i_STRY += 0.3
		else if (ti_type == 1)
			i_STRY += 0.1
	}
	f_STRY[ i_index ] = i_STRY
	
//	x0 = i_STRY / f_YSize
//	c0 = x0
//	x0 = c0
//	x0 *= f_YSize
//	f_STRY[ i_index ] = x0

	OBJ_TextPivotSet( i_texte, cvector( 0.5, i_STRY, 0) )
	OBJ_TextFlagSet( i_texte, 16 + 1 )
	
	if ( (ti_type == 0) || (ti_type == 3 ) )
	{
		i_STRColor[ i_index ] = 0xFFAAAAAA

		OBJ_TextPageSet( i_texte, 0, -1, 1, 0 )
		OBJ_TextMaxWidthSet( 0.9 )
		OBJ_TextSizeSet( i_texte, 0, -1, cvector( -1, 0, 0 ) )
		OBJ_TextMaxWidthSet( 0)
		OBJ_TextAlign( i_texte, 0, -1, 1 )
		OBJ_TextColorSet( i_texte, 0, -1, 0xFFAAAAAA)
		
		if (ti_type == 0)
		{
			v_size = OBJ_TextSizeGet(i_texte, 0, -1)
			
			i_texte2 = GetUnusedTexte()
			i_index = i_STRnb
			i_STRnb++
			i_STRlist[ i_index ] = i_texte2
			i_STRColor[ i_index ] = 0xFF999999
			f_STRY[ i_index ] = i_STRY+ 0.02
			OBJ_TextSet(i_texte2, "\p13\+")
			OBJ_TextFlagSet( i_texte2, 16 + 2 )
			OBJ_TextSizeSet( i_texte2, 0, -1, cvector( -1, 0, 0) )
			OBJ_TextPivotSet(  i_texte2, cvector( 0.49 - (v_size.x / 2), f_STRY[ i_index ], 0) )
			
			i_texte2 = GetUnusedTexte()
			i_index = i_STRnb
			i_STRnb++
			i_STRlist[ i_index ] = i_texte2
			i_STRColor[ i_index ] = 0xFF999999
			f_STRY[ i_index ] = i_STRY+ 0.02
			OBJ_TextSet(i_texte2, "\p13\-")
			OBJ_TextFlagSet( i_texte2, 16 )
			OBJ_TextSizeSet( i_texte2, 0, -1, cvector( -1, 0, 0) )
			OBJ_TextPivotSet(  i_texte2, cvector( 0.51 + (v_size.x / 2), f_STRY[ i_index ], 0) )
		}
	}
	else if (ti_type == 1)	// '1'
	{
		OBJ_TextPageSet( i_texte, 0, -1, 1, 0 )
		OBJ_TextMaxWidthSet( 0.9)
		OBJ_TextSizeSet( i_texte, 0, -1, cvector( -1, 0, 0 ) )
		OBJ_TextMaxWidthSet( 0)
		OBJ_TextColorSet( i_texte, 0, -1, 0xFFAAAAAA)
		i_STRColor[ i_index ] = 0xFFAAAAAA
	}
	else
	{
	
//		if ( i_STRSpecialNameNb )
//		{
//		 	if ( IO_ButtonPressed(joy_button_L2) && IO_ButtonPressed(joy_button_Left) )
//			{
//				if ( MATH_RandFloat( 0, 1) < 0.7 )
//				{
//					c0 = MATH_RandInt(0, i_STRSpecialNameNb)
//					if (c0 >= i_STRSpecialNameNb) c0 =  i_STRSpecialNameNb - 1
//					for (c1 = 0; c1 < SPECIALNAME; c1++ )
//					{
//						if (i_STRSpecialName[ c1 ] == 0)
//						{
//							if (c0 == 0)
//							{
//								i_STRSpecialName[ c1 ] = 1
//								i_STRSpecialNameNb--
//								break
//							}
//							c0--
//						}
//					}
//					switch (c1)
//					{
//						case 0: OBJ_TextSet( i_texte, "Vincent Lhullier" ) break
//						case 1: OBJ_TextSet( i_texte, "Aymeric Lhullier" ) break
//						case 2: OBJ_TextSet( i_texte, "Séraphin Lhullier" ) break
//						case 3: OBJ_TextSet( i_texte, "Iris Lhullier" ) break
//						case 4: OBJ_TextSet( i_texte, "Florence Lhullier" ) break
//						case 5: OBJ_TextSet( i_texte, "Jacques Exertier" ) break
//						case 6: OBJ_TextSet( i_texte, "Philippe Exertier" ) break
//					}
//				}
//			}
//		}

		OBJ_TextPageSet(i_texte,0,-1,4,0)
		OBJ_TextMaxWidthSet( 0.9)
		OBJ_TextSizeSet( i_texte, 0, -1, cvector( -1, 0, 0 ) )
		OBJ_TextMaxWidthSet( 0)
		OBJ_TextColorSet( i_texte, 0, -1, 0xFFFFFFFF)
		i_STRColor[ i_index ] = 0xFFFFFFFF
	}
	
	v_size = OBJ_TextSizeGet(i_texte, 0, -1)
	i_STRY += v_size.y
	
	if (ti_type == -3)	
	{
		i_STRY += v_size.y
		OBJ_TextSet( i_texte, " ")
		OBJ_TextPageSet(i_texte,0,-1,4,0)
	}

	OBJ_TextAlign(i_texte, 0, -1, 0)	
	
	return 1
}