#include "RM_Bassin_Defines.var"

// SORTIE ETAT 	===================================================================
if (i_sort_etat)
{
	i_sort_etat = faux
	return
}

// INIT ETAT 	=====================================================================
if ( i_etat_courant != ETAT_RM_Bassin_Wait)
{
	i_etat_courant = ETAT_RM_Bassin_Wait
	if( fct_last_etat )
	{
		i_sort_etat = vrai
		AI_Execute(fct_last_etat)
	}
	fct_last_etat = AI_TrackCurGet()	
	f_time_start_etat = 0.0	
}
else
{
	f_time_start_etat += TIME_GetDt()
}


// CHANGEMENT D ETAT =============================================================


// COMPORTEMENT ================================================================
o_Serveur_Use = LNK_ServeurGet(Ci_LNK_USE, mid_Use, vrai, nofunc, nofunc)
if(o_Serveur_Use && LNK_Use_ActivattionGet( mid_Use))
{
	o_Ptizetre = LNK_Use_ActeurSupGet(mid_Use)
	o_Serveur_Use = LNK_ServeurGet(Ci_LNK_USE, mid_Use, faux, nofunc, nofunc)
	f_PosDelay=2.0
}

if(f_PosDelay>0.0)
{
	f_PosDelay-=TIME_GetDt()
	@o_Ptizetre OBJ_PosSet(MATH_VecBlend(@o_Ptizetre OBJ_PosGet(),OBJ_PosGet(),Cf_RM_Bassin_BlendSpeed*TIME_GetDt()))
	@o_Ptizetre OBJ_BankingGeneralSet(MATH_VecBlendRotate(@o_Ptizetre OBJ_SightGet(),OBJ_SightGet(),Cf_RM_Bassin_BlendSpeed*TIME_GetDt() ), MATH_VecBlendRotate(@o_Ptizetre  OBJ_BankingGet(),Cv_VerticalVector,Cf_RM_Bassin_BlendSpeed*TIME_GetDt()))
	if(f_PosDelay<=0.0)
	{
		AI_CBDel(OBJ_Me(), CallBack_Client,"RM_Bassin_CB_Client")
		AI_TrackCurStop()
	}
}