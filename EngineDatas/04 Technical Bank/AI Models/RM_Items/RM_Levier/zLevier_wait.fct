#include "RM_Levier_defines.var"

object	to_gao
int			ti_gao_ID
float		tf_rope_length
float		tf_rope_ratio
float		tf_force
float		tf_force_add
float		tf_dot
float		tf_dot_valide
float		tf_ratio
vector	tv_offset_A
vector	tv_offset_B
vector	tv_pos
vector	tv_force
vector	tv_sight
int			ti_add

tv_pos = VIEW_3dWorldTo2d(0,OBJ_PosGet())
tv_pos += cvector(0,0.05,0)
ti_add = faux

if( OBJ_CapaTest(CAPA_Open) )
	tf_ratio = 1.0
else
{
	to_gao = @o_rope_manager Rope_Manager_Get_Linked_Gao(OBJ_Me(), tf_rope_length, tf_rope_ratio, tv_offset_A, tv_offset_B)
	if( to_gao && glob_joynorm_get )
	{
		f_delai_tire += TIME_GetDt()
		if( f_delai_tire > 0.25 )
		{
			if( to_gao == get_rayman || to_gao == @get_rayman PROC_RM_MontureGet() )
			{
				ti_gao_ID = @get_rayman PROC_RM_MontureIDGet()
				
				if( to_gao == get_rayman )
				{
					tf_dot_valide = 0.8
//					tv_force = @get_global v_last_trame_traction_rayman
					tv_force = @get_rayman v_force_GRAPPIN		// bug si c'est la monture 
				}
				else
				{
					tf_dot_valide = 0.2
					tv_force = @get_global v_last_trame_traction_monture
				}
				
				DBG_RenderVector(HotSpot_PosGet(OBJ_Me()), tv_force, color_rouge)
				tv_force.z = 0.0
				tv_force *= -1.0
				DBG_RenderVector(HotSpot_PosGet(OBJ_Me()), tv_force, color_vert)
				tf_force = MATH_VecNorm(tv_force)
				
				tv_sight = - OBJ_SightGet()
				tv_sight.z = 0.0
				MATH_VecSetNormalize(tv_sight)
				
				if( ! MATH_FloatNullToler(tf_force, 0.01) )
				{
					MATH_VecSetNormalize(tv_force)
					tf_dot = MATH_VecDotProduct(tv_sight, tv_force)
					if( tf_dot > tf_dot_valide )
					{
						f_coef_tire = MATH_FloatBlend(f_coef_tire, 2.0, 0.25 * TIME_GetDt())
						f_coef_retour = 0.0
						f_levier_coef = MATH_FloatBlend(f_levier_coef, 1.0, f_coef_tire)
						ti_add = vrai
						f_delai_retour = 0.0
					}
				}
			}
		}
	}
	else
		f_delai_tire = 0.0
	
	if( ! ti_add )
	{
		f_delai_retour += TIME_GetDt()
		if( f_delai_retour > 0.25 )
		{
			f_coef_retour = MATH_FloatBlend(f_coef_retour, 5.0, 5.0 * TIME_GetDt())
			f_coef_tire = 0.0
			f_levier_coef = MATH_FloatBlend(f_levier_coef, 0.0, f_coef_retour)
		}
		else
			f_coef_retour = 0.0
	}
	else
		f_coef_retour = 0.0
	
	if( MATH_FloatNullToler(1.0 - f_levier_coef, 0.01) )
	{
		OBJ_CapaSet(CAPA_Open, none)
		HotSpot_Del_Obj(OBJ_Me())
		@get_global i_grappin_hotspot_nmi_died = vrai		// cancel grappin
	}
}

v_levier_axe_courant = MATH_VecBlend(v_levier_axe_init, v_levier_axe_open, f_levier_coef)
@o_levier OBJ_SightGeneralSet(v_levier_axe_courant, OBJ_BankingGet())


Str_DisplayTxtFloatOnce("f_coef_tire = ", f_coef_tire, tv_pos)
tv_pos += cvector(0,0.05,0)
Str_DisplayTxtFloatOnce("f_coef_retour = ", f_coef_retour, tv_pos)
tv_pos += cvector(0,0.05,0)
Str_DisplayTxtFloatOnce("f_levier_coef = ", f_levier_coef, tv_pos)
tv_pos += cvector(0,0.05,0)
