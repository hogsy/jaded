#include "weapon_defines.var"

float	tf_size
int		ti_SF

f_Delay_Speech = 2.0//MATH_RandFloat(10.0,20.0)
f_PZ_Near2 = f_PZ_Near * f_PZ_Near
f_PZ_Far2 = f_PZ_Far * f_PZ_Far


// GESTION DES SFS
if (!OBJ_FlagsIdentityTest(OBJ_C_IdentityFlag_Generated))
{
	switch( i_type )
	{
		case RM_WEAPON_TYPE_CLE :
			SF_GrabbedOnce = AI_SFDynGet(0, SF_MinById, SF_MaxById)			// Allocation
			SpecialFlag_get(SF_GrabbedOnce, ti_SF)
			if (ti_SF)			
				OBJ_Destroy()
			break
	}
}

WEAPON_MODE_SET(C_Mode_Weapon_Wait)

if( i_mitraillette )
{
	i_type = RM_WEAPON_TYPE_GUN
}
else
{
	DYN_On()
	DYN_FlagsSet( DYN_C_BasicForces + DYN_C_GlobalFriction + DYN_C_HorizontalGrounds, none)
	DYN_FrictionVectorSet(cvector( 5.0, 5.0, 0.0))
	DYN_GravitySet(cvector( 0.0, 0.0, -30.0))
	AI_CBAdd(OBJ_Me(), CallBack_Client,"weapon_cb_client")
}

AI_CBAdd(OBJ_Me(), CallBack_WhenDestroy, "weapon_cb_when_destroy")

BV_MinSet(cvector( -1.0,-1.0,-1.0))
BV_MaxSet(cvector(1.0,1.0,1.0))

COL_CrossableSet(Gmat_RM_Crossable_Default | Gmat_RM_Crossable_Weapons, none)

if( i_nb_munitions < 20 )
	i_nb_munitions = 20

v_last_grab_actor_sight = OBJ_SightGet()

switch( i_type )
{
	case RM_WEAPON_TYPE_CLE :
		switch( i_key_type )
		{
			case 1:
				i_key_type = KEY_TYPE_GOLD
				break
			case 2:
				i_key_type = KEY_TYPE_SILVER
				break
			case 3:
				i_key_type = KEY_TYPE_BRASS
				break
			case 4:
				i_key_type = KEY_TYPE_PTIZETRE
				OBJ_ZoomSet(0.85)
				o_gfx_obj = @get_WP OBJ_Duplicate(OBJ_PosGet())
				break
		}
		break
	default:
		i_key_type = 0
		break
}
		

// PTIZETRE = OBJECTIF
if( i_key_type == KEY_TYPE_PTIZETRE )
{
	if( i_Objectif_ID < 0 )
		DBG_Error("Chaque PtiZetre doit avoir un ID d'Objectif unique !!!")
	
}

COL_SwapToSpecific(C_zde_fight)
switch( i_type )
{
	case RM_WEAPON_TYPE_GOURDIN :
		f_aire_deffet = 0.75
		break
	case RM_WEAPON_TYPE_GUN :
		f_aire_deffet = 0.15
		break
	case RM_WEAPON_TYPE_GRENADE :
	default:
		f_aire_deffet *= 0.5
		break
}
tf_size = f_aire_deffet
COL_ZoneSizeSet(C_zde_fight, cvector(tf_size,tf_size,tf_size))
//COL_ZonePosSet(C_zde_fight,cvector(0,0,0))

COL_SwapToSpecific(C_zdm_pied)
tf_size = 0.25
COL_ZoneSizeSet(C_zdm_pied, cvector(tf_size,tf_size,tf_size))
//switch( i_type )
//{
//	case RM_WEAPON_TYPE_GUN :
//	case RM_WEAPON_TYPE_GOURDIN :
//		tf_size = 0.125
//		break
//	default:
//		break
//}
COL_ZonePosSet(C_zdm_pied, cvector(0,0,tf_size))

AI_CBAdd(OBJ_Me(), CallBack_SectoActOn, "Weapon_callback_SectoActOn")
AI_CBAdd(OBJ_Me(), CallBack_SectoActOff, "Weapon_callback_SectoActOff")

AI_TrackCurChangeNow("weapon_wait")
