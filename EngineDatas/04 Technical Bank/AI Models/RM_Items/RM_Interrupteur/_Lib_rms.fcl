//#include "rms_defines.var"
//
//procedure_local	int	Proc_Unlock()
//{
//	message	tmsg_filter
//	messageid	tmid_ID
//	int		ti_rank
//	int		ti_type
//	int		ti_asp
//	
//	switch ( i_type)
//	{
//		case LOCK_TYPE_KEY :
//			o_serveur_use = LNK_ServeurGet(Ci_LNK_USE, mid_use, vrai, nofunc, nofunc)
//			if ( o_serveur_use && LNK_Use_ActivattionGet(mid_use))
//			{
//				if( !i_key_type || LNK_Use_TypeGet(mid_use) == i_key_type) // toutes clé ou la bonne
//				{
//					o_serveur_use = LNK_ServeurGet(Ci_LNK_USE, mid_use, faux, nofunc, nofunc)
//					return vrai
//				}
//				else
//				{
//					o_serveur_use = LNK_ServeurGet(Ci_LNK_USE, mid_use, faux, nofunc, nofunc)	
//					return faux
//				}
//			}
//			break
//		case LOCK_TYPE_PAF :
//			MSG_SetNull(tmsg_filter)
//			tmsg_filter.msg_gao1 = OBJ_Me()
//			ti_rank = -1
//			for (	tmid_ID = MSG_GlobalSearchIntGao(C_EVENT_TYPE_Paf, &ti_rank, tmsg_filter);
//					MSG_GlobalIsValid(tmid_ID);
//					tmid_ID = MSG_GlobalSearchIntGao(C_EVENT_TYPE_Paf, &ti_rank, tmsg_filter) )
//			{		
//				ti_type = EVENT_PafTypeGet(tmid_ID) 
//				if ( ( ti_type & i_paf_type) &&  ( ti_type & i_paf_sous_type))
//				{
//					f_paf_cumul_dmg  += EVENT_PafPuisGet(tmid_ID)
//					f_paf_cumul_last_dmg  = f_paf_cumul_dmg
//					if ( f_paf_cumul_dmg >= f_paf_cumul_needed)
//					{
//						f_paf_cumul_dmg = f_paf_cumul_needed
//						return vrai				
//					}	
//				}
//			}		
//			break
//		// FAIT A LARACHE JE CHANGERAIS AU REVEIL
//		case 4 :	
//			if ( MATH_VecNorm(PROC_ForceStreamGet(OBJ_PosGet(), ti_asp)) >= f_stream_power )
//				return vrai
//			break
//	}
//
//	return faux
//} 
//
//
//procedure_local void Proc_Inter_ON_OFF()
//{
//	int		ti_i
//	i_etat_courant = 1 - i_etat_courant
////	if ( i_etat_courant)
////	{
////		OBJ_CapaSet( Obj_Capa_Switch, none)
////		for( ti_i =0; ti_i < 5; ti_i++)
////		{
////			if ( AI_TriggerIsValid(at_trig_ON[ti_i]))
////				call_trigger( at_trig_ON[ti_i])
////			else
////				ti_i = 5
////		}
////	}
////	else
////	{
////		OBJ_CapaSet(none, Obj_Capa_Switch)
////		for( ti_i =0; ti_i < 5; ti_i++)
////		{
////			if ( AI_TriggerIsValid(at_trig_OFF[ti_i]))
////				call_trigger( at_trig_OFF[ti_i])
////			else
////				ti_i = 5
////		}
////	}
//}