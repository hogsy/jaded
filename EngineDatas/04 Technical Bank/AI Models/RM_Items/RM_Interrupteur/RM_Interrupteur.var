//// Define at least one function in a track
//// function track0 = "name"
//// function track1 = "name"
//function track2 = "rms_init"
//// function track3 = "name"
//// function track4 = "name"
//
//
//
//separator		"type d interrupteur"
//int	i_type		= enum ( "1 - a clé" 1 "2 - a paf" 2 "3 - a scan" 3 "4 - Vent" 4)
//
//separator		"CLE"
//int	i_key_type	= enum ( "0 - ALL " 0  "1 - OR" 1 "2 - Silver" 2 "3 - Brass" 3)
//
//separator		"PAF"
//int	i_paf_type	= enum ( "1 -  All" 0 "2 - Moyen" 2 "3 - Fort" 3 )
//int	i_paf_sous_type	= enum ( "1 -  All" 0 "2 - Grenade" 2 "3 - Gun" 3 "4 - Dive Attack" 4)
//float	f_paf_cumul_needed = 0.0			// Domages nécéssaire pour le cumul soit gagné
//float	f_paf_vitesse_decroit = 1.5		// vitesse de décroissement de l enfoncement
//float	f_paf_enfoncement_max = 0.3	// Distance max d enfoncement du bouton
//float	f_paf_delai_Capa0_vrai = 0.5 		// Durée ou la capa0 reste a vrai apres un paf
//separator		"SCAN"
//int	i_scan_type = enum( "1 - Lapin" 1 "2 - Raptor" 2  "3 - Bronto" 3 "4 - Bat" 4)
//
//separator		"VENT"
//float	f_stream_power	= 3.0
//
//separator		"FONCTIONNEMENT"
//int	i_Start_etat = enum ( "ON" 1 "OFF" 0)
//int	i_va_et_viens = vrai_faux	// si vrai, a chaque validation on passe change d etat ( ON <-> OFF)
//float f_delai_reste_meme_ETAT = 0.0 // -1 reste indéfiniment, 0 reste 1 trame sinon reste la valeur en seconde.
//
//separator		"CONSEQUENCES"
//trigger	at_trig_ON[5]
//trigger	at_trig_OFF[5]
//private messageid		mid_use
//private object				o_serveur_use
//private float					f_delai_restant
//private int					i_etat_courant
//private int					i_besoin_retour
//private int					i_retour_valide
//private int					SF_ID
//
//private float					f_paf_cumul_dmg
//private float					f_paf_cumul_last_dmg  