#include "RM_Projectiles_defines.var"

vector 	tv_tgt_pos
vector	tv_vec

float		tf_z
float		tf_dist

object	to_target
object	to_monture

// SORTIE ETAT 	===================================================================
if( i_sort_etat )
{
	i_sort_etat = faux
	return
}

// INIT ETAT 	=====================================================================
if( i_etat_courant != RMP_ETAT_EXPLOSE)
{
	i_etat_courant = RMP_ETAT_EXPLOSE
	if( fct_last_etat )
	{
		i_sort_etat = vrai
		AI_Execute(fct_last_etat)
	}
	fct_last_etat = AI_TrackCurGet()
	f_time_start_etat = 0.0
	
	i_SND_boom = SND_RequestPlay(RMP_SND_BOOM)
	OBJ_FlagInvisibleSet(vrai)
	PROC_SFX_EXPLOSION_REALISTE(f_explosion_size * 1.5, 1.0, OBJ_PosGet())
	
//	f_explosion_rayon = f_explosion_size / 6
	f_explosion_rayon = COL_ZoneSizeGet(C_zdm_pied) * 2.0
	
	DYN_SpeedSetVector(Cv_NullVector)
}	
else
{
	f_time_start_etat += TIME_GetDt()
}

// COMPORTEMENT =================================================================

f_explosion_rayon += 2.0 * TIME_GetDt()
//DBG_RenderCircle(OBJ_PosGet() - (f_explosion_size * Cv_VerticalVector / 4), f_explosion_rayon - (f_explosion_size / 2), Cv_VerticalVector, color_bleu)
//DBG_RenderCircle(OBJ_PosGet() + (f_explosion_size * Cv_VerticalVector / 4), f_explosion_rayon - (f_explosion_size / 2), Cv_VerticalVector, color_bleu)
DBG_RenderCircle(OBJ_PosGet() - (f_explosion_size * Cv_VerticalVector / 2), f_explosion_rayon, Cv_VerticalVector, color_bleu)
DBG_RenderCircle(OBJ_PosGet() + (f_explosion_size * Cv_VerticalVector / 4), f_explosion_rayon, Cv_VerticalVector, color_bleu)

if (f_explosion_rayon > f_explosion_size)
{           
	OBJ_Destroy()
}

to_target = AI_MainActorGet(0)
tv_tgt_pos = @to_target OBJ_PosGet()
tf_z = OBJ_PosGet().z - tv_tgt_pos.z
tf_dist = MATH_VecNorm(tv_tgt_pos - OBJ_PosGet())
if (((tf_z < f_explosion_size / 2) && (tf_z > -f_explosion_size / 4)) && (tf_dist < f_explosion_rayon))
{
	if (!MATH_VecNull(@to_target DYN_GravityVectorGet()))
	{
		tv_vec = @to_target OBJ_PosGet() - OBJ_PosGet()
		tv_vec.z = 0.0
		to_monture = @to_target PROC_RM_MontureGet()
		if (to_monture != nobody)
			to_target = to_monture
		@to_target DYN_Impulsion (@to_target OBJ_PosGet() + (tv_vec * f_explosion_strength), 10.0)
	}
}
