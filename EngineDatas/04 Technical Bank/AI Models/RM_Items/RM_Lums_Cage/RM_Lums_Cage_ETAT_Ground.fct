#include "RM_Lums_Cage_defines.var"

vector	tv_temp

// SORTIE ===================================================================
if( i_etat_sortie )
{
	i_etat_sortie = faux
	return
}

// ENTREE ===================================================================
if( i_etat_courant != ETAT_Ground )
{
	i_etat_ancien = i_etat_courant
	i_etat_courant = ETAT_Ground
	if( fct_etat_last_track )
	{
		i_etat_sortie = vrai
		AI_Execute(fct_etat_last_track)
	}
	fct_etat_last_track = AI_TrackCurGet()
	f_etat_duree = 0.0
}
else
{
	f_etat_duree += TIME_GetDt()
}

// ANALYSE =================================================================
o_grabbed_actor = LNK_ServeurGet(Ci_LNK_GRAB_OBJECT, mid_grabbed_LNK_ID, vrai, nofunc, nofunc)
if( o_grabbed_actor )
{
	macro_change_etat("RM_Lums_Cage_ETAT_Grabbed")
}

AI_Execute("RM_Lums_Cage_exec_check_paf")
if( i_paf_flag )
{
	macro_change_etat("RM_Lums_Cage_ETAT_Break")
}

// COMPORTEMENT ===========================================================

tv_temp = v_ground_normale
//tv_temp = @o_cage MATH_VecLocalToGlobal(tv_temp)
//tv_temp = MATH_VecGlobalToLocal(tv_temp)
OBJ_BankingGeneralSet(
	OBJ_SightGet(),
	MATH_VecBlendRotate(OBJ_BankingGet(), tv_temp, 5 * TIME_GetDt()))

@o_baton OBJ_FlagInvisibleSet(vrai)
