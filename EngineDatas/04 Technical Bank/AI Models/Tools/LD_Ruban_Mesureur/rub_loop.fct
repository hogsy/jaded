int			ti_string_ID, ti_posmoi, ti_poslui
vector	tv_posmoi, tv_poslui, tv_postext
float		tf_dist

tv_posmoi = OBJ_PosGet()
tv_poslui = @o_GAO2 OBJ_PosGet()
tv_postext = (tv_poslui - tv_posmoi)*0.6
tv_postext += tv_posmoi

ti_poslui = STR_CreateText("\c0000FFFF\\h0.065\A ", VIEW_3dWorldTo2d(0, tv_poslui+cvector(0,0,0.25)), 0.0)
ti_posmoi = STR_CreateText("\c0000FFFF\\h0.065\B ", VIEW_3dWorldTo2d(0, tv_posmoi+cvector(0,0,0.25)), 0.0)

switch	(des_i_type_mesure)
{
	case 0 :
		tf_dist = MATH_AbsFloat(tv_poslui.x - tv_posmoi.x)
		ti_string_ID = STR_CreateText("\c0000FF00\\h0.04\\w0.015\DistX: ", VIEW_3dWorldTo2d(0, tv_postext), 0.0)
		break
	case 1 :
		tf_dist = MATH_AbsFloat(tv_poslui.y - tv_posmoi.y)
		ti_string_ID = STR_CreateText("\c00FFA0A0\\h0.04\\w0.015\DistY: ", VIEW_3dWorldTo2d(0, tv_postext), 0.0)
		break
	case 2 :
		tf_dist = MATH_AbsFloat(tv_poslui.z - tv_posmoi.z)
		ti_string_ID = STR_CreateText("\c00FF00FF\\h0.04\\w0.015\DistZ: ", VIEW_3dWorldTo2d(0, tv_postext), 0.0)
		break
	case 3 :
		tv_poslui.z = 0
		tv_posmoi.z = 0
		tf_dist = MATH_VecDistance(tv_poslui, tv_posmoi)
		ti_string_ID = STR_CreateText("\c00FFFF00\\h0.04\\w0.015\DistXY: ", VIEW_3dWorldTo2d(0, tv_postext), 0.0)
		break
	case 4 :
		tf_dist = MATH_VecDistance(tv_poslui, tv_posmoi)
		ti_string_ID = STR_CreateText("\c00FFFFFF\\h0.04\\w0.015\Distance: ", VIEW_3dWorldTo2d(0, tv_postext), 0.0)
		break
}
STR_AppendFloat(ti_string_ID, tf_dist, 2)
