#include "Box_defines.var"

int			ti_i
int			ti_report_nb
int			tai_report_ID[100]
object	to_obj
vector	tv_normal
vector	tv_pos
float		tf_temp

vector	tv_temp
int			ti_rank
int			ti_asp
int			ti_explose
int			ti_display
int			ti_snd 

messageid		EVT_ID
object	to_pere


// MECA ===========================================================

if (OBJ_FlagsIdentityTest(OBJ_C_IdentityFlag_Dyna))
{
	DYN_TractionSet(Cv_NullVector)
	DYN_FlagsSet(DYN_C_OptimizeColDisable, none)
	DYN_FrictionVectorSet(Cv_NullVector)
	v_last_speed = DYN_SpeedGetVector()
}

switch( i_etat_courant )
{
	case ETAT_BOX_Grabbed :
		DYN_Immovable = faux
	case ETAT_BOX_Caisse :
		if ( i_SND_flag_boom )
		{
			if ( f_time < 1.5)
			{
				f_time += TIME_GetDt()
				returntrack
			}
			else
				OBJ_Destroy()
		}
		else if ( i_explose )
		{
			tv_pos = VIEW_3dWorldTo2d( 0, OBJ_PosGet()) - cvector( 0.0,0.1,0.0)
			ti_display = (Timer_Before_Explode - 0.5 ) + 1
			ti_snd = (f_time  - 0.5 ) + 1
			if ( ti_display != ti_snd )
			{
				if ( ti_display == 1)
					SND_RequestPlay( C_SND_BIP_Proche)
				else if ( ti_display)
					SND_RequestPlay( C_SND_BIP)
			}
			if ( ti_display  >= 4) 
				Str_DisplayTxtIntOnce( "\h0.12\",ti_display, tv_pos )
			else if ( Timer_Before_Explode > 0.0)
				Str_DisplayTxtIntOnce( "\cFF\\h0.12\",ti_display, tv_pos)
		
			f_time = Timer_Before_Explode
			Timer_Before_Explode -= TIME_GetDt()
			if (Timer_Before_Explode <= 0.0)
			{
				Box_Send_PAF()
				SND_RequestPlay(C_SND_Boom)
				if ( i_SND_tracte != -1)
				{
					SND_Destroy(i_SND_tracte)
					i_SND_tracte = -1
				}
				if( @get_rayman PROC_RM_Current_HotSpot_Get() == OBJ_Me() )
					@get_global i_grappin_hotspot_nmi_died = vrai		// cancel grappin
				PROC_SFX_EXPLOSION_CARTOON( OBJ_PosGet())
				i_SND_flag_boom = vrai
				OBJ_FlagInvisibleSet(vrai)
				f_time = 0.0
				AI_TrackStop(2)
				AI_TrackStop(4)
				AI_CBDel(OBJ_Me(), CallBack_After_Rec, "Box_Callback_AfterRec")
				AI_CBDel(OBJ_Me(), CallBack_Client, "Box_Callback_Client")
				AI_CBDel(OBJ_Me(), CallBack_WhenDestroy, "Box_Callback_WhenDestroy")
				returntrack
			}
		}
		else
		{		
			if ( Explose_Si_Collision_Mur)
			{
				if( COL_CollideType(COL_C_Wall))
				{
					tf_temp = DYN_SpeedGet()
					if( MATH_FloatNullEpsilon( Explose_Collision_Sensibilite) || tf_temp < (f_speed_before_rec - Explose_Collision_Sensibilite) )
						i_explose = vrai
				}
				else if (  OBJ_SqrDist( get_rayman) < 4.0)
				{
					if ( MATH_FloatNullEpsilon( f_bip_proche_delai) || f_bip_proche_delai > 0.15)
					{
						SND_RequestPlay(C_SND_BIP_Proche)
						f_bip_proche_delai =0.0
					}
					f_bip_proche_delai += TIME_GetDt()
				}
				else
					f_bip_proche_delai = 0.0
			
				
			}
			if ( Explose_Si_Coup && o_paf_actor)
			{
				i_explose = vrai
				if( o_paf_actor != AI_MainActorGet(0) )
					o_explose_actor = o_paf_actor		// acteur à ne pas paffer
			}
			if ( AI_TriggerIsValid( Explose_Si_Trigger) && call_trigger( Explose_Si_Trigger))
				i_explose = vrai
			
			if( i_explose )
				@get_list_manager WAY_LIB_Add_Occluder(OBJ_Me())
		}
		break
	case ETAT_BOX_Piege :
		switch( Piege_Type )
		{
			case Ci_Piege_Type_Vertical :
				if( OBJ_CapaTest(CAPA_BOX_Piege_Down) )
					DYN_Immovable = faux		// piège qui tombe ou qui est au sol
				else
					DYN_Immovable = vrai		// piège armé ou qui remonte
				break
			case Ci_Piege_Type_Cage :
				DYN_Immovable = vrai
				break
		}
		break
}

if (OBJ_FlagsIdentityTest(OBJ_C_IdentityFlag_Dyna))
{
	if ( DYN_Immovable )
	{
		COL_ColSetActivationSet(none, C_bit_zdm_pied)
		DYN_GravitySet(Cv_NullVector)
	}
	else
	{
		COL_ColSetActivationSet(C_bit_zdm_pied, none)
		DYN_GravitySet(cvector(0,0,Gravity))
		// horizontal grounds ?
		switch( Glissement )
		{
			case Ci_Glissement_Jamais :
			case Ci_Glissement_Ice :
				DYN_FlagsSet(DYN_C_HorizontalGrounds, none)
				break
			case Ci_Glissement_Moteur :
				DYN_FlagsSet(none, DYN_C_HorizontalGrounds)
				break
		}
	}
}


// GROUND COL ========================================================
i_real_ground_flag = faux

if (o_father)
{
	v_Ground_Normale_Cur = @o_father MATH_VecLocalToGlobal(v_Ground_Normale_Cur)
	v_last_sight = @o_father MATH_VecLocalToGlobal(v_last_sight)
	v_last_banking = @o_father MATH_VecLocalToGlobal(v_last_banking)
}
o_father = nobody

if (COL_ColSetActivationGet() & C_bit_zdm_pied)
{
	ti_report_nb = COL_ReportsNumberAndRanksGet(&tai_report_ID[0], 100, COL_C_Ground)
	for (ti_i = 0; ti_i < ti_report_nb; ti_i++)
	{
		to_obj = COL_ObjectGet(COL_C_ReportIndex + tai_report_ID[ti_i])
		if (@to_obj OBJ_FlagsIdentityTest(OBJ_C_IdentityFlag_Anims))
			continue

		tv_normal = COL_NormalGet(COL_C_ReportIndex + tai_report_ID[ti_i])
		if( tv_normal.z < 0.0 )
			continue

		tv_normal = COL_ZonePosGet(C_zdm_pied)
		tv_normal -= COL_CollidedPointGet(COL_C_ReportIndex + tai_report_ID[ti_i])

		if( tv_normal.z < 0.0 )
			continue

		MATH_VecSetNormalize(tv_normal)

		v_Ground_Normale = tv_normal
		tv_temp = v_Ground_Normale
			
		i_real_ground_flag = vrai
		break
	}

//	if (COL_CollideType(COL_C_Ground) )
//	{
//		tv_temp = COL_NormalGet(COL_C_Ground)
//		if( tv_temp.z > 0.0 )
//			i_real_ground_flag = vrai
//	}
}
if( i_real_ground_flag )
{
	i_ground_flag = vrai
	f_real_no_ground_duree = 0.0
}
else
{
	f_real_no_ground_duree += TIME_GetDt()
	if( f_real_no_ground_duree < 0.1 )
		i_ground_flag = vrai
	else
		i_ground_flag = faux
}

// STREAM =========================================================
switch( i_etat_courant )
{
	case ETAT_BOX_Caisse :
		if( Materiau == 1)	// Metal
			v_Traction_Stream = Cv_NullVector
		else
			v_Traction_Stream = PROC_ForceStreamGet(OBJ_PosGet(), ti_asp)
		break
	default:
		v_Traction_Stream = Cv_NullVector
		break
}

// UNCOL ===========================================================
COL_UnCollidableReset()
switch( Piege_Type )
{
	case Ci_Piege_Type_Cage :
	case Ci_Piege_Type_Vertical :
		// les pièges doivent être uncol avec Rayman
		to_pere = AI_MainActorGet(C_ID_Rayman)
		if( to_pere )
			@to_pere COL_UnCollidableAdd(OBJ_Me())	
		// les pièges doivent être uncol avec lapins
		ti_rank = -1
		for (	EVT_ID = MSG_GlobalScan(C_EVENT_TYPE_Visibility, &ti_rank);
				MSG_GlobalIsValid(EVT_ID);
				EVT_ID = MSG_GlobalScan(C_EVENT_TYPE_Visibility, &ti_rank))
		{
			to_pere = EVENT_PereGet(EVT_ID)
//			if( @to_pere AI_IsModel(get_PNJ_Lapin_path) )
			if( EVENT_VisionIDGet(EVT_ID) == C_ID_Lapin )
				@to_pere COL_UnCollidableAdd(OBJ_Me())
		}	
		break
}

// PAF ===========================================================
AI_Execute("Box_check_paf")

if ( HOTSPOT)
{
	if ( OBJ_SqrDist( get_rayman) > 6.0)
	{
		if ( ! i_hotspot)
		{
			i_hotspot = vrai
			HotSpot_Add_Obj(OBJ_Me(), 0)
		}
	}
	else if ( i_hotspot)
	{
		HotSpot_Del_Obj(OBJ_Me())
		i_hotspot = faux
	}
}
