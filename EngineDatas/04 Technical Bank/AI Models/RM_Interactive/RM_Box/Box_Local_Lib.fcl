#include "Box_defines.var"

Include_UltraProcedure_Header

procedure_local vector Box_GetThisPosition(float x, float y)
{
	vector	tv_temp
	tv_temp = OBJ_PosGet()
	tv_temp += x * Size * OBJ_HorizonGet()
	tv_temp += y * Size * OBJ_SightGet()
	return tv_temp
}

procedure_local object Box_CheckGroundColAtThisPosition(float x, float y)
{
	vector	tv_temp
	vector	tv_ray
	object	to_obj
	int			ti_color
	tv_temp = Box_GetThisPosition(x, y)
	tv_temp += 0.5 * Size * OBJ_BankingGet()
	tv_ray = - Size * Cv_VerticalVector
	to_obj = COL_RayObject_Dist(tv_temp, tv_ray, Size, all, none, Ci_Filter_IdentityFlag, COL_C_Ray_on_ColMap_Crossable)
	if( to_obj )
		ti_color = color_vert
	else
		ti_color = color_rouge
	DBG_RenderVector(tv_temp, tv_ray, ti_color)
	return to_obj
}

procedure_local object Box_Get_Rope_Gao(byref vector tv_pos_A, byref vector tv_pos_B, byref int ti_flag_tension)
{
	object	to_gao	

	float		tf_sqr_rope_length
	float 		tf_rope_length
	float 		tf_rope_ratio

	vector	tv_offset_A
	vector	tv_offset_B
	vector	tv_rope_AB

	ti_flag_tension = faux

	to_gao = @o_rope_manager Rope_Manager_Get_Linked_Gao(OBJ_Me(), tf_rope_length, tf_rope_ratio, tv_offset_A, tv_offset_B)
	if (to_gao)
	{
		if (inverse_gravity_if_grapin)
			DYN_GravitySet(cvector(0.0, 0.0, -Gravity))
	
		if (tf_rope_ratio <  1.0)
		{
			tv_pos_A = OBJ_PosGet() + MATH_VecLocalToGlobal(tv_offset_A)
			tv_pos_B = @to_gao OBJ_PosGet() + @to_gao MATH_VecLocalToGlobal(tv_offset_B)
		
//			DBG_RenderVector(tv_rope_pos, -tv_rope_AB, color_cyan)	
	
			tf_sqr_rope_length = tf_rope_length * 0.8
			tf_sqr_rope_length *= tf_sqr_rope_length
			
			if (MATH_VecSquareNorm(tv_pos_B - tv_pos_A) > tf_sqr_rope_length)
				ti_flag_tension = vrai

			return(to_gao)
		}
	}
	
	return(nobody)
}

procedure_local void	Box_Send_PAF()
{
	vector	tv_sens, tv_pos
	object	tao_zde_zde_list[20]
	object	to_target
	float		pf_dist
	int			ti_i
	int			ti_nb
	int			ti_type

	COL_ColSetActivationSet(C_bit_zde_fight, none)
	ti_nb = COL_ZDE_ZDEListGet( &tao_zde_zde_list[0], C_zde_fight, C_zde_corps, all, none, Ci_Filter_IdentityFlag)
	for (ti_i = 0; ti_i < ti_nb; ti_i++)
	{
		to_target = tao_zde_zde_list[ti_i]
//		if( to_target == o_explose_actor )
//			Proc_PNJ_Dodge_Actor_Set(to_target, OBJ_Me(), RM_WEAPON_TYPE_GRENADE)
//		else
		{
			tv_pos = OBJ_PosGet()
			tv_sens = @to_target OBJ_PosGet() - OBJ_PosGet()
			ti_type = C_PAF_RM_Grenade
			pf_dist = Explose_Volume
			pf_dist *= pf_dist
			ti_type |= C_PAF_RM_Fort + C_PAF_RM_Grenade
			EVENT_AddEventPafCanal( C_EVENT_FILTER_Object, ti_type, OBJ_Me(), Cf_EVENT_Duree_1Trame, to_target, -1, 20.0, tv_sens, tv_pos)
		}
	}
}



