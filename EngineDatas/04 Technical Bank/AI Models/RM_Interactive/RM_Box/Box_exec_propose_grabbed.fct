#include "Box_defines.var"


messageid		tmid_proposition

object	to_serveur

float		tf_dist
float		tf_dist_test

vector	tv_temp
vector	tv_sens
vector	tv_serveur_pos
vector	tv_ma_pos
vector	tv_sight
vector	tv_banking


#define	MACRO_REFUSE(texte)	\
{	\
//DBG_TraceObject(OBJ_Me())	\
//DBG_TraceString(" refuse le ride : ")	\
//DBG_TraceString(texte)	\
//DBG_TraceEOL()	\
LNK_ServeurRefuse(tmid_proposition)	\
return		\
}

tmid_proposition = pop
to_serveur = MSG_GlobalGetGao(tmid_proposition, SERVEUR)
tv_serveur_pos = @to_serveur OBJ_PosGet()
tv_ma_pos = OBJ_PosGet()


// RESTRICTION TYPE DE CAISSE
switch( Piege_Type )
{
	case Ci_Piege_Type_Vertical :
		MACRO_REFUSE("les pièges verticaux ne sont pas grabbables !!!!")
		break
		
	default:
		tv_temp = tv_serveur_pos - tv_ma_pos
		tf_dist = MATH_VecSquareNorm(tv_temp)

		tf_dist_test = (Size + 1.0) * 2.0
		tf_dist_test *= tf_dist_test

		if( tf_dist <= tf_dist_test )
			LNK_ClientPropose(tmid_proposition, tf_dist)
		else
			LNK_ServeurRefuse(tmid_proposition)
		break
}


//tv_temp = tv_serveur_pos - tv_ma_pos
//tf_dist = MATH_VecSquareNorm(tv_temp)
//tf_dist_test = 2.0 * OBJ_ZoomGet()
//tf_dist_test *= tf_dist_test
//if( tf_dist <= tf_dist_test )
//{
//	// La distance est bonne
//	tv_sens = LNK_GrabVectorGet(tmid_proposition)
//	tf_dist = MATH_FloatMin(tf_dist, 999)
//	LNK_ClientPropose(tmid_proposition, tf_dist)
//}
//else
//{
//	DBG_TraceFloat(tf_dist)
//	MACRO_REFUSE("trop loin")
//}

