#include "Box_defines.var"

float	tf_size
int		ti_ok


//AI_RunContext(CTX_AfterRec)

o_rope_manager = @get_global o_rope_manager
if ( ! o_rope_manager )
	returntrack

o_main_actor = AI_MainActorGet(0)
if ( ! o_main_actor )
	returntrack

// DYNA
DYN_On()
DYN_FlagsSet(DYN_C_BasicForces | DYN_C_NeverDynamicHierarchy | DYN_C_VectorFriction | DYN_C_GlobalFriction | DYN_C_SkipFrictionWhenSpeedFromAnim | DYN_C_SlipOnGroundEdge | DYN_C_ApplyRec, none)
DYN_TractionSet(Cv_NullVector)

COL_CrossableSet(Gmat_RM_Crossable_Default, none)
if( Materiau )
	COL_CrossableSet(Gmat_RM_Face_eau, none)
else if( Flotte )
	COL_CrossableSet(none, Gmat_RM_Face_eau)
else
	COL_CrossableSet(Gmat_RM_Face_eau, none)

if ( HOTSPOT)
{
	HotSpot_Add_Obj(OBJ_Me(), 0)
	i_hotspot = vrai
}
OBJ_FlagsTypeSet(OBJ_C_TypeFlag_DodgeCamera, none)

if( Proc_Box_Explosive() )
	Size = 1.0		// mines

ti_ok = 0
//if( ! Proc_Box_Explosive() && ! Piege_Type )
//	ti_ok = 1		// 1 simple box
if( Explose_Si_Collision_Mur )
{
	switch( Petite_Mine_Occluder )
	{
		case 1 :
			ti_ok = 1
			break
		case 2 :
			ti_ok = 2
			break
	}
}
if( ti_ok )
	@get_list_manager WAY_LIB_Add_Occluder(OBJ_Me())		// une simple caisse
if( ti_ok == 2 )
	OBJ_CustomBitsSet(OBJ_CBits_1, none)		// occluder 180°

// SIZE
//OBJ_ZoomSet(Size)

v_last_sight = OBJ_SightGet()
v_last_banking = OBJ_BankingGet()

// BV
tf_size = 0.65 * Size
BV_MinSet(cvector(- tf_size, - tf_size, - tf_size))
BV_MaxSet(cvector(tf_size, tf_size, tf_size))

// TRACKS
AI_CBAdd(OBJ_Me(), CallBack_After_Rec, "Box_Callback_AfterRec")
AI_CBAdd(OBJ_Me(), CallBack_Client, "Box_Callback_Client")
AI_CBAdd(OBJ_Me(), CallBack_WhenDestroy, "Box_Callback_WhenDestroy")
AI_CBAdd(OBJ_Me(), CallBack_SectoActOn, "Box_Callback_SectoActOn")
AI_CBAdd(OBJ_Me(), CallBack_SectoActOff, "Box_Callback_SectoActOff")

AI_TrackChange(1, "Box_Track_Reflex")
if( Piege_Type )
	AI_TrackChange(2, "Box_ETAT_Piege")
else
	AI_TrackChange(2, "Box_ETAT_Caisse")
AI_TrackChange(4, "Box_Track_AfterEtat")
AI_TrackCurStop()

