#include "RM_Prune_defines.var"
object		to_touche
float			tf_norm

// SORTIE ETAT ===================================================================
if( i_sort_etat )
{
	i_sort_etat = faux
	f_CoefJump = 1.0
	return
}

// INITIALISATION ETAT ==============================================================
if( i_etat_courant != ETAT_Prune_RIDED )
{
	i_dernier_etat = i_etat_courant
	i_etat_courant = ETAT_Prune_RIDED
	if( fct_last_etat )
	{
		i_sort_etat = vrai
		AI_Execute(fct_last_etat)
	}
	fct_previous_etat = fct_last_etat
	fct_last_etat = AI_TrackCurGet()
	f_time_start_etat = 0.0
	f_CoefJump = 5.0
	f_TimeLastJump = 0.0
}
else
{
	f_time_start_etat += TIME_GetDt()
}

// STIMULI ===========================================================================

	o_Rided_Actor = LNK_ServeurGet(Ci_LNK_RIDE_ON_NMI, mid_Rided_LNK_ID, vrai, nofunc, nofunc)
	if(!o_Rided_Actor )
		macro_change_etat(fct_wait)



// COMPORTEMENT ===================================================================
v_SightVoulu=glob_joyvector_get

//Str_DisplayFloatOnce(f_CoefJump,cvector(0.2,0.2,0.0))
//Str_DisplayFloatOnce(f_ForceRebond ,cvector(0.2,0.3,0.0))

if(COL_CollideType(COL_C_Ground))
{
	f_TimeLastJump = 0.0
	if(i_Template==Ci_Template_Mouton)
	{
		f_ForceRebond=f_ForceRebondAvance + MATH_RandFloat(-1.0,1.0)
		v_ForceVoulue = (OBJ_SightGet() * 1.5) + cvector(MATH_RandFloat(-1.0,1.0),MATH_RandFloat(-1.0,1.0),0)
	}
	else
	{
//		if(MATH_VecNorm(glob_joyvector_get)>0.1)
//		{
			f_CoefJump = MATH_FloatMax(f_CoefJump*0.8,5.0)
//			f_ForceRebond=f_ForceRebondAvance
			f_ForceRebond = MATH_FloatMax(f_ForceRebond*0.8,f_ForceRebondAvance)
//			if(Proc_JOY_Boost_Pressed() || i_BoostJump)
			if(i_BoostJump)
			{
				f_ForceRebond = MATH_FloatMin(f_ForceRebond + (f_JumpBoostCoef * f_ForceRebond), f_MaxJump)
				f_CoefJump = MATH_FloatMin(f_CoefJump + (f_JumpBoostCoef * f_CoefJump), f_MaxJump)
				i_BoostJump = faux
			}
			v_ForceVoulue=glob_joyvector_get	
//		}
//		else
//		{
//			v_ForceVoulue=Cv_NullVector
////			f_ForceRebond=f_ForceRebondArret
//			f_ForceRebond=f_ForceRebondAvance 
//		}
	}
}
else
	f_TimeLastJump+=TIME_GetDt()

Prune_Rebondit()

if(i_Template==Ci_Template_Prune)
	v_BankingVoulu = MATH_VecBlend(Cv_VerticalVector,glob_joyvector_get,0.5) * 2.0