#include "RM_Prune_defines.var"

vector		tv_dest
float			tf_dist
vector		tv_nextPos
object		to_obj
object		tao_obj[1]
float			taf_float[1]
int				ti_occ
float			tf_vitesse

// SORTIE ETAT ===================================================================
if( i_sort_etat )
{
	i_sort_etat = faux
	return
}

// INITIALISATION ETAT ==============================================================
if( i_etat_courant != ETAT_Prune_FOLLOW )
{
	i_dernier_etat = i_etat_courant
	i_etat_courant = ETAT_Prune_FOLLOW
	if( fct_last_etat )
	{
		i_sort_etat = vrai
		AI_Execute(fct_last_etat)
	}
	fct_previous_etat = fct_last_etat
	fct_last_etat = AI_TrackCurGet()
	f_time_start_etat = 0.0
//	if(i_Deplacement==0)
//		macro_change_etat("RM_Prune_ETAT_ACTIVEWAIT")
}
else
{
	f_time_start_etat += TIME_GetDt()
}

// STIMULI ===========================================================================

	o_Rided_Actor = LNK_ServeurGet(Ci_LNK_RIDE_ON_NMI, mid_Rided_LNK_ID, vrai, nofunc, nofunc)
	if( o_Rided_Actor )
		macro_change_etat("RM_Prune_ETAT_RIDED")
	if( Prune_CheckHotSpot() )
		macro_change_etat("RM_Prune_ETAT_GRAPPINED")
	if(o_Pafeur)
		macro_change_etat("RM_Prune_ETAT_PAFFED")
	
	

// COMPORTEMENT ===================================================================
// i_target_territory_ID = Prune_PROC_POS_GET_TERRITORY(v_way_destpos)

v_SightVoulu = @o_cible OBJ_PosGet()-OBJ_PosGet()

if(COL_CollideType(COL_C_Ground))
{
	tv_dest=(@o_cible OBJ_PosGet()-OBJ_PosGet())
	
	tf_dist=MATH_VecNorm(tv_dest)
	
	if(tf_dist>4.0) 
	{
		ti_occ=WAY_LIB_Test_Occluder(OBJ_PosGet(),DYN_SpeedGetVector(),1.0,@o_cible OBJ_PosGet(),-1,tv_nextPos,to_obj,&tao_obj[0],&taf_float[0],0,0)
		if(ti_occ!=0)
		{
			tv_dest=(tv_nextPos-OBJ_PosGet())
			tf_dist=MATH_VecNorm(tv_dest)
		}
		tv_dest.z=0.0
		tf_vitesse=5.0
	//	DBG_RenderVector(OBJ_PosGet(),(tv_dest/tf_dist)*tf_vitesse,color_rouge)
		v_ForceVoulue=((tv_dest/tf_dist)*tf_vitesse)	
		f_ForceRebond=f_ForceRebondAvance
	}
	else
	{
		v_ForceVoulue=Cv_NullVector
		f_ForceRebond=f_ForceRebondArret
	}
}

Prune_Rebondit()