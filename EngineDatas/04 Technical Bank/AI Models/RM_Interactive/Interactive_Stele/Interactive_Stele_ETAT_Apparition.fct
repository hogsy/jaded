#include "Interactive_Stele_defines.var"

int			ti_i

float		tf_coef

object	to_main_actor

if (i_flag_sortie_etat)
{
	i_flag_sortie_etat = faux
	
	for (ti_i = 0; ti_i < 50; ti_i++)
	{
		GFX_Del(GFX_Line[ti_i])
		GFX_Line[ti_i] = -1
	}

	GFX_Del(GFX_Halo)
	GFX_Halo = -1

	@o_creature OBJ_Reinit(vrai)
	@o_creature OBJ_FlagInvisibleSet(faux)
	@o_creature OBJ_FlagInactiveSet(faux)
	@o_creature OBJ_PosSet(v_FX_Apparition + cvector(0,0,3.0))
	@o_creature OBJ_BankingGeneralSet(@get_rayman OBJ_SightGet(), Cv_VerticalVector)
	@o_creature COL_StartMatrixSet(@o_creature OBJ_PosGet())

	return
}

if (i_etat_courant != ETAT_Apparition)
{
	// INTIALISATION
	i_dernier_etat = i_etat_courant
	i_etat_courant = ETAT_Apparition
	
	if (fct_last_etat)
	{
		i_flag_sortie_etat = vrai
		AI_Execute(fct_last_etat)
	}
	
	fct_last_etat = AI_TrackCurGet()
	
	f_time_start_etat = 0.0

	for (ti_i = 0; ti_i < 50; ti_i++)
	{
		av_gfx_line_Z[ti_i] = 	v_FX_Apparition
		av_gfx_line_Z[ti_i] += cvector(MATH_RandFloat(-1.0, 1.0),  MATH_RandFloat(-1.0, 1.0), 0.0) * 2.0
		av_gfx_line_Z[ti_i].z += MATH_RandFloat(100.0, 150.0)
		af_gfx_line_Z_speed[ti_i] = MATH_RandFloat(-50.0, -150.0)

		GFX_Line[ti_i] = GFX_Add(1)
		GFX_FlagSet(GFX_Line[ti_i] , 0, 1)
		GFX_FlagSet(GFX_Line[ti_i], 2, 1)
		GFX_MaterialSet(GFX_Line[ti_i], get_SFX_light_and_smoke, 3)
		GFX_Setf(GFX_Line[ti_i], 1000, 0.25)		// Epaisseur de la ligne
		GFX_Seti(GFX_Line[ti_i], 1100, 0xFFFF80FF)		// Couleur de la ligne
	}
	
	GFX_Halo = GFX_Add(21)
	GFX_FlagSet(GFX_Halo, 4, 1)
	GFX_MaterialSet(GFX_Halo, get_SFX_light_and_smoke, 0)	
	GFX_Setf(GFX_Halo, 21002, 0.1)							// extraction par rapport au point de génération (vers la cam)
	GFX_Seti(GFX_Halo, 21103, 1)		
	GFX_Seti(GFX_Halo, 21101, 0xFFFF80FF)
}
else
{
	f_time_start_etat += TIME_GetDt()
}

// ANALYSE ===============================================================
tf_coef = f_time_start_etat / 3.0

GFX_Setv(GFX_Halo, 21200, v_FX_Apparition + cvector(0.0, 0.0, 0.2 + (tf_coef * 2.0)))
GFX_Setf(GFX_Halo, 21000, tf_coef * 20.0)			// rayon

for (ti_i = 0; ti_i < 50; ti_i++)
{
	av_gfx_line_Z[ti_i].z += af_gfx_line_Z_speed[ti_i] * TIME_GetDt()

	if (av_gfx_line_Z[ti_i].z < v_FX_Apparition.z)
	{
		av_gfx_line_Z[ti_i] = 	v_FX_Apparition
		av_gfx_line_Z[ti_i] += cvector(MATH_RandFloat(-1.0, 1.0),  MATH_RandFloat(-1.0, 1.0), 0.0) * tf_coef * 8.0
		av_gfx_line_Z[ti_i].z += MATH_RandFloat(100.0, 150.0)
		af_gfx_line_Z_speed[ti_i] = MATH_RandFloat(-50.0, -150.0)
	}

	GFX_Setv(GFX_Line[ti_i], 1200, av_gfx_line_Z[ti_i])		// Coordonnée de la position 3D du début du faisceau
	GFX_Setv(GFX_Line[ti_i], 1201, av_gfx_line_Z[ti_i] + cvector(0.0, 0.0, -10.0))		// Coordonnée de la position 3D de la fin du faisceau
}

if (f_time_start_etat > 3.0)
	macro_change_etat("Interactive_Stele_ETAT_Attente")
