#include "RM_Ascenseur_defines.var"

Include_UltraProcedure_Header

vector		tv_pos

object		to_gao

int				ti_sign
int				ti_end

// SORTIE ETAT 	===================================================================
if( i_sort_etat )
{
	i_sort_etat = faux
	
	// Changer la sectorisation si Rayman est dans l'ascenseur
	if (COL_BV_PivotCollide(o_main_actor))
	{
		if (i_sector_arrive != -1)
		{
			if (!i_dest)
			{
				if (i_position_sectorise == 1)
				{
					SCT_SetCurrent(i_sector_arrive)
					to_gao = @get_global o_AI_secto_gao
					if (to_gao)
						@to_gao Proc_Sec_AISecto_ADD()
				}
			}
			else
			{
		 		if (i_position_sectorise == 0)
		 		{
					SCT_SetCurrent(i_sector_arrive)
					to_gao = @get_global o_AI_secto_gao
					if (to_gao)
						@to_gao Proc_Sec_AISecto_ADD()
				}
			}
		}
	}
	
	if (i_SND_move_loop >= 0)
	{
		SND_Stop(i_SND_move_loop)
		i_SND_move_loop = -1
	}
	
	return
}

// INIT ETAT 	=====================================================================
if( i_etat_courant != ETAT_RMA_MOVE)
{
	i_etat_courant = ETAT_RMA_MOVE
	if( fct_last_etat )
	{
		i_sort_etat = vrai
		AI_Execute(fct_last_etat)
	}
	fct_last_etat = AI_TrackCurGet()
	f_time_start_etat = 0.0

	// Rayman est-il dans l'ascenseur ?
	if (COL_BV_PivotCollide(o_main_actor))
	{
		// Oui, lier Rayman à l'ascenseur
		@o_main_actor OBJ_HierarchySet(OBJ_Me())
		
		// Changer la sectorisation
		if (i_sector_leave != -1)
		{
			if (!i_dest)
			{
				if (i_position_sectorise == 0)
				{
					SCT_SetCurrent(i_sector_leave)
					to_gao = @get_global o_AI_secto_gao
					if (to_gao)
						@to_gao Proc_Sec_AISecto_ADD()
				}
			}
			else
			{
				if (i_position_sectorise == 1)
				{
					SCT_SetCurrent(i_sector_leave)
					to_gao = @get_global o_AI_secto_gao
					if (to_gao)
						@to_gao Proc_Sec_AISecto_ADD()
				}
			}
		}
	}

	if (i_SND_move_loop == -1)
		i_SND_move_loop = SND_RequestPlayLoop(SND_MOVE_LOOP)

} 
else
{
	f_time_start_etat += TIME_GetDt()
}

// STIMULI ========================================================================
if (AI_TriggerIsValid(t_demi_tour))
	ti_sign = call_trigger(t_demi_tour)
else ti_sign = 0
if (ti_sign)
	if (i_dest) i_dest = 0
	else i_dest = 1

// Rayman doit préserver sa hiérarchie
if (COL_BV_PivotCollide(o_main_actor))
{
	@o_main_actor PROC_RM_KeepHierarchy()
}

// COMPORTEMENT ================================================================

tv_pos = OBJ_PosGet()
if (!i_dest) ti_sign = 1
else ti_sign = -1

tv_pos += ti_sign * v_axis * f_vitesse_deplacement * TIME_GetDt()

if ((!i_dest) && (MATH_VecDotProduct(v_position[1] - tv_pos, v_axis) < 0))
{
	tv_pos = v_position[1]
	ti_end = 1
}
else if (i_dest && (MATH_VecDotProduct(v_position[0] - tv_pos, v_axis) > 0))
{
	tv_pos = v_position[0]
	ti_end = 1
}
else ti_end = 0

OBJ_PosSet(tv_pos)

if (ti_end)
	AI_TrackCurChangeNow("RMA_ETAT_OPEN")
