
procedure_ultra void	PROC_StreamSet( float pf_stream)
{
	stream_power = pf_stream
}

procedure_ultra vector	PROC_StreamGet( vector	pv_pos, byref int pi_asp)
{
	vector	tv_sens
	float		tf_dist, tf_pct
	object	to_obj

	if( MATH_IntSign(stream_power) < 0.0 )
		pi_asp = vrai
	else
		pi_asp = faux

	to_obj = get_WP
	@to_obj OBJ_FlagInactiveSet(faux)
	@to_obj OBJ_PosSet(pv_pos)
	if ( COL_ZDE_PivotCollide( to_obj, C_zde_fight))
	{
		tv_sens = pv_pos - OBJ_PosGet()
		tf_dist = MATH_AbsFloat(MATH_VecDotProduct( OBJ_SightGet(), tv_sens))
		if ( tf_dist < f_dist_max)
		{


			if ( (tf_dist / f_zone_max) < f_pct_force_max)
				tf_pct = 1.0
			else
			{
				tf_pct =  (tf_dist / f_zone_max) - f_pct_force_max
				tf_pct /= 1 - f_pct_force_max 
				tf_pct = 1 - tf_pct
			}
		}
		else
			tf_pct = 0.0		
	}
	else
	{
		tv_sens = Cv_NullVector
		tf_pct = 0.0
	}
	if ( pi_asp == faux )	// REPOUSSE
		return	 (OBJ_SightGet() * stream_power * tf_pct)
	else
	{
		// ASPIRE
		if ( MATH_VecNullEpsilon(tv_sens))
			tv_sens = OBJ_SightGet()
		MATH_VecSetNorm( tv_sens, stream_power * tf_pct)
		return tv_sens 
	}	
}



procedure_local void Proc_STREAM_SFX( )
{

	//------------------------------------------------------------------------------------------------------------------
	//------------------------------------------------------------------------------------------------------------------
	// 						GENERATEUR DE PARCITULES FUMEE
	//------------------------------------------------------------------------------------------------------------------
	//------------------------------------------------------------------------------------------------------------------

	vector XAX
	vector YAX
	vector tv_wind
	vector tv_expulsion_dir
	vector POS_FOR_GFX

	if( !i_particule_ON)
		return
	
	if (i_GFX_Stream == -1)
	{
		//----------------------------------------------------------------------------
		// REGLAGES POSITION CREATION GENERATEUR
		//----------------------------------------------------------------------------
		// Création SFX
		i_GFX_Stream= GFX_Add(13)
	
		// Gravité
		GFX_Setf(i_GFX_Stream, 13007, 0.0)
	
		//Détermination BV de destination des particules
		XAX = cvector(0.05,0,0.05)
		YAX = cvector(0,0.05,-0.06 )
		
		// Volume de destination des particules : CreaPosAxe X
		GFX_Setv(i_GFX_Stream, 13207, XAX )
	
		// Volume de destination des particules : CreaPosAxe Y
		GFX_Setv(i_GFX_Stream, 13208, YAX )
	
		// Main pos speed
		GFX_Setv(i_GFX_Stream, 13205, Cv_NullVector)
		
		// Main pos friction
		GFX_Setv(i_GFX_Stream, 13206, Cv_NullVector)
	
	
		//----------------------------------------
		// REGLAGES PARTICULES
		//----------------------------------------
		// VITESSE
		//---------------
		// Vitesse maximum des particules (valeur pour chaque axe)
		GFX_Setv(i_GFX_Stream, 13201, OBJ_SightGet()*5)
		GFX_Setv(i_GFX_Stream, 13202, OBJ_SightGet()*10)

		// Vitesse min des particules (valeur globale en FLOAT)
		GFX_Setf(i_GFX_Stream, 13009, 10.0)

		// Vitesse max des particules (valeur globale en FLOAT)
		GFX_Setf(i_GFX_Stream, 13010, 30.0)

		// Generation rate
		GFX_Setf(i_GFX_Stream, 13008, 0.1)


		//--------------- 
		// NOMBRE DE PARTICULES
		// Nombre de sprites	en buffer
		GFX_Seti(i_GFX_Stream, 13100, 100)
		// Nombre de sprites à générer
		GFX_Seti(i_GFX_Stream, 13106, 0xFFFFFFFF)

		//---------------
		// GROSSISSEMENT DES PARTICULES
		// Growing speed min
		GFX_Setf(i_GFX_Stream, 13000, 4.0)	
	
		// Growing speed max
		GFX_Setf(i_GFX_Stream, 13001, 10.0)	
	
		//---------------
		// TAILLE
		// Taille min à la création
		GFX_Setf(i_GFX_Stream, 13005, 0.2)
	
		// Taille max à la création
		GFX_Setf(i_GFX_Stream, 13006, 0.3)
	
		//---------------
		// FRICTION
		// Friction grow
		GFX_Setf(i_GFX_Stream, 13002, 0.03)
	
		// Friction sur chaque axe
		GFX_Setv(i_GFX_Stream, 13203, cvector(0.001, 0.001, 0.001))
	
		//---------------
		// DUREE DE VIE
		// Durée de la phase d'apparition
		GFX_Setf(i_GFX_Stream, 13003, 1.2)
		
		// Durée de la phase de mort
		GFX_Setf(i_GFX_Stream, 13004, 0.3)
	
		// Time random
		GFX_Setf(i_GFX_Stream, 13012, 0.75)
	
	
		//-----------------------------------------------------
		// REGLAGE RENDU
		//-----------------------------------------------------
		// On attribue un matériau
		GFX_MaterialSet(i_GFX_Stream, get_SFX_light_and_smoke, -1)
		GFX_Seti(i_GFX_Stream, 13101, 43)
		
		// Sprites non triés
		GFX_Seti(i_GFX_Stream, 13107, 1)
		
		// Définition du matériau comme étant actif et transparent
		GFX_FlagSet(i_GFX_Stream, 0 , 1)
		GFX_FlagSet(i_GFX_Stream, 2 , 1)
	
		// Couleur phase d'apparition
		GFX_Seti(i_GFX_Stream, 13103, 0x00FFFFFF)
	
		// Couleur phase de transition
		GFX_Seti(i_GFX_Stream, 13104, 0x40FFFFFF)
	
		// Couleur phase de mort
		GFX_Seti(i_GFX_Stream, 13105, 0x0000000000)


		//-------------------------------------------------------------------------------------------------------------
		//-------------------------------------------------------------------------------------------------------------
		// 						GENERATEUR DE PARTICULES ANNEXES
		//-------------------------------------------------------------------------------------------------------------
		//-------------------------------------------------------------------------------------------------------------

		//----------------------------------------------------------------------------
		// REGLAGES POSITION CREATION GENERATEUR
		//----------------------------------------------------------------------------
		// Création SFX
		i_GFX_Rocks= GFX_Add(13)
	
		// Gravité
		GFX_Setf(i_GFX_Rocks, 13007, -1.0)
	
		//Détermination BV de destination des particules
		XAX = cvector(0.05,0,0.05)
		YAX = cvector(0,0.05,-0.06 )
		
		// Volume de destination des particules : CreaPosAxe X
		GFX_Setv(i_GFX_Rocks, 13207, XAX )
	
		// Volume de destination des particules : CreaPosAxe Y
		GFX_Setv(i_GFX_Rocks, 13208, YAX )
	
		// Main pos speed
		GFX_Setv(i_GFX_Rocks, 13205, Cv_NullVector)
		
		// Main pos friction
		GFX_Setv(i_GFX_Rocks, 13206, Cv_NullVector)

		// Hauteur du sol
		GFX_Seti(i_GFX_Rocks, 13011, OBJ_PosGet().y)
	
	
		//----------------------------------------
		// REGLAGES PARTICULES
		//----------------------------------------
		// VITESSE
		//---------------
		// Vitesse maximum des particules (valeur pour chaque axe)
		GFX_Setv(i_GFX_Rocks, 13201, OBJ_SightGet()*5)
		GFX_Setv(i_GFX_Rocks, 13202, OBJ_SightGet()*10)

		// Vitesse min des particules (valeur globale en FLOAT)
		GFX_Setf(i_GFX_Rocks, 13009, 10.0)

		// Vitesse max des particules (valeur globale en FLOAT)
		GFX_Setf(i_GFX_Rocks, 13010, 30.0)

		//---------------
		// NOMBRE DE PARTICULES
		// Nombre de sprites	en buffer
		GFX_Seti(i_GFX_Rocks, 13100, 10)
		// Nombre de sprites à générer
		GFX_Seti(i_GFX_Rocks, 13106, 0xFFFFFFFF)
		// Generation rate
		GFX_Setf(i_GFX_Rocks, 13008, 0.25)

		//---------------
		// GROSSISSEMENT DES PARTICULES
		// Growing speed min
		GFX_Setf(i_GFX_Rocks, 13000, 0.0)
	
		// Growing speed max
		GFX_Setf(i_GFX_Rocks, 13001, 0.0)
	
		//---------------
		// TAILLE
		// Taille min à la création
		GFX_Setf(i_GFX_Rocks, 13005, 0.04)
	
		// Taille max à la création
		GFX_Setf(i_GFX_Rocks, 13006, 0.15)

		//---------------
		// FRICTION
		// Friction grow
		GFX_Setf(i_GFX_Rocks, 13002, 0.03)
	
		// Friction sur chaque axe
		GFX_Setv(i_GFX_Rocks, 13203, cvector(0.015, 0.015, 0.015))
	
		//---------------
		// DUREE DE VIE
		// Durée de la phase d'apparition
		GFX_Setf(i_GFX_Rocks, 13003, 0.1)
		
		// Durée de la phase de mort
		GFX_Setf(i_GFX_Rocks, 13004, 0.5)
	
		// Time random
		GFX_Setf(i_GFX_Rocks, 13012, 0.05)
	
	
		//-----------------------------------------------------
		// REGLAGE RENDU
		//-----------------------------------------------------
		// On attribue un matériau
		GFX_MaterialSet(i_GFX_Rocks, get_SFX_light_and_smoke, -1)
		GFX_Seti(i_GFX_Rocks, 13101, 42)
		
		// Sprites non triés
		GFX_Seti(i_GFX_Rocks, 13107, 1)
		
		// Définition du matériau comme étant actif et transparent
		GFX_FlagSet(i_GFX_Rocks, 0 , 1)
		GFX_FlagSet(i_GFX_Rocks, 2 , 1)
	
		// Couleur phase d'apparition
		GFX_Seti(i_GFX_Rocks, 13103, 0x00000000)
	
		// Couleur phase de transition
		GFX_Seti(i_GFX_Rocks, 13104, 0xFF000000)
	
		// Couleur phase de mort
		GFX_Seti(i_GFX_Rocks, 13105, 0x00000000)

	}

	// VENT
	//GFX_Setv(i_GFX_Stream, 13204, cvector(0.4,0.2,10))


	POS_FOR_GFX = OBJ_PosGet() + cvector(0,0,0)
	// Position du générateur
	POS_FOR_GFX -= OBJ_SightGet() * TIME_GetDt()
	GFX_Setv(i_GFX_Stream, 13200, POS_FOR_GFX)
	GFX_Setv(i_GFX_Rocks, 13200, POS_FOR_GFX)


}
