//int	ti_SF_AlreadyPlayed, ti_sf
//int	i, activate
//int	ti_ammo
//int	ti_loop
//int ti_control_flag 
//
//object	to_brique 
//
//i_debrits_nbr = OBJ_HierarchyGetChilds(&o_debrits[0])
//for (ti_loop = 0; ti_loop < i_debrits_nbr ; ti_loop++)
//{
//	to_brique = o_debrits[ti_loop]
//	@to_brique ODE_Enable(faux)
//	
//	@to_brique OBJ_FlagsControlSet(OBJ_C_ControlFlag_RayInsensitive,none)
//	@to_brique OBJ_FlagInvisibleSet(vrai)	
//
//	// Reset Immovable Flag
//	ti_control_flag = @to_brique ODE_Geti(0)
//	ti_control_flag |= 0x20
//	@to_brique ODE_Seti(0, ti_control_flag)
//}
//
//if (des_o_parachute)
//	@des_o_parachute OBJ_FlagsControlSet(OBJ_C_ControlFlag_AlwaysVisible,none)
//
//TIME_Wait(0.1)
//
//activate = vrai
//for(i = 0; i < 4; i++)
//{
//	if(!AI_TriggerIsValid(des_t_activation[i])) break
//	
//	activate = call_trigger(des_t_activation[i])
//	if(!activate) break
//}
//
//if(!activate)
//{
//	if(des_i_test_one_time) 
//	{
//		OBJ_Destroy()
//		return
//	}
//	
//	OBJ_FlagInvisibleSet(vrai)
//	COL_ColMapActivationSet(none, all)
//	return
//}
//
//OBJ_FlagInvisibleSet(faux)
//COL_ColMapActivationSet(all, vrai)
//
//// SF RULES
//
////i_SF_AlreadyPlayed = AI_SFDynGet(0, SF_MinByVal, SF_MaxByVal)		// arme
////i_SF_AlreadyPlayed1 = AI_SFDynGet(1, SF_MinByVal, SF_MaxByVal)	// ammo
//i_SF_ParaBrokenPos = AI_SFDynGet(0, SF_MinByVal, SF_MaxByVal)		// Indique si on shooté la caisse ou pas...
//i_SF_ParaBrokenSight = AI_SFDynGet(1, SF_MinByVal, SF_MaxByVal)		// Indique si on shooté la caisse ou pas...
//i_SF_ParaBrokenBank = AI_SFDynGet(2, SF_MinByVal, SF_MaxByVal)		// Indique si on shooté la caisse ou pas...
//
////ti_SF_AlreadyPlayed = AI_SFDynGet(3, SF_MinById, SF_MaxById)		// init ?
////SpecialFlag_get( ti_SF_AlreadyPlayed, ti_sf )
////if ( !ti_sf )
////{
////	SpecialFlag_set( ti_SF_AlreadyPlayed )
////	@"univ" Vector_speciaux_sauve[ i_SF_ParaBrokenPos ] = Cv_NullVector
////	@"univ" Float_speciaux_sauve[ i_SF_ParaBrokenPos ] = 0
////	@"univ" Vector_speciaux_sauve[ i_SF_ParaBrokenSight ] = Cv_NullVector
////	@"univ" Float_speciaux_sauve[ i_SF_ParaBrokenSight ] = 0
////	@"univ" Vector_speciaux_sauve[ i_SF_ParaBrokenBank  ] = Cv_NullVector
////	@"univ" Float_speciaux_sauve[ i_SF_ParaBrokenBank ] = 0
////}
//
//i_SF_AlreadyPlayed  = i_SF_ParaBrokenPos 
//i_SF_AlreadyPlayed1 = i_SF_ParaBrokenSight 
//
//
//if (!MATH_VecNull( @"univ" Vector_speciaux_sauve[i_SF_ParaBrokenPos] ) )
//{
//	// La caisse est tombé est c'est cassé
//	DBG_RenderSphere(@"univ" Vector_speciaux_sauve[i_SF_ParaBrokenPos],1,color_rouge)
//	OBJ_PosSet(@"univ" Vector_speciaux_sauve[i_SF_ParaBrokenPos])
//	COL_StartMatrixSet(@"univ" Vector_speciaux_sauve[i_SF_ParaBrokenPos])
//	OBJ_BankingGeneralSet(@"univ" Vector_speciaux_sauve[i_SF_ParaBrokenSight],@"univ" Vector_speciaux_sauve[i_SF_ParaBrokenBank])
//	for (ti_loop = 0; ti_loop < i_debrits_nbr ; ti_loop++)
//	{
//		@o_debrits[ti_loop] ODE_Enable(faux)
//		@o_debrits[ti_loop] OBJ_Destroy()
//	}
//	des_i_EtatInit = 0 // Je suis cassé au sol
//}
//
//if (des_o_parachute)
//{
//	SA_Init_Rope()
//
//	@des_o_parachute OBJ_FlagsControlSet(none, OBJ_C_ControlFlag_AlwaysVisible)
//	@des_o_parachute BV_MinSet(cvector(-5.0, -5.0, -10.0 * des_length_coef))
//	@des_o_parachute BV_MaxSet(cvector(5.0, 5.0, 0.5))
//}
//
//if (!@"univ" Float_speciaux_sauve[i_SF_AlreadyPlayed])
//{
//	@"univ" Float_speciaux_sauve[i_SF_AlreadyPlayed] = des_i_arme_initiale + 1
//	@"univ" Float_speciaux_sauve[i_SF_AlreadyPlayed1] = des_i_balles
//	
//	// Calcul du nbre de munitions
//	if(des_i_reglage == 0)
//	{
//		ti_ammo = @"univ" i_weapon_ammunition[des_i_arme_initiale][C_ID_Joueur]
//		ti_ammo += @"univ" i_weapon_ammunition_reserve[des_i_arme_initiale][C_ID_Joueur]
//		des_i_balles -= ti_ammo		
//		if(des_i_balles <= 0) OBJ_Destroy()
//		@"univ" Float_speciaux_sauve[i_SF_AlreadyPlayed1] = des_i_balles
//	}
//	
//}
//else
//{
//	des_i_arme_initiale = @"univ" Float_speciaux_sauve[i_SF_AlreadyPlayed] - 1
//	des_i_balles = @"univ" Float_speciaux_sauve[i_SF_AlreadyPlayed1]
//}
//
//OBJ_FlagsIdentitySet(OBJ_C_IdentityFlag_DesignStruct, none)
//OBJ_InfoPhotoParamSet( PRIO_PICK_ARME, 0, 3, 3, 0.0, 0.0, 0.0, 1)		// Bouée d'aide à la visée
//
//// FRED (PRESSTOUR DE GENIE) ==================
//switch (des_i_EtatInit)
//{
//	case 0: 
//		ANI_ShapeSelect(1,0)		// Visuel de la caisse Cassé 
//		OBJ_CapaSet(Obj_Capa_Switch,none)
//		AI_TrackCurChangeNow("SA_ETAT_Loop")
//		break
//	case 1:
//		ANI_ShapeSelect(1,1)		// Visuel de la caisse NON Cassé 
//		ANI_ShapeSelect(2,0)
////		ANI_ShapeSelect(3,0)
////		ANI_ShapeSelect(4,0)
//		AI_TrackCurChangeNow("SA_ETAT_WaitAccroche")
//		break
//}
//// FRED (PRESSTOUR DE GENIE) ==================