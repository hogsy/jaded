// Define at least one function in a track
 function track0 = "ActivatorTrigger_init"
// function track1 = "name"
// function track2 = "name"
// function track3 = "name"
// function track4 = "name"

separator "CONDITIONS"
			trigger		mt_TriggerTest
			int				mt_TriggerTestOp_01 = enum ( "et" 0 "ou" 1 "ou exclu" 2 )
			trigger		mt_TriggerTest1
			int				mt_TriggerTestOp_12  = enum ( "et" 0 "ou" 1 "ou exclu" 2 )
			trigger		mt_TriggerTest2
private	int				mi_TriggerTest
object					mo_Perso											// Si pas de Trigger : Condition BV PIVOT avec ce PERSO

separator "Condition VRAI"
trigger					mt_TriggerExec
optim trigger			mat_AdditionalTriggerExec[ 10 ]
int							mi_TriggerExec_repeat = vrai_faux			// Execute en boucle tant que la condition est vrai (sinon Execute une seule fois les Exec ON)
float						mf_WhenTrueWaitBeforeExec = 0
float						mf_WhenTrueWaitBeforeExec_random = 0
private int				mi_TriggerExec_Flag 
private int				mai_AdditionalTriggerExec_Flag[ 10 ]
private int				mi_trigger_forced_true
private float				mf_WhenTrueTimerBeforeExec = 0
int							mi_WaitEventFinished = vrai_faux


separator "Condition FAUSSE"
trigger					mt_TriggerExecOff
optim trigger			mat_AdditionalTriggerExecOff[ 10 ]
int							mi_TriggerExecOff_repeat = vrai_faux		// Execute en boucle tant que la condition est fausse (sinon Execute une seule fois les Exec OFF)
float						mf_WhenFalseWaitBeforeExec = 0
float						mf_WhenFalseWaitBeforeExec_random = 0
private int				mi_TriggerExecOff_Flag 
private int				mai_AdditionalTriggerExecOff_Flag[ 10 ]
private int				mi_trigger_forced_false
private float				mf_WhenFalseTimerBeforeExec = 0

separator "Control"
int							mi_Loop = vrai_faux								// Boucle sur la condition vrai, fausse, vrai, fausse...
float						f_DureeAvantDestruction = 0.0 				// Duree en Sec avant de faire le destroy sur l'AI


separator "Special Flags"
int							i_SF_NePasSeRejouer		=	vrai_faux		// SF
private int				i_SF_AlreadyPlayed
private int				mi_StateMessage

private	int				mi_State	// 0 : Off  1 : On 
