#include "GFX_Chain_defines.var"

int			ti_i
int			ti_k

float		tf_coef
float		tf_dot_product
float		tf_dist

vector	tv_pos
vector	tv_axis

object	to_main_actor
object	to_bassin
object	to_tete
object	to_camera

//if (o_accroche_1)
//{
//	ai_modules_locked[0] = vrai
//	av_modules_pos[0] = @o_accroche_1 OBJ_PosGet()
//}
//
//if (1 && o_accroche_2)
//{
//	ai_modules_locked[Ci_modules_nb - 1] = vrai
//	av_modules_pos[Ci_modules_nb - 1] = @o_accroche_2 OBJ_PosGet()
//}

//OBJ_BankingGeneralSet(OBJ_SightGet(), Cv_VerticalVector)
//OBJ_RotateGlobalZ(MATH_Sin(TIME_Get() * 3.0) * 0.05)

//tv_pos = OBJ_PosInitGet()
//tv_pos += OBJ_HorizonGet() * MATH_Sin(TIME_Get() * 2.0)
//tv_pos += OBJ_SightGet() * MATH_Sin(TIME_Get() * 3.0)
//tv_pos += OBJ_BankingGet() * MATH_Sin(TIME_Get() * 4.0)
//OBJ_PosSet(tv_pos)
//
//OBJ_BankingGeneralSet(MATH_VecRotate(OBJ_SightInitGet(), Cv_VerticalVector, MATH_Sin(TIME_Get() * 1.5)), Cv_VerticalVector)
//

if (OBJ_LodVisGet() < 0.0)
	returntrack

if (OBJ_FlagsStatusGet() & OBJ_C_StatusFlag_Culled)
	returntrack

//DBG_RenderSphere(v_sphere_center, Cf_Sphere_Size, color_blanc)

to_camera = VIEW_GetObject(0)
to_main_actor = AI_MainActorGet(C_ID_Kong)

if ( ! i_flag_fall && AI_TriggerIsValid(trigger_open) && call_trigger(trigger_open) )
{
	Super_SpecialFlag_set(i_SF_AlreadyOpen)
	i_flag_fall = vrai
}

//if (IO_KeyJustPressed(VK_SPACE))
//	i_flag_fall = MATH_Modulo(i_flag_fall + 1, 2)

tf_dist = OBJ_SqrDistHorz(to_main_actor) 
if (tf_dist > 400.0)
	f_ragdoll_damping -= MATH_FloatMin(f_ragdoll_damping, TIME_GetDt())
else 
	f_ragdoll_damping = 1.0

if (i_flag_fall)
{
	tf_coef = f_bend_coef
	f_bend_coef -= MATH_FloatMin(f_bend_coef - 0.4, 0.6 / open_delay * TIME_GetDt())

	if (shadow)
	{
		tv_pos = @shadow OBJ_PosGet()
		tv_pos += OBJ_HorizonGet() * (f_bend_coef - tf_coef) * ((Ci_modules_nb - 1) * f_width)
		@shadow OBJ_PosSet(tv_pos)
	}

	tf_dot_product = MATH_VecDotProduct(@to_main_actor OBJ_SightGet(), @to_camera OBJ_SightGet())
	tf_dot_product += 1.0
	tf_dot_product *= 0.5 
	
	to_tete = @to_main_actor ANI_CanalObjectGet(Anim_Canal_Tete)
	to_bassin = @to_main_actor ANI_CanalObjectGet(Anim_Canal_Bassin)
	
	tv_pos = MATH_VecBlend(@to_tete OBJ_PosGet(), @to_bassin OBJ_PosGet(), tf_dot_product)
	
	tv_axis = @to_main_actor OBJ_PosGet()
	tv_axis -= tv_pos
	MATH_VecSetNormalize(tv_axis)
	
	f_sphere_size = 3.0
	f_sphere_sqr_size = f_sphere_size * f_sphere_size

	v_sphere_center = tv_pos
	v_sphere_center += tv_axis  * (f_sphere_size - 1.0)
}
else 
{
	f_bend_coef += MATH_FloatMin(1.0 - f_bend_coef, TIME_GetDt())

	f_sphere_size = 1.75
	f_sphere_sqr_size = f_sphere_size * f_sphere_size

	v_sphere_center = @Denham OBJ_PosGet()

//	to_bassin = @Denham ANI_CanalObjectGet(Anim_Canal_Bassin)
//	v_sphere_center = @to_bassin OBJ_PosGet()
}


DBG_RenderSphere(v_sphere_center, f_sphere_size, 0x80808080)

f_dt = MATH_FloatMin(TIME_GetDt(), 1.0 / 60.0)

GFX_Chain_Rag_Doll(0)

GFX_Chain_Display(color_blanc)
