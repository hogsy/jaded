vector	tv_dist
float	f_dist
float	tf_amplitudeZ
float	tf_amplitudeX

if	(@des_o_acteur_capa OBJ_CapaTest(des_i_valeurcapa_choc))
{
	i_Shake_on = vrai
	des_i_cycle_chocs = faux
}
else	if	(des_i_cycle_chocs)
{
	f_cycle_temps += TIME_GetDt()
	if	(f_cycle_temps >= des_f_cycle_duree)
	{
		i_Shake_on = vrai
		f_cycle_temps = 0
	}
}

if	(i_Shake_on)
{
	if	(o_acteur_ref)
	{
		f_dist = MATH_VecDistance(@get_camera OBJ_PosGet(), @o_acteur_ref OBJ_PosGet())
		tf_amplitudeZ = f_amplitudeZ / f_dist
		tf_amplitudeX = f_amplitudeX / f_dist
	}
	else
	{
		tf_amplitudeZ = f_amplitudeZ
		tf_amplitudeX = f_amplitudeX
	}

	if	(des_i_camera_jeu)
	{
		LIBGFX_ShakeCam(tf_amplitudeZ, f_freqZ, tf_amplitudeX, f_freqX, f_temps, f_coeff)
	}
	else
	{
		f_sfx_shake_amplitude = f_amplitudeZ
		f_sfx_shake_freq = f_freqZ
		f_sfx_shake_speed = f_temps
		f_sfx_shake_attenuation = f_coeff
		f_sfx_shake_bank_amplitude = f_amplitudeX
		f_sfx_shake_bank_freq = f_freqX
//		f_sfx_time
	}
	@des_o_acteur_capa OBJ_CapaSet(0, des_i_valeurcapa_choc)
	i_Shake_on = faux
	i_sfx_shake = vrai
}
