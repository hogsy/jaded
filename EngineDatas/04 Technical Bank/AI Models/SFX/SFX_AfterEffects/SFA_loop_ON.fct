vector	tv_zoom_dir
object	to_cam
float		tf_dot_product, tf_valeur, tf_temps

if	(OBJ_CapaTest(OBJ_Capa_0))
{
	tf_temps = TIME_GetDt()
	if	(des_f_duration_IN != Cf_Infinit)
	{
		if	(f_diff_valeur > 0)
		tf_valeur = MATH_FloatMin(TIME_GetDt() * des_f_duration_IN * f_diff_valeur, f_diff_valeur)
		else
		tf_valeur = MATH_FloatMax(TIME_GetDt() * des_f_duration_IN * f_diff_valeur, f_diff_valeur)
	}
	else
		tf_valeur = f_diff_valeur
		
	f_cumul += tf_valeur
	f_valeur += tf_valeur

	if	(MATH_AbsFloat(f_cumul) >= MATH_AbsFloat(f_diff_valeur))
	{
		f_cumul = 0
		AI_TrackCurChange("SFA_loop_OFF")
	}

	switch( des_i_type_AE )
	{
		case 0 :
		AE_Brightness(f_valeur)
		break
		case 1 :
		AE_Contraste(f_valeur)
		break
		case 2 :
		AE_Remanece(f_valeur)
		break
		case 3 :
		AE_Blur(f_valeur)
		break
		case 4 :
		{
		to_cam = VIEW_GetObject(0)
		if	(des_o_gao)
		{
			tv_zoom_dir = @des_o_gao OBJ_PosGet() - @to_cam OBJ_PosGet()
		}
		else	tv_zoom_dir = Cv_NullVector

		tf_dot_product = MATH_FloatMax(MATH_VecDotProduct(@des_o_gao OBJ_BankingGet(), -@to_cam OBJ_SightGet()), 5.0)
//		@get_global Proc_AE_ZoomSmoothCenterSet( f_valeur * tf_dot_product, tv_zoom_dir)
		AE_ZoomSmoothCenter(f_valeur * tf_dot_product, tv_zoom_dir)
		break
		}
		case 6 :
		AE_FoggyBlur(f_valeur)
		break
		case 7 :
		AE_ColorBalance(f_valeur, f_valeur)
		break
		case 8 :
		{
//			LIBGFX_Fade(31, 0x00000000, 0xff000000, 0.0, des_f_duration_IN, 5.0, 0.0, 0.0, 10)
//			LIBGFX_Fade( int mat, int col1, int col2, float t0, float t1, float t2, float t3, float t4, int prio )
			i_fade = GFX_AddSorted(11, 11)
			GFX_FlagSet( i_fade, 0, 1)          										// active l'effet
			GFX_FlagSet( i_fade, 2, 1 )          										// met le flag materiau transparent a vrai
			GFX_MaterialSet( i_fade, get_SFX_light_and_smoke, 31)   	// met le materiau
			GFX_Seti( i_fade, 11100, 0x00000000)        	// couleur 0
			GFX_Seti( i_fade, 11101, 0xff000000)    		// couleur 1
			GFX_Setf( i_fade, 11000, 0.0)         	// t0
			GFX_Setf( i_fade, 11001, des_f_duration_IN)         	// t1
			GFX_Setf( i_fade, 11002, 20.0)         	// t2
			GFX_Setf( i_fade, 11003, 0.0)         	// t3
			GFX_Setf( i_fade, 11004, 0.0)      		// t4
			OBJ_Destroy()
		}
		break
		case 9 :
		{
			i_fade = GFX_AddSorted(11, 11)
			GFX_FlagSet( i_fade, 0, 1)          										// active l'effet
			GFX_FlagSet( i_fade, 2, 1 )          										// met le flag materiau transparent a vrai
			GFX_MaterialSet( i_fade, get_SFX_light_and_smoke, 31)   	// met le materiau
			GFX_Seti( i_fade, 11100, 0x00000000)        	// couleur 0
			GFX_Seti( i_fade, 11101, 0xffffffff)    		// couleur 1
			GFX_Setf( i_fade, 11000, 0.0)         	// t0
			GFX_Setf( i_fade, 11001, des_f_duration_IN)         	// t1
			GFX_Setf( i_fade, 11002, 20.0)         	// t2
			GFX_Setf( i_fade, 11003, 0.0)         	// t3
			GFX_Setf( i_fade, 11004, 0.0)      		// t4
			OBJ_Destroy()
		}
		break
		case 10 :
		{
//			LIBGFX_Fade(31, 0x00000000, 0xff000000, 0.0, des_f_duration_IN, 5.0, 0.0, 0.0, 10)
//			LIBGFX_Fade( int mat, int col1, int col2, float t0, float t1, float t2, float t3, float t4, int prio )
			i_fade = GFX_AddSorted(11, 11)
			GFX_FlagSet( i_fade, 0, 1)          										// active l'effet
			GFX_FlagSet( i_fade, 2, 1 )          										// met le flag materiau transparent a vrai
			GFX_MaterialSet( i_fade, get_SFX_light_and_smoke, 31)   	// met le materiau
			GFX_Seti( i_fade, 11100, 0x00000000)        	// couleur 0
			GFX_Seti( i_fade, 11101, 0xff000000)    		// couleur 1
			GFX_Setf( i_fade, 11000, 0.0)         	// t0
			GFX_Setf( i_fade, 11001, 0.0)         	// t1
			GFX_Setf( i_fade, 11002, 0.25)         	// t2
			GFX_Setf( i_fade, 11003, des_f_duration_IN)         	// t3
			GFX_Setf( i_fade, 11004, 0.0)      		// t4
			OBJ_Destroy()
		}
	}
}

