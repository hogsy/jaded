


int		ti_GFX_Blam
int		ti_GFX_Spark

vector	tv_pos
vector	tv_temp
vector	tv_direction
vector	XAX 
vector	YAX
float		tf_temp

vector	pos
object Flingue


if (0)//Flingue)
{
	pos  = @Flingue OBJ_BankingGet()
	OBJ_BankingSet(pos)
	pos  = @Flingue OBJ_SightGet()
	OBJ_SightSet(pos)
//	pos  = @Flingue OBJ_BankingGet()
//	OBJ_BankingSet(pos)
	
OBJ_RotateLocalX(3.1415927/2.0)

	pos  = @Flingue OBJ_PosGet()
	pos  += 0.55*OBJ_BankingGet()

	OBJ_PosSet(pos)

	
}
if (DECREMENT)
{
	pos  = 0.0*OBJ_BankingGet()
	OBJ_PosSet(OBJ_PosGet()+pos)
	DECREMENT --
}
else
{
	pos = OBJ_PosGet()
	if (pos.z != -10000.0)        
	{
		DECREMENT = 1		
		TimeOFGFXCReation = 0
		POS_FOR_GFX = OBJ_PosGet()

	}
}
if (TimeOFGFXCReation < 1)
{
	tf_temp = 1.0 
	ti_GFX_Blam = GFX_Add(13)																	// Create the boum
				
	GFX_MaterialSet(ti_GFX_Blam, get_SFX_light_and_smoke, -1)					// met le materiau
	GFX_Seti(ti_GFX_Blam, 13101, 8)															// Materiau 0
	
	XAX = 0.5 * OBJ_BankingGet() 
	POS_FOR_GFX += XAX *0.5

	YAX = cvector(0,0,0)
	GFX_Setv(ti_GFX_Blam, 13207, XAX )				// CreaPosAxe X
	GFX_Setv(ti_GFX_Blam, 13208, YAX )				// CreaPosAxe Y

	
	GFX_Seti(ti_GFX_Blam, 13100, 5)															// *Buffer number of sprite
	GFX_Seti(ti_GFX_Blam, 13106, 5)															// *number of sprite to generate
	
	GFX_Setf(ti_GFX_Blam, 13003, 0.05)														// Time fase 1
	GFX_Setf(ti_GFX_Blam, 13004, 2.0)														// Time fase 2
	
	GFX_Seti(ti_GFX_Blam, 13107, 0)															// Sprites non triés
	
	GFX_FlagSet(ti_GFX_Blam, 0 , 1)
	GFX_FlagSet(ti_GFX_Blam, 2 , 1)
	
	GFX_Setf(ti_GFX_Blam, 13012, 0.0)														// Time random
	
	GFX_Setf(ti_GFX_Blam, 13000, 3.5 * (1.0 + (0.0035 * TimeOFGFXCReation)) )						// Growing speed min
	GFX_Setf(ti_GFX_Blam, 13001, 5.8 * (1.0 + (0.0035 * TimeOFGFXCReation)) )						// Growing speed max
	GFX_Setf(ti_GFX_Blam, 13002, 0.20)													// Friction Grow
	
	GFX_Setf(ti_GFX_Blam, 13005, 0.00)														// Creation size min
	GFX_Setf(ti_GFX_Blam, 13006, 0.00)														// Creation size max
	
	GFX_Setv(ti_GFX_Blam, 13203, cvector(0.15, 0.15, 0.1))							// friction speed
	
	GFX_Seti(ti_GFX_Blam, 13103, 0x40C0a0a0)											// Color fase 0
	GFX_Seti(ti_GFX_Blam, 13104, 0x0AC0a0a0)											// Color fase 1
	GFX_Seti(ti_GFX_Blam, 13105, 0x00C0a0a0)											// Color fase 2
	
	GFX_Setf(ti_GFX_Blam, 13009, tf_temp*1.0)														// Norm speed min
	GFX_Setf(ti_GFX_Blam, 13010, tf_temp*1.8)														// Norm speed max
	
	GFX_Setf(ti_GFX_Blam, 13008, 0.0001)													// generation rate
	
	GFX_Setv(ti_GFX_Blam, 13205, Cv_NullVector)										// Mainposspeed
	GFX_Setv(ti_GFX_Blam, 13206, Cv_NullVector)										// Mainpossfriction
		
	GFX_Setv(ti_GFX_Blam, 13200, OBJ_PosGet()) 													// Creation Pos
	
	GFX_Setf(ti_GFX_Blam, 13007, 0.6)									// Gravity
	tv_temp = 1* tf_temp * OBJ_BankingGet() 
	GFX_Setv(ti_GFX_Blam, 13201, tv_temp +(1*tf_temp *cvector(-1.2, -1.2, -1.0)))				// Speed min
	GFX_Setv(ti_GFX_Blam, 13202, tv_temp +(1*tf_temp *cvector(1.2, 1.2, 1.0)))					// Speed max
	
	GFX_Setv(ti_GFX_Blam, 13200,POS_FOR_GFX  )													// Creation Pos
	

	TimeOFGFXCReation ++

}		

if (DECREMENT == 1)
{
	pos.x = 0.0
	pos.y = 0.0
	pos.z = -10000.0
	OBJ_PosSet(pos)
}

