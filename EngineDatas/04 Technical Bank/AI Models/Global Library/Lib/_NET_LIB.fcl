procedure vector NET_LIB_Nearest_Pos(network tn_net, vector tv_pos, byref object to_start_wp, byref object to_dest_wp)
{
	int				ti_i
	int				ti_k
	int				ti_link_nb	
	int				ti_wp_nb

	float			tf_dist
	float			tf_best_dist

	vector		tv_link_A
	vector		tv_link_B
	vector		tv_link_AB
	vector		tv_best_pos
	vector		tv_nearest_pos

	object		to_wp_A
	object		to_wp_B
	object		tao_wp[100]
	
	tf_best_dist = Cf_Infinit

	tv_best_pos = tv_pos

	to_start_wp = nobody
	to_dest_wp = nobody

	ti_wp_nb = WAY_NetFill(tn_net, WAY_RootGet(tn_net), &tao_wp[0])
	
	for (ti_i = 0; ti_i < ti_wp_nb; ti_i++)
	{
		to_wp_A = tao_wp[ti_i]
		tv_link_A = @to_wp_A OBJ_PosGet()
	
		ti_link_nb = WAY_GetNumLinks(tn_net, to_wp_A)
		for (ti_k = 0; ti_k < ti_link_nb; ti_k++)
		{
			to_wp_B = WAY_NetNextWP(tn_net, to_wp_A, 6, ti_k)
			tv_link_B = @to_wp_B OBJ_PosGet()
		
			tv_link_AB = tv_link_B
			tv_link_AB -= tv_link_A
	
			if (MATH_VecDotProduct(tv_pos - tv_link_A, tv_link_AB) < 0.0)
				tv_nearest_pos = tv_link_A
			else if (MATH_VecDotProduct(tv_pos - tv_link_B, tv_link_AB) > 0.0)
				tv_nearest_pos = tv_link_B
			else
			{
				tv_link_AB /= WAY_LinkWeightGet(tn_net, to_wp_A, to_wp_B)
				tv_nearest_pos = tv_link_A
				tv_nearest_pos += MATH_VecDotProduct(tv_pos - tv_link_A, tv_link_AB) * tv_link_AB
			}

			tf_dist = MATH_VecDotProduct(tv_nearest_pos - tv_pos, tv_nearest_pos - tv_pos)
			if (tf_dist < tf_best_dist)
			{
				tf_best_dist = tf_dist
				tv_best_pos = tv_nearest_pos
				
				to_start_wp	= to_wp_A
				to_dest_wp = to_wp_B
			}
		}
	}
	
	return(tv_best_pos)
}
