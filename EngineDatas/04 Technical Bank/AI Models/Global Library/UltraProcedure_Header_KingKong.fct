// PROCEDURES ULTRA KANADA ==============================================================================
//Include_UltraProcedure_Header_Kanada

// From GLOBAL =======================================================================================

//// SUR KONG ==========================================================================================
//procedure_ultra object Proc_KK_HotSpotGet();
//procedure_ultra object Proc_KK_HotSpotFightGet();
//procedure_ultra int Proc_KK_JumpStatusGet();
//procedure_ultra int Proc_KK_RAGE_Test();
//procedure_ultra int Proc_KK_Mashing_Button_Just_Pressed();
//procedure_ultra int Proc_KK_IsInBadSituation(int ti_id);
//procedure_ultra int Proc_KK_IsMoveable();
//procedure_ultra int LIb_Kong_Attack( object po_object);
//procedure_ultra object	Proc_KK_FightActorGet();
//procedure_ultra vector Proc_KK_LookDirectionGet();
//procedure_ultra int Proc_KK_RefusePaf();
//procedure_ultra int Proc_KK_RefusePafFromGao(object to_gao);
//procedure_ultra object	Proc_KK_Need_Help( float pf_danger );
//procedure_ultra int Proc_KK_Test_Mode( int pi_mode);
//procedure_ultra float	Proc_KK_Mashing_Pct( );
//procedure_ultra int Proc_KK_CutCamAllowed();
//procedure_ultra int Proc_KK_Get_BIG_NMI_Count(object to_excluded_gao);
//procedure_ultra vector	Proc_KK_Grab_PosGet( int	pi_type);
//procedure_ultra vector	Proc_KK_Grab_SightGet( int	pi_type);
//procedure_ultra vector	Proc_KK_Grab_BankingGet( int	pi_type);
//procedure_ultra vector	Proc_KK_Grab_HorizonGet( int	pi_type);
//procedure_ultra int Proc_KK_PosCollideWithBone(vector pos, int bone);
//procedure_ultra int Proc_KK_Grabbed_Can_I_Posset( );
//procedure_ultra int Proc_KK_Try_To_Hit();
//procedure_ultra object Proc_KK_Colonne_Get();
//procedure_ultra int Proc_KK_RIDE_Get_Actor_Nb_By_Model(object to_model_gao);
//procedure_ultra void Proc_KK_SFX_Ground( vector pv_pos, float	pf_size);
//procedure_ultra int Proc_KK_WhereIsAnn();
//procedure_ultra int Proc_KK_TestMashing(int ti_SND_test);
//procedure_ultra void Proc_KK_Pafs_Effects(int ti_force);
//procedure_ultra int Proc_KK_EstUnEnnemiDeKong(object to_actor);
//procedure_ultra int Proc_KK_GrabbedNMICanEscape();
//procedure_ultra int Proc_KK_Grabbed2M();
//procedure_ultra void Proc_KK_FreinClimbing( float	pf_limit);
//procedure_ultra void Proc_KK_RAGE_Speed();
//procedure_ultra int Proc_KK_ModeGladiator();
//procedure_ultra int Proc_KK_RefusePafFrom(object po_cible);
//procedure_ultra object	Proc_KK_Souche();
//procedure_ultra int Proc_KK_Frappe();
//procedure_ultra int Proc_KK_Frappe_Phase_Get();
//procedure_ultra int Proc_KK_FPS_Shoulder_Entering_Can_Rotate();
//
//// SUR KONG GFX ==========================================================================================
//procedure_ultra int Proc_KK_TestWall(vector tv_Anim_Canal_EpauleGauche, vector tv_Anim_Canal_DoigtG1, byref vector tv_pos,  byref vector tv_normal,  byref int i_soundID, byref int i_displayTexture);
//procedure_ultra int Proc_KK_TestGround(vector tv_Anim_Canal_Cou, byref vector tv_pos, byref vector tv_normal, byref int i_soundID, byref int i_displayTexture);	
//procedure_ultra void Proc_KK_SFXADD(int SFX_ID_Impact, vector tv_pos,  vector tv_normal, int i_soundID, int i_displayTexture, vector v_actorSight);	
//procedure_ultra int Proc_KK_TestFoot(vector v_Jambe, vector v_Foot, byref vector tv_pos, byref vector tv_normal,byref  int i_soundID,byref int i_displayTexture );
//procedure_ultra int Proc_KK_TestFURYGround(vector tv_Anim_Canal_Cou, vector Anim_fingers, byref vector tv_pos, byref vector tv_normal, byref int i_soundID, byref int i_displayTexture);
//procedure_ultra object Proc_KK_Dodge_Actor_Get();

// SUR LE K_TREX ==========================================================================================
//procedure_ultra int KT_Proc_Dodges();
//procedure_ultra int KT_AwareOfKong();
//procedure_ultra int KT_Proc_IsLockedOnAnn();
//procedure_ultra int KT_Proc_FightAnnWellPositionned();
//procedure_ultra int KT_Proc_IsRewardForKONG();
//procedure_ultra int KT_Proc_canBeDodged();
//procedure_ultra int KT_Throw_Choose_Anim( int	pi_anim, vector pv_vector);
//procedure_ultra int KT_Proc_Uncol_Check( object	po_gao);
//procedure_ultra int KT_Proc_RefusePaf();
//procedure_ultra void KT_Proc_ChangeTerritory( object	o_zone);
//procedure_ultra void KT_Proc_Charge( object po_target);
//procedure_ultra int KT_Proc_Test_Mode(int ti_mode);

// SUR LES K_NATIVES ===================================================================================
//procedure_ultra void KNative_SetNoPafTime( float tf_sec);
//procedure_ultra void KNative_SetActive(int val);
//procedure_ultra void KNative_GroupSet(object to_group);
//procedure_ultra object KNative_GroupGet();

// SUR K_ANN ============================================================================================
//procedure_ultra int KAnn_Death_Attack_Enabled();
//procedure_ultra int KAnn_Interaction_Attack();
//procedure_ultra int KAnn_Interaction_Attack_Unlimited();
//procedure_ultra int KAnn_isEtatFollowNetwork();
//procedure_ultra int KAnn_Interaction_Pos_Safe();

// SUR LES CRABES =====================================================================================
//procedure_ultra int CR_Soft_Collision_Enabled();

// PNJ_EATME ==========================================================================================
//procedure_ultra int PNJ_EatMe_GetBidocheType();
//procedure_ultra void PNJ_EatMe_SetPoisonned(int ti_on);
//procedure_ultra int PNJ_EatMe_IsPoisonned();

// SUR K_SCOLO ============================================================================================
//procedure_ultra int Proc_KK_BigScolo();
//procedure_ultra object Proc_KK_Scolo_Bone( int pi_ind);
//procedure_ultra int Proc_KK_Scolo_canBeDodged();
//procedure_ultra int Proc_KS_Scolo_Launch_Reward();
//procedure_ultra int Proc_KK_Scolo_Finish_Allowed();

// SUR K_RAPTOR =======================================================================================
//procedure_ultra void KR_Init_Spawn_Finish();
//procedure_ultra void KR_Set_Interaction_Timer(float t_time);

// SUR KInteractiveDecor DE Kong =======================================================================================
//procedure_ultra void Proc_KK_SetCannotPaf_KID();
//procedure_ultra int Proc_KK_GetCannotPaf_KID();

// KIGO
//procedure_ultra	int	 KIGO_Type();

// PNJ_Car ====================================================================================================
//procedure_ultra void PNJ_Car_Init();
//procedure_ultra int PNJ_Car_Respawn(int ti_flag_test);

// PNJ_Car_Manager ====================================================================================================
//procedure_ultra void PNJ_Car_Manager_Add_Gao(object to_gao, float tf_size, byref int ti_car_index);
//procedure_ultra void PNJ_Car_Manager_Remove_Gao(object to_gao, byref int ti_car_index);
//procedure_ultra void PNJ_Car_Manager_Del_Gao(int ti_car_index);
 
// KCadavre ===============================================================================================
//procedure_ultra int KCadavre_EmplacementGetDisponibleIndex();
//procedure_ultra vector KCadavre_EmplacementGetPosition(int ti_index); 
//procedure_ultra void KCadavre_EmplacementLibere(int ti_index);

// TANK ====================================================================================================
//procedure_ultra int Proc_KK_Tank_canBeDodged();


// SUR LES BATS =====================================================================================
//procedure_ultra int BC_IsEtatCourantCine();
//procedure_ultra int BC_SoftCol_IsEnabled();
//procedure_ultra float BC_SoftCol_Rayon_Get();

// SUR LES K_BATS =====================================================================================
//procedure_ultra int KBC_IsABigBat();
//procedure_ultra void KBC_Init_Spawn_Finish();
//procedure_ultra int KBC_BigBatAttacksKong();
//procedure_ultra object KBC_GetLandingWP();
//procedure_ultra int KBC_Proc_canBeDodged();
//procedure_ultra int KBC_SoftCol_IsEnabled();
//procedure_ultra float KBC_SoftCol_Rayon_Get();
//procedure_ultra float KBC_Proc_Get_Ride_Pos_Coef();
//procedure_ultra void KBC_Interact_Ann_Take_Fake_Paf();
//procedure_ultra int KBC_Launch_Reward();
//procedure_ultra int KBC_IsEtatAttaque(int ti_etat);
//procedure_ultra void KBC_Set_Manager(object to_manager, int ti_index);
//procedure_ultra void KBC_Set_Ready_For_Attack_Sequence();
//procedure_ultra int KBC_Target_Check(object to_target);
//procedure_ultra int KBC_BigBat_Ronde();
//procedure_ultra int KBC_BigBat_PlungeonAttack(int ti_phase);
//procedure_ultra int KBC_IsGrabbingAnn();
//procedure_ultra int KBC_BigBat_AttackEnCours_KameraCCKongtoBat();

// SUR LE K_BATS_MANAGER  ============================================================================
//procedure_ultra void KBM_BigBat_Mashing(int ti_bigbat_index);
//procedure_ultra void KBM_BigBat_Paffee(int ti_bigbat_index);
//procedure_ultra void KBM_BigBat_AttackIncCpt(int ti_bigbat_index);
//procedure_ultra void KBM_BigBat_Abort(int ti_bigbat_index);
//procedure_ultra void KBM_GlobalReattackDelaySet(float tf_delay);
//procedure_ultra int KBM_BigBatsCountGet();

// SUR LES K_JAVELIN ========================================================================================
//procedure_ultra void Lance_LRay_Type_Set(int ti_type);
//procedure_ultra void Lance_SetGrabbed(object to_grab_actor);
//procedure_ultra int Lance_IsOnFire();
//procedure_ultra void Lance_SetOnFire(int ti_on);
//procedure_ultra int Lance_IsPoisonned();
//procedure_ultra void Lance_SetPoisonned(int ti_on);

// JACK / K INDIGENE ===========================================================================================
//procedure_ultra int Proc_KIndigene_Kong_LiaisonStatusGet();
//procedure_ultra object Proc_Joueur_3rdP_GaoGet();
//procedure_ultra object Proc_KIndigene_CameraAnimee_GaoGet();
//procedure_ultra int Proc_KIndigene_CheckNearOfBigPerso(object to_perso, float tf_dist);
//procedure_ultra int Proc_KIndigene_Joueur_ModeFPS_Get();
//procedure_ultra int H_Joueur_GrabbedObject_Add(int ti_id, object to_object);
//procedure_ultra int H_Weapon_IsOnFire();
//procedure_ultra void H_Weapon_SetOnFire(int ti_on);
//procedure_ultra int H_Weapon_IsPoisonned();
//procedure_ultra void H_Weapon_SetPoisonned(int ti_on);
//procedure_ultra object H_Joueur_Gets_Bidoche();
//procedure_ultra void H_Weapon_Current_Set(int ti_index, int ti_id, object to_obj);
//procedure_ultra int H_Weapon_ID_Get();
//procedure_ultra object H_Weapon_Gao_Get();

// GST_GLOBAL ==============================================================================================
//procedure_ultra void Proc_Global_Player_Swap_to_Kong();
//procedure_ultra void Proc_Global_Player_Swap_to_Indigene();
//procedure_ultra int Proc_Global_Player_Swap_Enabled();
//procedure_ultra void Proc_Global_Reward_Add(object to_obj);

// ARMES ===================================================================================================
//procedure_ultra void Arc_SetGrabbed(object to_grab_actor);
//procedure_ultra void Arc_Tendre_Corde();
//procedure_ultra void Fleche_Tir(object to_sender, vector tv_speed);
