#include "Interface_MenuInGame_defs.var"

int 		ti_Texte, ti_Txg, ti_i
vector	size

// Get page parameters
if (!mo_Texte)
	return
if (!IntMIG_SetPageParams())
	return
	
if (INTMIG_EnterPage_Start)
{
	IntMIG_ResetTexte( mi_PageString, 30 )
	
	if ( mi_Message_Type < 100 )
	{
		if (mi_Message_Type == INTMIG_YESNO_SAVEBEFOREQUIT )
		{
			if ( @"univ" PROG_i_MapReplay || (@"univ" MENU_ProfileIndex == -1) || @"univ" PROG_i_FinAlternative ) 
				mi_Message_Type = INTMIG_YESNO_LOOSEPROGRESS
		}
		
		switch (mi_Message_Type)
		{
			case INTMIG_YESNO_SAVEGAME : 				ti_Txg = mi_MC_Txg 	ti_Texte = mi_MC_Texte + 8 break
			case INTMIG_YESNO_QUITPWS_MEMCARD :	ti_Txg = INTMIG_TXG 	ti_Texte =  INTMIG_TEXT_Question + INTMIG_YESNO_PLAYWITHOUTSAVING break
			default:															ti_Txg = INTMIG_TXG 	ti_Texte =  INTMIG_TEXT_Question + mi_Message_Type break
		}
		@mo_Texte OBJ_TextSet( mi_PageString, TEXT_Get( ti_Txg, ti_Texte ) )
		@mo_Texte OBJ_TextInsert( mi_PageString, -1, " \n \n " )
		@mo_Texte OBJ_TextInsert( mi_PageString, -1, TEXT_Get( INTMIG_TXG, INTMIG_TEXT_Xyes ) )
		@mo_Texte OBJ_TextInsert( mi_PageString, -1, "   " )
		@mo_Texte OBJ_TextInsert( mi_PageString, -1, TEXT_Get( INTMIG_TXG, INTMIG_TEXT_Tno ) )
	}
	else
	{
		switch( mi_Message_Type )
		{
			case INTMIG_OK_NEWBONUS_MAP :
			case INTMIG_OK_NEWBONUS_SAVE :
					ti_Txg = INTMIG_TXG 	
					if (mi_XTRA_Diff == 1)
						ti_Texte =  INTMIG_TEXT_StartMenu + 16 	
					else
						ti_Texte =  INTMIG_TEXT_StartMenu + 17
					break
			case INTMIG_OK_NOSCORECAUSECHEAT :		
			case	INTMIG_OK_NOSCORECAUSECHEATINGAME :
					ti_Txg = INTMIG_TXG 	ti_Texte =  INTMIG_TEXT_StartMenu + 18 break
			case INTMIG_OK_GOODONLINESCORE : 	ti_Txg = INTMIG_TXG 	ti_Texte =  INTMIG_TEXT_ScoreNew + 12 break
			case INTMIG_OK_BADONLINESCORE :		ti_Txg = INTMIG_TXG 	ti_Texte =  INTMIG_TEXT_ScoreNew + 10 break
			case INTMIG_OK_FINALMESSAGE :			ti_Txg = INTMIG_TXG 	ti_Texte =  INTMIG_TEXT_StartMenu + 19 break
		}
		@mo_Texte OBJ_TextSet( mi_PageString, TEXT_Get( ti_Txg, ti_Texte ) )
		@mo_Texte OBJ_TextInsert( mi_PageString, -1, " \n \n " )
		@mo_Texte OBJ_TextInsert( mi_PageString, -1, TEXT_Get( INTMIG_TXG, INTMIG_TEXT_Xcontinue ) )
	}
	@mo_Texte OBJ_TextMaxWidthSet( 0.8 )
	IntMIG_CreateText_End( mi_PageString, cvector( 0.5, 0.6, 0),  0.0, 1, 0, 0xFFFFFF, 0, 1 )
	@mo_Texte OBJ_TextMaxWidthSet( 0 )
	size = @mo_Texte OBJ_TextSizeGet( mi_PageString, 0, -1)
	if (0.6 + size.y > 0.9 )
	{
		@mo_Texte OBJ_TextFlagSet( mi_PageString, 25 )
		@mo_Texte OBJ_TextPivotSet(mi_PageString, cvector( 0.5, 0.9, 0) )
	}
	IntMIG_Text_SetFrame( mi_PageString + 1, 0xFFFFFFFF, 0.0, mi_PageString , -1, -1, -1, -1, -1, 33 )
	IntMIG_Text_FadeInMulti( mi_PageString, 2, 0.3, 0.0 )
	
		
	IntMIG_Text_SetFrame( mi_PageString + 1, 0xFFFFFFFF, 0.02, mi_PageString, -1, -1, -1, -1, -1, 33 )

}
if (INTMIG_LeavePage_Start)
{
	IntMIG_Text_FadeOutMulti( mi_PageString, 2, 0.5 )
}

IntMIG_RestorePageParams()

if ( mi_Exit || mi_ChangePage || mi_Cheat )
	return

if ( joy_cancel && (mi_Message_Type < 100))
{
	IntMIG_PlaySound( INTMIG_SOUND_CANCEL )
	switch( mi_Message_Type )
	{
		case INTMIG_YESNO_SAVEBEFOREQUIT : 				INTMIG_YesNoPage(  INTMIG_YESNO_LOOSEPROGRESS ) break
		case INTMIG_YESNO_LOOSEPROGRESS : 				mi_ExitAsked = 1 break
		case INTMIG_YESNO_QUITPROFILE :						
		case INTMIG_YESNO_QUITPLAYINGWITHOUTSAVE : INTMIG_ChangePage(  "IntMIG_Page_StartMain" , mi_Cur ) break
		case INTMIG_YESNO_SAVEGAME : 						INTMIG_ChangePage(  "IntMIG_Page_Main" , mi_MainCur ) break
		case INTMIG_YESNO_RETRYLOSEPROGRESS : 		mi_ExitAsked = 1 break
		case INTMIG_YESNO_PLAYWITHOUTSAVING :			INTMIG_ChangePage(  "IntMIG_Page_Profile" , mi_Profile_Cur ) break
		case INTMIG_YESNO_OVERWRITTEPROFILE :			INTMIG_ChangePage(  "IntMIG_Page_Profile" , mi_Profile_Cur ) break
		case INTMIG_YESNO_OPTIONSCHANGEDSAVE :		INTMIG_ChangePage(  "IntMIG_Page_StartMain" , 1 ) break
		case INTMIG_YESNO_SCOREHASCHANGED :			INTMIG_ChangePage(  "IntMIG_Page_Map" , mi_Cur ) break
		case INTMIG_YESNO_QUITPWS_MEMCARD : 			mi_MC_Mode = INTMIG_MCMode_ProfileGet
																					mi_MC_State = 0
																					INTMIG_ChangePage( "IntMIG_Page_Memcard", 0 )
																					break
		case INTMIG_YESNO_FINALSAVE :							INTMIG_YesNoPage( INTMIG_OK_FINALMESSAGE ) break
																					//INTMIG_ChangePage(  "IntMIG_Page_StartMain" , mi_Cur ) break
	}
	return
}
	
if ( joy_valide )
{
	IntMIG_PlaySound( INTMIG_SOUND_VALIDE )
	switch( mi_Message_Type)
	{
		case INTMIG_YESNO_SAVEBEFOREQUIT : 
					//SAVE_Unvalidate()	// AJOUTER PAR CB LE 10/09, PUTAIN J'EN AI CHIER
					IntMIG_MC_GotoSave( 1 ) 
					break
		case INTMIG_YESNO_LOOSEPROGRESS : 
//					IntMIG_StoreOptions()
//					DBG_TraceString( "Save Buffer : Restore1" ) DBG_TraceEOL()
//					SAVE_Request( INO_e_SavRq_RestoreSaveBuffer, 1)
//					SAVE_Unvalidate()
//					IntMIG_PasteOptions()
					//SAVE_Unvalidate()
					INTMIG_LoadingPage(  3, 0 ) break
		case INTMIG_YESNO_QUITPROFILE :	
		case INTMIG_YESNO_QUITPLAYINGWITHOUTSAVE : 
					AI_ReinitUniv()
					SAVE_Validate()
					mi_MC_Mode = INTMIG_MCMode_ProfileGet
					mi_MC_State = 0
					INTMIG_ChangePage(  "IntMIG_Page_Memcard", 0 )
					break
		case INTMIG_YESNO_SAVEGAME : 
					IntMIG_MC_GotoSave( 0 ) 
					break
		case INTMIG_YESNO_RETRYLOSEPROGRESS : 
					AI_ReinitUniv()
					@"univ" STATS_f_Time = 0
					@"univ" STATS_f_Mort = 0
					@"univ"	STATS_f_MortJoueur = 0
					for (ti_i = 0; ti_i < STATS_NbVal; ti_i++)
						@"univ" STATS[ @"univ" STATS_WorldID ][ ti_i ] = 0
					SAVE_Validate()
					@"univ" world_entrance_ID = 1 
					SND_M_SetGameMode(SND_Cte_ModePlaying)	
					IntMIG_TimeUnlock()
					WOR_Reinit() 	
					break
		case INTMIG_YESNO_PLAYWITHOUTSAVING :
		case	INTMIG_YESNO_QUITPWS_MEMCARD :
					@"univ" MENU_ProfileIndex = -1
					@"univ" PROG_i_MapCur = 0
					@"univ" PROG_i_Map = INTMIG_FIRSTMAPID
					@"univ" PROG_i_ES = -1
					SAVE_Validate()
					INTMIG_ChangePage(  "IntMIG_Page_StartMain" , 0 )
					break
		case INTMIG_YESNO_OVERWRITTEPROFILE :
					mi_MC_Mode = INTMIG_MCMode_ProfileCreate
					mi_MC_State = 0
					INTMIG_ChangePage( "IntMIG_Page_Memcard", 0 )
					break
		case INTMIG_YESNO_OPTIONSCHANGEDSAVE : 	IntMIG_MC_GotoSave( 3 ) break
		case INTMIG_YESNO_SCOREHASCHANGED : 		IntMIG_MC_GotoSave( 2 ) break
		case INTMIG_YESNO_FINALSAVE :						IntMIG_MC_GotoSave( 4 ) break
	
		case INTMIG_OK_NEWBONUS_MAP :		INTMIG_ChangePage( "IntMIG_Page_StartMain", mi_Cur ) break
		case INTMIG_OK_NEWBONUS_SAVE : 	INTMIG_YesNoPage( INTMIG_YESNO_SCOREHASCHANGED ) break
		case INTMIG_OK_NOSCORECAUSECHEAT :
					IntMIG_StoreOptions()
					//DBG_TraceString( "Save Buffer : Restore2" ) DBG_TraceEOL()
					SAVE_Request( INO_e_SavRq_RestoreSaveBuffer, 2)
					SAVE_Unvalidate()
					IntMIG_PasteOptions()
					@"univ" PROG_i_MapReplay = faux
					INTMIG_ChangePage( "IntMIG_Page_Map", mi_Cur )
					break
		case INTMIG_OK_NOSCORECAUSECHEATINGAME :
					INTMIG_ChangePage(  "IntMIG_Page_Main" , mi_MainCur ) 
					break
		case INTMIG_OK_GOODONLINESCORE : 	INTMIG_ChangePage(  "IntMIG_Page_Xtra" , mi_XTraCur ) break
		case INTMIG_OK_BADONLINESCORE :		INTMIG_ChangePage(  "IntMIG_Page_Xtra" , mi_XTraCur ) break
		case INTMIG_OK_FINALMESSAGE :			INTMIG_ChangePage(  "IntMIG_Page_StartMain" , 2 ) break
	}
}
