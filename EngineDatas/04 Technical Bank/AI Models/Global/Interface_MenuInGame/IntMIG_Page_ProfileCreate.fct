#include "Interface_MenuInGame_defs.var"

vector 	tv_pos, tv_pos2
int			ti_line
int			ti_char, tic1, tic2
int			ti_Color
int			ti_Save, ti_Save2
int			ti_index
int			ti_Max

#define MAX_CHAR						12

if (!mo_Texte) 
	return
if (!IntMIG_SetPageParams())
	return


if (INTMIG_EnterPage_Start )
{
	mi_MC_TestState = 0
	mf_PageTimer = 0
	mi_Cur2 = 0
	IntMIG_ResetTexte( mi_PageString, 30 )
	
	// init name
	for (ti_char = 0; ti_char < MAX_CHAR + 1; ti_char++)
		mai_ProfileChar[ ti_char ] = 0
	
	// title
	IntMIG_SetText_Page( mi_PageString, INTMIG_TXG, INTMIG_TEXT_StartMenu + 13, cvector( 0.8, 0.3, 0),  0.0, 6, -1, INTMIG_Color_Sel, 0, 1 )
	
	// display profile name
	IntMIG_CreateText_Start( mi_PageString + 1 )
	@mo_Texte OBJ_TextInsert( mi_PageString + 1, -1, "\p13\$" )
	IntMIG_CreateText_End( mi_PageString + 1, cvector(0.5, 0.43, 0) - cvector( 0, 0.03, 0), 0.0, 5, -1, 0, 0, 1 )
	mi_Profile_State = 5
		
	// table des char
	//profilecourrier IntMIG_BuildCharTable( mi_PageString + 2, cvector( 0, 0.5, 0 ), 1 )				
	IntMIG_BuildCharTable( mi_PageString + 2, cvector( 0, 0.5, 0 ), 0 )				

	IntMIG_SetText_Page( mi_PageString + 4, INTMIG_TXG, INTMIG_TEXT_Confirm, cvector( 0.5, 0.8, 0),  0.0, 5, -1, INTMIG_Color_NotSel, 0, 1 )
	IntMIG_SetText_Page( mi_PageString + 5, INTMIG_TXG, INTMIG_TEXT_Xselect, INTMIG_PosButton_BottomRight,  0.0, 6, -1, INTMIG_Color_Sel, 0, 1 )
	IntMIG_SetText_Page( mi_PageString + 6, INTMIG_TXG, INTMIG_TEXT_Tback, INTMIG_PosButton_BottomLeft,  0.0, 4, -1, INTMIG_Color_Sel, 0, 1 )
	IntMIG_Text_FadeInMulti( mi_PageString, 7, 0.5, 0.0 )
	IntMIG_Text_SetFrame( mi_PageString + 3, 0xFFFFFFFF, 0.0, mi_PageString + 1, mi_PageString + 2, mi_PageString + 4, -1, -1, -1, 33 )

	IntMIG_CreateText_Start( mi_PageString + 8 )
	@mo_Texte OBJ_TextInsert( mi_PageString + 8, -1, "\p13\#" )
	IntMIG_CreateText_End( mi_PageString + 8, cvector(-1, -1, 0), 0.0, 9, -1, INTMIG_Color_Sel, 0, 0 )
}
else if (INTMIG_EnterPage_End )
{
	IntMIG_SetJoyFactor( 4.0 )
}
else if ( INTMIG_LeavePage_Start )
{
	IntMIG_SetJoyFactor( 1.0 )
	IntMIG_Text_FadeOutMulti( mi_PageString, 9, 0.5 )
}

IntMIG_RestorePageParams()

if ( mi_Exit || mi_ChangePage || mi_Cheat )
	return
	
if ( !IntMIG_MC_TestPresence() )
{
	mi_MC_Page = INTMIG_MCPage_GOTO_MemCard
	INTMIG_ChangePage(  "IntMIG_Page_Memcard_TestError", 0 )
	return
}

// uncolorize all letter
@mo_Texte OBJ_TextColorSet( mi_PageString + 2, 0, -1, INTMIG_Color_NotSel )
	
ti_Max = 5
if ( !mai_ProfileChar[0] )
{
	ti_Max = 4
	@mo_Texte OBJ_TextColorSet( mi_PageString + 2, 63, 1, INTMIG_Color_Disable )
}

if (ti_Max != mi_Profile_State )
{
	if (ti_Max == 4 )
		IntMIG_Text_ChangeColor( mi_PageString + 4, INTMIG_Color_NotSel, INTMIG_Color_Disable, 0.2, 0.0 )
	else
		IntMIG_Text_ChangeColor( mi_PageString + 4, INTMIG_Color_Disable, INTMIG_Color_NotSel, 0.2, 0.0 )
	mi_Profile_State = ti_Max
}

ti_Save = mi_Cur
ti_Save2 = mi_Cur2
IntMIG_UpdateCur( ti_Max, 1, 1, -1, 0, 0, 0, 0, 0, 0 )
if (mi_Cur != 4)
	IntMIG_UpdateCur2( 16, 1, 0, 0, -1, 1, 0, 0, 0, 0 )
if (IO_ButtonJustPressed( joy_button_Start ) && (ti_Max == 5) )
	mi_Cur = 4
	
if ( (mi_Cur != ti_Save) || (mi_Cur2 != ti_Save2) )
	IntMIG_PlaySound( INTMIG_SOUND_SELECTION )


if (mi_Cur != ti_Save)
{
	if (mi_Cur == 4 )
		IntMIG_Text_ChangeColor( mi_PageString + 4, INTMIG_Color_NotSel, INTMIG_Color_Sel, 0.2, 0.0 )
	if (ti_Save == 4)
		IntMIG_Text_ChangeColor( mi_PageString + 4, INTMIG_Color_Sel, INTMIG_Color_NotSel, 0.2, 0.0 )
}

// colorize sel letter
@mo_Texte OBJ_TextPivotSet( mi_PageString + 8, cvector( -1, -1, 0))
ti_index = (mi_Cur * 16) + mi_Cur2
if ( ti_index < 64)
{
	ti_Color = INTMIG_Color_Sel
	if ( ( ( ti_index == 63 ) || (ti_index == 62 ) ) && ( ti_Max == 4 ) )
		ti_Color = INTMIG_Color_NotSel
	@mo_Texte OBJ_TextColorSet( mi_PageString + 2, ti_index, 1, ti_Color )
	tv_pos = @mo_Texte OBJ_TextPosGetMax(mi_PageString + 2,ti_index,1)
	tv_pos.x += @mo_Texte OBJ_TextPosGetMin(mi_PageString + 2,ti_index,1).x
	tv_pos.x /= 2
	if (ti_index == 62 )
	{
		tv_pos2 = @mo_Texte OBJ_TextPosGetMax(mi_PageString + 2,61,1)
		tv_pos.y = tv_pos2.y
	}
	@mo_Texte OBJ_TextPivotSet( mi_PageString + 8, tv_pos)
	@mo_Texte OBJ_TextColorSet( mi_PageString + 8, 0, -1, ti_Color )
}
		
// display profile name
IntMIG_CreateText_Start( mi_PageString + 1 )
for (ti_char = 0; ti_char < MAX_CHAR; ti_char++)
{
	if (mai_ProfileChar[ ti_char ] == 0) 
		break
	@mo_Texte OBJ_TextInsert( mi_PageString + 1, -1, " " )
	@mo_Texte OBJ_TextCharSet( mi_PageString + 1, ti_char, mai_ProfileChar[ ti_char ] )
}

mf_PageTimer += 3 * TIME_GetDt()
ti_line = mf_PageTimer
if ( ti_char < MAX_CHAR)
	@mo_Texte OBJ_TextInsert( mi_PageString + 1, -1, "\p13\$" )
//profilecourrier IntMIG_CreateText_End( mi_PageString + 1, cvector(0.5, 0.43, 0), 0.0, 5, -1, INTMIG_Color_Sel, 0, 1 )
IntMIG_CreateText_End( mi_PageString + 1, cvector(0.5, 0.43, 0), 0.0, 5, -1, INTMIG_Color_Sel, 0, 0 )
if ( ( ti_char < MAX_CHAR) && ( ti_line & 1 ) )
	@mo_Texte OBJ_TextColorSet( mi_PageString + 1, ti_char, 1, 0 )

if ( joy_cancel  )
{
	IntMIG_PlaySound( INTMIG_SOUND_CANCEL )
	INTMIG_ChangePage(  "IntMIG_Page_Profile" , mi_Profile_Cur )
	return
}
	
if ( joy_valide || (IO_ButtonJustPressed( joy_button_L) && (ti_Max == 5)) )
{
	if (mi_Cur == 4 && joy_valide) 	
	{
		IntMIG_PlaySound( INTMIG_SOUND_VALIDE )
		
		ti_Save = 1
		for ( ti_line = 0; ti_line < mi_Profile_Nb; ti_line++)
		{
			@mo_Texte OBJ_TextSet( mi_PageString + 19, SAVE_HeaderName(mi_Profile_Index[ ti_line ]) )
			for (ti_char = 0; ti_char < MAX_CHAR + 1; ti_char++)
			{
				tic1= @mo_Texte OBJ_TextCharGet( mi_PageString + 19, ti_char ) & 0xFFF
				tic2 = mai_ProfileChar[ ti_char ] & 0xFFF

				if ( (tic1 != tic2)|| !tic2 )
					break
			}
			if (tic1 == tic2 )
			{
				ti_Save = 0
				break
			}
		}
		@mo_Texte OBJ_TextSet( mi_PageString + 19, "" )
		if ( !ti_Save )
		{
			mi_MC_Slot = mi_Profile_Index[ ti_line ]
			INTMIG_YesNoPage( INTMIG_YESNO_OVERWRITTEPROFILE )
			return
		}

		for (ti_char = 0; ti_char < MAX_CHAR + 1; ti_char++ )
		{
			SAVE_HeaderSetNameChar( mi_Profile_Empty, ti_char, mai_ProfileChar[ ti_char ])
			if (mai_ProfileChar[ ti_char ] == 0) 
				break
		}
		
		mi_MC_Slot = mi_Profile_Empty
		mi_MC_Mode = INTMIG_MCMode_ProfileCreate
		mi_MC_State = 0
		INTMIG_ChangePage( "IntMIG_Page_Memcard", 0 )
	}
	else
	{
		ti_index = (mi_Cur * 16) + mi_Cur2
		if ( (ti_index == 63) || IO_ButtonJustPressed( joy_button_L) )
		{
			if (mai_ProfileChar[ 0 ] ) 
			{
				IntMIG_PlaySound( INTMIG_SOUND_CANCEL )
				for (ti_char = 1; ti_char < MAX_CHAR; ti_char++ )
				{
					if (mai_ProfileChar[ ti_char ] == 0) 
						break
				}
				mai_ProfileChar[ ti_char - 1 ] = 0
			}
			else
				IntMIG_PlaySound( INTMIG_SOUND_VALIELOCK )
		}
		else if ( (ti_index == 62 ) && (ti_Max == 4) )
		{
			IntMIG_PlaySound( INTMIG_SOUND_VALIELOCK )
		}
		else
		{
			for (ti_char = 0; ti_char < MAX_CHAR; ti_char++ )
			{
				if (mai_ProfileChar[ ti_char ] == 0) 
				{
					IntMIG_PlaySound( INTMIG_SOUND_ENTERLETTER )
					mai_ProfileChar[ ti_char ] = @mo_Texte OBJ_TextCharGet( mi_PageString + 2, ti_index )
					break
				}
			}
			if (ti_char == MAX_CHAR )
				IntMIG_PlaySound( INTMIG_SOUND_CANCEL )
		}
	}
}
