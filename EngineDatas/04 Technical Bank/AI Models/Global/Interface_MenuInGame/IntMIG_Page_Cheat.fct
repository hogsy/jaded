#include "Interface_MenuInGame_defs.var"

#ifndef _FINAL_

int			ti_Line, ti_Num
int			ti_Texte
int			ti_Col, ti_Col2
int			ti_Frame
float		tf_Height
vector	tv_Pos
int			ti_Index, ti_best
float		tf_H

if (INTMIG_EnterPage_Start)
{
	mf_Cheat_AddMuni_Timer[ 0 ] = 0
	mf_Cheat_AddMuni_Timer[ 1 ] = 0
	mf_Cheat_AddMuni_Timer[ 2 ] = 0
	mf_Cheat_AddMuni_Timer[ 3 ] = 0
	IntMIG_Cheat_BuildESList()
}
IntMIG_SetPageParams()

tv_Pos = cvector ( 0.48, 0.2, 0 ) 
tf_Height = 0.05

ti_Texte = IntMIG_AddText_dbg( INTMIG_TXG, -1, cvector( 0.5, 0.0, 0), 0.1, 1, mi_ColorTitle, 0 )
STR_AppendText( ti_Texte, "Cheat" )

ti_Num = 12
for ( ti_Line = 0; ti_Line < ti_Num ; ti_Line++ )
{
	ti_Col = IntMIG_GetLineColor( ti_Line )
	ti_Frame = IntMIG_GetFrame( ti_Line )
	
	if (ti_Line == ti_Num - 1 )
		IntMIG_AddText_dbg( INTMIG_TXG, INTMIG_TEXT_Tback, cvector(0.5, 0.9, 0) , tf_Height, 1, ti_Col, ti_Frame )
	else
	{
		ti_Texte = IntMIG_AddText_dbg( INTMIG_TXG, -1, tv_Pos, tf_Height, 2, ti_Col, ti_Frame )
		switch( ti_Line )
		{
			case 0: STR_AppendText( ti_Texte, "Invincible" ) break
			case 1: STR_AppendText( ti_Texte, "Paf fort" ) break
			case 2: STR_AppendText( ti_Texte, "Show ammunitions" ) break
			case 3: STR_AppendText( ti_Texte, "Add ammunitions" ) break
			case 4: if (mi_ES_Num == 0) 
							STR_AppendText( ti_Texte, "no ES" )
						else
							STR_AppendText( ti_Texte, "goto ES" ) 
						break
			case 5: STR_AppendText( ti_Texte, "Infinite spears" ) break
			case 6: STR_AppendText( ti_Texte, "IK On Visuel" ) break
			case 7: STR_AppendText( ti_Texte, "No LEG IK" ) break
			case 8: STR_AppendText( ti_Texte, "No NECK IK" ) break
			case 9: STR_AppendText( ti_Texte, "Raptor always jump" ) break
			case 10: STR_AppendText( ti_Texte, "Disable Kong AI move" ) break
		}
	}
	tv_Pos.y +=  0.05
}

ti_Col = IntMIG_GetLineColor( 0 )
if ( @"univ" Cheat_i_Flags & CHEAT_Invicible )
	IntMIG_AddText_dbg( INTMIG_TXG, INTMIG_TEXT_Yes, cvector( 0.52, 0.20, 0), tf_Height , 0, ti_Col, 0 )
else
	IntMIG_AddText_dbg( INTMIG_TXG, INTMIG_TEXT_No, cvector( 0.52, 0.20, 0), tf_Height , 0, ti_Col, 0 )

ti_Col = IntMIG_GetLineColor( 1 )
if ( @"univ" Cheat_i_Flags & CHEAT_PafFort )
	IntMIG_AddText_dbg( INTMIG_TXG, INTMIG_TEXT_Yes, cvector( 0.52, 0.25, 0), tf_Height , 0, ti_Col, 0 )
else
	IntMIG_AddText_dbg( INTMIG_TXG, INTMIG_TEXT_No, cvector( 0.52, 0.25, 0), tf_Height , 0, ti_Col, 0 )
	
ti_Col = IntMIG_GetLineColor( 2 )
if ( @"univ" MENU_i_ShowInterface )
	IntMIG_AddText_dbg( INTMIG_TXG, INTMIG_TEXT_Yes, cvector( 0.52, 0.3, 0), tf_Height , 0, ti_Col, 0 )
else
	IntMIG_AddText_dbg( INTMIG_TXG, INTMIG_TEXT_No, cvector( 0.52, 0.3, 0), tf_Height , 0, ti_Col, 0 )
	
ti_Col = IntMIG_GetLineColor( 3 )
for (ti_Index = 0; ti_Index < 4; ti_Index++)
{
	mf_Cheat_AddMuni_Timer[ ti_Index ] -= TIME_GetDt()
	if (mf_Cheat_AddMuni_Timer[ ti_Index ] > 0 )
	{
		ti_Col2 = COLOR_Blend(0, ti_Col, mf_Cheat_AddMuni_Timer[ ti_Index ])
		tv_Pos = cvector( 0.52, 0.35, 0)
		tv_Pos.x += (1 - mf_Cheat_AddMuni_Timer[ ti_Index ]) * 0.5
		tv_Pos.y += (1 - mf_Cheat_AddMuni_Timer[ ti_Index ]) * (1 - mf_Cheat_AddMuni_Timer[ ti_Index ]) * mf_Cheat_AddMuni_Val[ ti_Index ]
		tf_H = tf_Height + ((1 - mf_Cheat_AddMuni_Timer[ ti_Index ]) * (1 - mf_Cheat_AddMuni_Timer[ ti_Index ]) * 0.5)
		ti_Texte = IntMIG_AddText_dbg( -1, -1, tv_Pos, tf_H , 0, ti_Col2, 0 )
		STR_AppendText( ti_Texte, "+100" )
	}
	else
		mf_Cheat_AddMuni_Timer[ ti_Index ] = 0
}

if (mi_ES_Num != 0) 
{
	ti_Col = IntMIG_GetLineColor( 4 )
	ti_Texte = IntMIG_AddText_dbg( -1, -1, cvector( 0.52, 0.4, 0), tf_Height, 0, ti_Col, 0 )
	STR_AppendInt( ti_Texte, mi_ES[ mi_ES_Cur ] )
}

ti_Col = IntMIG_GetLineColor( 5 )
if ( @"univ" Cheat_i_Flags & CHEAT_InfiniteSpears )
	IntMIG_AddText_dbg( INTMIG_TXG, INTMIG_TEXT_Yes, cvector( 0.52, 0.45, 0), tf_Height , 0, ti_Col, 0 )
else
	IntMIG_AddText_dbg( INTMIG_TXG, INTMIG_TEXT_No, cvector( 0.52, 0.45, 0), tf_Height , 0, ti_Col, 0 )


ti_Col = IntMIG_GetLineColor( 6 )
if ( @"univ" Cheat_i_Flags & CHEAT_IKOnVisuel )
	IntMIG_AddText_dbg( INTMIG_TXG, INTMIG_TEXT_Yes, cvector( 0.52, 0.5, 0), tf_Height , 0, ti_Col, 0 )
else
	IntMIG_AddText_dbg( INTMIG_TXG, INTMIG_TEXT_No, cvector( 0.52, 0.5, 0), tf_Height , 0, ti_Col, 0 )

ti_Col = IntMIG_GetLineColor( 7 )
if ( @"univ" Cheat_i_Flags & CHEAT_IK_LEG_Off )
	IntMIG_AddText_dbg( INTMIG_TXG, INTMIG_TEXT_Yes, cvector( 0.52, 0.55, 0), tf_Height , 0, ti_Col, 0 )
else
	IntMIG_AddText_dbg( INTMIG_TXG, INTMIG_TEXT_No, cvector( 0.52, 0.55, 0), tf_Height , 0, ti_Col, 0 )

ti_Col = IntMIG_GetLineColor( 8 )
if ( @"univ" Cheat_i_Flags & CHEAT_IK_NECK_Off )
	IntMIG_AddText_dbg( INTMIG_TXG, INTMIG_TEXT_Yes, cvector( 0.52, 0.6, 0), tf_Height , 0, ti_Col, 0 )
else
	IntMIG_AddText_dbg( INTMIG_TXG, INTMIG_TEXT_No, cvector( 0.52, 0.6, 0), tf_Height , 0, ti_Col, 0 )

ti_Col = IntMIG_GetLineColor( 9 )
if ( @"univ" Cheat_i_Flags & CHEAT_Raptor_Jump )
	IntMIG_AddText_dbg( INTMIG_TXG, INTMIG_TEXT_Yes, cvector( 0.52, 0.65, 0), tf_Height , 0, ti_Col, 0 )
else
	IntMIG_AddText_dbg( INTMIG_TXG, INTMIG_TEXT_No, cvector( 0.52, 0.65, 0), tf_Height , 0, ti_Col, 0 )

ti_Col = IntMIG_GetLineColor( 10 )
if ( @"univ" Cheat_i_Flags & CHEAT_Disable_Kong_AI_Move )
	IntMIG_AddText_dbg( INTMIG_TXG, INTMIG_TEXT_Yes, cvector( 0.52, 0.7, 0), tf_Height , 0, ti_Col, 0 )
else
	IntMIG_AddText_dbg( INTMIG_TXG, INTMIG_TEXT_No, cvector( 0.52, 0.7, 0), tf_Height , 0, ti_Col, 0 )


IntMIG_RestorePageParams()

if ( mi_Exit || mi_ChangePage || mi_Cheat)
	return
	
IntMIG_UpdateCur_Vertical( ti_Num, 1 )
	
if ( joy_cancel || (joy_valide && (mi_Cur == ti_Num - 1) ) )
{
	INTMIG_ChangePage(  "IntMIG_Page_Main" , mi_MainCur )
	return
}

if ( (mi_Cur == 4) && (mi_ES_Num != 0)  )
{
	if (joy_right )
		mi_ES_Cur = MATH_Modulo( mi_ES_Cur + 1, mi_ES_Num )
	if (joy_left )
		mi_ES_Cur = MATH_Modulo( mi_ES_Cur + mi_ES_Num - 1, mi_ES_Num )
}
	
if ( joy_valide )
{
	switch ( mi_Cur )
	{
		case 0: UNIV_SwapCheatFlags( CHEAT_Invicible ) break
		case 1: UNIV_SwapCheatFlags( CHEAT_PafFort ) break
		case 2: 
				if ( @"univ" MENU_i_ShowInterface )
					@"univ" MENU_i_ShowInterface = 0
				else	
					@"univ" MENU_i_ShowInterface = 1
				break
		case 3:
			ti_Col = @"univ" i_weapon_ID[ C_ID_Joueur ]
//			if ( (ti_Col >= Ci_weapon_ID_colt) && (ti_Col < Ci_weapon_ID_max) )
//			{
//				@"univ" i_weapon_ammunition_reserve[ ti_Col ][ C_ID_Joueur ] += 100
//				tf_H = 1.0
//				for (ti_Index = 0; ti_Index < 4; ti_Index ++ )
//				{
//					if ( mf_Cheat_AddMuni_Timer[ ti_Index ] == 0 )
//						break
//					if (mf_Cheat_AddMuni_Timer[ ti_Index ] < tf_H )
//					{
//						tf_H = mf_Cheat_AddMuni_Timer[ ti_Index ]
//						ti_best = ti_Index 
//					}
//				}
//				if (ti_Index == 4 ) ti_Index = ti_best
//				mf_Cheat_AddMuni_Timer[ ti_Index ] = 1.0
//				mf_Cheat_AddMuni_Val[ ti_Index ] = MATH_RandFloat( -0.8, 0.8 )
//			}
			break
		case 4:
			if (mi_ES_Num != 0) 
			{
				@"univ" world_entrance_ID = mi_ES[ mi_ES_Cur ]
				WOR_Reinit()
			}
			break
		case 5: UNIV_SwapCheatFlags( CHEAT_InfiniteSpears ) break
		case 6: UNIV_SwapCheatFlags( CHEAT_IKOnVisuel) break
		case 7: UNIV_SwapCheatFlags( CHEAT_IK_LEG_Off) break
		case 8: UNIV_SwapCheatFlags( CHEAT_IK_NECK_Off) break
		case 9: UNIV_SwapCheatFlags( CHEAT_Raptor_Jump) break
		case 10: UNIV_SwapCheatFlags( CHEAT_Disable_Kong_AI_Move) break
	}
}


#endif