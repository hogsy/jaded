#include "Interface_MenuInGame_defs.var"

int			ti_Line
int			ti_Passe
int			ti_SaveCur
vector	tv_Pos
int			ti_Valide
int			ti_MenuNb, ti_Menu[ 5 ]

#define Video_Line(i)					mi_PageString + 5 + i
#define Video_Line2(i)				mi_PageString + 12 + i

if (!IntMIG_SetPageParams())
	return
if (!mo_Texte)
	return
	
ti_MenuNb = 0
if (AI_GetCurSystem() != 3) { ti_Menu[ti_MenuNb] = 1	ti_MenuNb++ }
ti_Menu[ti_MenuNb] = 2	ti_MenuNb++
ti_Menu[ti_MenuNb] = 3	ti_MenuNb++
ti_Menu[ ti_MenuNb ] = 100

	

if (INTMIG_EnterPage_Start)
{
	IntMIG_ResetTexte( mi_PageString, 30 )
	
	for (ti_Passe = 0 ; ti_Passe < 2; ti_Passe++)
	{
		if (mi_StartMenu || mi_E3Menu )
			IntMIG_Option_StartMetrics( 0.06 )
		else
			IntMIG_Option_StartMetrics( 0.07 )
	
		for (ti_Line = 0; ti_Line < ti_MenuNb; ti_Line++)
		{
			IntMIG_Option_AddMetrics( 0, ti_Line, INTMIG_TXG, INTMIG_TEXT_OptionsVideo+ ti_Menu[ ti_Line ] )
			switch ( ti_Menu[ ti_Line ] )
			{
			case 1: if (ti_Passe== 0)
							IntMIG_Option_AddMetrics( 1, ti_Line , INTMIG_TXG, INTMIG_TEXT_OptionsVideo_Param )
						else
						{
							@mo_Texte OBJ_TextSet( mi_PageString, TEXT_Get(INTMIG_TXG, INTMIG_TEXT_OptionsVideo_Param ) )
							@mo_Texte OBJ_TextPageSet( mi_PageString, 0, 3, 1, 0 )
							@mo_Texte OBJ_TextPageSet( mi_PageString, 3, -1, 3, 0 )
							IntMIG_Option_AddMetrics( 1, ti_Line , -1, -1 )
						}
						break
			case 2: 	IntMIG_Option_AddMetrics( 1, ti_Line , INTMIG_TXG, INTMIG_TEXT_OptionsVideo_Param + 3 )
						break
			case 3:	IntMIG_Option_AddMetrics( 1, ti_Line , INTMIG_TXG, INTMIG_TEXT_OptionsVideo_Param + 3 )
						IntMIG_Option_AddMetrics( 1, ti_Line , INTMIG_TXG, INTMIG_TEXT_OptionsVideo_Param + 4 )
						IntMIG_Option_AddMetrics( 1, ti_Line , INTMIG_TXG, INTMIG_TEXT_OptionsVideo_Param + 5 )
						IntMIG_Option_AddMetrics( 1, ti_Line , INTMIG_TXG, INTMIG_TEXT_OptionsVideo_Param + 6 )
						break
			}
		}
		IntMIG_Option_AddMetrics( 3, ti_Line, INTMIG_TXG, INTMIG_TEXT_Command + 12 )

		if (mi_StartMenu || mi_E3Menu )
			IntMIG_Option_EndMetrics( cvector( 0.5, 0.6, 0) )
		else
			IntMIG_Option_EndMetrics( cvector( 0.5, 0.5, 0) )
			
		if ( mf_Opt_Width[ 0 ] + 0.14 + mf_Opt_Width[ 1 ] <= 1.0)
			break
	}
	mi_OptVideoType_Small = ti_Passe


	IntMIG_SetText_Page( mi_PageString, INTMIG_TXG, INTMIG_TEXT_OptionsVideo, INTMIG_PosTitle_UpRight,  0.0, 6, -1, INTMIG_Color_NotSel, 0, 1 )
	IntMIG_SetText_Page( mi_PageString + 1, INTMIG_TXG, INTMIG_TEXT_Souligne, IntMIG_Option_Pos( 2, mi_Cur ),  0.0, 2, -1, INTMIG_Color_Sel, 0, 1 )
	IntMIG_SetText_Page( mi_PageString + 2, INTMIG_TXG, INTMIG_TEXT_Xchange, INTMIG_PosButton_BottomRight,  0.0, 6, -1, INTMIG_Color_Sel, 0, 1 )
	IntMIG_SetText_Page( mi_PageString + 3, INTMIG_TXG, INTMIG_TEXT_Tback, INTMIG_PosButton_BottomLeft,  0.0, 4, -1, INTMIG_Color_Sel, 0, 1 )
	
	IntMIG_Frame_Start()
	for (ti_Line = 0; ti_Line < ti_MenuNb; ti_Line++)
	{
		IntMIG_SetText_Page( Video_Line( ti_Line), INTMIG_TXG, INTMIG_TEXT_OptionsVideo  + ti_Menu[ ti_Line ], IntMIG_Option_Pos( 0,ti_Line),  0.0, 2, -1, INTMIG_Color_NotSel, 0, 1 )
		switch ( ti_Menu[ ti_Line ] )
		{
		case 1: IntMIG_OptionsVideoString_Mode( Video_Line2( ti_Line) , IntMIG_Option_Pos( 1,ti_Line), INTMIG_Color_NotSel) break
		case 2: IntMIG_OptionsVideoString_SpecialMode( Video_Line2( ti_Line), IntMIG_Option_Pos( 1,ti_Line), INTMIG_Color_NotSel) break
		case 3: IntMIG_OptionsVideoString_InvertHoriz( Video_Line2( ti_Line), IntMIG_Option_Pos( 1,ti_Line), INTMIG_Color_NotSel) break
		}
		IntMIG_Frame_Add( Video_Line( ti_Line) )
		IntMIG_Frame_Add( Video_Line2( ti_Line) )
	}
	IntMIG_SetText_Page( Video_Line( ti_Line), INTMIG_TXG, INTMIG_TEXT_Command + 12, IntMIG_Option_Pos( 3,ti_Line) +cvector(0, 0.04, 0),  0.0, 1, -1, INTMIG_Color_NotSel, 0, 1 )
	IntMIG_Frame_Add( Video_Line( ti_Line) )
	IntMIG_Frame_End( mi_PageString + 4, 0xFFFFFFFF, 0.0, 0.03, 32 )



	@mo_Texte OBJ_TextColorSet( Video_Line(mi_Cur), 0, -1, INTMIG_Color_Sel )
	@mo_Texte OBJ_TextColorSet( Video_Line2(mi_Cur), 0, -1, INTMIG_Color_Sel )
	
	IntMIG_Text_FadeInMulti( mi_PageString, 20, 0.5, 0.0 )

	// store parameters
	mi_Opt_SaveInt[ 0 ] = @"univ" VID_gi_DisplayMode
	mi_Opt_SaveInt[ 1 ] = @"univ" VID_gi_ModeOldMovie
	mi_Opt_SaveInt[ 2 ] = @"univ" VID_gi_InvertHoriz
	SAVE_ValidateAl()
	mi_ExitValide = faux
}
else if (INTMIG_LeavePage_Start)
{
	IntMIG_Text_FadeOutMulti( mi_PageString, 20, 0.5 )
	// restore parameters
	if ( !mi_ExitValide )
	{
		@"univ" VID_gi_DisplayMode = mi_Opt_SaveInt[ 0 ]
		@"univ" VID_gi_ModeOldMovie = mi_Opt_SaveInt[ 1 ]
		@"univ" VID_gi_InvertHoriz = mi_Opt_SaveInt[ 2 ]
		SAVE_ValidateAl()
		VIEW_SetMode( @"univ" VID_gi_DisplayMode ) 
		IntMIG_ResetAFX()
	}
}

//for (ti_Line = 0; ti_Line <  4; ti_Line++ )
//	@mo_Texte OBJ_TextPivotSet( Video_Line(ti_Line), IntMIG_Option_Pos( 0, ti_Line ) )

IntMIG_RestorePageParams()

if ( mi_Exit || mi_ChangePage|| mi_Cheat  )
	return
	
ti_SaveCur = mi_Cur
IntMIG_UpdateCur_Vertical( ti_MenuNb + 1, 1 )
if (mi_Cur != ti_SaveCur )
{
	IntMIG_PlaySound( INTMIG_SOUND_SELECTION )
	IntMIG_Text_ChangeColor( Video_Line( ti_SaveCur ), INTMIG_Color_Sel, INTMIG_Color_NotSel, 0.25, 0.0 )
	IntMIG_Text_ChangeColor( Video_Line( mi_Cur ), INTMIG_Color_NotSel, INTMIG_Color_Sel, 0.25, 0.0 )
	IntMIG_Text_ChangeColor( Video_Line2( ti_SaveCur ), INTMIG_Color_Sel, INTMIG_Color_NotSel, 0.25, 0.0 )
	IntMIG_Text_ChangeColor( Video_Line2 ( mi_Cur ), INTMIG_Color_NotSel, INTMIG_Color_Sel, 0.25, 0.0 )
	if (mi_Cur == ti_MenuNb  )
	{
		@mo_Texte OBJ_TextFlagSet( mi_PageString + 1, 1 )
		@mo_Texte OBJ_TextPivotSet( mi_PageString + 1, IntMIG_Option_Pos( 2,mi_Cur) + cvector(0,0.04,0) )
		IntMIG_SetText_Page( mi_PageString + 2, INTMIG_TXG, INTMIG_TEXT_Xselect, INTMIG_PosButton_BottomRight,  0.0, 6, -1, INTMIG_Color_Sel, 0, 1 )
	}
	else
	{
		@mo_Texte OBJ_TextFlagSet( mi_PageString + 1, 2 )
		@mo_Texte OBJ_TextPivotSet( mi_PageString + 1, IntMIG_Option_Pos( 2,mi_Cur) )
		IntMIG_SetText_Page( mi_PageString + 2, INTMIG_TXG, INTMIG_TEXT_Xchange, INTMIG_PosButton_BottomRight,  0.0, 6, -1, INTMIG_Color_Sel, 0, 1 )
	}
}

if ( joy_cancel )
{
	IntMIG_PlaySound( INTMIG_SOUND_CANCEL )
	SAVE_ValidateAl()
	INTMIG_ChangePage(  "IntMIG_Page_OptStart" , 1 )
	return
}
	
if ( joy_valide )
{
	tv_Pos = @mo_Texte OBJ_TextPivotGet( Video_Line2(mi_Cur ) )
	ti_Valide = 0
	switch ( ti_Menu[ mi_Cur ] )
	{
		case 1:
				@"univ" VID_gi_DisplayMode -= 1
				if (joy_right)
					@"univ" VID_gi_DisplayMode = MATH_Modulo( @"univ" VID_gi_DisplayMode + 1, 3)
				else
					@"univ" VID_gi_DisplayMode = MATH_Modulo( @"univ" VID_gi_DisplayMode + 2, 3)
				@"univ" VID_gi_DisplayMode += 1
				VIEW_SetMode( @"univ" VID_gi_DisplayMode )
				IntMIG_OptionsVideoString_Mode( Video_Line2( mi_Cur ), tv_Pos, 0xFFFFFF)
				ti_Valide = 1
				break
			
		case 2: 
				if ( XTRA_OldMovie_Unlocked || UNIV_TestCheatFlags( CHEAT_UnlockAllBonus ) )
				{
					if (XTRA_ContrastBoost_Unlocked || UNIV_TestCheatFlags( CHEAT_UnlockAllBonus ) )
					{
						if (joy_right) 	@"univ" VID_gi_ModeOldMovie = MATH_Modulo( @"univ" VID_gi_ModeOldMovie + 1, 3 )
						else @"univ" VID_gi_ModeOldMovie = MATH_Modulo( @"univ" VID_gi_ModeOldMovie + 2, 3 )
						ti_Valide = 1
					}
					else
					{
						if ( @"univ" VID_gi_ModeOldMovie )
							@"univ" VID_gi_ModeOldMovie = 0
						else
							@"univ" VID_gi_ModeOldMovie = 1
						ti_Valide = 1
					}
				}
				else if ( XTRA_ContrastBoost_Unlocked ) 
				{
					if ( @"univ" VID_gi_ModeOldMovie )
						@"univ" VID_gi_ModeOldMovie = 0
					else
						@"univ" VID_gi_ModeOldMovie = 2
					ti_Valide = 1
				}
				if (ti_Valide)
				{
					IntMIG_ResetAFX()
					IntMIG_OptionsVideoString_SpecialMode( Video_Line2( mi_Cur ), tv_Pos, 0xFFFFFF)
				}
				break
		case 3:
				if ( XTRA_GaucherMode_Unlocked || UNIV_TestCheatFlags( CHEAT_UnlockAllBonus ) )
				{
					@"univ" VID_gi_InvertHoriz = MATH_Modulo( @"univ" VID_gi_InvertHoriz + 1, 2 )
					IntMIG_ResetAFX()
					IntMIG_OptionsVideoString_InvertHoriz( Video_Line2( mi_Cur ), tv_Pos, 0xFFFFFF)
					ti_Valide = 1
				}
				break
		case 100:
				mi_ExitValide = vrai
				IntMIG_PlaySound( INTMIG_SOUND_VALIDE )
				SAVE_ValidateAl()
				INTMIG_ChangePage(  "IntMIG_Page_OptStart" , 1 )
				ti_Valide = 1
				break
	}
	if (ti_Valide )
	{
		SAVE_ValidateAl()
		IntMIG_PlaySound( INTMIG_SOUND_VALIDE )
	}
	else
		IntMIG_PlaySound( INTMIG_SOUND_VALIELOCK )
}

