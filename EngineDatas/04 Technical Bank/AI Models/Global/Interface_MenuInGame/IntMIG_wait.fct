#include "Interface_MenuInGame_defs.var"

int			ti_Open, i
object	to_texte

ti_Open = faux
mi_StartMenu = faux
mi_E3Menu = faux

if ( @"univ" MENU_f_LockedDuring > 0 )
{
	if (IO_ButtonJustPressed( joy_button_Start ))
		IntMIG_PlaySound( INTMIG_SOUND_VALIELOCK )
	@"univ" MENU_f_LockedDuring -= TIME_GetDt()
	return
}

if ( OBJ_CapaTest( OBJ_Capa_1 ) )
{
	OBJ_CapaSet( 0, OBJ_Capa_1 | OBJ_Capa_0 )
	mi_E3Menu = vrai
	ti_Open = vrai
}
else if ( OBJ_CapaTest( OBJ_Capa_0 ) )
{
	OBJ_CapaSet( 0, OBJ_Capa_0 )
	mi_StartMenu = vrai
	ti_Open = vrai
}
else if ( !OBJ_CapaTest( OBJ_Capa_15) && !OBJ_CapaTest( OBJ_Capa_14) && IO_ButtonJustPressed( joy_button_Start ))
{
	ti_Open = vrai
}

if ( ti_Open )
{
	WOR_Pause(0, 0xFFFFFFFF)
	
	if (!mi_StartMenu && !mi_E3Menu )
		SND_M_SetGameMode(SND_Cte_ModeMenu)
	
	mi_MenuState = 0
	mi_Exit = 0
	mf_GenLumStart = 0
	mf_GenLumEnd = 1
	mf_GenLumTime = 0.2
	mf_GenLumTimeCur = 0
	mf_GenLum = 0
	mf_ChangePageTimer  = INTMIG_ChangePageTimer
	mi_Stats_CurSection = @"univ" STATS_WorldID
	mi_ChangePage_First = 1
	mi_Cur = 0
	mi_snd_jaugeloop_instance = -1
	@"univ" MENUDEMO_BeforeTransition = 0
	@"univ" PROG_ES_0to1 = faux

	IO_JoyFreeze( joy_freeze_none)
	TIME_SpeedFactorSet( 1.0 )

	for (i = 0; i < 10; i++)
	{
		mf_BG_State[ i ] = 0
		mf_BG_State_new[ i ] = 0
	}
	
	AI_Execute( "IntMIG_colorize" )
	
	OBJ_FlagInvisibleSet( 0 )
	OBJ_PosSet( cvector(0, -0.2 * (1.2 / VIEW_FocaleGet(0)), 0 ) )
	
	STR_GroupDisplaySet(2,1)
	OBJ_CapaSet( OBJ_Capa_9, 0 )
	
	// ----( Set eventually camera )----
	if (mo_Camera)
		@mo_Camera VIEW_AssignObject( 0 )
		
	// ----( hide game text )----
	if ( @"univ" Texte_InGame )
	{
		to_texte = @"univ" Texte_InGame
		@to_texte OBJ_FlagInvisibleSet( 1 )
	}
	
	if (@"univ" PROG_i_MapReplay && (@"univ" world_ID == 3) )
	{
		@"univ" MENUDEMO_QuitWhenAllDone = 0
		@"univ" MENUDEMO_QuitWhenDying = 0
		IntMIG_ResetAFX()
		mi_Cur = @"univ" PROG_i_MapReplayIndex
		mi_HOF_Map = mi_Cur
		
		if ( ( @"univ" PROG_i_MapReplayExit == 3) || (IntMIG_HOF_GetPlayerScore( @"univ" PROG_i_MapReplayIndex ) == -1) )
		{
			if (@"univ" MENU_PlayWithoutSaving == 1)
			{
				int i_Map
				
				for (i_Map = 0; i_Map < @"univ" PROG_i_MapNumber; i_Map++)
				{
					if ( @"univ" PROG_ai_MapId[ i_Map ] == @"univ" MENU_PlayWithoutSaving_LastMap )
					{
						@"univ" PROG_i_MapCur = i_Map
						@"univ" PROG_i_Map = @"univ" PROG_ai_MapId[ i_Map ]
						@"univ" PROG_i_ES = @"univ" PROG_ai_MapES[ i_Map ]
						break
					}
				}
			}

			IntMIG_StoreOptions()
			//DBG_TraceString( "Save Buffer : Restore4" ) DBG_TraceEOL()
			SAVE_Request( INO_e_SavRq_RestoreSaveBuffer, 4)
			SAVE_Unvalidate()
			IntMIG_PasteOptions()
			@"univ" PROG_i_MapReplay = faux
			//AI_TrackChange( 3, "IntMIG_Page_Map" )
			INTMIG_ChangePage( "IntMIG_Page_Map", mi_Cur )

		}
		else if (@"univ" Cheat_i_Flags & CHEAT_CHEAT_CHEAT )
		{
			INTMIG_YesNoPage( INTMIG_OK_NOSCORECAUSECHEAT )
		}
		else
		{
			mi_ScoreState = 0
			mi_ScoreState_Old = 0
			mi_ScoreSave = 0
			INTMIG_ChangePage( "IntMIG_Page_ScoreNew", mi_Cur )
		}
	}
	else if  (mi_StartMenu )
	{
		@"univ" MENUDEMO_QuitWhenAllDone = 0
		@"univ" MENUDEMO_QuitWhenDying = 0
		IntMIG_RestoreOptions()
		
		if (@"univ" PROG_i_MapFromExtra )
		{
			//DBG_TraceString( "Save Buffer : Restore5" ) DBG_TraceEOL()
			SAVE_Request( INO_e_SavRq_RestoreSaveBuffer, 5)
			SAVE_Unvalidate()
			@"univ" PROG_i_FinAlternative = 0
			mi_Cur = @"univ" PROG_i_MapFromExtra - 1
			@"univ" PROG_i_MapFromExtra = 0
			INTMIG_ChangePage( "IntMIG_Page_Xtra", mi_Cur )
		}
		else if ( !@"univ" MENU_PlayWithoutSaving && @"univ" PROG_i_EndOfGameReached )
		{
			IntMIG_StoreOptions()
			//DBG_TraceString( "Save Buffer : Restore6" ) DBG_TraceEOL()
			SAVE_Request( INO_e_SavRq_RestoreSaveBuffer, 6)
			SAVE_Unvalidate()
			IntMIG_PasteOptions()

			IntMIG_ProfileGet_MapES( @"univ" MENU_ProfileIndex )
			IntMIG_HOF_GetPlayerOverallScore()
			@"univ" PROG_i_EndOfGameReached = 0
			INTMIG_YesNoPage( INTMIG_YESNO_FINALSAVE )
		}
		else if ( (@"univ" MENU_ProfileIndex != -1) || (@"univ" MENU_PlayWithoutSaving == 1) )
		{
			IntMIG_ProfileGet_MapES( @"univ" MENU_ProfileIndex )
			
			if (@"univ" MENU_PlayWithoutSaving)
			{
				int i_Map
				
				for (i_Map = 0; i_Map < @"univ" PROG_i_MapNumber; i_Map++)
				{
					if ( @"univ" PROG_ai_MapId[ i_Map ] == @"univ" MENU_PlayWithoutSaving_LastMap )
					{
						@"univ" PROG_i_MapCur = i_Map
						@"univ" PROG_i_Map = @"univ" PROG_ai_MapId[ i_Map ]
						@"univ" PROG_i_ES = @"univ" PROG_ai_MapES[ i_Map ]
						break
					}
				}
				INTMIG_ChangePage( "IntMIG_Page_StartMain", 0 )
			}
			else
			{
				IntMIG_StoreOptions()
				//DBG_TraceString( "Save Buffer : Restore6" ) DBG_TraceEOL()
				SAVE_Request( INO_e_SavRq_RestoreSaveBuffer, 6)
				SAVE_Unvalidate()
				IntMIG_PasteOptions()

				IntMIG_HOF_GetPlayerOverallScore()
				if ( IntMIG_XTRA_Diff() )
					INTMIG_YesNoPage( INTMIG_OK_NEWBONUS_MAP )
				else
					INTMIG_ChangePage( "IntMIG_Page_StartMain", 0 )
			}
		}
		else
		{
			mi_MC_Mode = INTMIG_MCMode_ProfileGet
			mi_MC_State = 0
			INTMIG_ChangePage( "IntMIG_Page_Memcard", 0 )
		}	
	}
	else if (mi_E3Menu )
	{
		@"univ" MENUDEMO_QuitWhenAllDone = 0
		@"univ" MENUDEMO_QuitWhenDying = 0
		IntMIG_ResetAFX()
		@"univ" PROG_ES_0to1 = vrai
		INTMIG_ChangePage(  "IntMIG_Page_E3Menu" , mi_Cur )
	}
	else if (@"univ" PROG_i_MapFromExtra && !@"univ" PROG_i_FinAlternative)
	{
		@"univ" load_world = vrai
		@"univ" world_ID = 3
		AI_TrackCurStop()
		return
	}
	else
	{
		mi_MainCur = -1
		IntMIG_PlaySound( INTMIG_SOUND_MENUIN )
		TIME_Lock()
		DBG_TraceString( "----( TIME LOCK )----" )
		DBG_TraceEOL()
		mi_TimeLocked = 1
		INTMIG_ChangePage( "IntMIG_Page_Main", 0 )
	}
			
	AI_TrackCurChange( "IntMIG_loop" )
}
