//#include "Interface_MenuInGame_defs.var"
//
//int			ti_Line
//int			ti_Texte
//int			ti_Col
//int			ti_SaveCur
//vector	tv_Pos
//int			ti_Count 
//float		tf_LineDiff
//
//#define PageOptStartInterface_LineDiff				tf_LineDiff
//#define PageOptStartInterface_PosLine( i ) 			cvector( 0.2, 0.45 + (PageOptStartInterface_LineDiff* i) , 0) 
//#define PageOptStartInterface_PosLine2( i ) 		cvector( 0.5, 0.45 + (PageOptStartInterface_LineDiff* i) , 0) 
//#define PageOptStartInterface_PosSouligne( i ) 	cvector( 0.2, 0.48 + (PageOptStartInterface_LineDiff * i) , 0) 
//#define PageOptStartInterface_Line(i)					mi_PageString + 5 + i
//#define PageOptStartInterface_Line2(i)				mi_PageString + 12 + i
//
//if (!IntMIG_SetPageParams())
//	return
//if (!mo_Texte)
//	return
//	
//if ( mi_StartMenu || mi_E3Menu )
//	tf_LineDiff = 0.06
//else
//	tf_LineDiff = 0.07
//
//ti_Count = 4
////ti_Count = 3
//
//if (INTMIG_EnterPage_Start)
//{
//	IntMIG_ResetTexte( mi_PageString, 30 )
//	
//	IntMIG_SetText_Page( mi_PageString, INTMIG_TXG, INTMIG_TEXT_OptionsInterface, INTMIG_PosTitle_UpRight,  0.0, 6, -1, INTMIG_Color_NotSel, 0, 1 )
//	IntMIG_SetText_Page( mi_PageString + 1, INTMIG_TXG, INTMIG_TEXT_Souligne, PageOptStartInterface_PosSouligne( mi_Cur ),  0.0, 4, -1, INTMIG_Color_Sel, 0, 1 )
//	//IntMIG_SetText_Page( mi_PageString + 2, INTMIG_TXG, INTMIG_TEXT_LJchange, INTMIG_PosButton_BottomRight,  0.0, 6, -1, INTMIG_Color_Sel, 0, 1 )
//	IntMIG_SetText_Page( mi_PageString + 2, INTMIG_TXG, INTMIG_TEXT_LJchange, INTMIG_PosButton_BottomRight - cvector( 0, 0.07, 0),  0.0, 6, -1, INTMIG_Color_Sel, 0, 1 )
//	IntMIG_SetText_Page( mi_PageString + 3, INTMIG_TXG, INTMIG_TEXT_Tback, INTMIG_PosButton_BottomLeft,  0.0, 4, -1, INTMIG_Color_Sel, 0, 1 )
//	//IntMIG_SetText_Page( mi_PageString + 4, INTMIG_TXG, INTMIG_TEXT_Xacceptchange, INTMIG_PosButton_BottomCenter,  0.0, 5, -1, INTMIG_Color_Sel, 0, 1 )
//	IntMIG_SetText_Page( mi_PageString + 4, INTMIG_TXG, INTMIG_TEXT_Xacceptchange, INTMIG_PosButton_BottomRight,  0.0, 6, -1, INTMIG_Color_Sel, 0, 1 )
//	
//	for (ti_Line = 0; ti_Line < ti_Count; ti_Line++)
//	{
//		if (ti_Line == 0)
//			IntMIG_SetText_Page( PageOptStartInterface_Line( ti_Line), INTMIG_TXG, INTMIG_TEXT_OptionsSound  + 2, PageOptStartInterface_PosLine( ti_Line),  0.0, 4, -1, INTMIG_Color_NotSel, 0, 1 )
//		else 
//			IntMIG_SetText_Page( PageOptStartInterface_Line( ti_Line), INTMIG_TXG, INTMIG_TEXT_OptionsInterface + ti_Line , PageOptStartInterface_PosLine( ti_Line),  0.0, 4, -1, INTMIG_Color_NotSel, 0, 1 )
//	
//		//IntMIG_SetText_Page( PageOptStartInterface_Line( ti_Line), INTMIG_TXG, INTMIG_TEXT_OptionsInterface + 1 +ti_Line , PageOptStartInterface_PosLine( ti_Line),  0.0, 4, -1, INTMIG_Color_NotSel, 0, 1 )
//			
//		switch ( ti_Line )
//		{
//		case 0: IntMIG_OptionsAudioSring_Subtitle( PageOptStartInterface_Line2( ti_Line), PageOptStartInterface_PosLine2( ti_Line), INTMIG_Color_NotSel) break
//		case 1: IntMIG_OptionsInterfaceString_Viseur( PageOptStartInterface_Line2( ti_Line) , PageOptStartInterface_PosLine2( ti_Line), INTMIG_Color_NotSel) break
//		case 2: IntMIG_OptionsInterfaceString_Ammo( PageOptStartInterface_Line2( ti_Line), PageOptStartInterface_PosLine2( ti_Line), INTMIG_Color_NotSel) break
//		case 3: IntMIG_OptionsInterfaceString_Inventory( PageOptStartInterface_Line2( ti_Line), PageOptStartInterface_PosLine2( ti_Line), INTMIG_Color_NotSel ) break
//		case 4: IntMIG_OptionsControlString_KLRecord( PageOptStartInterface_Line2( ti_Line), PageOptStartInterface_PosLine2( ti_Line), INTMIG_Color_NotSel ) break
//		case 5: IntMIG_OptionsControlString_KLPlay( PageOptStartInterface_Line2( ti_Line), PageOptStartInterface_PosLine2( ti_Line), INTMIG_Color_NotSel) break
////		case 0: IntMIG_OptionsInterfaceString_Viseur( PageOptStartInterface_Line2( ti_Line) , PageOptStartInterface_PosLine2( ti_Line), INTMIG_Color_NotSel) break
////		case 1: IntMIG_OptionsInterfaceString_Ammo( PageOptStartInterface_Line2( ti_Line), PageOptStartInterface_PosLine2( ti_Line), INTMIG_Color_NotSel) break
////		case 2: IntMIG_OptionsInterfaceString_Inventory( PageOptStartInterface_Line2( ti_Line), PageOptStartInterface_PosLine2( ti_Line), INTMIG_Color_NotSel ) break
////		case 3: IntMIG_OptionsControlString_KLRecord( PageOptStartInterface_Line2( ti_Line), PageOptStartInterface_PosLine2( ti_Line), INTMIG_Color_NotSel ) break
////		case 4: IntMIG_OptionsControlString_KLPlay( PageOptStartInterface_Line2( ti_Line), PageOptStartInterface_PosLine2( ti_Line), INTMIG_Color_NotSel) break
//		}
//	}
//	@mo_Texte OBJ_TextColorSet( PageOptStartInterface_Line(mi_Cur), 0, -1, INTMIG_Color_Sel )
//	@mo_Texte OBJ_TextColorSet( PageOptStartInterface_Line2(mi_Cur), 0, -1, INTMIG_Color_Sel )
//	
//	IntMIG_Text_FadeInMulti( mi_PageString, 20, 0.5, 0.0 )
//
//	// store parameters
//	mi_Opt_SaveInt[ 0 ] = @"univ" CAM_Viseur
//	mi_Opt_SaveInt[ 1 ] = @"univ" MENU_i_ShowAmmoLeft
//	mi_Opt_SaveInt[ 2 ] = @"univ" MENU_i_ShowInventory
//	mi_Opt_SaveInt[ 3 ] = @"univ" SND_gi_ShowSubtitle
//	mi_ExitValide = faux
//	IntMIG_Text_FadeInMulti( mi_PageString, 20, 0.5, 0.0 )
//}
//else if (INTMIG_LeavePage_Start)
//{
//	IntMIG_Text_FadeOutMulti( mi_PageString, 20, 0.5 )
//	// restore parameters
//	if ( !mi_ExitValide )
//	{
//		@"univ" CAM_Viseur = mi_Opt_SaveInt[ 0 ]
//		@"univ" MENU_i_ShowAmmoLeft = mi_Opt_SaveInt[ 1 ]
//		@"univ" MENU_i_ShowInventory = mi_Opt_SaveInt[ 2 ]
//		@"univ" SND_gi_ShowSubtitle = mi_Opt_SaveInt[ 3 ]
//		SAVE_ValidateAl()
//	}
//}
//
//IntMIG_RestorePageParams()
//
//if ( mi_Exit || mi_ChangePage || mi_Cheat  )
//	return
//	
//ti_SaveCur = mi_Cur
//IntMIG_UpdateCur_Vertical( ti_Count, 1 )
//if (mi_Cur != ti_SaveCur )
//{
//	IntMIG_PlaySound( INTMIG_SOUND_SELECTION )
//	@mo_Texte OBJ_TextPivotSet( mi_PageString + 1, PageOptStartInterface_PosSouligne( mi_Cur ) )
//	IntMIG_Text_ChangeColor( PageOptStartInterface_Line( ti_SaveCur ), INTMIG_Color_Sel, INTMIG_Color_NotSel, 0.25, 0.0 )
//	IntMIG_Text_ChangeColor( PageOptStartInterface_Line( mi_Cur ), INTMIG_Color_NotSel, INTMIG_Color_Sel, 0.25, 0.0 )
//	IntMIG_Text_ChangeColor( PageOptStartInterface_Line2( ti_SaveCur ), INTMIG_Color_Sel, INTMIG_Color_NotSel, 0.25, 0.0 )
//	IntMIG_Text_ChangeColor( PageOptStartInterface_Line2( mi_Cur ), INTMIG_Color_NotSel, INTMIG_Color_Sel, 0.25, 0.0 )
//}
//
//if ( joy_cancel  || joy_valide )
//{
//	if (joy_valide ) mi_ExitValide = vrai
//	IntMIG_PlaySound( INTMIG_SOUND_CANCEL )
//	SAVE_ValidateAl()
//	INTMIG_ChangePage(  "IntMIG_Page_OptStart" , 3 )
//	return
//}
//	
//if ( joy_left || joy_right )
//{
//	IntMIG_PlaySound( INTMIG_SOUND_VALIDE )
//	tv_Pos = PageOptStartInterface_PosLine2( mi_Cur )
//	switch ( mi_Cur )
//	{
//		case 0: 
//				if (@"univ" SND_gi_ShowSubtitle)
//					@"univ" SND_gi_ShowSubtitle = 0
//				else
//					@"univ" SND_gi_ShowSubtitle = 1
//				IntMIG_OptionsAudioSring_Subtitle( PageOptStartInterface_Line2( mi_Cur), tv_Pos, INTMIG_Color_Sel)
//				SAVE_ValidateAl()
//				break
//
//		case 1:
//				if (	@"univ" CAM_Viseur )
//					@"univ" CAM_Viseur = 0
//				else
//					@"univ" CAM_Viseur = 1
//				IntMIG_OptionsInterfaceString_Viseur( PageOptStartInterface_Line2( mi_Cur ), tv_Pos, 0xFFFFFF)
//				SAVE_ValidateAl()
//				break
//			
//		case 2:
//				if (	@"univ" MENU_i_ShowAmmoLeft )
//					@"univ" MENU_i_ShowAmmoLeft = 0
//				else
//					@"univ" MENU_i_ShowAmmoLeft = 1
//				IntMIG_OptionsInterfaceString_Ammo( PageOptStartInterface_Line2( mi_Cur ), tv_Pos, 0xFFFFFF)
//				SAVE_ValidateAl()
//				break
//
//		case 3:
//				if (	@"univ" MENU_i_ShowInventory )
//					@"univ" MENU_i_ShowInventory = 0
//				else
//					@"univ" MENU_i_ShowInventory = 1
//				IntMIG_OptionsInterfaceString_Inventory( PageOptStartInterface_Line2( mi_Cur ), tv_Pos, 0xFFFFFF)
//				SAVE_ValidateAl()
//				break
//	}
//}
//