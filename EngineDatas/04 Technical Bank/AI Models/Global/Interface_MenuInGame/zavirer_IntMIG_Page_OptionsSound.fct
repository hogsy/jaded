//#include "Interface_MenuInGame_defs.var"
//
//int			ti_Line, ti_cross, ti_Group
//int			ti_Texte
//int			ti_Col
//int			ti_SaveCur
//float		tf_Val
//vector	tv_Pos
//
//if (!IntMIG_SetPageParams())
//	return
//if (!mo_Texte)
//	return
//	
//if (INTMIG_EnterPage_Start)
//{
//	IntMIG_ResetTexte( mi_PageString, 20 )
//	ti_Texte = mi_PageString
//
//	IntMIG_SetText( ti_Texte, INTMIG_TXG, INTMIG_TEXT_OptionsSound, cvector(0.5, 0.1, 0),  1.5, 5, -1, 0xFFFFFF, 0 )
//	ti_Texte++
//	
//	tv_Pos = cvector( 0.8, 0.3, 0)
//	for (ti_Line = 0; ti_Line < 6; ti_Line++)
//	{
//		ti_Col = IntMIG_GetTextLineColor( ti_Line )
//		IntMIG_SetText( ti_Texte, INTMIG_TXG, INTMIG_TEXT_OptionsSound  + 1 + ti_Line, tv_Pos,  0.0, 6, -1, ti_Col, 0 )
//		ti_Texte++
//		
//		tv_Pos.x = 0.2
//		switch ( ti_Line )
//		{
//		case 0: IntMIG_OptionsAudioSring_Type( mi_PageString + 10 + ti_Line, tv_Pos, ti_Col) break
//		case 1: IntMIG_OptionsAudioSring_Subtitle( mi_PageString + 10 + ti_Line, tv_Pos, ti_Col) break
//		case 2: IntMIG_OptionsAudioSring_Volume( mi_PageString + 10 + ti_Line, tv_Pos, ti_Col, SND_M_GetUserVol( SND_Cte_UserGrpMaster ) ) break
//		case 3: IntMIG_OptionsAudioSring_Volume( mi_PageString + 10 + ti_Line, tv_Pos, ti_Col, SND_M_GetUserVol( SND_Cte_UserGrpDialog  ) ) break
//		case 4: IntMIG_OptionsAudioSring_Volume( mi_PageString + 10 + ti_Line, tv_Pos, ti_Col, SND_M_GetUserVol( SND_Cte_UserGrpMusic ) ) break
//		case 5: IntMIG_OptionsAudioSring_Volume( mi_PageString + 10 + ti_Line, tv_Pos, ti_Col, SND_M_GetUserVol( SND_Cte_UserGrpSpecialFX ) ) break
//		}
//		tv_Pos.x = 0.8
//		
//		tv_Pos.y += 0.08
//	}
//	
//	IntMIG_SetText( ti_Texte, INTMIG_TXG, INTMIG_TEXT_ChangeX, cvector( 0.4, 0.95, 0),  0.0, 6, -1, 0x808080, 0 )
//	IntMIG_SetText( ti_Texte + 1, INTMIG_TXG, INTMIG_TEXT_BackT, cvector( 0.6, 0.95, 0),  0.0, 4, -1, 0x808080, 0 )
//	
//	IntMIG_Text_FadeInMulti( mi_PageString, 20, 0.5, 0.0 )
//
//}
//else if (INTMIG_LeavePage_Start)
//{
//	IntMIG_Text_FadeOutMulti( mi_PageString, 20, 0.5 )
//}
//
//IntMIG_RestorePageParams()
//
//if ( mi_Exit || mi_ChangePage || mi_Cheat)
//	return
//
//ti_cross = faux
//if (mi_Cur < 2) ti_cross = vrai
//
//ti_SaveCur = mi_Cur
//IntMIG_UpdateCur_Vertical( 6, 1 )
//if (mi_Cur != ti_SaveCur )
//{
//	IntMIG_Text_ChangeColor( mi_PageString + 1 + ti_SaveCur, INTMIG_Color_Sel, INTMIG_Color_NotSel, 0.25, 0.0 )
//	IntMIG_Text_ChangeColor( mi_PageString + 1 + mi_Cur, INTMIG_Color_NotSel, INTMIG_Color_Sel, 0.25, 0.0 )
//	IntMIG_Text_ChangeColor( mi_PageString + 10 + ti_SaveCur, INTMIG_Color_Sel, INTMIG_Color_NotSel, 0.25, 0.0 )
//	IntMIG_Text_ChangeColor( mi_PageString + 10 + mi_Cur, INTMIG_Color_NotSel, INTMIG_Color_Sel, 0.25, 0.0 )
//	IntMIG_PlaySound( INTMIG_SOUND_SELECTION )
//}
//
//
//if (ti_cross && (mi_Cur >= 2) )
//	IntMIG_SetText( mi_PageString + 7, INTMIG_TXG, INTMIG_TEXT_ChangeLLR, cvector( 0.4, 0.95, 0),  0.0, 6, -1, 0x808080, 0 )
//if (!ti_cross && (mi_Cur < 2) )
//	IntMIG_SetText( mi_PageString + 7, INTMIG_TXG, INTMIG_TEXT_ChangeX, cvector( 0.4, 0.95, 0),  0.0, 6, -1, 0x808080, 0 )
//
//if ( joy_cancel  )
//{
//	IntMIG_PlaySound( INTMIG_SOUND_CANCEL )
//	SAVE_ValidateAl()
//	INTMIG_ChangePage(  "IntMIG_Page_Options" , 0 )
//	return
//}
//	
//if ( joy_valide )
//{
//	switch ( mi_Cur )
//	{
//		case 0:
//				if ( @"univ" SND_gi_RenderMode == SND_Cte_RenderStereo )
//					SND_M_SetRenderMode( SND_Cte_RenderMono )
//				else
//					SND_M_SetRenderMode( SND_Cte_RenderStereo )
//				TIME_Wait( 0.1)
//				tv_Pos = @mo_Texte OBJ_TextPivotGet( mi_PageString + 10 + mi_Cur )
//				IntMIG_OptionsAudioSring_Type( mi_PageString + 10 + mi_Cur, tv_Pos, 0xFFFFFF)
//				IntMIG_PlaySound( INTMIG_SOUND_VALIDE )
//				break
//			
//		case 1: 
//				if (@"univ" SND_gi_ShowSubtitle)
//					@"univ" SND_gi_ShowSubtitle = 0
//				else
//					@"univ" SND_gi_ShowSubtitle = 1
//				tv_Pos = @mo_Texte OBJ_TextPivotGet( mi_PageString + 10 + mi_Cur )
//				IntMIG_OptionsAudioSring_Subtitle( mi_PageString + 10 + mi_Cur, tv_Pos, 0xFFFFFF)
//				IntMIG_PlaySound( INTMIG_SOUND_VALIDE )
//				SAVE_ValidateAl()
//				break
//	}
//}
//
//if ( (mi_Cur >= 2) && (mi_Cur <= 5 ) && (joy_left_real || joy_right_real) )
//{
//	IntMIG_PlaySound( INTMIG_SOUND_JAUGELOOP )
//	switch ( mi_Cur )
//	{
//		case 2: ti_Group = SND_Cte_UserGrpMaster  break
//		case 3: ti_Group = SND_Cte_UserGrpDialog  break
//		case 4: ti_Group = SND_Cte_UserGrpMusic  break
//		case 5: ti_Group = SND_Cte_UserGrpSpecialFX  break
//	}
//	
//	tf_Val = SND_M_GetUserVol ( ti_Group )
//	if (joy_left_real)
//	{
//		tf_Val -= 0.01
//		if (tf_Val < 0 ) tf_Val = 0
//	}
//	else
//	{
//		tf_Val += 0.01
//		if (tf_Val > 1) tf_Val = 1
//	}
//	SND_M_SetUserVol( ti_Group, tf_Val )
//	
//	//tv_Pos = cvector( 0.2, 0.3 + (mi_Cur * 0.08), 0)
//	tv_Pos = @mo_Texte OBJ_TextPivotGet( mi_PageString + 10 + mi_Cur )
//	switch ( mi_Cur )
//	{
//		case 2: IntMIG_OptionsAudioSring_Volume( mi_PageString + 10 + mi_Cur, tv_Pos, 0xFFFFFF, SND_M_GetUserVol( SND_Cte_UserGrpMaster ) ) break
//		case 3: IntMIG_OptionsAudioSring_Volume( mi_PageString + 10 + mi_Cur, tv_Pos, 0xFFFFFF, SND_M_GetUserVol( SND_Cte_UserGrpDialog  ) ) break
//		case 4: IntMIG_OptionsAudioSring_Volume( mi_PageString + 10 + mi_Cur, tv_Pos, 0xFFFFFF, SND_M_GetUserVol( SND_Cte_UserGrpMusic ) ) break
//		case 5: IntMIG_OptionsAudioSring_Volume( mi_PageString + 10 + mi_Cur, tv_Pos, 0xFFFFFF, SND_M_GetUserVol( SND_Cte_UserGrpSpecialFX ) ) break
//	}
//}
//
//