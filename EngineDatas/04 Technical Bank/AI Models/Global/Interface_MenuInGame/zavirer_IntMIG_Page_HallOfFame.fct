//#include "Interface_MenuInGame_defs.var"
//
//int			ti_Line, ti_cross, ti_Group, ti_InHOF
//int			ti_Texte, ti_Who
//int			ti_Col
//int			ti_SaveCur
//float		tf_Val
//vector	tv_Pos
//
//if (!IntMIG_SetPageParams())
//	return
//if (!mo_Texte)
//	return
//	
//if (INTMIG_EnterPage_Start)
//{
//	ti_InHOF = 0
//	IntMIG_ResetTexte( mi_PageString, 30 )
//	IntMIG_HOF_Init( mi_HOF_Map, mi_ScoreMap ) 
//	ti_Texte = mi_PageString
//	
//	IntMIG_SetText( ti_Texte, INTMIG_TXG, INTMIG_TEXT_SCOREGEN, cvector(0.5, 0.02, 0),  1.2, 1, -1, 0xFFFFFF, 0 )
//	ti_Texte++
//	if ( mi_StartMenu )
//	{
//		IntMIG_SetText( ti_Texte, INTMIG_MAPNAME_TXG, INTMIG_MAPNAME_TXT + @"univ" PROG_ai_MapTexte[ mi_HOF_Map ], cvector(0.5, 0.1, 0),  1.2, 1, -1, 0xFFFFFF, 0 )
//		ti_Texte++
//	}
//
//	tv_Pos = cvector( 0, 0.3, 0 )
//	for (ti_Line = 0; ti_Line < 5; ti_Line++ )
//	{
//		ti_Col = 0xFFFFFF
//		tv_Pos.x = 0.5
//		ti_Who = mai_HOF_Texte[ ti_Line ]
//		if ( ti_Who < 1000 )
//			IntMIG_SetText( ti_Texte, INTMIG_HOF_TXG, INTMIG_HOF_TXT + ti_Who, tv_Pos,  0.0, 6, -1, 0xFFFFFF, 0 )
//		else
//		{
//			IntMIG_CreateText_Start( ti_Texte )
//			@mo_Texte OBJ_TextSet( ti_Texte, SAVE_HeaderName( ti_Who - 1000) )
//			if ( (ti_Who - 1000) == @"univ" MENU_ProfileIndex )
//			{
//				ti_InHOF = 1
//				ti_Col = 0xFF
//			}
//			IntMIG_CreateText_End( ti_Texte, tv_Pos, 0.0, 6, -1, ti_Col, 0, 0 )
//		}
//		ti_Texte++
//		
//		tv_Pos.x = 0.55
//		IntMIG_CreateText_Start( ti_Texte )
//		@mo_Texte OBJ_TextIntInsert( ti_Texte, -1, mai_HOF_Score[ ti_Line ] )
//		IntMIG_CreateText_End( ti_Texte, tv_Pos, 0.0, 4, -1, ti_Col, 0, 0 )
//		ti_Texte++
//		tv_Pos.y += 0.07
//	}
//	
//	tv_Pos.y += 0.07
//	tv_Pos.x = 0.5
//	ti_Col = 0xFF7F7FFF
//	IntMIG_SetText( ti_Texte, INTMIG_TXG, INTMIG_TEXT_SCOREGEN + 3, tv_Pos, 0.0, 6,-1,  ti_Col, 0 )
//	ti_Texte++
//	tv_Pos.x = 0.55
//	IntMIG_CreateText_Start( ti_Texte )
//	@mo_Texte OBJ_TextIntInsert( ti_Texte, -1, IntMIG_HOF_GetPlayerOverallScore() )
//	IntMIG_CreateText_End( ti_Texte, tv_Pos, 0.0, 4, -1, ti_Col, 0, 0 )
//	ti_Texte++
//	
//	tv_Pos.y += 0.07
//	tv_Pos.x = 0.5
//	IntMIG_SetText( ti_Texte, INTMIG_TXG, INTMIG_TEXT_SCOREGEN + 4, tv_Pos, 0.0, 6,-1,  ti_Col, 0 )
//	ti_Texte++
//	tv_Pos.x = 0.55
//	IntMIG_CreateText_Start( ti_Texte )
//	@mo_Texte OBJ_TextIntInsert( ti_Texte, -1, IntMIG_HOF_GetPlayerOverallScore() )
//	IntMIG_CreateText_End( ti_Texte, tv_Pos, 0.0, 4, -1, ti_Col, 0, 0 )
//	ti_Texte++
//
//
//	if (@"univ" PROG_i_MapReplay && mi_StartMenu )
//		IntMIG_SetText( ti_Texte, INTMIG_TXG, INTMIG_TEXT_Xcontinue, cvector( 0.5, 0.95, 0),  0.0, 5, -1, 0x808080, 0 )
//	else
//	{
//		IntMIG_SetText( ti_Texte, INTMIG_TXG, INTMIG_TEXT_Xcontinue, cvector( 0.4, 0.95, 0),  0.0, 6, -1, 0x808080, 0 )
//		IntMIG_SetText( ti_Texte + 1, INTMIG_TXG, INTMIG_TEXT_Tback, cvector( 0.6, 0.95, 0),  0.0, 4, -1, 0x808080, 0 )
//	}
//	
//	IntMIG_Text_FadeInMulti( mi_PageString, 20, 0.5, 0.0 )
//}
//else if (INTMIG_LeavePage_Start)
//{
//	IntMIG_Text_FadeOutMulti( mi_PageString, 20, 0.5 )
//}
//
//IntMIG_RestorePageParams()
//
//if ( mi_Exit || mi_ChangePage || mi_Cheat)
//	return
//
//if ( joy_cancel  )
//{
//	if (@"univ" PROG_i_MapReplay && mi_StartMenu)
//	{
//		IntMIG_PlaySound( INTMIG_SOUND_VALIELOCK )
//	}
//	else
//	{
//		IntMIG_PlaySound( INTMIG_SOUND_CANCEL )
//		mi_HOF_Goto = 0
//		INTMIG_ChangePage( "IntMIG_Page_ScoreChange" , mi_Cur )
//	}
//	return
//}
//	
//if ( joy_valide )
//{
//	IntMIG_PlaySound( INTMIG_SOUND_VALIDE )
//	INTMIG_ChangePage(  "IntMIG_Page_ScoreLeaveToMap" , mi_Cur )
//}
//