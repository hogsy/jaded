//------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
//
//------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#ifdef _FINAL_
#define M_Check_MSGID 
#endif
#ifndef _FINAL_
#define M_Check_MSGID \
{\
	if (! MSG_GlobalIsValid(MSG_ID))\
		DBG_BreakPoint()\
}
#endif
//------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
//
//------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
//--
procedure void SPEECH_RequestPost
(
	object	argo_Sender, 
	object 	argo_Target, 
	int 		argi_TxgKey, 
	int 		argi_EntryKey, 
	float 		argf_TimeOut, 
	int 		argi_Priority, 
	int 		argi_RandomSize,
	int			argi_ListId,
	int			argi_ListIndex,
	int			argi_Flags
)
{
	message	t_msg
	MSG_SetNull( t_msg)

	if(argi_EntryKey == 0xFFFFFFFF) return
	if(argi_TxgKey == 0xFFFFFFFF) return
	
	t_msg.msg_gao1 = argo_Target		
	t_msg.msg_vec1 = cvector(argi_RandomSize, argi_Priority, argf_TimeOut)
	t_msg.msg_int1 = argi_TxgKey
	t_msg.msg_int2 = argi_EntryKey
	t_msg.msg_int3 = argi_ListId
	t_msg.msg_int4 = argi_ListIndex
	t_msg.msg_int5 = argi_Flags
	
	
	@argo_Sender MSG_GlobalSend( C_EVENT_TYPE_Speech, Cf_EVENT_Duree_1Trame, t_msg, C_EVENT_EOFADD)
	
	return
}
//--
procedure int SPEECH_FlagsGet(  messageid MSG_ID)
{
	M_Check_MSGID
	return( MSG_GlobalGetMsg( MSG_ID).msg_int5)
}
//--
procedure object SPEECH_SenderGet(  messageid MSG_ID)
{
	M_Check_MSGID
	return( MSG_GlobalGetMsg( MSG_ID).msg_sender)
}
//--
procedure object SPEECH_TargetGet(  messageid MSG_ID)
{
	M_Check_MSGID
	return( MSG_GlobalGetMsg( MSG_ID).msg_gao1)
}
//--
procedure int SPEECH_ListIdGet(  messageid MSG_ID)
{
	M_Check_MSGID
	return( MSG_GlobalGetMsg( MSG_ID).msg_int3)
}
//--
procedure int SPEECH_ListIndexGet(  messageid MSG_ID)
{
	M_Check_MSGID
	return( MSG_GlobalGetMsg( MSG_ID).msg_int4)
}
//--
procedure int SPEECH_TxgKeyGet(  messageid MSG_ID)
{
	M_Check_MSGID
	return( MSG_GlobalGetMsg( MSG_ID).msg_int1)
}
//--
procedure int SPEECH_EntryKeyGet(  messageid MSG_ID)
{
	M_Check_MSGID
	return( MSG_GlobalGetMsg( MSG_ID).msg_int2)
}
//--
procedure float SPEECH_TimeOutGet(  messageid MSG_ID)
{
	vector vv
	M_Check_MSGID
	vv = MSG_GlobalGetMsg( MSG_ID).msg_vec1
	return( vv.z)
}
//--
procedure int SPEECH_PriorityGet(  messageid MSG_ID)
{
	vector vv
	M_Check_MSGID
	vv = MSG_GlobalGetMsg( MSG_ID).msg_vec1
	return( vv.y)
}
//--
procedure int SPEECH_RandomSizeGet(  messageid MSG_ID)
{
	vector vv
	M_Check_MSGID
	vv = MSG_GlobalGetMsg( MSG_ID).msg_vec1
	return( vv.x)
}
//--
procedure int SPEECH_ObjectIsSpeaking(object gao)
{
	int ti_track
	
	if( !gao) return 0
	
	for( ti_track = 0; ti_track<Cte_DialogNb; ti_track++)
	{
		if( !  @ get_speech ao_current_target[ti_track] ) continue
		if( gao == @ get_speech ao_current_target[ti_track] ) return 1
	}
	return 0
}
//--
procedure int SPEECH_ObjectHasContent(object gao)
{
	int ti_track
	
	if( !gao) return 0
	
	for( ti_track = 0; ti_track<Cte_DialogNb; ti_track++)
	{
		if( gao != @ get_speech ao_current_target[ti_track] ) continue
		return ( @ get_speech mai_CurrentHasContent[ti_track] ) 
	}
	
	return 0
}
//--
procedure string SPEECH_ObjectGetContent(object gao)
{
	int ti_track
	string ts 
	
	ts = "<notext>"
	
	if( !gao) return ts
	
	for( ti_track = 0; ti_track<Cte_DialogNb; ti_track++)
	{
		if( gao != @ get_speech ao_current_target[ti_track] ) continue
		return ( @ get_speech mas_CurrentContent[ti_track] ) 
	}
	
	return ts
}
//--
procedure float SPEECH_ObjectGetSoundDuration(object gao)
{
	int ti_track
	
	if( !gao) return 0.0
	
	for( ti_track = 0; ti_track<Cte_DialogNb; ti_track++)
	{
		if( gao != @ get_speech ao_current_target[ti_track] ) continue
		return ( @ get_speech af_current_sndtime[ti_track] ) 
	}
	
	return 0.0
}
//--
procedure float SPEECH_HumanGetLastTime(int i_Human)
{
	if(i_Human < C_ID_Kong) return 0.0
//	if(C_ID_Jimmy < i_Human) return 0.0

	return @ get_speech maf_HumanTxtLastTime[i_Human]
}
//--
procedure int SPEECH_HumanGetExpressionIdx(object gao)
{
	int ti_track
	
	if( !gao) return -1
	

	for( ti_track = 0; ti_track<Cte_DialogNb; ti_track++)
	{
		if( gao != @ get_speech ao_current_target[ti_track] ) continue
		return (  TEXT_FacialIdxGet( @ get_speech at_current_text[ti_track] ) )
	}
	
	return -1
}
//--
procedure int SPEECH_HumanGetLipsIdx(object gao)
{
	int ti_track
	
	if( !gao) return -1
	

	for( ti_track = 0; ti_track<Cte_DialogNb; ti_track++)
	{
		if( gao != @ get_speech ao_current_target[ti_track] ) continue
		return (  TEXT_LipsIdxGet( @ get_speech at_current_text[ti_track] ) )
	}
	
	return -1
}
//--
procedure int SPEECH_HumanGetAnimIdx(object gao)
{
	int ti_track
	
	if( !gao) return -1
	

	for( ti_track = 0; ti_track<Cte_DialogNb; ti_track++)
	{
		if( gao != @ get_speech ao_current_target[ti_track] ) continue
		return (  TEXT_AnimIdxGet( @ get_speech at_current_text[ti_track] ) )
	}
	
	return -1
}
//--
procedure int SPEECH_HumanGetTextKey(object gao)
{
	int ti_track
	
	if( !gao) return -1
	

	for( ti_track = 0; ti_track<Cte_DialogNb; ti_track++)
	{
		if( gao != @ get_speech ao_current_target[ti_track] ) continue
		return (  TEXT_EntryGet( @ get_speech at_current_text[ti_track] ) )
	}
	
	return -1
}


//------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
// AFFICHAGE DE TEX TE
//------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
procedure void ENCART_Show( object po_Texte, text pt_Texte, vector pv_Pos, int pi_Justify)
{
	int		ti_effect
	int		ti_txe, ti_txg
	text	pt_Texte1

	pt_Texte1 = pt_Texte
	
	//	texte relevé pour Gamecube
	ti_effect = AI_GetCurSystem()
	if ( (ti_effect == 2) || (ti_effect == 3) )
	{
		ti_txg = TEXT_FileGet( pt_Texte1 )
		ti_txe = TEXT_EntryGet( pt_Texte1 )
		if ( ti_txe <= 0xD00061EB )
			ti_txe -= 0xD00061E6
		else if (ti_txe == 0xD000688A)
			ti_txe = 6
		else if (ti_txe == 0xD00068DA)
			ti_txe = 7
		else if (ti_txe == 0xD00068DB)
			ti_txe = 8
		else if ( ti_txe <= 0xD0006DD5 )
			ti_txe -= 0xD0006DCE - 9
		else if ( ti_txe <= 0xD0006DE6 )
			ti_txe -= 0xD0006DE4 - 17
		else if (ti_txe == 0xD0006DE9 )
			ti_txe = 20
		else if (ti_txe <= 0xD0006DEC)
			ti_txe -= 0xD0006DEB - 21
		else if (ti_txe <= 0xD0006DF1 )
			ti_txe -= 0xD0006DF0 - 23
		else if (ti_txe == 0xD0006F20)
			ti_txe = 25
		else if (ti_txe == 0xD0006F46)
			ti_txe = 26
		else if (ti_txe == 0xD0006F4A)
			ti_txe = 27
		else if (ti_txe == 0xD0006F53)
			ti_txe = 28
		else if (ti_txe == 0xD0008062	)
			ti_txe = 29
		else if (ti_txe <= 0xD0008069)
			ti_txe -= 0xD0006DF0 - 30
		else if (ti_txe == 0xD0008105) 
			ti_txe = 33
		else if (ti_txe == 0xD0008107)
			ti_txe = 34
		else if (ti_txe == 0xD000810D)
			ti_txe = 35
		else if (ti_txe == 0xD0008116)
			ti_txe = 36
		else
			ti_txe -= 0x490304BD - 37
			
		if ( (ti_txe >= 0) && (ti_txe < 50) )
		{
			if ( ti_effect	== 2)
			{
				pv_Pos.y -= 0.1
				ti_txe += 0x490304CA
				pt_Texte1 = TEXT_Get( ti_txg, ti_txe )
			}
			else //if (ti_effect == 3 )
			{
				ti_txe += 0x490304FC
				pt_Texte1 = TEXT_Get( ti_txg, ti_txe )
			}
		}
	}
	
	@po_Texte OBJ_TextSet( STRINGAME_ENCART, pt_Texte1 )
	@po_Texte OBJ_TextFlagSet( STRINGAME_ENCART, 256 + 32 + 16 + pi_Justify )
	@po_Texte OBJ_TextMaxWidthSet( 0.8 )
	@po_Texte OBJ_TextSizeSet( STRINGAME_ENCART, 0, -1, cvector( -1, 0, 0) )
	@po_Texte OBJ_TextMaxWidthSet( 0 )
	@po_Texte OBJ_TextPivotSet( STRINGAME_ENCART, pv_Pos )
	@po_Texte OBJ_TextFrameSet( STRINGAME_ENCART, 9, 33 )
	@po_Texte OBJ_TextFrameColorSet( STRINGAME_ENCART, 0xFFFFFFFF )
	@po_Texte OBJ_TextFrameBorderSet( STRINGAME_ENCART, 0.02)
	@po_Texte OBJ_TextAlign( STRINGAME_ENCART, 0, -1, 1 )

	ti_effect = @po_Texte OBJ_TextEffectAdd( 4, STRINGAME_ENCART, 0, -1 )
	@po_Texte OBJ_TextEffectSeti( ti_effect, 1, 1)
	@po_Texte OBJ_TextEffectSeti( ti_effect, 400, 0)
	@po_Texte OBJ_TextEffectSeti( ti_effect, 401, 0xFFFFFFFF)
	@po_Texte OBJ_TextEffectSetf( ti_effect, 450, 0.3)
	@po_Texte OBJ_TextEffectSetf( ti_effect, 451, 0.0 )
}

procedure void ENCART_Hide( object po_Texte, float pf_Delay )
{
	int 	ti_effect 
	ti_effect = @po_Texte OBJ_TextEffectAdd( 1, STRINGAME_ENCART, 0, -1 )
	@po_Texte OBJ_TextEffectSeti( ti_effect, 1, 1)
	@po_Texte OBJ_TextEffectSetf( ti_effect, 150, 0.1)
	@po_Texte OBJ_TextEffectSetf( ti_effect, 151, pf_Delay )
}

procedure void ENCART_HideDialog( object po_Texte )
{
	@po_Texte OBJ_TextFlagSet( STRINGAME_DLG0, @po_Texte OBJ_TextFlagGet( STRINGAME_DLG0 ) | 1024 )
	@po_Texte OBJ_TextFlagSet( STRINGAME_DLG1, @po_Texte OBJ_TextFlagGet( STRINGAME_DLG1 ) | 1024 )
}