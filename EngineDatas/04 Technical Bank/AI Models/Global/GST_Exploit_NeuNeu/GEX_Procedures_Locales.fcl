#include "GEX_Define.var"

procedure_local int ProcGEX_Test_Mort( byrefarr object to_gao )
{
	int			ti_OK
	object	to_obj
	int			ti_loop 

	ti_OK = vrai
	for (ti_loop = 0; ti_loop < 10; ti_loop++)
	{
		to_obj = to_gao[ti_loop]
		if (to_obj)
		{
			// Il y a un Gao
			ti_OK &= @to_obj OBJ_CapaTest(OBJ_Capa_15)

			if (	!ti_OK )
				break
		}
	}
	return ( ti_OK )
}

procedure_local int ProcGEX_Test_Exploit()
{
	int		ti_loop
	int		ti_munition
	int		ti_ok 
	if (@"univ" Cheat_i_ModeNeuneuExploit == 1)
		return ( vrai )
	else if ( @"univ" i_death_exploit >= 2 )
		return ( faux )
	else
	{
		// On devrait etre en mode NeuNeu s'il y a un Gao Ennemi de defini
		for (ti_loop = 0; ti_loop < 10; ti_loop++)
		{
			if ( o_Nmi_ModeExploit[ti_loop] )
			{
				ti_ok = faux
				switch (i_type_exploit)
				{
					case 0 :		// Temps
						if (f_duree <= f_duree_max)
							ti_ok = vrai
						break
					case 1 :		// Nbr de Balles
						ti_munition = @"univ" i_weapon_ammunition[ i_arme_type ][ C_ID_Joueur ]
						ti_munition += @"univ" i_weapon_ammunition_reserve[ i_arme_type ][ C_ID_Joueur ]
						if (ti_munition >= i_balle_mini_restante)
							ti_ok = vrai
						break
				}

				if (	ti_ok )
				{
					// OK on rentre en Exploit
					i_mode = Ci_Exploit

					@"univ" i_death_exploit ++	 // Rajoute un exploit des fois qu'on meurt

					if (i_log_info)
					{
						DBG_TraceObject(OBJ_Me())
						DBG_TraceString(" Execution en mode Exploit\n")
					}

					// Exec toutes les inits Exploit
					for (ti_loop = 0; ti_loop < 5; ti_loop++)
					{
						if (AI_TriggerIsValid(TriggerExec_ModeExploit[ti_loop]))
							call_trigger(TriggerExec_ModeExploit[ti_loop])
						else
							break
					}
					return ( vrai )
				}
				else
					return ( faux )
			}
		}
	}
	return (faux)
}