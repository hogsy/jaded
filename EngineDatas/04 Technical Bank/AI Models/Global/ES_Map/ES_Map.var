// Define at least one function in a track
// function track0 = "name"
// function track1 = "name"
function track2 = "ES_EnterMap"
// function track3 = "name"
// function track4 = "name"


// Capa 15 : ES qui a servi d'entrée dans la map.
// Capa 14 : Ce checkpoint a déjà été validé (dans le cas d'un CP qui a i_SF_NePlusJamaisRefaireCP a vrai)


separator "--- ENTREE de Map---"
int			des_je_fais_entree_de_map	= faux_vrai						// Gestion Oui ou Non de l'entree de map
int			des_numero_de_l_entree		= 0 								// N° de l'ENTREE
int			des_numero_secteur = 1											// N° du SECTEUR
object	des_pos_RM						=	nobody						// Pos de RM
object	des_pos_camera					=	nobody						// Pos de la Kamera
trigger	des_exec_enter[5]													// Trigger Executé si c'est l'ES qui fait Entrée de Map
object	des_teleport_enter[10]												// Teleporte le Gao0 et le Gao1, le Gao2 sur le GAO3...
int			des_montures = enum_toutes_les_montures				// Id des montures

separator "--- Apres ENTREE ---"
int					des_mode = enum("SORTIE de MAP" 0 "CHECKPOINT" 1 "DESTRUCTION" 2)		// Gestion Oui ou Non de la sortie de map
object			des_o_perso_detect											// Perso Specifique a detecter pour les ES/CP (Par defaut c'est le MainActor)

separator "--- SORTIE de Map ---"
trigger			Trigger_EX														// Trigger qui valide l'ES
int					i_EX_Test_BV_Actif						= faux_vrai		// Test BV pour valider l'ES ?
int					des_vers_map_numero										// N° de la MAP
int					des_vers_entree_numero									// N° de l'ENTREE
float				des_duree_fade 							= 0.4				// Durée du FADE
private int		des_i_exit			

separator	 "--- CHECKPOINT ---"
trigger			Trigger_CP														// Trigger qui valide le CP
int					i_CP_Test_BV_Actif						= faux_vrai		// Test BV pour valider le CP ?
int					i_TriggerANDBv							= vrai_faux		// Pour faire un AND entre BV & Trrigger
int					i_CP_Destruction_Apres_CP			= vrai_faux		// Est ce que je me detruit apres un CP
int					i_SF_NePlusJamaisRefaireCP		= vrai_faux		// Flag qui indique si l'acteur gere ou pas un SF de mort
private int		i_SF_AlreadyCP							= -1				// N° du SF (Alloué Dynamiquement)

private object	o_camera														// Gao de la camera (Kamera ou Camera)
private int		i_out_of_bv = vrai_faux										// Flag sortie de BV avant de tester l'entrée dans BV
private int		i_save_dump_done = vrai_faux
private int		world_ID
private int		world_key