int		EVT_func_i
int		EVT_func_i2
int		EVT_func_i3
int		EVT_suivant

// completer le tableau d'EVENT valid par la liste de ceux a valider

//EVT_func_i2 = 0																					
//while(  EVT_func_i2 < C_EVENT_Max_Elem && @get_Event Nb_Event_ToValid > 0)										
for( EVT_func_i2 = 0; EVT_func_i2 < C_EVENT_Max_Elem ; EVT_func_i2 ++)
{
	if ( Nb_Event_ToValid <= 0)
		break
	if ( !Valid_Type[EVT_func_i2])
	{
		// Une place dans le tableau, inserer un element ici
		EVT_func_i = Nb_Event_ToValid - 1
		
		// Recherche de la position ou inserer l EVENT dans la liste
//		EVT_func_i3 = 	Valid_IndiceDernierCellule	// Partir de la fin de la liste	
//		while(  @get_Event Valid_Precedent[EVT_func_i3]  != -1&& @get_Event Type[ EVT_func_i] > @get_Event Valid_Type[ EVT_func_i3])
		for ( EVT_func_i3 = Valid_IndiceDernierCellule; Type[ EVT_func_i] > Valid_Type[ EVT_func_i3]; EVT_func_i3  = Valid_Precedent[EVT_func_i3])
		{
			// Les event sont classé par type croissant( la liste se lie toujours du dernier element vers le premier)
			if ( Valid_Precedent[EVT_func_i3]  == -1)
				break
//			EVT_func_i3  = @get_Event Valid_Precedent[EVT_func_i3]
		}
		// il faut inserer l element apres la cellule en position EVT_func_i3
		AI_ClearStack()
		AddValidEvent( EVT_func_i2,
		Type[EVT_func_i],
		Filtre[EVT_func_i],
		PereDeLEvent[EVT_func_i],
		DureeDeVie[EVT_func_i],
		Position[EVT_func_i],
		Alfa[EVT_func_i],
		Size[EVT_func_i],
		Etat[EVT_func_i],
		Context[EVT_func_i],
		Target[EVT_func_i],
		TimeSpeed[EVT_func_i],
		Status[EVT_func_i],
		Float1[EVT_func_i],
		Float2[EVT_func_i],
		Vector1[EVT_func_i],
		Vector2[EVT_func_i],
		Int1[EVT_func_i],
		Int2[EVT_func_i],
		NumeroDeLEvent[EVT_func_i],														
		EVT_func_i3)		
		
		// Je suprime l EVENT du tableau des EVENT a valider	
		DelEvent( EVT_func_i)
		Nb_Event_ToValid --
	}
//	EVT_func_i2 ++	
}


if ( EVT_func_i2 >= C_EVENT_Max_Elem)																		
{	
	// Gestion d erreur
	push( -1)
	DBG_Error("liste pleine")
	return
}
if ( Nb_Event_ToValid > 0)
{	
	// Gestion d erreur
	push( -1)
	DBG_Error("tous les EVENT n'ont pas pu etre validé")
	return
}

Nb_Event_ToValid = 0 
