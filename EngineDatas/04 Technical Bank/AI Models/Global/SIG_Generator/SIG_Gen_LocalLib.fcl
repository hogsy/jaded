
#define AND	0
#define OR		1
#define XOR	2

#define M_OPERATOR(out, in, ope)\
	{\
		switch(ope)\
		{\
			case AND : out &= in  break\
			case OR : out |= in break\
			case XOR : out ^= in  break\
		}\
	}

procedure_local int SIG_TestTrig(trigger argt_0, int argi_ope01, trigger argt_1, int argi_ope12, trigger argt_2, int argi_ope23, trigger argt_3)
{
	int ti, ti_res
	
	ti_res =0
	ti = 0
	
	if( AI_TriggerIsValid(argt_0) )
	{
		if(call_trigger(argt_0)) ti_res = 1
		
		if( AI_TriggerIsValid(argt_1) )
		{
			if( call_trigger(argt_1) ) ti = 1
			M_OPERATOR(ti_res, ti, argi_ope01)
			
			if( AI_TriggerIsValid(argt_2) )
			{
				ti = 0
				if( call_trigger(argt_2) ) ti = 1
				M_OPERATOR(ti_res, ti, argi_ope12)
	
				if( AI_TriggerIsValid(argt_3) )
				{
					ti = 0
					if( call_trigger(argt_3) ) ti = 1
					M_OPERATOR(ti_res, ti, argi_ope23)				
				}			
			}		
		}	
	}
	
	return ti_res
}
