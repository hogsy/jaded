int			ti_i
int			ti_j
int			ti_k
int			ti_index
int			ti_position_nb

object	to_obj
object	tao_wp[10]

float		tf_dist
float		tf_test_dist
float		tf_scale

vector	tv_pos
vector	tv_normale
vector	tv1, tv2, tv3,tv4,tv_min, tv_max
vector	tav_BV[4]
vector	tv_scale

network	tn_net

int			ti_fatal
int			ti_priority
int			ti_current_system

int			ti_object_nb
int			ti_snp_object_nb
int			ti_ode_object_nb
int			ti_colmap_object_nb

BV_MinSet(Cv_NullVector)
BV_MaxSet(Cv_NullVector)
OBJ_PosSet(cvector(-1000000.0, -1000000.0, -1000000.0))

DBG_TraceEOL()
DBG_TraceString("==================================================================\n")
DBG_TraceString("=========================== LIST MANAGER ==========================\n")
DBG_TraceString("==================================================================\n")
DBG_TraceEOL()

ti_fatal = faux
ti_snp_object_nb = 0
ti_ode_object_nb = 0
ti_colmap_object_nb = 0

ti_object_nb = WOR_GetNumObject(0)
for (ti_i = 0; ti_i < ti_object_nb; ti_i++)
{
	AI_ClearStack()

	to_obj = WOR_GetObject(0, ti_i)
	if (to_obj)
	{
		if (AI_GetCurSystem() == Ci_CurSystem_Editeur)
		{
//			if (@to_obj OBJ_FlagsControlGet() & OBJ_C_ControlFlag_AlwaysActive)
//			{
//				DBG_TraceStringCanal("Obj Always Active: ", 2)
//				DBG_TraceObjectCanal(to_obj, 2)
//				DBG_TraceEOLCanal(2)
//			}
	
			if (@to_obj OBJ_FlagsStatusGet() & 0x80)
				ti_snp_object_nb++
	
			if (@to_obj OBJ_FlagsIdentityTest(OBJ_C_IdentityFlag_ODE))
				ti_ode_object_nb++
				
			if (@to_obj OBJ_FlagsIdentityTest(OBJ_C_IdentityFlag_ColMap))
			{
				ti_colmap_object_nb++
				tv_scale = @to_obj OBJ_ScaleGet()
				if ( tv_scale.x != tv_scale.y || tv_scale.y != tv_scale.z )
				{
					DBG_TraceEOL()
					DBG_Warning("ARTUNG COLMAP :)")
					DBG_TraceString("GAO: ")
					DBG_TraceObject(to_obj)
					DBG_TraceString(" has a Scaled Colmap (This is EVIL) ")
					DBG_TraceVector(@to_obj OBJ_ScaleGet())
					DBG_TraceEOL()
					DBG_TraceEOL()
					ti_fatal = vrai
				}
			}
	
			if (@to_obj OBJ_FlagsIdentityTest(OBJ_C_IdentityFlag_ColMap) && ( ! @to_obj  OBJ_FlagsIdentityTest(OBJ_C_IdentityFlag_ODE)  && @to_obj OBJ_FlagsControlGet() & OBJ_C_ControlFlag_RayInsensitive) )
			{
				DBG_TraceString("WARNING : Cet objet est ray insensitve et a une colmap : ")
				DBG_TraceObject(to_obj)
				DBG_TraceEOL()
			}
		}

		if (@to_obj AI_IsModel(get_PNJ_Lapin_path))
		{
			tn_net = @get_PNJ_Lapin_path to_obj Territory_Path
			if (tn_net)
			{
				ti_index = ARR_LIB_NetworkSearch(&an_bv_net[0], i_bv_net_nb, tn_net)
				if (ti_index == -1)
				{
					an_bv_net[i_bv_net_nb] = tn_net
					i_bv_net_nb++
				}
			}
		}

		if (@to_obj AI_IsModel(get_Stupid_Bunny_path))
		{
			tn_net = @get_Stupid_Bunny_path to_obj n_net
			if (tn_net)
			{
				ti_index = ARR_LIB_NetworkSearch(&an_bv_net[0], i_bv_net_nb, tn_net)
				if (ti_index == -1)
				{
					an_bv_net[i_bv_net_nb] = tn_net
					i_bv_net_nb++
				}
			}
		}


		// RECUPERATION DES OBJETS TYPES =============================================
		if (@to_obj OBJ_FlagsIdentityTest(OBJ_C_IdentityFlag_DesignStruct))
		{
			if (to_obj.des_flags & DSF_Occluder)
			{
				ao_occluder[i_occluder_nb] = to_obj
				i_occluder_nb++
			}

			if (to_obj.des_flags & DSF_Water)
			{
				ao_water_zone[i_water_zone_nb] = to_obj
				i_water_zone_nb++
			}

			if (to_obj.des_flags & DSF_Piege)
			{
				ao_piege_a_nmi[i_piege_a_nmi_nb] = to_obj
				i_piege_a_nmi_nb++
			}

			if (to_obj.des_flags & DSF_HotSpot)
			{
				ao_hotspot[i_hotspot_nb] = to_obj
				i_hotspot_nb++
			}
		}
	}
}

// =========================================================================================
// OCCLUDER
// =========================================================================================
for (ti_i = 0; ti_i < i_occluder_nb; ti_i++)
{
//	@ao_occluder[ti_i] OBJ_FlagInvisibleSet(vrai)
//	@ao_occluder[ti_i] OBJ_FlagsControlSet(OBJ_C_ControlFlag_RayInsensitive, none)

	WAY_LIB_Occluder_BV_Set(ao_occluder[ti_i])

	if (! (@ao_occluder[ti_i] OBJ_CapaTest(OBJ_Capa_11)) )
		ao_occluder[ti_i].des_int2 = GST_EVENT_Territory_Get(@ao_occluder[ti_i] OBJ_PosGet())

	if (@ao_occluder[ti_i] OBJ_FlagsIdentityTest(OBJ_C_IdentityFlag_Links))
	{
		@ao_occluder[ti_i] OBJ_FlagInvisibleSet(faux)
		tn_net = @ao_occluder[ti_i] WAY_NetOfObj()		
		ti_position_nb = WAY_NetFill(tn_net, WAY_RootGet(tn_net), &tao_wp[0])
		
		for (ti_k = 0; ti_k < ti_position_nb; ti_k++)
			@tao_wp[ti_k] OBJ_BankingGeneralSet(@tao_wp[MATH_Modulo(ti_k + 1, ti_position_nb)] OBJ_PosGet()  - @tao_wp[ti_k] OBJ_PosGet(), Cv_VerticalVector)
	}
}

GST_List_Manager_Occluder_ID_Set(ti_snp_object_nb)
GST_List_Manager_Order_Occluder()

if (AI_GetCurSystem() == Ci_CurSystem_Editeur)
{
	DBG_TraceEOL()
	DBG_TraceString("==================================================================\n")
	DBG_TraceString("======================== SWEEP AND PRUNE  ========================\n")
	DBG_TraceString("==================================================================\n")
	DBG_TraceEOL()
	
	DBG_TraceString("La map comprend ")	
	DBG_TraceInt(ti_object_nb)
	DBG_TraceString(" objets")
	DBG_TraceEOL()
	
	DBG_TraceString("Il y a ")
	DBG_TraceInt(ti_ode_object_nb)
	DBG_TraceString(" objets qui ont le flag ODE à vrai !!!")
	DBG_TraceEOL()	
	
	DBG_TraceString("Il y a ")
	DBG_TraceInt(ti_colmap_object_nb)
	DBG_TraceString(" objets qui ont le flag COLMAP à vrai !!!")
	DBG_TraceEOL()	
	
	if (ti_snp_object_nb > 200)
		DBG_TraceString("WARNING : ")
	DBG_TraceString("Il y a ")
	DBG_TraceInt(ti_snp_object_nb)
	DBG_TraceString(" objets qui ont le flag SNP à vrai !!!")
	DBG_TraceEOL()
}

if (ti_fatal)
	DBG_Error("Une erreur doit etre corrigé pour que la map fonctionne correctement (Regardez le LOG)")

AI_TrackCurChangeNow("GST_LM_go")