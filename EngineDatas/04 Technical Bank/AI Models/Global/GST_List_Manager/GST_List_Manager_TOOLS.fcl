procedure_local void GST_List_Manager_Occluder_ID_Set(byref int ti_snp_object_nb)
{
	int			ti_i
	int			ti_k
	int			ti_wp_nb
	int			ti_net_wp_nb
	int			ti_modulo
	int			ti_color
	
	vector	tv_bv_min
	vector	tv_bv_max
	
	object	tao_net_wp[500]
	object	tao_wp[2000]

	if ( ! i_bv_net_nb )
		return

	// ON FAIT UN GROS TABLEAU DE TOUS LES WPS DE TOUS LES RESEAUX DE BV	
	for (ti_i = 0; ti_i < i_bv_net_nb; ti_i++)
	{
		if ( ! ti_i )
		{
			ti_wp_nb = WAY_NetFill(an_bv_net[ti_i], WAY_RootGet(an_bv_net[ti_i]), &tao_wp[0])
		}
		else
		{
			ti_net_wp_nb = WAY_NetFill(an_bv_net[ti_i], WAY_RootGet(an_bv_net[ti_i]), &tao_net_wp[0])
			for (ti_k = 0; ti_k < ti_net_wp_nb; ti_k++)
			{
				tao_wp[ti_wp_nb] = tao_net_wp[ti_k]
				ti_wp_nb++
			}
		}
	}

	// ON ASSOCIE A CHAQUE WP UN IDENTIFIANT UNIQUE
	// ON ASSOCIE LES OCCLUDERS AUX WPS
	for (ti_i = 0; ti_i < ti_wp_nb; ti_i++)
	{
		ti_modulo = MATH_Modulo(ti_i, 14)
		switch(ti_modulo)
		{
			case 0 :
				ti_color = 0x800000
				break
			case 1 :
				ti_color = 0x008000
				break
			case 2 :
				ti_color = 0x000080
				break
			case 3 :
				ti_color = 0x808000
				break
			case 4 :
				ti_color = 0x008080
				break
			case 5 :
				ti_color = 0x800080
				break
			case 6 :
				ti_color = 0x808080
				break

			case 7 :
				ti_color = 0xFF0000
				break
			case 8 :
				ti_color = 0x00FF00
				break
			case 9 :
				ti_color = 0x0000FF
				break
			case 10 :
				ti_color = 0xFFFF00
				break
			case 11 :
				ti_color = 0x00FFFF
				break
			case 12 :
				ti_color = 0xFF00FF
				break
			case 13 :
				ti_color = 0xFFFFFF
				break
		}
	
		if (SNAP_BV)
		{
			tv_bv_min = @tao_wp[ti_i] OBJ_PosGet() + @tao_wp[ti_i] BV_MinGet()
			MATH_VecRound(tv_bv_min, SNAP_BV)
			tv_bv_min -= @tao_wp[ti_i] OBJ_PosGet()
			@tao_wp[ti_i] BV_MinSet(tv_bv_min)
	
			tv_bv_max = @tao_wp[ti_i] OBJ_PosGet() + @tao_wp[ti_i] BV_MaxGet()
			MATH_VecRound(tv_bv_max, SNAP_BV)
			tv_bv_max -= @tao_wp[ti_i] OBJ_PosGet()
			@tao_wp[ti_i] BV_MaxSet(tv_bv_max)
		}

		ti_snp_object_nb++
		@tao_wp[ti_i] COL_EnableSnP()
		@tao_wp[ti_i] OBJ_FlagsIdentitySet(OBJ_C_IdentityFlag_DesignStruct, none)
		@tao_wp[ti_i] OBJ_CapaSet(none, OBJ_Capa_31 | OBJ_Capa_30 | OBJ_Capa_29 | OBJ_Capa_28)
		tao_wp[ti_i].des_int2 = ti_i + 32

		WAY_LIB_RenderBV(tao_wp[ti_i], 0.0, ti_color)
	
		for (ti_k = 0; ti_k < i_occluder_nb; ti_k++)
		{
//			if (@ao_occluder[ti_k] COL_BVObjectObject(tao_wp[ti_i]))
			if (@ao_occluder[ti_k] COL_Pivot_BVCollide(tao_wp[ti_i]))
			{
				WAY_LIB_RenderBV(ao_occluder[ti_k], 0.0, ti_color)
				DBG_RenderVector(@tao_wp[ti_i] OBJ_PosGet() + Cv_VerticalVector, @ao_occluder[ti_k] OBJ_PosGet() - @tao_wp[ti_i] OBJ_PosGet(), ti_color)
				ao_occluder[ti_k].des_int2 = tao_wp[ti_i].des_int2
			}
		}
	}

	if (SNAP_BV)
	{
		DBG_BreakPoint()
		SNAP_BV = SNAP_BV
	}
	
	return
}


procedure_local void GST_List_Manager_Order_Occluder()
{	
	int			ti_i
	int			ti_k
	
	float		taf_ponderation[100]

	for (ti_i = 0; ti_i < i_occluder_nb; ti_i++)
	{
		taf_ponderation[ti_i] = ao_occluder[ti_i].des_int2
		if (taf_ponderation[ti_i] == -1)
			taf_ponderation[ti_i] = Cf_Infinit
	}
			
	ARR_LIB_Gao_QuickSort_Order(&ao_occluder[0], &taf_ponderation[0], i_occluder_nb)

	// On reset les index
	for (ti_k = 0; ti_k < 400; ti_k++)
		ai_occluder_index[ti_k] = 6666

	DBG_TraceString("OCCLUDER INIT")
	DBG_TraceEOL()

	ti_k = -1
	for (ti_i = 0; ti_i < i_occluder_nb; ti_i++)
	{
		if (ao_occluder[ti_i].des_int2 == -1)
		{
			DBG_RenderVector(@ao_occluder[ti_i] OBJ_PosGet(), Cv_VerticalVector * 1000.0, color_rouge)	
		
			if (i_dyn_occluder_index == 6666)
				i_dyn_occluder_index = ti_i
		}	
		else if (ao_occluder[ti_i].des_int2 > ti_k)
		{
			ti_k = ao_occluder[ti_i].des_int2
			ai_occluder_index[ti_k] = ti_i
		}
	
		DBG_TraceObject(ao_occluder[ti_i])
		DBG_TraceString(" est sur le territoire ")
		DBG_TraceInt(ao_occluder[ti_i].des_int2)
		DBG_TraceEOL()
	}
	
	return
}
