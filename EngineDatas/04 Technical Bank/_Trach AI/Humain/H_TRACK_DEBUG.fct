#include "H_defines.var"
#include "H_action.var"

int			ti_i
int			ti_type_liaison
int			ti_string_ID

string		str_texte

vector	tv_2D_pos
vector	tv_temp

float		tf_temp
float		tf_temp1
float		tf_temp2


// DEBUG LIAISON KONG ===============================================================
if( i_DBG_display_KONG_link )
{
	if( ao_SRV[Ci_LNK_KKGRAB_OBJECT] && MSG_GlobalIsValid(amid_SRV_LIAISON_ID[Ci_LNK_KKGRAB_OBJECT]) )
	{
		tv_2D_pos = VIEW_3dWorldTo2d(0, OBJ_PosGet())
		ti_type_liaison = LNK_KKGrabObject_TypeGet(amid_SRV_LIAISON_ID[Ci_LNK_KKGRAB_OBJECT])
		switch( ti_type_liaison )
		{
			case Ci_KKGrabObject_Depose :
				str_texte = "DEPOSE"
				break
			case Ci_KKGrabObject_Lache :
				str_texte = "LACHE"
				break
			case Ci_KKGrabObject_Pose_Epaule :
				str_texte = "POSE SUR EPAULE"
				break
			case Ci_KKGrabObject_Attrappe_Attend :
				str_texte = "ATTRAPPE - ATTEND"
				break
			case Ci_KKGrabObject_Attrappe_Dans_Main :
				str_texte = "ATTRAPPE - DANS LA MAIN"
				break
			case Ci_KKGrabObject_Porte_Epaule :
				str_texte = "PORTE SUR EPAULE"
				break
			case Ci_KKGrabObject_Porte_Epaule_TroncD :
				str_texte = "PORTE SUR EPAULE - TRONC MAIN D"
				break
			case Ci_KKGrabObject_Porte_Epaule_TroncG :
				str_texte = "PORTE SUR EPAULE - TRONC MAIN G"
				break
			case Ci_KKGrabObject_Porte_Main :
				str_texte = "PORTE DANS MAIN"
				break
			case Ci_KKGrabObject_PoseSol :
				str_texte = "POSEE AU SOL"
				break
			default:
				str_texte = "default !!!???"
				break
		}
		Str_DisplayTextOnce(str_texte, tv_2D_pos  + cvector(0.025,0.0,0.0))
	}
}


// GLOBAL PLAYER INFO ===============================================================
if( @"univ" i_cheat_page == 2 )
{
	Str_DisplayTextOnce(" === PLAYER INFO ===", cvector(0.75,0.8,0))
	
	if( @get_global i_Player_is_Kong )
		ti_string_ID = STR_CreateText("\c0FF00FF00\\h.04\i_Player_is_Kong", cvector(0.75,0.85,0), 0.0)
	else
		ti_string_ID = STR_CreateText("\c0FF0000FF\\h.04\i_Player_is_Kong", cvector(0.75,0.85,0), 0.0)
	STR_AppendText(ti_string_ID, "")

	if( @get_global i_Player_on_KK_Shoulder )
		ti_string_ID = STR_CreateText("\c0FF00FF00\\h.04\i_Player_on_KK_Shoulder", cvector(0.75,0.9,0), 0.0)
	else
		ti_string_ID = STR_CreateText("\c0FF0000FF\\h.04\i_Player_on_KK_Shoulder", cvector(0.75,0.9,0), 0.0)
	STR_AppendText(ti_string_ID, "")
	
	if( @get_global i_FPS_Shoulder_force_new_entry )
	{
		ti_string_ID = STR_CreateText("\c0FF0000FF\\h.04\i_FPS_Shoulder_force_new_entry", cvector(0.75,0.95,0), 0.0)
		STR_AppendText(ti_string_ID, "")
	}
}


// DEBUG WATER =======================================================================
if( i_DBG_Water )
{
	tf_temp = 0.7
	tf_temp1 = 0.87
	tf_temp2 = 0.45
	Str_DisplayTextOnce("f_water_Z_world", cvector(tf_temp,tf_temp2,0))
	Str_DisplayFloatOnce(f_water_Z_world, cvector(tf_temp1,tf_temp2,0))
	tf_temp2 += 0.05
	Str_DisplayTextOnce("i_flag_nage", cvector(tf_temp,tf_temp2,0))
	Str_DisplayIntOnce(i_flag_nage, cvector(tf_temp1,tf_temp2,0))
	tf_temp2 += 0.05
	Str_DisplayTextOnce("is water", cvector(tf_temp,tf_temp2,0))
	Str_DisplayIntOnce(H_IsWater(), cvector(tf_temp1,tf_temp2,0))
	tf_temp2 += 0.05
	Str_DisplayTextOnce("nage_wall_duree", cvector(tf_temp,tf_temp2,0))
	Str_DisplayFloatOnce(f_nage_wall_contact_duration, cvector(tf_temp1,tf_temp2,0))
	tf_temp2 += 0.05
	Str_DisplayTextOnce("nage_wall_Z", cvector(tf_temp,tf_temp2,0))
	Str_DisplayFloatOnce(f_nage_wall_contact_Z_offset, cvector(tf_temp1,tf_temp2,0))
}


// DEBUG GROUND =======================================================================
if( i_DBG_Ground )
{
	Str_DisplayTextOnce("Ground = ", cvector(0.05,0.3,0))
	Str_DisplayVectorOnce(v_ground_pos, cvector(0.15,0.3,0))
}


// INVENTORY =======================================================================
if( @"univ" i_cheat_page == 5 )
{
	Str_DisplayTextOnce("ID  Gao", cvector(0.04, 0.1, 0))
	for(ti_i = 0; ti_i < Ci_Joueur_GrabObject_max_nb; ti_i++ )
	{
		Str_DisplayIntOnce(ti_i, cvector(0.01, 0.15 + (ti_i * 0.05), 0))
		Str_DisplayIntOnce(ai_grabbed_object_ID[ti_i], cvector(0.04, 0.15 + (ti_i * 0.05), 0))
		Str_DisplayGaoOnce(ao_grabbed_object[ti_i], cvector(0.07, 0.15 + (ti_i * 0.05), 0))
	}
	Str_DisplayTextOnce("Current Weapon GAO = ", cvector(0.01,0.4,0))
	Str_DisplayGaoOnce(o_grabbed_object_en_main, cvector(0.22,0.4,0))
	Str_DisplayTextOnce("Current Weapon index = ", cvector(0.01,0.45,0))
	Str_DisplayIntOnce(i_grabbed_object_index, cvector(0.25,0.45,0))
	Str_DisplayTextOnce("Current Weapon ID = ", cvector(0.01,0.5,0))
	Str_DisplayIntOnce(H_Weapon_ID_Get(), cvector(0.22,0.5,0))
	Str_DisplayTextOnce("Second Weapon ID = ", cvector(0.01,0.55,0))
	Str_DisplayIntOnce(H_WeaponSecond_ID_Get(), cvector(0.22,0.55,0))
	Str_DisplayTextOnce("Saved Weapon ID = ", cvector(0.01,0.6,0))
	Str_DisplayIntOnce(H_WeaponSave_ID_Get(), cvector(0.22,0.6,0))
	Str_DisplayTextOnce("Arc Horiz = ", cvector(0.01,0.65,0))
	Str_DisplayIntOnce(@"univ" Weapon_Pref_Arc_Horiz, cvector(0.22,0.65,0))
}


// DEBUG ACTION =======================================================================
if( i_DBG_Action )
{
	if( ACT_ActionGet() != i_action )
	{
		i_action = ACT_ActionGet()
		DBG_TraceString("***** ")
		DBG_TraceObject(OBJ_Me())
		DBG_TraceString(" action ")
		DBG_TraceInt(i_action)
		DBG_TraceEOL()
	}
}


// DEBUG JUMP =======================================================================
if( i_DBG_Jump )
{
	tf_temp = 0.7
	tf_temp1 = 0.9
	tf_temp2 = 0.2
	Str_DisplayTextOnce("jump = ", cvector(tf_temp,tf_temp2,0))
	Str_DisplayIntOnce(i_jump_flag, cvector(tf_temp1,tf_temp2,0))
	tf_temp2 += 0.05
	Str_DisplayTextOnce("jump_from_KK = ", cvector(tf_temp,tf_temp2,0))
	Str_DisplayIntOnce(i_jump_from_KK_flag, cvector(tf_temp1,tf_temp2,0))
	tf_temp2 += 0.05
	Str_DisplayTextOnce("jump_from_echelle = ", cvector(tf_temp,tf_temp2,0))
	Str_DisplayIntOnce(i_jump_from_echelle_flag, cvector(tf_temp1,tf_temp2,0))
}


// DEBUG ECHELLE =======================================================================
if( i_DBG_Echelle )
{
	tf_temp = 0.05
	tf_temp1 = 0.3
	tf_temp2 = 0.45
	Str_DisplayTextOnce("i_echelle_flag = ", cvector(tf_temp,tf_temp2,0))
	Str_DisplayIntOnce(i_echelle_flag, cvector(tf_temp1,tf_temp2,0))
	tf_temp2 += 0.05
	if( COL_CollideType(COL_C_Ground) )	
		Str_DisplayTextOnce("*** je touche le sol ***", cvector(tf_temp,tf_temp2,0))
	tf_temp2 += 0.05
	Str_DisplayTextOnce("f_echelle_startingZ = ", cvector(tf_temp,tf_temp2,0))
	Str_DisplayFloatOnce(f_echelle_startingZ, cvector(tf_temp1,tf_temp2,0))
	tf_temp2 += 0.05
	Str_DisplayTextOnce("f_echelle_hauteur = ", cvector(tf_temp,tf_temp2,0))
	Str_DisplayFloatOnce(f_echelle_hauteur, cvector(tf_temp1,tf_temp2,0))
	tf_temp2 += 0.05
	Str_DisplayTextOnce("i_echelle_snap_flag = ", cvector(tf_temp,tf_temp2,0))
	Str_DisplayIntOnce(i_echelle_snap_flag, cvector(tf_temp1,tf_temp2,0))
	tf_temp2 += 0.05
	Str_DisplayTextOnce("f_echelle_snap_coef = ", cvector(tf_temp,tf_temp2,0))
	Str_DisplayFloatOnce(f_echelle_snap_coef, cvector(tf_temp1,tf_temp2,0))
	tf_temp2 += 0.05
	Str_DisplayTextOnce("f_echelle_speed_coef = ", cvector(tf_temp,tf_temp2,0))
	Str_DisplayFloatOnce(f_echelle_speed_coef, cvector(tf_temp1,tf_temp2,0))
}


//Str_DisplayGaoOnce(o_tir_prefered, cvector(0.5,0.5,0))
