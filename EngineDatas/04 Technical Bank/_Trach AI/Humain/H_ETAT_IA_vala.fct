#include "H_defines.var"

object	to_followed_actor
object	to_collide_object

float		tf_sqr_hor_dist

int			ti_i
int			ti_flag_go_to_grid_center
int			ti_followed_ground_ID
int			ti_ray_ground_sound_id
int			ti_indice 
int			ti_context
int			ti_flag_followed_crouch

vector	tv_offset
vector	tv_temp

// SORTIE ETAT ===================================================================
 if (i_sort_etat)
{
	i_sort_etat = faux

	return
}

// INITIALISATION ETAT ==============================================================
if (i_etat_courant != ETAT_IA_vala)
{
	i_dernier_etat = i_etat_courant
	i_etat_courant = ETAT_IA_vala

	if (fct_last_etat)
	{
		i_sort_etat = vrai
		AI_Execute(fct_last_etat)
	}

	fct_last_etat = AI_TrackCurGet()

	for (ti_i = 0; ti_i < Ci_LNK_TYPE_NB; ti_i++)
		ai_SRV_ENABLE[ti_i] = faux

	// AUTORISATION DES GRABS
	ai_SRV_ENABLE[Ci_LNK_GRAB_CROCO]		= vrai
	macro_SRV_enable_ICO()
	ai_SRV_ENABLE[Ci_LNK_GRAB_TRAP]		= vrai
	ai_SRV_ENABLE[Ci_LNK_GRAB_RAPTOR]	= vrai
	
	// AUTORISATIONS DES BLOCKS
	ai_SRV_ENABLE[Ci_LNK_BLOCK_RAPTOR]	= vrai	

	// AUTORISATION VALA
	ai_SRV_ENABLE[Ci_LNK_VALA]					= vrai

	f_time_start_etat = 0.0
}
else
{
	f_time_start_etat += TIME_GetDt()
}

// ANALYSE =======================================================================================================
AI_Execute("H_exec_ch_Stimulus_Paf")

if (o_paf_sender)
	macro_change_etat("H_ETAT_commun_paf")

// RECHERCHE SERVEUR ============================================================================================
AI_Execute("H_exec_serveur_get")

// JE SUIS BLOCKED
if (ao_SRV[Ci_LNK_BLOCK_RAPTOR])
	macro_change_etat("H_ETAT_commun_BLOCK_raptor")

// JE SUIS GRABED
if (ao_SRV[Ci_LNK_GRAB_RAPTOR])
	macro_change_etat("H_ETAT_commun_GRAB_raptor")
if (ao_SRV[Ci_LNK_GRAB_CROCO])
	macro_change_etat("H_ETAT_commun_GRAB_croco")
if (ao_SRV[Ci_LNK_GRAB_TRAP])
	macro_change_etat("H_ETAT_commun_GRAB_trap")
if (ao_SRV[Ci_LNK_GRAB_ICO])
	macro_change_etat("H_ETAT_commun_GRAB_ico")

//if (ao_SRV[Ci_LNK_HELP_TRAP])
//	macro_change_etat("H_ETAT_commun_HELP_trap")
//
//if (ao_SRV[Ci_LNK_HELP_CROCO])
//	macro_change_etat("H_ETAT_commun_HELP_croco")

if (ao_SRV[Ci_LNK_VALA] == nobody)
	macro_change_etat(fct_main_etat)

AI_Execute("H_exec_main_context_get")
ti_context = MATH_Modulo(i_followed_context, 10)
if (ti_context == C_EVENT_CONTEXT_HIDE_0D)
	macro_change_etat("H_ETAT_IA_hide")
else if (ti_context == C_EVENT_CONTEXT_PLAQUE)
	macro_change_etat("H_ETAT_IA_hide")

AI_Execute("H_exec_read_world")

// COMPORTEMENT ========================================================================================
to_followed_actor = ao_SRV[Ci_LNK_VALA]
ti_followed_ground_ID = GRID_CapaGet(@to_followed_actor OBJ_PosGet())
f_time_crouch -= MATH_FloatMin(f_time_crouch, TIME_GetDt())
		
if (!i_flag_crouch && f_time_crouch >= f_delay_crouch)
{
	f_delay_crouch = MATH_RandFloat(0.2, 0.4)
	i_flag_crouch = vrai
}
else if (!f_time_crouch)
{
	f_delay_crouch = MATH_RandFloat(0.2, 0.4)
	i_flag_crouch = faux
}
	
ti_flag_go_to_grid_center = vrai

//i_way_etage_dest = @to_followed_actor OBJ_CapaGet() & DesHelpCapa_HauteurGrille
v_way_destpos = @to_followed_actor OBJ_PosGet()

tv_temp = v_way_destpos
tv_temp -= OBJ_PosGet()
tv_temp.z = 0.0

tf_sqr_hor_dist = MATH_VecDotProduct(tv_temp, tv_temp)

if (i_way_moving)
{
	if (!i_flag_run && i_way_case_nbr > 4)
		i_flag_run = vrai
	else if (i_flag_run && i_way_case_nbr < 3)
		i_flag_run = faux
}
else
{
	if (!i_flag_run && tf_sqr_hor_dist > 16.0)
		i_flag_run = vrai
	else if (i_flag_run && tf_sqr_hor_dist < 9.0)
		i_flag_run = faux
}


// Deplacement

i_followed_ground_ID = ti_followed_ground_ID
AI_Execute("H_exec_way_find")


v_joy_dir = v_way_case_dest
v_joy_dir -= OBJ_PosGet()
v_joy_dir.z = 0.0

f_joy_norm = MATH_VecNorm(v_joy_dir)

if (i_way_moving && f_joy_norm)
{
	v_joy_dir /= f_joy_norm
	
	f_joy_norm = MATH_FloatLimit(f_joy_norm, 0.0, 1.0)
	
	ti_flag_go_to_grid_center = faux
}


if (ti_flag_go_to_grid_center)
{
	i_flag_run = faux
		
	// On est arrivé, on se centre sur la case
	v_joy_dir = v_way_case_dest
	v_joy_dir -= OBJ_PosGet()
	v_joy_dir.z = 0.0
	
	f_joy_norm = MATH_VecNorm(v_joy_dir)

	if (f_joy_norm)
		v_joy_dir /= f_joy_norm
	else
		v_joy_dir = OBJ_SightGet()

	if (f_joy_norm > 0.25)
		f_joy_norm = MATH_FloatLimit(f_joy_norm, 0.0, 1.0)
	else
	{
		v_joy_dir = @to_followed_actor OBJ_SightGet()
		v_joy_dir.z = 0.0
		MATH_VecSetNormalize(v_joy_dir)
		
		f_joy_norm = 0.0
	}
}

AI_Execute("H_exec_select_action")

