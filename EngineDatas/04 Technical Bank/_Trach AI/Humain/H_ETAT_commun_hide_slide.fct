#include "H_defines.var"

int			ti_i

object	to_wall_ray_obj


// SORTIE ETAT =======================================================================================
if (i_sort_etat)
{
	i_sort_etat = faux
	
	COL_ColSetActivationSet(none, C_bit_zdm_recalagespecial)

	return
}

// INITIALISATION ETAT =================================================================================
if (i_etat_courant != ETAT_commun_hide_slide)
{
	i_dernier_etat = i_etat_courant
	i_etat_courant = ETAT_commun_hide_slide

	if (fct_last_etat)
	{
		i_sort_etat = vrai
		AI_Execute(fct_last_etat)
	}
	
	fct_last_etat = AI_TrackCurGet()

	for (ti_i = 0; ti_i < Ci_LNK_TYPE_NB; ti_i++)
		ai_SRV_ENABLE[ti_i] = faux

	// AUTORISATIONS DES GRABS
	ai_SRV_ENABLE[Ci_LNK_GRAB_CROCO]		= vrai
	macro_SRV_enable_ICO()
	ai_SRV_ENABLE[Ci_LNK_GRAB_TRAP]		= vrai
	ai_SRV_ENABLE[Ci_LNK_GRAB_RAPTOR]	= vrai

	// AUTORISATIONS DES BLOCKS
	ai_SRV_ENABLE[Ci_LNK_BLOCK_RAPTOR]	= vrai

	COL_ColSetActivationSet(C_bit_zdm_recalagespecial, none)

	f_time_start_etat = 0.0
}
else
{
	f_time_start_etat += TIME_GetDt()
}

// ANALYSE ==========================================================================================
AI_Execute("H_exec_ch_Stimulus_Paf")
if (o_paf_sender)
	macro_change_etat("H_ETAT_commun_paf")

AI_Execute("H_exec_serveur_get")

// JE SUIS BLOCKED
if (ao_SRV[Ci_LNK_BLOCK_RAPTOR])
	macro_change_etat("H_ETAT_commun_BLOCK_raptor")

// JE SUIS GRABED
if (ao_SRV[Ci_LNK_GRAB_RAPTOR])
	macro_change_etat("H_ETAT_commun_GRAB_raptor")
if (ao_SRV[Ci_LNK_GRAB_CROCO])
	macro_change_etat("H_ETAT_commun_GRAB_croco")
if (ao_SRV[Ci_LNK_GRAB_TRAP])
	macro_change_etat("H_ETAT_commun_GRAB_trap")
if (ao_SRV[Ci_LNK_GRAB_ICO])
	macro_change_etat("H_ETAT_commun_GRAB_ico")

AI_Execute("H_exec_read_joy")

AI_Execute("H_exec_read_world")

if (! i_flag_crouch || (i_wall_ID != 6 || f_time_wall_col > 0.1))
	macro_change_etat(fct_main_etat)

i_flag_plaque = vrai

// COMPORTEMENT ====================================================================================
		
if (f_time_wall_col)
{
	// On ne touche pas réellement de mur
	DYN_TractionSet(-v_wall_normal * 20.0)	

	to_wall_ray_obj = COL_RayObject_Dist(OBJ_PosGet() + cvector(0.0, 0.0, 0.5), -OBJ_SightGet(), 2.0, all, OBJ_C_IdentityFlag_Dyna, Ci_Filter_IdentityFlag, COL_C_Ray_on_ColMap_NoCrossable)
	if (to_wall_ray_obj)
	{
		f_time_wall_col = 0.0
		v_wall_normal = MATH_VecBlendRotate(v_wall_normal, COL_RayObject_NormalGet(), 2.0 * TIME_GetDt())
		i_wall_ID = COL_GMAT_SoundGet(COL_C_Ray)
	}
	else
	{
		to_wall_ray_obj = COL_RayObject_Dist(OBJ_PosGet() + cvector(0.0, 0.0, 0.5), MATH_VecBlendRotate(-OBJ_SightGet(), OBJ_HorizonGet(), 0.5), 2.0, all, OBJ_C_IdentityFlag_Dyna, Ci_Filter_IdentityFlag, COL_C_Ray_on_ColMap_NoCrossable)
		if (to_wall_ray_obj)
		{
			f_time_wall_col = 0.0
			v_wall_normal = MATH_VecBlendRotate(v_wall_normal, COL_RayObject_NormalGet(), 2.0 * TIME_GetDt())
			i_wall_ID = COL_GMAT_SoundGet(COL_C_Ray)
		}
		else
		{
			to_wall_ray_obj = COL_RayObject_Dist(OBJ_PosGet() + cvector(0.0, 0.0, 0.5), MATH_VecBlendRotate(-OBJ_SightGet(), -OBJ_HorizonGet(), 0.5), 2.0, all, OBJ_C_IdentityFlag_Dyna, Ci_Filter_IdentityFlag, COL_C_Ray_on_ColMap_NoCrossable)
			if (to_wall_ray_obj)
			{
				f_time_wall_col = 0.0
				v_wall_normal = MATH_VecBlendRotate(v_wall_normal, COL_RayObject_NormalGet(), 2.0 * TIME_GetDt())
				i_wall_ID = COL_GMAT_SoundGet(COL_C_Ray)
			}
		}
	}
}

AI_Execute("H_exec_select_action")