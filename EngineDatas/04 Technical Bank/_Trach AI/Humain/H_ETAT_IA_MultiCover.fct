#include "H_defines.var"
#include "H_action.var"


int			ti_i
int			ti_all_safe
int			ti_numero
int			ti_index
int			ti_flag_grab
int			ti_context
int			ti_rank
messageid	EVT_ID
float		tf_dist
float		tf_sign
float		tv_val
float		tf_offset
float		tf_bestdist 
float		tf_temp
object	to_obj2
int			ti_jack_dispo

int			ti_capa, ti_capa1, failed, ti_capa2, ti_capa3
int			ti_num, ti_devant
vector	tv_cover_pos
vector	tv_dest_pos
vector	tv_temp, tv_temp1

object	to_trap, to_temp
object	to_obj, to_obj1
object	to_nearest_me, to_nearest_cible, to_nearest_him
object	ao_obj[100]
object	EVT_Pere
object	to_cover_who

int			ti_himeqhe
int			ti_himeqhe_real

int			ti_state
int			ti_weapon
int			ti_force_s
object	to_main

function	shoot

#define DIST_DEPART	8	// Distance depart de hayes
#define DIST_SUIVI		2.5

// SORTIE ETAT ===================================================================
if (i_sort_etat)
{
	f_time_stress = 20
	i_sort_etat = faux
	return
}

// INITIALISATION ETAT ==============================================================
if (i_etat_courant != ETAT_IA_multicover)
{	
	i_dernier_etat = i_etat_courant
	i_etat_courant = ETAT_IA_multicover
	f_time_stress = 20
	f_time_mc_safe = 0
	i_multicover_oriente_jack = faux
	
	if(i_dernier_etat != ETAT_IA_paf && i_dernier_etat != ETAT_IA_stunned && !IsEtatGrab(i_dernier_etat))
	{
		i_multicover_mode = 0
		f_multicover_time = 0
	}
	
	if (fct_last_etat)
	{
		i_sort_etat = vrai
		AI_Execute(fct_last_etat)
	}

	fct_last_etat = AI_TrackCurGet()
	fct_main_etat = AI_TrackCurGet()
	
	for (ti_i = 0; ti_i < Ci_LNK_TYPE_NB; ti_i++)
		ai_SRV_ENABLE[ti_i] = faux

	// AUTORISATIONS DES GRABS
	ai_SRV_ENABLE[Ci_LNK_GRAB_RAPTOR]	= vrai
//	ai_SRV_ENABLE[Ci_LNK_GRAB_TRANSPORTE]	= vrai

	// AUTORISATION DES AIDES
	ai_SRV_ENABLE[Ci_LNK_INTERACTION] 		= vrai
	ai_SRV_ENABLE[Ci_LNK_PSSS]	= vrai

	DYN_SpeedSetVector( Cv_NullVector)
	DYN_TractionSet( Cv_NullVector)
	
	f_time_start_etat = 0.0
	f_bloque = 0
}
else
{
	f_time_start_etat += TIME_GetDt()
}

// ANALYSE  =====================================================================
AI_Execute("H_exec_read_world")
AI_Execute("H_exec_serveur_get")
AI_Execute("H_exec_change_etat")
AI_Execute("H_exec_ch_Stimulus_Paf")
if (o_paf_sender) macro_change_etat("H_ETAT_IA_paf")

// INTERACTION
OBJ_Me().des_int1 = Ci_DISPLAY_PSSS
to_main = AI_MainActorGet(C_ID_Jack)

// TEXT
i_request_txt = -1

// COMPORTEMENT ==============================================================

to_obj = AI_MainActorGet(C_ID_Jack)
to_main = to_obj

// Si jack est out, j'attend
ti_jack_dispo = vrai
if(@"KingKong/Humain" to_obj i_etat_courant != ETAT_joueur_FPS) ti_jack_dispo = faux
if(!ti_jack_dispo)
{
	if(i_multicover_mode == 0 || i_multicover_mode == 10)
	{
		f_joy_norm = 0
		v_joy_dir = OBJ_SightGet()
		AI_Execute("H_exec_select_action")
		return
	}
}

// Si je peux aller a jack en passant par les liens rouges, c'est qu'il est devant moi
ti_devant = HL_ObjDevantObj( to_obj, OBJ_Me() )
to_nearest_me = o_nearest_me

if(i_multicover_mode == 666)
{
	to_obj1 = FollowQueueLL()
	to_nearest_him = WAY_WPNearestOfPos(@to_obj1 OBJ_PosGet(), move_network, -1, 0, 0)
}
else
{
	to_nearest_him = WAY_WPNearestOfPosGrid(@to_obj OBJ_PosGet(), move_network, -1, 0, 0, &failed)
}
	
ti_himeqhe = faux
if(to_nearest_me == to_nearest_him) ti_himeqhe = vrai
else if(@to_nearest_him OBJ_SqrDist(to_nearest_me) < 10 * 10) ti_himeqhe = vrai
ti_himeqhe_real = ti_himeqhe
if(failed) ti_himeqhe = faux

// Types de terrain dangereux
GRID_CurrentSet(1)
ti_capa1 = GRID_CapaGet(@to_obj OBJ_PosGet())
ti_capa1 &= tag_grid_terrain
ti_capa = GRID_CapaGet(OBJ_PosGet())
ti_capa &= tag_grid_terrain
if(i_flag_nage) ti_capa = 1 // HACK
GRID_CurrentSet(0)

// Si jack bien devant, il ne nage plus, alors il est considéré comme safe
if(ti_devant && i_id_humain == C_ID_Hayes && OBJ_SqrDist(to_main) > 5 * 5 && !(@"KingKong/Humain" to_main i_flag_nage))
	ti_capa1 = 0

//HACK
if(!i_flag_nage && !f_joy_norm && ti_capa && ti_devant && i_id_humain != C_ID_Hayes && !i_in_fight && !@o_nearest_me OBJ_CapaTest(OBJ_Capa_3))
	f_bloque += TIME_GetDt()
else
	f_bloque = 0
if(f_bloque > 5)
{
	f_bloque = f_bloque
	macro_change_etat("H_ETAT_IA_suivi")
}

//if(!(@"KingKong/Humain" to_obj i_flag_nage)) ti_capa1 = 0

if(!f_time_start_etat && i_dernier_etat != ETAT_IA_paf && i_dernier_etat != ETAT_IA_stunned && !IsEtatGrab(i_dernier_etat))
{
 	if(!ti_devant)
 	{
	 	if(ti_capa1 == 1 && !ti_capa)
	 	{
			i_multicover_mode = 0
			i_request_txt = Gene_C_cover_Jack
		}
		else
		{
			i_multicover_mode = 10
			i_request_txt = Gene_C_call_cover
		}
	}
	else
	{
		i_request_txt = Gene_C_cover_Jack
	}
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// Tous les potes sont safe ?
to_cover_who = AI_MainActorGet(C_ID_Jack)
ti_all_safe = vrai
tf_bestdist = Cf_Infinit
if(i_id_humain == C_ID_Hayes)
{
	for(ti_i = 0; ti_i < C_ID_Marin_dernier; ti_i++)
	{
		to_temp = @"univ" ao_AllHumains[ti_i]
		if(!to_temp) continue
		if(to_temp == AI_MainActorGet(C_ID_Jack)) continue
		if(to_temp == OBJ_Me()) continue
		if(!(@"univ" ai_HumainIsHere[ti_i])) continue
		
		GRID_CurrentSet(1)
		ti_capa3 = GRID_CapaGet(@to_temp OBJ_PosGet())
		GRID_CurrentSet(0)
		if(ti_capa3 == 1) 
		{
			tf_temp = OBJ_SqrDist(to_temp)
			if(tf_temp < tf_bestdist && tf_temp > 2 * 2)
			{
				tf_bestdist = tf_temp
				to_cover_who = to_temp
			}
			
			ti_all_safe = faux
		}
	}
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

if(i_multicover_mode != 1 && (ti_devant && ti_capa != 1 && ti_capa1 == 1))
{
	i_multicover_mode = 1
}
else if(i_multicover_mode == 0 && ti_capa != 1 && ti_capa1 == 1)
{
	i_multicover_mode = 1
}

// Si je couvre par derriere, et que jack est au meme wp que moi, mais avec echec (mur entres les deux),
// et que jack n'est pas en zone dangereuse
if(i_multicover_mode <= 1 && failed && ti_capa1 != 1 && ti_himeqhe)
{
	i_multicover_mode = 2
}

if(i_multicover_mode == 2 && failed && ti_capa != 1 && !ti_devant)
{
	i_multicover_mode = 12
}

if(i_multicover_mode == 2 && (ti_capa1 == 1 || OBJ_SqrDist(to_main) > 6 * 6) && !ti_devant && !i_flag_nage && !ti_capa)
{
	i_multicover_mode = 12
}

// Si je couvre par derriere, et que je suis sur un inter, jack aussi, je passe devant
if((i_multicover_mode == 1 || i_multicover_mode == 2) && ti_capa != 1 && ti_capa1 != 1 && ti_himeqhe)
{
	if(ti_all_safe)
	{
		o_multicover_go = WAY_NetNextWP(move_network, to_nearest_me, 7, 0x00000001)
		i_multicover_mode = 10
	}
	else
	{
		i_multicover_mode = 12
	}
}

// J'y vais, jack est devant, mais c'est plus le cas
//if(i_multicover_mode == 2 && ti_capa != 1 && ti_capa1 == 1)
//{
//	i_multicover_mode = 1
//}

// Je marchais en zone dangereuse, j'arrive sur un point safe, jack y est deja
if(i_multicover_mode == 11 && ti_capa != 1 && ti_capa1 != 1 && ti_himeqhe && o_multicover_go == to_nearest_me)
{
	if(!i_flag_nage)
	{
		if(ti_all_safe)
		{
			o_multicover_go = WAY_NetNextWP(move_network, to_nearest_me, 7, 0x00000001)
			i_multicover_mode = 10
		}
		else
		{
			i_multicover_mode = 12
		}
	}
}

// Si je couvre jack, et que jack passe devant, et que jack est en zone dangereuse
if(i_multicover_mode == 12 && ti_devant && ti_capa1 == 1)
{
	i_multicover_mode = 1
//	i_request_txt = Gene_C_call_cover
}

if(i_id_humain == C_ID_Hayes && i_multicover_mode == 12 && !ti_devant && !ti_capa1)
{
	to_obj = AI_MainActorGet(C_ID_Jack)
	if(OBJ_SqrDist(to_obj) < 10 * 10 && to_nearest_me && @to_nearest_me OBJ_CapaTest(OBJ_Capa_3))
		i_multicover_mode = 10
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

if(!@"univ" i_weapon_ID[i_id_humain]) 
{
	if(i_id_humain == C_ID_Hayes)
	{
	}
	else
		i_multicover_mode = 666
}

ti_capa2 = 0
if(i_multicover_mode == 666)
{
	to_obj1 = FollowQueueLL()
	GRID_CurrentSet(1)
	ti_capa2 = GRID_CapaGet(@to_obj1 OBJ_PosGet())
	ti_capa2 &= tag_grid_terrain
	GRID_CurrentSet(0)
}

if(!ti_capa && !ti_capa1 && !ti_capa2 && ti_all_safe) 
{
	if(i_id_humain == C_ID_Hayes && @to_nearest_him OBJ_CapaTest(OBJ_Capa_3))
	{
	}
	else if(i_id_humain == C_ID_Hayes && !ti_devant)
	{
	}
	else
	{
		to_obj1 = FollowQueueLL()
		if(f_time_start_etat && (i_id_humain == C_ID_Hayes || @"KingKong/Humain" to_obj1 i_etat_courant != ETAT_IA_multicover))
		{
			macro_change_etat("H_ETAT_IA_suivi")
		}
	}
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

if(i_multicover_mode == 666)
{
	if(ti_capa2 == 1 || ti_capa == 1) f_time_arrivee_mc = 0
	
	// Si celui que je suis est en 13 (il se casse), je vais essayer de la suivre
	if(@"KingKong/Humain" to_obj1 i_multicover_mode == 13)
		mi_force_s = vrai
	else if(@"KingKong/Humain" to_obj1 mi_force_s)
		mi_force_s = vrai
	else
		mi_force_s = faux
		
	// Mon guide et moi meme, on est safe
	// Je bouge quand meme sur la zone safe
	if(!mi_force_s && (ti_capa2 != 1 && ti_capa != 1 && (ti_himeqhe || OBJ_SqrDist(to_obj1) < 5 * 5)))
	{
		v_way_destpos = OBJ_PosGet()
		if(!i_multicover_oriente_jack)
		{
			GRID_CurrentSet(1)
			ti_capa2 = GRID_CapaGet(OBJ_PosGet() + OBJ_SightGet())
			GRID_CurrentSet(0)		
			if(ti_capa2 != 1) v_way_destpos = OBJ_PosGet() + (3 * OBJ_SightGet())
			else i_multicover_oriente_jack = vrai
			if(f_time_arrivee_mc > 3) i_multicover_oriente_jack = vrai
			f_time_arrivee_mc += TIME_GetDt()
		}
	}
	
	// Mon guide est loin, ou il est safe et pas moi
	// Je dois le suivre
	else if(OBJ_SqrDist(to_obj1) > DIST_SUIVI * DIST_SUIVI || (ti_capa2 != 1 && ti_capa == 1))
	{
		// Gere l'arrivée dans une zone dangereuse
		if(OBJ_SqrDist(to_obj1) <= DIST_SUIVI * DIST_SUIVI && @o_nearest_me OBJ_CapaTest(OBJ_Capa_3))
		{
			v_way_destpos = OBJ_PosGet()
		}
		else
		{
			if(ti_capa2 == 0)
				v_way_destpos = @to_obj1 OBJ_PosGet() - (2 * @to_obj1 OBJ_SightGet())
			else	
				v_way_destpos = @to_obj1 OBJ_PosGet() - (2 * @to_obj1 OBJ_HorizonGet())
			GRID_CurrentSet(1)
			ti_capa2 = GRID_CapaGet(v_way_destpos)
			if(ti_capa2  == 1) 
			{
				if(ti_capa2 == 0)
					v_way_destpos = @to_obj1 OBJ_PosGet() - (2 * @to_obj1 OBJ_HorizonGet())
				else
					v_way_destpos = @to_obj1 OBJ_PosGet() - (2 * @to_obj1 OBJ_SightGet())		
				ti_capa2 = GRID_CapaGet(v_way_destpos)
				if(ti_capa2  == 1) 
				{
					v_way_destpos = @to_obj1 OBJ_PosGet() + (2 * @to_obj1 OBJ_HorizonGet())		
					ti_capa2 = GRID_CapaGet(v_way_destpos)
					if(ti_capa2  == 1) 
					{
						v_way_destpos = @to_obj1 OBJ_PosGet() + (2 * @to_obj1 OBJ_SightGet())		
					}
				}
			}
			
			GRID_CurrentSet(0)
			i_multicover_oriente_jack = faux
		}
	}
	
	// Mon guide est proche
	else
	{
		i_multicover_oriente_jack = faux
		to_obj2 = @"univ" ao_AllHumains[C_ID_Hayes]
		if(@"KingKong/Humain" to_obj2 i_multicover_mode == 1 && ti_capa != 1)
			i_multicover_oriente_jack = vrai
			
		if(ti_capa == 1)
		{ 
			if(@"KingKong/Humain" to_obj2 i_multicover_mode == 1)
				v_way_destpos = @to_obj1 OBJ_PosGet() - (2 * @to_obj1 OBJ_SightGet())		
			else
				v_way_destpos = OBJ_PosGet()
		}
		else
			v_way_destpos = OBJ_PosGet()
	}

	i_request_txt = -1
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
if(i_multicover_mode >= 10 && (i_multicover_mode != 666))
{
	if((!ti_capa || ti_capa != 1) && !i_flag_nage)
	{
		f_time_mc_safe += TIME_GetDt()
		if(f_time_mc_safe > 1)
		{
			// Si jack n'est pas safe, ou qu'il n'est pas proche de moi, ou qu'il y a un pote dans la mouisse
			if(!MultiCoverInter(ti_capa1) || !ti_himeqhe_real || !ti_all_safe)
			{
				// Alors je continue de couvrir
				if(i_multicover_mode != 12 && i_multicover_mode != 13)
				{
					f_time_mc_safe = 0					
					i_multicover_mode = 12
					if(ti_capa1 != 1 && OBJ_SqrDist(to_main) > 8 * 8) i_request_txt = Gene_C_cover_team
				}
				else if(ti_devant && failed && ti_capa1 != 1 && ti_all_safe)
				{
					f_time_mc_safe = 0					
					i_multicover_mode = 10
					i_request_txt = Gene_C_call_cover
				}
			}
			
			// Je couvrais, je veux repartir
			else if(i_multicover_mode == 12)
			{
				if(ti_all_safe)
				{
					f_time_mc_safe = 0					
					i_multicover_mode = 10
					i_request_txt = Gene_C_call_cover
				}
			}
		}
	}
	
	// Je peux couvrir jack ? (tout le monde est safe ?)
	if(i_multicover_mode == 12 && ti_all_safe && OBJ_SqrDist(to_main) > 6 * 6)
	{
		if(@o_nearest_me OBJ_CapaTest(OBJ_Capa_3))
		{
			AskText(TEXTE_HayesCover, Gene_C_cover_Jack, 30, nobody)
		}
	}				

	// Si je veut partir, mais que je suis cullé, j'attire l'attention de jack
	if(i_multicover_mode == 10 && ((f_time_noculled_enface < 0.5) || OBJ_SqrDist(to_obj) > DIST_DEPART * DIST_DEPART))
	{
		i_multicover_mode = 50
		i_request_txt = Gene_C_call_far
		f_time_culled_enface = 0
	}
	
	// J'attirai l'attention de jack, il s'est barré
	if(i_multicover_mode == 50)
	{
		if(ti_capa1 == 1)
		{
			i_multicover_mode = 1
			i_request_txt = Gene_C_cover_Jack
		}
	}
	
	// J'attirai l'attention de jack, il me regarde, je peux partir
	if(i_multicover_mode == 50)
	{
	 	if(f_time_noculled_enface > 0.5 && OBJ_SqrDist(to_obj) < DIST_DEPART * DIST_DEPART)
	 	{
		 	i_multicover_mode = 10
			i_request_txt = Gene_C_call_cover
		}
		else if(f_time_culled_enface > 3)
		{
			i_multicover_mode = 10
			i_request_txt = Gene_C_answer_loud
		}
		else
		{
			v_way_destpos = OBJ_PosGet()
		}
	}

	// Decisition de couvre moi (13 = je vais jusqu'a la premiere zone dangereuse)
	if(i_multicover_mode == 10 || i_multicover_mode == 13)
	{
		o_multicover_go = WAY_NetNextWP(move_network, to_nearest_me, 7, @get_global i_capa_progession)
		if(!o_multicover_go) macro_change_etat("H_ETAT_IA_suivi")
		
		GRID_CurrentSet(1)
		ti_capa2 = GRID_CapaGet(@o_multicover_go OBJ_PosGet())
		GRID_CurrentSet(0)	
		
		if(i_multicover_mode == 10 && ti_capa2 == 1) 
			i_multicover_mode = 11
		else if(i_multicover_mode == 13 && ti_capa == 1) 
			i_multicover_mode = 11
		else
		{
			i_multicover_mode = 13
			v_way_destpos = @o_multicover_go OBJ_PosGet()
		}
	}
	
	// Deplacement sur le couvre moi
	else if(i_multicover_mode == 11)
	{
		// Si le wp suivant est proche, et n'est pas sur une zone de transition, on passe au suivant
		// pour ne pas rester en zone dangereuse
		if((OBJ_SqrDistHorz(o_multicover_go) <= 1 * 1) && (ti_capa == 1 || i_flag_nage))
			o_multicover_go = WAY_NetNextWP(move_network, o_multicover_go, 7, @get_global i_capa_progession)
		v_way_destpos = @o_multicover_go OBJ_PosGet()
	}
	
	// Arret sur place pour le je te couvre
	else if(i_multicover_mode == 12)
	{
		v_way_destpos = OBJ_PosGet()
	}
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

if(i_multicover_mode < 10)
{
	if(ti_himeqhe && i_multicover_mode == 1 && MultiCoverInter(ti_capa) && MultiCoverInter(ti_capa1) && ti_all_safe)
	{
		macro_change_etat("H_ETAT_IA_suivi")
	}
	
	// Je couvre, et je dois me faire couvrir
	if(ti_capa1 != 1) 
	{
		if(!ti_himeqhe && i_multicover_mode == 1)
		{
		 	if(!i_flag_culled || f_multicover_time > 5) 
		 	{
			 	if(f_multicover_time > 5) i_request_txt = Gene_C_cover_Jack
		 		i_multicover_mode = 2
		 	}
		 	else
		 	{
				if(!f_multicover_time) i_request_txt = Gene_C_call_cover
				f_multicover_time += TIME_GetDt()
			}
		}
	}
}

// Jack est devant, je vais vers lui
if(i_multicover_mode == 0)
{
	o_multicover_go = WAY_NetNextWP(move_network, to_nearest_me, 7, 0x00000001)
	v_way_destpos = @o_multicover_go OBJ_PosGet()
	if(ti_capa == 1) i_multicover_mode = 1
}

// Je couvre par derriere
else if(i_multicover_mode == 1)	
{
	v_way_destpos = OBJ_PosGet()
}
else if(i_multicover_mode == 2)
{
	o_multicover_go = WAY_NetNextWP(move_network, to_nearest_me, 7, 0x00000001)
	v_way_destpos = @o_multicover_go OBJ_PosGet()
	if(ti_capa != 1 && !MultiCoverInter(ti_capa) && ti_all_safe) macro_change_etat("H_ETAT_IA_suivi")
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// J''avance vers jack tant que je suis safe en mode je couvre (s'approche)
if((i_multicover_mode == 1 || i_multicover_mode == 12) && ti_capa1 == 1)
{
	GRID_CurrentSet(1)
	tv_temp = @to_obj OBJ_PosGet() - OBJ_PosGet()
	MATH_VecSetNormalize(tv_temp)
	ti_capa2 = GRID_CapaGet(OBJ_PosGet() + (2 * tv_temp))
	GRID_CurrentSet(0)		
	if(ti_capa2 != 1) v_way_destpos = @to_obj OBJ_PosGet()
}

// Deplacement
i_flag_force_marche = vrai
if(ti_capa == 1)
	f_min_dist_attend = 0
else
	f_min_dist_attend = 1
CommonMove()

// Mode cover
///////////////////////////////////////////////
if(i_multicover_mode == 1 || i_multicover_mode == 12)
{	
	to_obj = AI_MainActorGet(C_ID_Jack)
	if(OBJ_SqrDist(to_obj) > 5 * 5) f_time_enjoue = 1
	if(i_multicover_mode == 1) to_cover_who = AI_MainActorGet(C_ID_Jack)	// Couverture par l'arriere
	
	// Prend l'ennemi le plus proche de jack/ann
	tf_bestdist = 5 * 5
	o_tir_target = nobody
	ti_rank= -1
	to_obj1 = @"univ" ao_AllHumains[C_ID_Ann]
	EVT_ID = MSG_GlobalScan(C_EVENT_TYPE_Enemy, &ti_rank)
	while(MSG_GlobalIsValid(EVT_ID))
	{
		EVT_Pere = EVENT_PereGet(EVT_ID)
		ti_state = EVENT_EnemyStateGet( EVT_ID )
		if (ti_state == C_EVENT_EnemyState_Fight)
		{
			if(@to_cover_who OBJ_SqrDist(EVT_Pere) < tf_bestdist)
			{
				tf_bestdist = @to_obj OBJ_SqrDist(EVT_Pere)
				o_tir_target = EVT_Pere
				v_tir_pos_help = EVENT_PositionGet(EVT_ID)
			}
			
			if(to_obj1 && @to_obj1 OBJ_SqrDist(EVT_Pere) < tf_bestdist)
			{
				tf_bestdist = @to_obj1 OBJ_SqrDist(EVT_Pere)
				o_tir_target = EVT_Pere
				v_tir_pos_help = EVENT_PositionGet(EVT_ID)
			}
		}
	
		EVT_ID = MSG_GlobalScan(C_EVENT_TYPE_Enemy, &ti_rank)
	}
	
	// Si trop proche, je shoot
	if(o_tir_target)
	{
		// TIR
		if( i_recharge_arme ) i_interrupt_charge = vrai
		i_flag_snap_tir = vrai
		f_pilotage_bras_duration = 0.5
		v_target_stimulus_vis = v_tir_pos_help
		o_target_stimulus_vis = o_tir_target
		f_time_last_shoot = TIME_Get()
		
		ti_weapon = @"univ" i_weapon_ID[i_id_humain]
//		@"univ" i_weapon_ammunition_reserve[ti_weapon][i_id_humain] = @"univ" Weapon_ai_clipsize[ti_weapon]
		
		HL_MakeShoot(shoot)
		if(shoot != nofunc) macro_change_etat(shoot)
		if(!f_joy_norm) OrienteVers(o_tir_target)
	}
	else
	{
		if(!f_joy_norm) OrienteVers(to_cover_who)
		ForceRegardSur(to_cover_who, 0.5)
	}
}

// Orientation vers ennemi le plus proche
else if(!f_joy_norm)
{
	if(i_multicover_oriente_jack)
	{
		OrienteVers(to_obj)
		ForceRegardSur(to_obj, 0.5)
	}
	else
	{
		OrienteVersEnnemiProchePasDerriere()
	}
}

// Anims
///////////////////////////////////////////////
AI_Execute("H_exec_select_action")

if(i_id_humain != C_ID_Hayes) i_request_txt = -1
if(i_request_txt == Gene_C_cover_team || i_request_txt == Gene_C_cover_Jack)
{
	ti_weapon = @"univ" i_weapon_ID[C_ID_Hayes]
	if(!ti_weapon || (!@"univ" i_weapon_ammunition[ti_weapon][C_ID_Hayes] && !@"univ" i_weapon_ammunition_reserve[ti_weapon][C_ID_Hayes]))
		i_request_txt = -1
}

if(i_request_txt != -1 && !TIME_Elapsed(f_time_txt_cover, 20)) i_request_txt = -1
if(i_request_txt != -1) f_time_txt_cover = TIME_Get()

