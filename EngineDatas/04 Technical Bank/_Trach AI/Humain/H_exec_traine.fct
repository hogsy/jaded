// CODE
 #include "H_defines.var"

#define Ci_TRONC							0
#define Ci_BRAS_GAUCHE				1
#define Ci_BRAS_DROIT					2
#define Ci_JAMBE_GAUCHE				3
#define Ci_JAMBE_DROITE				4

int				ti_i
int				ti_k

object		to_bassin
object		to_bone

vector		tv_last_pos

to_bassin = ANI_CanalObjectGet(Anim_Canal_Bassin)

@to_bassin OBJ_PosSet(@o_soft_body_test OBJ_PosGet())
@to_bassin OBJ_BankingGeneralSet(@o_soft_body_test OBJ_SightGet(), @o_soft_body_test OBJ_BankingGet())

if (ao_soft_body_bone[0][0] == nobody)
{
	// INITIALISATION	
	for (ti_i = 0; ti_i < 5; ti_i++)
	{
		switch(ti_i)
		{
			case Ci_TRONC :
			
				for (ti_k = 0; ti_k < 4; ti_k++)
				{
					ao_soft_body_bone[ti_i][3 - ti_k] = ANI_CanalObjectGet(Anim_Canal_Tete + ti_k)
					av_soft_body_bone_pos[ti_i][3 - ti_k] = @ao_soft_body_bone[ti_i][3 - ti_k] OBJ_PosGet()
					if (ti_k)
						af_soft_body_bone_length[ti_i][3 - ti_k] = MATH_VecNorm(av_soft_body_bone_pos[ti_i][4 - ti_k] - av_soft_body_bone_pos[ti_i][3 - ti_k])
				}	
	
				break
	
			case Ci_BRAS_GAUCHE :
	
				for (ti_k = 0; ti_k < 3; ti_k++)
				{
					ao_soft_body_bone[ti_i][2 - ti_k] = ANI_CanalObjectGet(Anim_Canal_MainGauche + ti_k)
					av_soft_body_bone_pos[ti_i][2 - ti_k] = @ao_soft_body_bone[ti_i][2 - ti_k] OBJ_PosGet()
					if (ti_k)
						af_soft_body_bone_length[ti_i][2 - ti_k] = MATH_VecNorm(av_soft_body_bone_pos[ti_i][3 - ti_k] - av_soft_body_bone_pos[ti_i][2 - ti_k])
				}
			
				break
				
			case Ci_BRAS_DROIT :
	
				for (ti_k = 0; ti_k < 3; ti_k++)
				{
					ao_soft_body_bone[ti_i][2 - ti_k] = ANI_CanalObjectGet(Anim_Canal_MainDroite + ti_k)
					av_soft_body_bone_pos[ti_i][2 - ti_k] = @ao_soft_body_bone[ti_i][2 - ti_k] OBJ_PosGet()
					if (ti_k)
						af_soft_body_bone_length[ti_i][2 - ti_k] = MATH_VecNorm(av_soft_body_bone_pos[ti_i][3 - ti_k] - av_soft_body_bone_pos[ti_i][2 - ti_k])
				}
							
				break
	
			case Ci_JAMBE_GAUCHE :
	
				for (ti_k = 0; ti_k < 3; ti_k++)
				{
					ao_soft_body_bone[ti_i][2 - ti_k] = ANI_CanalObjectGet(Anim_Canal_PiedGauche + ti_k)
					av_soft_body_bone_pos[ti_i][2 - ti_k] = @ao_soft_body_bone[ti_i][2 - ti_k] OBJ_PosGet()
					if (ti_k)
						af_soft_body_bone_length[ti_i][2 - ti_k] = MATH_VecNorm(av_soft_body_bone_pos[ti_i][3 - ti_k] - av_soft_body_bone_pos[ti_i][2 - ti_k])
				}
				
				break
				
			case Ci_JAMBE_DROITE :
	
				for (ti_k = 0; ti_k < 3; ti_k++)
				{
					ao_soft_body_bone[ti_i][2 - ti_k] = ANI_CanalObjectGet(Anim_Canal_PiedDroit+ ti_k)
					av_soft_body_bone_pos[ti_i][2 - ti_k] = @ao_soft_body_bone[ti_i][2 - ti_k] OBJ_PosGet()
					if (ti_k)
						af_soft_body_bone_length[ti_i][2 - ti_k] = MATH_VecNorm(av_soft_body_bone_pos[ti_i][3 - ti_k] - av_soft_body_bone_pos[ti_i][2 - ti_k])
				}
	
				break
		}
	}
}

for (ti_i = 0; ti_i < 5; ti_i++)
{
	switch(ti_i)
	{
		case Ci_TRONC :
		
			av_soft_body_bone_pos[ti_i][0] = @ao_soft_body_bone[ti_i][0] OBJ_PosGet()

			for (ti_k = 1; ti_k < 3; ti_k++)
			{
//				DBG_RenderVector(av_soft_body_bone_pos[ti_i][ti_k],
//											MATH_VecNormalize(av_soft_body_bone_pos[ti_i][ti_k + 1] - av_soft_body_bone_pos[ti_i][ti_k]) * af_soft_body_bone_length[ti_i][ti_k],
//											color_rouge)

				tv_last_pos = av_soft_body_bone_pos[ti_i][ti_k]
				
				av_soft_body_bone_pos[ti_i][ti_k].z -=  2.0 * TIME_GetDt()
				av_soft_body_bone_pos[ti_i][ti_k] += av_soft_body_bone_speed[ti_i][ti_k] * (0.95 * TIME_GetDt())
				av_soft_body_bone_pos[ti_i][ti_k] -= av_soft_body_bone_pos[ti_i][ti_k - 1]
				MATH_VecSetNormalize(av_soft_body_bone_pos[ti_i][ti_k])
				av_soft_body_bone_pos[ti_i][ti_k] = MATH_VecBlendRotate(av_soft_body_bone_pos[ti_i][ti_k], @ao_soft_body_bone[ti_i][ti_k - 1] OBJ_BankingGet(), 0.5)
				av_soft_body_bone_pos[ti_i][ti_k] *= af_soft_body_bone_length[ti_i][ti_k]
				av_soft_body_bone_pos[ti_i][ti_k] += @ao_soft_body_bone[ti_i][ti_k - 1] OBJ_PosGet()
				
				@ao_soft_body_bone[ti_i][ti_k - 1] OBJ_Rotate_FromTo(cvector(0.0, 0.0, 1.0), @ao_soft_body_bone[ti_i][ti_k - 1] MATH_VecGlobalToLocal(av_soft_body_bone_pos[ti_i][ti_k] - @ao_soft_body_bone[ti_i][ti_k - 1] OBJ_PosGet()))
				
				av_soft_body_bone_pos[ti_i][ti_k] = @ao_soft_body_bone[ti_i][ti_k] OBJ_PosGet()
				
				av_soft_body_bone_speed[ti_i][ti_k] = (av_soft_body_bone_pos[ti_i][ti_k] - tv_last_pos) / TIME_GetDt()
			}

			break

		default:
				
			for (ti_k = 1; ti_k < 3; ti_k++)
			{
//				DBG_RenderVector(av_soft_body_bone_pos[ti_i][ti_k],
//											MATH_VecNormalize(av_soft_body_bone_pos[ti_i][ti_k + 1] - av_soft_body_bone_pos[ti_i][ti_k]) * af_soft_body_bone_length[ti_i][ti_k],
//											color_rouge)

				tv_last_pos = av_soft_body_bone_pos[ti_i][ti_k]
				
				av_soft_body_bone_pos[ti_i][ti_k].z -=  2.0 * TIME_GetDt()
				av_soft_body_bone_pos[ti_i][ti_k] += av_soft_body_bone_speed[ti_i][ti_k] * (0.95 * TIME_GetDt())
				
				to_bone = ao_soft_body_bone[ti_i][ti_k - 1] 
				@ao_soft_body_bone[ti_i][ti_k - 1] OBJ_Rotate_FromTo(cvector(0.0, 0.0, 1.0), @ao_soft_body_bone[ti_i][ti_k - 1] MATH_VecGlobalToLocal(av_soft_body_bone_pos[ti_i][ti_k] - @ao_soft_body_bone[ti_i][ti_k - 1] OBJ_PosGet()))
				
				av_soft_body_bone_pos[ti_i][ti_k] = @ao_soft_body_bone[ti_i][ti_k] OBJ_PosGet()
				
				av_soft_body_bone_speed[ti_i][ti_k] = (av_soft_body_bone_pos[ti_i][ti_k] - tv_last_pos) / TIME_GetDt()
			}

	}
}
 
