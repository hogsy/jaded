vector	tv_pos
vector	tv_direction
vector	tv_temp

int			ti_GFX_Impact

int			ti_color

color		tc_color

tv_pos = pop
tv_direction = pop
ti_color = pop

tc_color = ti_color

// FUMEE
ti_GFX_Impact = GFX_Add(13)																// Create the boum
			
GFX_MaterialSet(ti_GFX_Impact, get_SFX_light_and_smoke, -1)						// met le materiau
GFX_Seti(ti_GFX_Impact, 13101, 8)															// Materiau 0

GFX_Seti(ti_GFX_Impact, 13100, 20)															// *Buffer number of sprite
GFX_Seti(ti_GFX_Impact, 13106, 20)												// *number of sprite to generate

GFX_Setf(ti_GFX_Impact, 13003, 0.5)															// Time fase 1
GFX_Setf(ti_GFX_Impact, 13004, 0.5)															// Time fase 2

GFX_Seti(ti_GFX_Impact, 13107, 0)															// Sprites non triés

GFX_FlagSet(ti_GFX_Impact, 0 , 1)
GFX_FlagSet(ti_GFX_Impact, 2 , 1)

GFX_Setf(ti_GFX_Impact, 13012, 0.75)														// Time random

GFX_Setf(ti_GFX_Impact, 13000, 0.05)														// Growing speed min
GFX_Setf(ti_GFX_Impact, 13001, 0.2)														// Growing speed max
GFX_Setf(ti_GFX_Impact, 13002, 0.0001)													// Friction Grow

GFX_Setf(ti_GFX_Impact, 13005, 0.05)														// Creation size min
GFX_Setf(ti_GFX_Impact, 13006, 0.1)														// Creation size max

GFX_Setv(ti_GFX_Impact, 13203, cvector(0.02, 0.02, 0.02))							// friction speed

tc_color = COLOR_SetRGBA(COLOR_GetR(tc_color), COLOR_GetG(tc_color), COLOR_GetB(tc_color), 0x40)
GFX_Seti(ti_GFX_Impact, 13103, tc_color)											// Color fase 0
tc_color = COLOR_SetRGBA(COLOR_GetR(tc_color), COLOR_GetG(tc_color), COLOR_GetB(tc_color), 0x20)
GFX_Seti(ti_GFX_Impact, 13104, tc_color)											// Color fase 1
tc_color = COLOR_SetRGBA(COLOR_GetR(tc_color), COLOR_GetG(tc_color), COLOR_GetB(tc_color), 0x0)
GFX_Seti(ti_GFX_Impact, 13105, tc_color)											// Color fase 2

GFX_Setf(ti_GFX_Impact, 13009, 0.5)														// Norm speed min
GFX_Setf(ti_GFX_Impact, 13010, 1.5)														// Norm speed max

GFX_Setf(ti_GFX_Impact, 13008, 0.005)														// generation rate

GFX_Setv(ti_GFX_Impact, 13205, Cv_NullVector)										// Mainposspeed
GFX_Setv(ti_GFX_Impact, 13206, Cv_NullVector)										// Mainpossfriction
	
GFX_Setf(ti_GFX_Impact, 13007, -2.0)															// Gravity
	
GFX_Setv(ti_GFX_Impact, 13200, tv_pos) 								// Creation Pos

tv_temp = tv_direction * 2.0
GFX_Setv(ti_GFX_Impact, 13201, tv_temp + cvector(-1.0, -1.0, -1.0))												// Speed min
GFX_Setv(ti_GFX_Impact, 13202, tv_temp + cvector(1.0, 1.0, 1.0))											// Speed max
		
//GFX_Setv(ti_GFX_Impact, 13207, @to_hand OBJ_BankingGet() * 0.25)	// CreaPosAxe X
//GFX_Setv(ti_GFX_Impact, 13208, OBJ_BankingGet() * 0.5)				// CreaPosAxe Y


// Etincelles
ti_GFX_Impact = GFX_Add(9)
GFX_FlagSet(ti_GFX_Impact , 0, 1)
GFX_FlagSet(ti_GFX_Impact , 2, 1)
GFX_MaterialSet(ti_GFX_Impact , get_SFX_light_and_smoke, 5)
GFX_Setf(ti_GFX_Impact, 9000, Cf_PiBy2)									// angle d'ouverture
GFX_Setf(ti_GFX_Impact, 9001, 1.0)											// vitesse initiale minimum
GFX_Setf(ti_GFX_Impact, 9002, 3.0)										// vitesse initiale maximum
GFX_Setf(ti_GFX_Impact, 9003, 0.95 )											// friction
GFX_Setf(ti_GFX_Impact, 9004, 0.02)											// épaisseur
GFX_Setf(ti_GFX_Impact, 9005, 0.2)											// durée de vie minimum
GFX_Setf(ti_GFX_Impact, 9006, 0.4)											// durée de vie maximum
GFX_Setf(ti_GFX_Impact, 9007, 4.0 )											// multiplicateur de longueur
GFX_Setf(ti_GFX_Impact, 9008, 0.005 )										// generation périod
GFX_Setf(ti_GFX_Impact, 9009, 0.2)											// durée de mort minimun
GFX_Setf(ti_GFX_Impact, 9010, 0.4)											// durée de mort maximun
GFX_Seti(ti_GFX_Impact, 9100, 5)											// Nombre
GFX_Seti(ti_GFX_Impact, 9102, 0b11000)									// Flags (1 => agrandissement centré)
GFX_Setv(ti_GFX_Impact, 9200, tv_pos)										// Origine des étincelles
GFX_Setv(ti_GFX_Impact, 9201, tv_direction)								// Direction
GFX_Setv(ti_GFX_Impact, 9202, cvector(0.0, 0.0, -2.0) )					// gravity
GFX_Seti(ti_GFX_Impact, 9101, tc_color) 									// couleur
