#include "H_Action.var"

int		ti_action_nb
int		ti_anim_index
int		tai_action[100]
int		ti_index

ti_action_nb = 0

if (f_time_start_etat != -1.0)
{
	f_time_start_etat = -1.0
	i_test_anim = 0
}



tai_action[ti_action_nb] = Action_Humain_Normal_Attente
ti_action_nb++
tai_action[ti_action_nb] = Action_Cache_Marche
ti_action_nb++
tai_action[ti_action_nb] = Action_Cache_MarcheF
ti_action_nb++
tai_action[ti_action_nb] = Action_Humain_Blesse_Marche
ti_action_nb++
tai_action[ti_action_nb] = Action_Humain_Blesse_MarcheBas
ti_action_nb++
tai_action[ti_action_nb] = Action_Cache_Trot
ti_action_nb++
tai_action[ti_action_nb] = (Action_Humain_Normal_Marche)
ti_action_nb++
tai_action[ti_action_nb] = (Action_Humain_Normal_Trot)
ti_action_nb++
tai_action[ti_action_nb] = (Action_Stress_Attente)
ti_action_nb++
tai_action[ti_action_nb] = (Action_Stress_Marche)
ti_action_nb++
tai_action[ti_action_nb] = (Action_Stress_Marche_Rapide)
ti_action_nb++
tai_action[ti_action_nb] = (Action_Stress_Trot)
ti_action_nb++
tai_action[ti_action_nb] = (Action_Stress_Course)
ti_action_nb++
tai_action[ti_action_nb] = (Action_Stress_Attente)
ti_action_nb++
tai_action[ti_action_nb] = (Action_Stress_Recul)
ti_action_nb++
tai_action[ti_action_nb] = (Action_Terrorise_Recule)
ti_action_nb++
tai_action[ti_action_nb] = (Action_Att_Eau_Taille)
ti_action_nb++
tai_action[ti_action_nb] = (Action_Marche_Eau_Taille)
ti_action_nb++
tai_action[ti_action_nb] = (Action_Recule_Eau_Taille)
ti_action_nb++
tai_action[ti_action_nb] = (Action_Recule_Eau_Taille_Terrorise)
ti_action_nb++
tai_action[ti_action_nb] = (Action_Marche_Eau_cou)
ti_action_nb++
tai_action[ti_action_nb] = (Action_Humain_NageAtt)
ti_action_nb++
tai_action[ti_action_nb] = (Action_Humain_Nage)
ti_action_nb++
tai_action[ti_action_nb] = (Action_Stress_Attente)
ti_action_nb++
tai_action[ti_action_nb] = (Action_Stress_Marche)
ti_action_nb++
tai_action[ti_action_nb] = (Action_Stress_Marche_Rapide)
ti_action_nb++
tai_action[ti_action_nb] = (Action_Stress_Trot)
ti_action_nb++
tai_action[ti_action_nb] = (Action_Stress_Course)
ti_action_nb++
tai_action[ti_action_nb] = (Action_Stress_Attente)
ti_action_nb++
tai_action[ti_action_nb] = (Action_Stress_Recul)
ti_action_nb++
tai_action[ti_action_nb] = (Action_Terrorise_Recule)
ti_action_nb++

if (IO_KeyJustPressed(VK_SPACE))
	i_test_anim = MATH_Modulo(i_test_anim + 1, ti_action_nb)

ACT_ActionSet(tai_action[i_test_anim] | Ci_ActionSet_Force_No_Blend)

i_flag_leg_IK[Ci_IK_pied_droit] = faux
i_flag_leg_IK[Ci_IK_pied_gauche] = faux

ti_index = STR_CreateText("Action : ", cvector(0.1, 0.05, 0.0), 0.0)
STR_AppendInt(ti_index, ACT_ActionGet())
ti_index = -1

switch(i_id_humain)
{
	case C_ID_Hayes :
		ti_index = STR_CreateText("Hayes : ", cvector(0.1, 0.1, 0.0), 0.0)
		break
	case C_ID_Denham :
		ti_index = STR_CreateText("Denham : ", cvector(0.1, 0.15, 0.0), 0.0)
		break
	case C_ID_Ann :
		ti_index = STR_CreateText("Ann : ", cvector(0.1, 0.2, 0.0), 0.0)
		break
}

STR_AppendFloat(ti_index, ANI_RatioGet(0), 2)

if (H_Get_Move_Coef(Ci_IK_pied_gauche) == 1.0)
	DBG_RenderVector(@ao_IK_bones[Ci_IK_pied_gauche][2] OBJ_PosGet(), Cv_VerticalVector * 10.0, color_jaune)

if (H_Get_Move_Coef(Ci_IK_pied_droit) == 1.0)
	DBG_RenderVector(@ao_IK_bones[Ci_IK_pied_droit][2] OBJ_PosGet(), Cv_VerticalVector * 10.0, color_jaune)

DYN_SpeedSetVector(Cv_NullVector)