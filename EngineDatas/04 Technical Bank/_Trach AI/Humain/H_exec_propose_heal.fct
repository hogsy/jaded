// --------------------------------------------------------------------------------------------------------------------------------
#include "H_defines.var"
// --------------------------------------------------------------------------------------------------------------------------------
messageid		tmid_LNK
object			to_serveur
int					ti_rank
int					ti_danger
float				tf_dist
message		EVT_msg_filter
messageid 		EVT_ID
messageid 		tmid_info
vector			tv_temp
int					ti_index
int					ti_ground_ID
int					ti_manual
object			to_obj
int 				tient
// --------------------------------------------------------------------------------------------------------------------------------

tmid_LNK = pop
to_serveur = MSG_GlobalGetGao(tmid_LNK, SERVEUR)

// -----------------------  ANN -------------------------------------------------------------------------------------

// perso qui peut soigner ?
if(i_id_humain != C_ID_Ann) return
if(i_soin_interdit) return
if(@"univ" LIFE_HumainEtat[i_id_humain] == Life_ETAT_Agonisant) return

// Je ne peux soigner que les agonisants
ti_index = Humains_GetIndex(to_serveur)
if(ti_index == C_ID_Jack) return  /////  PAS JACK C FINI C VIRE
if(@"univ" LIFE_HumainEtat[ti_index] == Life_ETAT_Normal) return
if(ti_index != C_ID_Jack && @"univ" LIFE_HumainEtat[ti_index] == Life_ETAT_Mort) return

// Prio sur jack mort
if(ti_index != C_ID_Jack && @"univ" LIFE_HumainEtat[C_ID_Jack] == Life_ETAT_Mort) return

// Trop loin
tf_dist = OBJ_SqrDistHorz(to_serveur)
//if (tf_dist > 900) return

// Jack
if(ti_index == C_ID_Jack && @"univ" LIFE_HumainEtat[C_ID_Jack] != Life_ETAT_Mort)
{
	if(!IO_ButtonPressed(joy_button_R2)) return
	if(tf_dist > 2 * 2) return
	to_obj = AI_MainActorGet(C_ID_Jack)
	if(!@"KingKong/Humain" to_obj i_flag_arme_basse) return
}

if(ti_index == C_ID_Jack && @"univ" LIFE_HumainEtat[C_ID_Jack] == Life_ETAT_Mort)
{
//	if(!TIME_Elapsed(@"univ" f_last_extra_ball, 5 * 60)) // 5 minutes
//		return
}

// S'il est en zone dangereuse, je n'y vais pas
if(ZoneDangereuse(@to_serveur OBJ_PosGet())) return

// Si je dois tenir la position, pas de test de dangerosité
tient = faux
if(CacheTientLaPos(o_hide_0D)) tient = vrai

if(!tient && @"univ" LIFE_HumainEtat[C_ID_Jack] != Life_ETAT_Mort)
{
	// Si je suis la cible d'une bestiole, je n'y vais pas
	if(HasInteret()) return
}

// Chemin
if(!TIME_Elapsed(f_time_propose_heal, 2) && @"univ" LIFE_HumainEtat[C_ID_Jack] != Life_ETAT_Mort) return
f_time_propose_heal = TIME_Get()
ti_danger = HL_CheminDangereux(@to_serveur OBJ_PosGet())
if(ti_danger == -1) return

LNK_ClientPropose(tmid_LNK, tf_dist)	 