#include "H_defines.var"

int			ti_i
int			ti_frame_num
int			ti_flag_freeze_bone
		
float		tf_angle
float		tf_offset
float		tf_bassin_offset
float		tf_norm
float		tf_X
float		tf_Y
float		tf_coef
float		tf_temp

vector	tv_pied_pos
vector	tv_collide_pos
vector	tv_flexion_dir
vector	tv_ray_dir
vector	tv_last_pos
vector	tv_start_axis
vector	tv_dest_axis
vector	tv_ray_normale
vector	tv_bassin_dest_pos
vector	tv_dest_pos
vector	tv_X
vector	tv_start_sight, tv_dest_sight
object	to_bone, to_head

object	to_bassin
object	to_torse
object	to_obj, to_obj1, to_obj2

vector	tv_temp
vector	tv_pos_main

float		tf_Z

#define Cf_offset_min						-4.0
#define Cf_offset_max						2.0
#define Cf_walk_Z_blend_speed			12.0

if (OBJ_FlagsStatusGet() & OBJ_C_StatusFlag_Culled)
	return

if(!i_flag_ik_bras) return
i_flag_ik_bras = faux

for (ti_i = 2; ti_i < 4; ti_i++)
{
	i_flag_leg_IK[ti_i]	= faux
	f_IK_speed[ti_i] = TIME_GetDt() * 6.0
}

// ON EXECUTE L'IK =============================================================================================================
for (ti_i = 2; ti_i < 4; ti_i++)
{
	if (i_flag_leg_IK[ti_i])
	{
		f_IK_coef[ti_i] += MATH_FloatMin(1.0 - f_IK_coef[ti_i], TIME_GetDt() * 40.0)	
	
		tv_pied_pos = MATH_VecBlend(MATH_VecLocalToGlobal(v_IK_local_offset[ti_i]), v_IK_dest_pos[ti_i] - @ao_IK_bones[ti_i][0] OBJ_PosGet(), f_IK_speed[ti_i])
		v_IK_local_offset[ti_i] = MATH_VecGlobalToLocal(tv_pied_pos)
		tv_pied_pos += @ao_IK_bones[ti_i][0] OBJ_PosGet()
	}
	else
	{
		f_IK_coef[ti_i] -= MATH_FloatMin(f_IK_coef[ti_i], TIME_GetDt() * 12.0)
	
		tv_pied_pos = MATH_VecLocalToGlobal(v_IK_local_offset[ti_i])
		tv_pied_pos += @ao_IK_bones[ti_i][0] OBJ_PosGet()
	}
	
	tv_flexion_dir = @ao_IK_bones[ti_i][0] OBJ_BankingGet()
	OBJ_LIB_IK(ao_IK_bones[ti_i][0] , ao_IK_bones[ti_i][1] , af_IK_bones_length[ti_i][0], af_IK_bones_length[ti_i][1], tv_pied_pos, tv_flexion_dir, f_IK_coef[ti_i])
}

