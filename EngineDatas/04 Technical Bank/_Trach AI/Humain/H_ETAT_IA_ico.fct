#include "H_defines.var"

object	to_main_actor
 
int			ti_action

vector	tv_new_sight

// SORTIE ETAT ===================================================================
if (i_sort_etat)
{
	i_sort_etat = faux

	o_grabed_actor = nobody
	i_grabed_event_ID = -1
	
	return
}
 
// INITIALISATION ETAT ==============================================================
if (i_etat_courant != ETAT_commun_ico)
{
	i_etat_courant = ETAT_commun_ico

	if (fct_last_etat)
	{
		i_sort_etat = vrai
		AI_Execute(fct_last_etat)
	}
	
	fct_main_etat = AI_TrackCurGet()

	ACT_ActionSet(Action_Normal_Attente)
}
 
// ANALYSE =======================================================================
if (EVENT_GetIndice(i_grabed_event_ID) == -1)
{
	macro_change_etat("H_ETAT_IA_suivi")
}

// COMPORTEMENT =================================================================
to_main_actor = o_grabed_actor

if (@"KingKong/Humain" to_main_actor i_flag_crouch)
{
	if (!i_flag_crouch)
		f_time_crouch += TIME_GetDt()
}
else
	f_time_crouch -= MATH_FloatMin(f_time_crouch, TIME_GetDt())
	
if (!i_flag_crouch && f_time_crouch >= f_delay_crouch)
{
	f_delay_crouch = MATH_RandFloat(0.2, 0.4)
	i_flag_crouch = vrai
}
else if (!f_time_crouch)
{
	f_delay_crouch = MATH_RandFloat(0.2, 0.4)
	i_flag_crouch = faux
}

v_joy_dir = @to_main_actor OBJ_PosGet()
v_joy_dir -= OBJ_PosGet()
v_joy_dir.z = 0.0

f_joy_norm = MATH_VecNorm(v_joy_dir)

if (f_joy_norm)
	v_joy_dir /= f_joy_norm
else
	v_joy_dir = OBJ_SightGet()

if (f_joy_norm > 1.25)
	i_flag_run = vrai
else if (f_joy_norm < 0.75)
{
	i_flag_run = faux
	f_joy_norm = 0.0
}

AI_Execute("H_exec_select_action")

if (MATH_Modulo(ACT_ActionGet(), 10) == 2)
{
	// On court
//	ACT_ActionFrequencySet(ACT_ActionGet(), ACT_FrequencyGet(ACT_ActionGet(), ACT_ActionItemGet()) * MATH_FloatLimit(f_joy_norm, 1.0, 1.5))
	ANI_FrequencySet(0, ACT_FrequencyGet( ACT_ActionGet(), ACT_ActionItemGet() ) * MATH_FloatLimit(f_joy_norm, 1.0, 1.5))
}	

