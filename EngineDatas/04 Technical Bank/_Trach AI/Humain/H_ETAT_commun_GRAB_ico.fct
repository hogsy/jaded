#include "H_defines.var"

int			ti_i
int			ti_numero
int			ti_index
int			ti_flag_followed_crouch

// SORTIE ETAT ===================================================================
if (i_sort_etat)
{
	i_sort_etat = faux
	ao_CL[Ci_LNK_GRAB_ICO] = LNK_ClientGet(Ci_LNK_GRAB_ICO, amid_CL_LIAISON_ID[Ci_LNK_GRAB_ICO], faux, nofunc, nofunc, nofunc)
	return
}

// INITIALISATION ETAT ==============================================================
if (i_etat_courant != ETAT_commun_GRAB_ico)
{
	i_dernier_etat = i_etat_courant
	i_etat_courant = ETAT_commun_GRAB_ico

	if (fct_last_etat)
	{
		i_sort_etat = vrai
		AI_Execute(fct_last_etat)
	}

	fct_last_etat = AI_TrackCurGet()

	for (ti_i = 0; ti_i < Ci_LNK_TYPE_NB; ti_i++)
		ai_SRV_ENABLE[ti_i] = faux

	ai_SRV_ENABLE[Ci_LNK_GRAB_ICO]			= vrai
	ai_SRV_ENABLE[Ci_LNK_GRAB_CROCO]		= vrai
	ai_SRV_ENABLE[Ci_LNK_GRAB_TRAP]		= vrai

	DYN_SpeedSetVector( Cv_NullVector)
	DYN_TractionSet( Cv_NullVector)
	
	ACT_ActionSet(Action_Normal_Attente)

	f_time_start_etat = 0.0
}
else
{
	f_time_start_etat += TIME_GetDt()
}
 
// ANALYSE  =====================================================================
AI_Execute("H_exec_read_joy")

AI_Execute("H_exec_main_context_get")

AI_Execute("H_exec_read_world")

// PAF
AI_Execute("H_exec_ch_Stimulus_Paf")
if (o_paf_sender)
	macro_change_etat("H_ETAT_commun_paf")

// RECHERCHE SERVEUR
AI_Execute("H_exec_serveur_get")	

if (ao_SRV[Ci_LNK_GRAB_ICO] == nobody)
{
	// Fin du grab
	macro_change_etat(fct_main_etat)
}

AI_Execute("H_exec_display_grabed")

// COMPORTEMENT =================================================================

//// JE SUIS SERVEUR ICO
//if (f_time_start_etat > 0.1)
//	ao_CL[Ci_LNK_GRAB_ICO] = LNK_ClientGet(Ci_LNK_GRAB_ICO, amid_CL_LIAISON_ID[Ci_LNK_GRAB_ICO], vrai)
//else
//	ao_CL[Ci_LNK_GRAB_ICO] = LNK_ClientGet(Ci_LNK_GRAB_ICO, amid_CL_LIAISON_ID[Ci_LNK_GRAB_ICO], faux, nofunc)

ti_flag_followed_crouch	= faux

if (@ao_SRV[Ci_LNK_GRAB_ICO] AI_IsModel("KingKong/Humain"))
{
	if (@"KingKong/Humain" ao_SRV[Ci_LNK_GRAB_ICO] i_flag_crouch)
		ti_flag_followed_crouch = vrai
}
else if (MATH_Modulo(i_followed_context, 10) == C_EVENT_CONTEXT_ACCROUPI)
{
	ti_flag_followed_crouch = vrai
}	

if (ti_flag_followed_crouch)
{
	if (!i_flag_crouch)
		f_time_crouch += TIME_GetDt()
}
else
	f_time_crouch -= MATH_FloatMin(f_time_crouch, TIME_GetDt())
	
if (!i_flag_crouch && f_time_crouch >= f_delay_crouch)
{
	f_delay_crouch = MATH_RandFloat(0.2, 0.4)
	i_flag_crouch = vrai
}
else if (!f_time_crouch)
{
	f_delay_crouch = MATH_RandFloat(0.2, 0.4)
	i_flag_crouch = faux
}

v_joy_dir = @ao_SRV[Ci_LNK_GRAB_ICO] OBJ_PosGet()
v_joy_dir -= OBJ_PosGet()
v_joy_dir.z = 0.0

f_joy_norm = MATH_VecNorm(v_joy_dir)

if (f_joy_norm)
	v_joy_dir /= f_joy_norm
else
	v_joy_dir = OBJ_SightGet()

if (f_joy_norm > 1.25)
	i_flag_run = vrai
else if (f_joy_norm < 0.75)
{
	i_flag_run = faux
	f_joy_norm = 0.0
}

AI_Execute("H_exec_select_action")

if (MATH_Modulo(ACT_ActionGet(), 10) == 2)
{
	// On court
	ANI_FrequencySet(0, ACT_FrequencyGet( ACT_ActionGet(), ACT_ActionItemGet() ) * MATH_FloatLimit(f_joy_norm, 1.0, 1.5))
}

