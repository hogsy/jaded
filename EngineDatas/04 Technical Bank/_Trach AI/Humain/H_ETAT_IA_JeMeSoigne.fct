#include "H_defines.var"
#include "H_action.var"


int				ti_i, ti_flag
int				ti_context

float			tf_liferatio
float			tf_heal
float			tf_norm
int				ti_min

vector		tv_temp, tv_temp1

messageid	msg_id, tmid_info

// SORTIE ETAT ===================================================================
if (i_sort_etat)
{
	i_sort_etat = faux
	return
}

// INITIALISATION ETAT ==============================================================
if (i_etat_courant != ETAT_IA_jemesoigne)
{
	i_dernier_etat = i_etat_courant
	i_etat_courant = ETAT_IA_jemesoigne
	f_time_psss = 0

	if (fct_last_etat)
	{
		i_sort_etat = vrai
		AI_Execute(fct_last_etat)
	}

	fct_last_etat = AI_TrackCurGet()
	for (ti_i = 0; ti_i < Ci_LNK_TYPE_NB; ti_i++) ai_SRV_ENABLE[ti_i] = faux

	DYN_GravitySet(Cv_NormalGravity)
	DYN_FrictionVectorSet(cvector(1.0, 1.0, 0.0))

	f_time_start_etat = 0.0
}
else
{
	f_time_start_etat += TIME_GetDt()
}

	
// ANALYSE =======================================================================
AI_Execute("H_exec_read_world")
AI_Execute("H_exec_serveur_get")
AI_Execute("H_exec_change_etat")
AI_Execute("H_exec_ch_Stimulus_Paf")
if (o_paf_sender) macro_change_etat("H_ETAT_IA_paf")

// COMPORTEMENT =================================================================	
	
// Vie
if(f_time_psss > 3)
{
	f_time_psss = 0	
	@"univ" LIFE_HumainEtat[ i_id_humain ] = Life_ETAT_Normal
	@"univ" LIFE_HumainPeau[i_id_humain] = PEAU_SOIGNE
	macro_change_etat(fct_main_etat)
}
	
f_time_psss += TIME_GetDt()
i_flag_suivi_regard = faux

// Anim
if(i_flag_stunned_crouch)
{
	ACT_ActionSet1(Action_Ann_SeSoigneAssis)
	i_flag_crouch = vrai
}
else
{
	ACT_ActionSet1(Action_Ann_SeSoigne)
}

DYN_SpeedSetVector(Cv_NullVector)
