#include "H_defines.var"
#include "H_action.var"


int			ti_numero
int			ti_index
int			ti_i
int			ti_context
int			ti_min
int			ti_orient
int			ti_disable

vector	tv_dest_pos 
vector	tv_temp

float		tf_soin
float		tf_max
float		tf_temp

messageid		msg_id
messageid		tmid_info

object	to_blesse
object	to_obj
object	to_forwho
object	to_jack

int			ti_soin_dangereux_1
int			ti_soin_dangereux_2


to_jack = AI_MainActorGet(C_ID_Jack)

// SORTIE ETAT ===================================================================
if (i_sort_etat)
{
	if ( ao_SRV[Ci_LNK_INTERACTION] )
	{
		msg_id = amid_SRV_LIAISON_ID[Ci_LNK_INTERACTION]
		ao_SRV[Ci_LNK_INTERACTION] = LNK_ServeurGet(Ci_LNK_INTERACTION, msg_id, faux, nofunc, nofunc)
	}
	
	i_sort_etat = faux	
	i_flag_jesoigne = faux
	i_flag_big_trot = faux
	
	@"KingKong/Humain" to_jack i_soin_en_cours = faux
	COL_ColMapActivationSet(all, none)
	COL_ColSetActivationSet(C_bit_zdm_pied, 0)
	ResetPath()
	return
}

// INITIALISATION ETAT ==============================================================
if (i_etat_courant != ETAT_IA_Ann_Heal)
{
	i_dernier_etat = i_etat_courant
	i_etat_courant = ETAT_IA_Ann_Heal
	f_time_psss = 0
	i_soin_en_cours = 0
	i_heal_move = 0
	f_time_heal_2 = 0

	if (fct_last_etat)
	{
		i_sort_etat = vrai
		AI_Execute(fct_last_etat)
	}

	fct_last_etat = AI_TrackCurGet()

	for (ti_i = 0; ti_i < Ci_LNK_TYPE_NB; ti_i++)
		ai_SRV_ENABLE[ti_i] = faux

	// AUTORISATIONS DES GRABS
	ai_SRV_ENABLE[Ci_LNK_GRAB_RAPTOR]	= vrai

	// AUTORISATION DES AIDES
	ai_SRV_ENABLE[Ci_LNK_INTERACTION]		= vrai
	ai_SRV_ENABLE[Ci_LNK_PSSS]					= vrai

	DYN_SpeedSetVector( Cv_NullVector)
	DYN_TractionSet( Cv_NullVector)
	
	f_time_start_etat = 0.0
	
//	to_forwho = ao_SRV[Ci_LNK_INTERACTION]
//	if(to_forwho == AI_MainActorGet(C_ID_Jack) && (OBJ_SqrDist(to_forwho) > 4 * 4))
//	{
//		if(i_id_humain == C_ID_Ann)
//		{
//			if(i_in_fight)
//				AskText(TEXTE_CouvreHeal, GeneAnn_C_see_Jack_hurt_urg, 5, nobody) // j'y vais
//			else
//				AskText(TEXTE_CouvreHeal, GeneAnn_C_see_Jack_hurt_low, 5, nobody) // j'y vais
//		}
//		else
//		{
//			if(i_in_fight)
//				AskText(TEXTE_CouvreHeal, GeneJim_C_see_Jack_hurt_urg, 5, nobody) // j'y vais
//			else
//				AskText(TEXTE_CouvreHeal, GeneJim_C_see_Jack_hurt_low, 5, nobody) // j'y vais
//		}
//	}
}
else
{
	f_time_start_etat += TIME_GetDt()
}

// ANALYSE  =====================================================================

// Si c'est jack mort, je rush
to_obj = ao_SRV[Ci_LNK_INTERACTION]
if(to_obj == to_jack && @"univ" LIFE_HumainEtat[C_ID_Jack] == Life_ETAT_Mort)
{
	i_flag_rush = vrai
	i_flag_big_trot = vrai
}

// Jack meurt pendant que je soigne, faut aller vers lui
if(to_obj != to_jack && @"univ" LIFE_HumainEtat[C_ID_Jack] == Life_ETAT_Mort)
	macro_change_etat("H_ETAT_IA_paf")

// Pssss	
OBJ_Me().des_int1 = Ci_DISPLAY_PSSS
if(ao_SRV[Ci_LNK_PSSS])
{
	ForceRegardSurToujours(to_jack, 1.0)
	ao_SRV[Ci_LNK_PSSS] = LNK_ServeurGet(Ci_LNK_PSSS, amid_SRV_LIAISON_ID[Ci_LNK_PSSS], faux, nofunc, nofunc)
	if(i_in_fight)
		i_request_txt = Gene_C_occupied_urg
	else
		i_request_txt = Gene_C_occupied_med
}

AI_Execute("H_exec_read_world")
AI_Execute("H_exec_serveur_get")
AI_Execute("H_exec_change_etat")
AI_Execute("H_exec_ch_Stimulus_Paf")
if (o_paf_sender) macro_change_etat("H_ETAT_IA_paf")

to_forwho = ao_SRV[Ci_LNK_INTERACTION]
if ( to_forwho == nobody) macro_change_etat(fct_main_etat)

// SORTIE MANUELLE JACK
///////////////////////////////////////////
if( to_forwho == to_jack && @"univ" LIFE_HumainEtat[C_ID_Jack] != Life_ETAT_Mort)
{
	if(!IO_ButtonPressed(joy_button_R2)) macro_change_etat(fct_main_etat)	
	if(!@"KingKong/Humain" to_forwho i_flag_arme_basse) macro_change_etat(fct_main_etat)
	if(!i_heal_move) i_heal_move  = 1
	@"KingKong/Humain" to_forwho i_soin_en_cours = vrai
}
///////////////////////////////////////////

ti_index = Humains_GetIndex(to_forwho)

// Position destination
if(!i_heal_move)
{
	if(f_time_heal_2 > 0.5 && f_time_heal_2 < 1.0)
		v_way_destpos = @to_forwho OBJ_PosGet() + @to_forwho OBJ_HorizonGet()
	else if(f_time_heal_2 > 1.0 && f_time_heal_2 < 1.5)
		v_way_destpos = @to_forwho OBJ_PosGet() - @to_forwho OBJ_HorizonGet()
	else
		v_way_destpos = @to_forwho OBJ_PosGet() + (@to_forwho OBJ_SightGet() * 1.0)
}
else
	v_way_destpos = @to_forwho OBJ_PosGet()
	
if(MATH_VecNorm(v_way_destpos - OBJ_PosGet()) < 3)
{
	Humains_LeaveObjectInHand()
}

// TEXTES =====================================================================

// Si un danger potentiel sur moi ou lui, demande à l'aide (sauf si on soigne jack, ou si on est arrivé)
if(i_in_fight)
{
	ti_soin_dangereux_1 = EVENT_InfoCanGaoSeeGao(nobody, OBJ_Me(), tmid_info)
	ti_soin_dangereux_2 = EVENT_InfoCanGaoSeeGao(nobody, ao_SRV[Ci_LNK_INTERACTION], tmid_info)
	if(ti_soin_dangereux_1 || ti_soin_dangereux_2)
	{
		if(to_forwho != to_jack && ( f_time_psss == 0 ) && !i_heal_move)
		{
//			if(i_flag_culled && f_time_start_etat < 1)
//			{
//				AskText(TEXTE_CouvreHeal, Gene_C_call_far, 10, nobody)	// he jack !
//				ti_canmove = faux
//				v_way_destpos = OBJ_PosGet()
//			}
//			else 
			if(OBJ_SqrDist(to_forwho) > 4 * 4)
			{
				AskText(TEXTE_CouvreHeal, Gene_C_see_hurt_urg, 10, nobody) // couvre moi j'y vais
			}		
		}
		else if(to_forwho != to_jack && ( f_time_psss > 1 ))
		{
			if(OBJ_SqrDist(to_jack) > 5 * 5)
				AskText(TEXTE_CouvreHeal, Gene_C_call_cover, 10, nobody) // a l'aide !
		}
	}
}

// COMPORTEMENT ==============================================================

// DEPLACEMENT
msg_id = amid_SRV_LIAISON_ID[Ci_LNK_INTERACTION]	

// Deplacement jusqu'a celui qui veut se faire soigner
to_obj = ao_SRV[Ci_LNK_INTERACTION]
if(to_obj == to_jack && @"univ" LIFE_HumainEtat[C_ID_Jack] == Life_ETAT_Mort && i_flag_jesoigne)
{
	i_flag_rush = vrai
	i_flag_arrived = vrai
}
else
{
	if(!i_heal_move)
	{
		f_time_heal_1 = 0
		f_min_dist_attend = 1
		i_flag_disable_marche = vrai
	}
	else if(i_heal_move == 1)
	{
		f_time_heal_1 += TIME_GetDt()
		f_min_dist_attend = 0.5
		if(f_time_heal_1 > 1) f_min_dist_attend = 1.5
	}
		
	f_joy_norm = 0.0
	i_flag_disable_recul = vrai
	CommonMove()
	i_flag_jesoigne = faux
}

if(i_flag_arrived)
{
	// D'abord deplacement devant, puis deplacement vers le perso
	if(!i_heal_move)
	{
		i_heal_move = 1
		return
	}
	else
	{
		i_heal_move = 2
	}
	
	// Texte
	if(f_time_psss == 0)
	{
		if(i_id_humain == C_ID_Ann && ti_index != C_ID_Jack)
		{
			AskText(TEXTE_HealBeg, GeneAnn_C_cure_friend, 40, nobody)
		}
		else if(i_id_humain == C_ID_Ann && ti_index == C_ID_Jack)
		{
			AskText(TEXTE_HealBeg, GeneAnn_C_cure_Jack_start, 40, nobody)
		}
	}
	
	// Anim
	i_flag_jesoigne = vrai
	to_obj = ao_SRV[Ci_LNK_INTERACTION]
	ti_orient = vrai
	if(to_obj == to_jack && @"univ" LIFE_HumainEtat[C_ID_Jack] == Life_ETAT_Mort)
	{
		if(ACT_ActionGet() != Action_Ann_SoigneJack)
		{
			OBJ_PosSet(@to_obj OBJ_PosGet())
			COL_StartMatrixSet(@to_obj OBJ_PosGet())
			OBJ_BankingGeneralSet(@to_obj OBJ_SightGet(), @to_obj OBJ_BankingGet())
			ACT_ActionSet1(Action_Ann_SoigneJack)
		}
		
		COL_ColMapActivationSet(none, all)
		COL_ColSetActivationSet(0, C_bit_zdm_pied)
		ti_orient = faux
		i_flag_suivi_regard = faux
		
		tv_temp = DYN_SpeedGetVector()
		tv_temp.z = 0
		DYN_SpeedSetVector(tv_temp)
		DYN_GravitySet(Cv_NullVector)
	}
	else if(@"KingKong/Humain" to_obj i_flag_crouch)
		ACT_ActionSet1( Action_Ann_SoigneG )
	else
	{
		// Recalage soin jack
		if(to_obj == to_jack)
		{
			tv_temp = @to_obj OBJ_SightGet() * 0.65
			tv_temp += @to_obj OBJ_PosGet()
			tv_temp = MATH_VecBlend(OBJ_PosGet(), tv_temp, 5 * TIME_GetDt())
			OBJ_PosSet(tv_temp)
		}
		
		ACT_ActionSet1( Action_Ann_SoigneDebout )
	}
	
	// Orientation vers lui	
	if(ti_orient)
	{
		v_joy_dir = @ao_SRV[Ci_LNK_INTERACTION] OBJ_PosGet() - OBJ_PosGet()
		MATH_VecSetHorzNormalize(v_joy_dir)
		OBJ_BankingGeneralSet(MATH_VecBlendRotate(OBJ_SightGet(), v_joy_dir, 8.0 * TIME_GetDt()), Cv_VerticalVector)
		DYN_SpeedSetVector(Cv_NullVector)
		
		if(ao_SRV[Ci_LNK_INTERACTION] != to_jack)
		{
			to_obj = ao_SRV[Ci_LNK_INTERACTION]
			tv_temp = OBJ_PosGet() - @to_obj OBJ_PosGet()
			@to_obj OBJ_BankingGeneralSet(MATH_VecBlendRotate(@to_obj OBJ_SightGet(), tv_temp, 4.0 * TIME_GetDt()), Cv_VerticalVector)
		}
	}
	
	i_flag_oriente_vers = vrai
		
	// FIN du soin
	ti_disable = 0
	if(ACT_ActionGet() == Action_Ann_SoigneJack)
	{
		@"univ" f_last_extra_ball = TIME_Get()
		if(f_time_psss > 8)
		{
			to_obj = ANI_CanalObjectGet(Anim_Canal_Bassin)
			tv_temp = OBJ_PosGet()
			to_obj = COL_RayObject_Vector( @to_obj OBJ_PosGet() + cvector(0,0,2), cvector(0,0,-4), all, none, 0, COL_C_Ray_on_ColMap_NoCrossable | COL_C_Ray_use_SpecificCrossableSet)
			if(to_obj) tv_temp.z = COL_RayObject_PosGet().z
			v_pos_fin_soin = tv_temp			
				
			tv_temp = MATH_VecBlend(OBJ_PosGet(), v_pos_fin_soin, 3 * TIME_GetDt())
			v_last_pos_soin = tv_temp
			OBJ_PosSet(tv_temp)
			COL_StartMatrixSet(tv_temp)
			v_ground_pos = OBJ_PosGet()
			
			tv_temp = DYN_SpeedGetVector()
			tv_temp.z = 0
			DYN_SpeedSetVector(tv_temp)
			DYN_GravitySet(Cv_NullVector)
		}
		
		if(ACT_ActionFinished())
			ti_disable = 2
		else
			ti_disable = 1
	}
	
	f_time_psss += TIME_GetDt()
	tf_max = 5
	if(ti_index == C_ID_Jack && @"univ" LIFE_HumainEtat[ti_index] != Life_ETAT_Mort) tf_max = 2
	if((f_time_psss >= tf_max && ti_disable != 1) || (ti_disable == 2))
	{
		@"univ" LIFE_HumainEtat[ti_index] = Life_ETAT_Normal
		@"univ" LIFE_HumainPeau[ti_index] = PEAU_SOIGNE
		f_time_psss = 0
	
		LNK_ServeurGet(Ci_LNK_INTERACTION, msg_id, faux, nofunc, nofunc)	
		
		// Texte de fin
		if(i_id_humain == C_ID_Ann && ti_index == C_ID_Jack) 
		{
			to_obj = ao_SRV[Ci_LNK_INTERACTION]
			@"KingKong/Humain" to_obj f_paf_timer = 0 
			AskText(TEXTE_HealEnd, GeneAnn_C_cure_Jack_end, 40, nobody)
		}
		
		// Recalage ann sortie soin jack	
		if(!ti_orient)
		{
			ACT_ActionSet(Action_Stress_Attente)
		}
		
		macro_change_etat(fct_main_etat)
	}
}
else
{
	if(!i_heal_move) f_time_heal_2 += TIME_GetDt()	// Pour echec
	if(i_heal_move == 2) 
	{
		f_time_heal_2 = 0
		i_heal_move = 0
	}
		
	f_time_psss = 0
	AI_Execute("H_exec_select_action")	
	ForceRegardSur(ao_SRV[Ci_LNK_INTERACTION], 1.0)
}

