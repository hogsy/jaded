#include "H_defines.var"
#include "H_action.var"

int			ti_i
int			ti_context
int			ti_flag_end_mode
int			ti_crouch
int			ti_rank
int			ti_temp

vector	tv_speed 

float		tf_liferatio
float		tf_mul

object	to_obj, to_camera 

messageid		EVT_ID
message		EVT_msg_filter


to_camera = @get_global o_camera
@get_camera_path to_camera i_disable_joy1 = vrai


ti_crouch = i_flag_crouch

////////// PAF TUANT PENDANT LE PAF
//===================================================================
MSG_SetNull( EVT_msg_filter)
EVT_msg_filter.msg_gao1 = OBJ_Me()
ti_rank = -1
EVT_ID = MSG_GlobalSearchIntGao(C_EVENT_TYPE_Paf, &ti_rank, EVT_msg_filter)
while(MSG_GlobalIsValid(EVT_ID))
{
	ti_temp = EVENT_PafTypeGet(EVT_ID)
	if (ti_temp & C_PAF_KK_KiTue)
	{
		@"univ" LIFE_HumainEtat[i_id_humain] = Life_ETAT_Mort
		break
	}
	
	EVT_ID = MSG_GlobalSearchIntGao(C_EVENT_TYPE_Paf, &ti_rank, EVT_msg_filter)
}

// SORTIE ETAT ===================================================================
if (i_sort_etat)
{
	i_sort_etat = faux
	DYN_FrictionVectorSet(cvector(1,1,0))
	return
}

// INITIALISATION ETAT ==============================================================
if (i_etat_courant != ETAT_Paf)
{
	STATS_IncPaf()
	
	i_flag_etourdit = faux
	SIG_Send(SIG_C_TYPE_PAF, OBJ_Me())
	i_dernier_etat = i_etat_courant
	i_etat_courant = ETAT_Paf

	i_flag_snipe = faux
	i_flag_old_snipe = faux

	
	// Etat dans lequel revenir apres le paf
	if(i_dernier_etat != ETAT_Lance)
		fct_prev_etat = fct_last_etat
	else
		fct_prev_etat = fct_main_etat

	//----( pour fred : capa 0 à 1 indique pendant une trame que le perso s'est fait taper ou grabber )----
	if (o_paf_sender != AI_MainActorGet(C_ID_Joueur) )
		OBJ_CapaSet( OBJ_Capa_0, 0 )

	if (fct_last_etat)
	{
		i_sort_etat = vrai
		AI_Execute(fct_last_etat)
	}

	fct_last_etat = AI_TrackCurGet()

	f_time_disable_tir = 0
	
	for (ti_i = 0; ti_i < Ci_LNK_TYPE_NB; ti_i++)
		ai_SRV_ENABLE[ti_i] = faux
	
	// Friction et Speed -------------------------------------
	DYN_FrictionVectorSet(cvector(4,4,1))	
	if(i_paf_type & C_PAF_KK_Moyen)
		DYN_SpeedSetVector(v_paf_dir * 2.0)
	else if(i_paf_type & C_PAF_KK_Fort)
		DYN_SpeedSetVector(v_paf_dir * 3.0)
	else
		DYN_SpeedSetVector(v_paf_dir * 1.0)
	
	DBG_RenderVector(OBJ_PosGet(), DYN_SpeedGetVector(), color_jaune)
	
	f_time_start_etat = 0.0
	
	// ----( SoundFX )----	

	i_request_txt = Gene_C_blow_take
	i_last_request_txt = -1

}
else
{
	f_time_start_etat += TIME_GetDt()
	ai_SRV_ENABLE[Ci_LNK_GRAB_RAPTOR] = vrai		// un paf ne coupe pas le grab (ce n'est pas la bat qui a été paffée)
}

// ANALYSE ================================================================================

MACRO_READ_WORLD
AI_Execute("H_exec_serveur_get")

// COMPORTEMENT ==========================================================================

@get_camera OBJ_BankingGeneralSet(MATH_VecBlendRotate(@get_camera OBJ_SightGet(), -v_paf_dir, 8.0 * TIME_GetDt()), Cv_VerticalVector)

// FIN DU MODE
ti_flag_end_mode = faux
if (MSG_GlobalIsValid(amid_SRV_LIAISON_ID[Ci_LNK_GRAB_RAPTOR]) && LNK_GrabServeurVisionIDGet(amid_SRV_LIAISON_ID[Ci_LNK_GRAB_RAPTOR]) == C_ID_BatCharognard)
{
	if (f_time_start_etat > 0.1)
		ti_flag_end_mode = vrai
}
else
{
	if (ACT_ActionFinished() && f_time_start_etat)
		ti_flag_end_mode = vrai
}

if (ti_flag_end_mode || (((ao_SRV[Ci_LNK_GRAB_RAPTOR] && LNK_GrabServeurVisionIDGet(amid_SRV_LIAISON_ID[Ci_LNK_GRAB_RAPTOR]) == C_ID_CrabeGeant) || f_time_start_etat > 0.5)))
{
	// jack sort tout de suite s'il est grabbé par un crabe géant (snappé dans la pince), sinon il sort au bout de 0.5 sec
	i_flag_paf = faux
	o_paf_sender = nobody
	if( @"univ" LIFE_HumainEtat[i_id_humain] != Life_ETAT_Mort )
		macro_change_etat(fct_main_etat)
	else
		macro_change_etat("H_ETAT_Mort")
}

