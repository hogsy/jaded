#include "H_defines.var"
#include "H_action.var"



int			ti_i
int			ti_numero
int			ti_index
int			ti_flag_grab
int			ti_context
int			ti_danger

float		tf_dist
float		tf_sign
float		tf_speed
float		tv_val
float		tf_offset
float		tf_liferatio

vector	tv_dest_pos
vector	tv_temp, tv_temp1

object	to_trap
object	to_obj

int			ti_blok
int			ti_temp

messageid	tmid_info

// SORTIE ETAT ===================================================================
if (i_sort_etat)
{
	COL_ColMapActivationSet(all, none)
	if(LNK_InteractionTypeGet(amid_SRV_LIAISON_ID[Ci_LNK_INTERACTION]) == Ci_LNK_INTERACTION_CARRY)
		ao_SRV[Ci_LNK_INTERACTION] = LNK_ServeurGet(Ci_LNK_INTERACTION, amid_SRV_LIAISON_ID[Ci_LNK_INTERACTION], faux, nofunc, nofunc)
	ao_CL[Ci_LNK_CARRY] = LNK_ClientGet(Ci_LNK_CARRY, amid_CL_LIAISON_ID[Ci_LNK_CARRY], faux, nofunc, nofunc, nofunc)
	i_sort_etat = faux
	i_flag_carry = faux
	@"univ" Humains_BlaBlaFreq[TEXTE_CompBlesse] = TIME_Get()
	return
}

// INITIALISATION ETAT ==============================================================
if (i_etat_courant != ETAT_IA_carry)
{
	i_dernier_etat = i_etat_courant
	i_etat_courant = ETAT_IA_carry

	if (fct_last_etat)
	{
		i_sort_etat = vrai
		AI_Execute(fct_last_etat)
	}

	fct_last_etat = AI_TrackCurGet()

	for (ti_i = 0; ti_i < Ci_LNK_TYPE_NB; ti_i++)
		ai_SRV_ENABLE[ti_i] = faux

	// AUTORISATIONS DES GRABS
//	ai_SRV_ENABLE[Ci_LNK_GRAB_RAPTOR]	= vrai
	
	// AUTORISATION DES AIDES
	ai_SRV_ENABLE[Ci_LNK_INTERACTION] 		= vrai
	ai_SRV_ENABLE[Ci_LNK_PSSS]					= vrai

	DYN_SpeedSetVector( Cv_NullVector)
	DYN_TractionSet( Cv_NullVector)
	
	f_time_start_etat = 0.0
	f_time_psss = 0
	f_time_att_carry = 1.0
}
else
{
	f_time_start_etat += TIME_GetDt()
}

// ANALYSE  =====================================================================

// Pssss	
OBJ_Me().des_int1 = Ci_DISPLAY_PSSS
if(ao_SRV[Ci_LNK_PSSS])
{
	ForceRegardSurToujours(AI_MainActorGet(C_ID_Jack), 1.0)
	ao_SRV[Ci_LNK_PSSS] = LNK_ServeurGet(Ci_LNK_PSSS, amid_SRV_LIAISON_ID[Ci_LNK_PSSS], faux, nofunc, nofunc)
	i_request_txt = Gene_C_see_hurt_med
	if(i_in_fight) i_request_txt = Gene_C_see_hurt_urg
}

AI_Execute("H_exec_read_world")
AI_Execute("H_exec_serveur_get")
AI_Execute("H_exec_change_etat")
AI_Execute("H_exec_ch_Stimulus_Paf")
if (o_paf_sender) macro_change_etat("H_ETAT_IA_paf")

// COMPORTEMENT ==============================================================

if(i_flag_carry)
{
	// Arrivée
	v_way_destpos = v_pos_fuite
	
	ao_CL[Ci_LNK_CARRY] = LNK_ThisClientGet(ao_CL[Ci_LNK_CARRY], Ci_LNK_CARRY, amid_CL_LIAISON_ID[Ci_LNK_CARRY], vrai, nofunc, nofunc, nofunc)
	if(!ao_CL[Ci_LNK_CARRY]) macro_change_etat(fct_main_etat)
}
else
{
	to_obj = ao_SRV[Ci_LNK_INTERACTION]
	if(to_obj) ForceRegardSurToujours(to_obj, 1.0)
	
	if(!f_time_start_etat && @get_global i_qqun_marasme)
	{
		ti_temp = -1
		ti_index = Humains_GetIndex(to_obj)
		switch(ti_index)
		{
			case C_ID_Hayes : 		ti_temp = Gene_C_Ha_dying break
			case C_ID_Denham : 	ti_temp = Gene_C_De_dying break
			case C_ID_Ann : 			ti_temp = Gene_C_An_dying break
			case C_ID_Jimmy :		ti_temp = Gene_C_Ji_dying break
		}
		
		if(ti_temp != -1) AskTextG(TEXTE_CompBlesse, ti_temp, 15, nobody)
	}
	
	if(!to_obj) 
	{
		to_obj = ao_CL[Ci_LNK_CARRY]
		if(!to_obj) macro_change_etat(fct_main_etat)
		v_way_destpos = OBJ_PosGet()
		DYN_SpeedSetVector(Cv_NullVector)
	}
	else
	{
		v_way_destpos = @to_obj OBJ_PosGet() 
		i_flag_rush = vrai
	}
}

// Je vais jusqu'à celui qui m'a demandé
ti_blok = faux
i_flag_disable_recul = vrai
f_time_force_attend = 0

tv_temp = v_way_destpos - OBJ_PosGet()
if(MATH_VecDotProduct(tv_temp, tv_temp) > 3 * 3) 
	i_flag_force_course = vrai
else
{
	i_flag_force_rapide = vrai
	Humains_LeaveObjectInHand()
}

f_min_dist_attend = 1.0
CommonMove()
if (f_joy_norm)
{
	if(i_flag_carry)
	{
		to_obj = ao_CL[Ci_LNK_CARRY]
		
		f_time_psss = 0
		tv_temp = -v_joy_dir
		tv_temp = MATH_VecBlendRotate(OBJ_SightGet(), tv_temp, 3 * TIME_GetDt())
		tf_speed = 1.0
		OBJ_BankingGeneralSet(tv_temp, Cv_VerticalVector)
		tv_temp *= tf_speed
		
		f_time_att_carry -= TIME_GetDt()
		if(f_time_att_carry > 0)
		{
			f_real_speed = 0
			tv_temp = Cv_NullVector
			ACT_ActionSet1(Action_TraineAtt)
		}
		else
		{
			f_real_speed = 2
			ACT_ActionSet1(Action_Traine)
			if(ACT_ActionIsTransition()) tv_temp = Cv_NullVector
		}
		
		tv_temp.z = 1
		DYN_SpeedSetVector(-tv_temp)
		@to_obj OBJ_PosSet(OBJ_PosGet() + (OBJ_SightGet() * 0.36))
		@to_obj OBJ_BankingGeneralSet(OBJ_SightGet(), OBJ_BankingGet())
	}
	else
	{
		f_time_att_carry = 1.0
	}
}
else
{
	if(!i_flag_carry) // J'y vais
	{
		if(OBJ_SqrDist(to_obj) > 1) 
		{
			f_time_psss += TIME_GetDt()
			if(f_time_psss > 2) macro_change_etat(fct_main_etat)
		}
		else
		{		
			f_time_att_carry -= TIME_GetDt()	
			if(f_time_att_carry > 0 || (ACT_ActionGet() == Action_TraineDeb && !ACT_ActionFinished()))
			{
				COL_ColMapActivationSet(none, all)
				ti_blok = vrai
				to_obj = ao_SRV[Ci_LNK_INTERACTION]
				if(!to_obj) to_obj = ao_CL[Ci_LNK_CARRY]
				tv_temp = OBJ_PosGet() - @to_obj OBJ_PosGet()
				MATH_VecSetNorm(tv_temp, 0.36)
				
				tv_temp1 = -MATH_VecNormalize(tv_temp)
				tv_temp1 = MATH_VecBlendRotate(@to_obj OBJ_SightGet(), tv_temp1, 4 * TIME_GetDt())
				@to_obj OBJ_BankingGeneralSet(tv_temp1, Cv_VerticalVector)
				
				tv_temp1 = @to_obj OBJ_PosGet() - OBJ_PosGet()
				MATH_VecSetHorzNormalize(tv_temp1)
				OBJ_BankingGeneralSet(tv_temp1, Cv_VerticalVector)
				
				tv_temp += @to_obj OBJ_PosGet()
				tv_temp = MATH_VecBlend(OBJ_PosGet(), tv_temp, 2 * TIME_GetDt())
				OBJ_PosSet(tv_temp)
				f_joy_norm = 0
				ACT_ActionSet1(Action_TraineDeb)
				DYN_SpeedSetVector(Cv_NullVector)
				ao_CL[Ci_LNK_CARRY] = LNK_ThisClientGet(to_obj, Ci_LNK_CARRY, amid_CL_LIAISON_ID[Ci_LNK_CARRY], vrai, nofunc, nofunc, nofunc)
			}
			else
			{
				to_obj = ao_SRV[Ci_LNK_INTERACTION]
				if(!to_obj) to_obj = ao_CL[Ci_LNK_CARRY]
						
				ao_CL[Ci_LNK_CARRY] = LNK_ThisClientGet(to_obj, Ci_LNK_CARRY, amid_CL_LIAISON_ID[Ci_LNK_CARRY], vrai, nofunc, nofunc, nofunc)
				tv_temp = (@ao_cache_safe[0] BV_MaxGet() - @ao_cache_safe[0] BV_MinGet()) * 0.5
				tv_temp += @ao_cache_safe[0] OBJ_PosGet()
				tv_temp += @ao_cache_safe[0] BV_MinGet()
				tv_temp.z = @ao_cache_safe[0] OBJ_PosGet().z
				v_pos_fuite = tv_temp
				i_flag_carry = vrai
				f_time_psss = 0
				f_time_att_carry = 0.0
				ACT_ActionSet1(Action_TraineAtt)
			}
		}
	}
	else // J'y suis, je traine
	{
		f_time_att_carry -= TIME_GetDt()
		if(!ao_CL[Ci_LNK_CARRY]) macro_change_etat(fct_main_etat)
		if(!MSG_GlobalIsValid(amid_CL_LIAISON_ID[Ci_LNK_CARRY])) macro_change_etat(fct_main_etat)	
		
		f_time_psss += TIME_GetDt()
		if(f_time_psss > 2) macro_change_etat(fct_main_etat)
		
		ACT_ActionSet1(Action_TraineAtt)
		tv_temp = OBJ_PosGet() - v_pos_fuite
		tv_temp.z = 0
		if(i_flag_arrived) 
		{
			macro_change_etat(fct_main_etat)
		}
	}
}

// Anims
///////////////////////////////////////////////
if(!i_flag_carry && !ti_blok)
{
	AI_Execute("H_exec_select_action")
	ForceRegardSur(ao_SRV[Ci_LNK_INTERACTION], 1.0)
}
