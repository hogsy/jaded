#include "H_defines.var"
vector 		vtime
object 		obj
message 	m_cine, m_cine1
int				ti_weapon
int				ti_i
vector		tv_or

if (i_sort_etat)
{
	i_sort_etat = faux
	return
}

DYN_FlagsSet(DYN_C_OptimizeColDisable, 0)

m_cine = am_CineStack[0]

if(i_etat_courant != ETAT_CINE_Wait)
{
	if (fct_last_etat)
	{
		i_sort_etat = vrai
		AI_Execute(fct_last_etat)
	}
	
	i_psss_nomove = vrai
	f_time_start_etat = 0
	i_etat_courant = ETAT_CINE_Wait
	fct_main_etat = AI_TrackCurGet()
	fct_last_etat = AI_TrackCurGet()
	
	vtime = m_cine.msg_vec1
	vtime.y = 0
	am_CineStack[0] = m_cine
	m_cine.msg_vec1 = vtime
	
	////////////// INTERACTION /////////////////////////
	for (ti_i = 0; ti_i < Ci_LNK_TYPE_NB; ti_i++)
		ai_SRV_ENABLE[ti_i] = faux

	// AUTORISATIONS DES GRABS
	ai_SRV_ENABLE[Ci_LNK_GRAB_RAPTOR]	= vrai

	// AUTORISATION DES AIDES
//	ai_SRV_ENABLE[Ci_LNK_INTERACTION] 		= vrai
	ai_SRV_ENABLE[Ci_LNK_PSSS] 					= vrai
	/////////////////////////////////////////////////////////////////
} 
else
{
	f_time_start_etat += TIME_GetDt()
}

/////////////////////////////////////////////////////////////////////////////////

f_time_attend += TIME_GetDt()
AI_Execute("H_exec_read_world")
AI_Execute("H_exec_serveur_get")
AI_Execute("H_exec_change_etat")
AI_Execute("H_exec_ch_Stimulus_Paf")
if (o_paf_sender) macro_change_etat("H_ETAT_IA_paf")
OBJ_Me().des_int1 = Ci_DISPLAY_PSSS

/////////////////////////////////////////////////////////////////////////////////

ti_weapon = @"univ" i_weapon_ID [i_id_humain]

// Arret durée
if(m_cine.msg_int1 == 0)
{
	vtime = m_cine.msg_vec1
	vtime.y += TIME_GetDt() 
	m_cine.msg_vec1 = vtime
	am_CineStack[0] = m_cine
	if(vtime.y >= vtime.x) i_cine_close = vrai
}
 
// Arret si d'autres trucs en attente
else if(m_cine.msg_int1 == 1)
{
	OBJ_CapaSet(OBJ_Capa_13, 0)
}

// Regarde
o_cine_regarde = m_cine.msg_gao3
if(o_cine_regarde)
{
	o_cine_regarde = @o_cine_regarde ANI_CanalObjectGet(Anim_Canal_Tete)
	if(!o_cine_regarde) o_cine_regarde = m_cine.msg_gao3
	f_cine_regarde = 0.5
}
 
// A l'arret
f_joy_norm = 0
v_joy_dir = Cv_NullVector
 
// Orientation vers gao
if(m_cine.msg_gao2)
{
	i_flag_oriente_vers = vrai
	obj = m_cine.msg_gao2
	v_joy_dir = @obj OBJ_PosGet() - OBJ_PosGet()
 	MATH_VecSetHorzNormalize(v_joy_dir)
 	
 	tv_or = m_cine.msg_vec3
 	if(tv_or.x && MATH_VecDotProduct(OBJ_SightGet(), v_joy_dir) > TOLER_CINE_ORIENT) v_joy_dir = OBJ_SightGet()
}

// Intention 
CINE_IntentionArret(m_cine.msg_int2)

AI_Execute("H_exec_select_action")
//i_cine_action = -1
 
// Arret si anim terminée
if(m_cine.msg_int1 == 2)
{
	if( ACT_ActionFinished() || (i_cine_action == -1) ) 
		i_cine_close = vrai
}