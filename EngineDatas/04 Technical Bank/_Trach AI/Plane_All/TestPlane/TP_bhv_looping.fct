float f
vector v
dt=TIME_GetDt()
switch(LoopStep)
{
	// make wings horizontal
	case 0:
		v=OBJ_HorizonGet()
		OBJ_RotateLocalY(v.z*dt*8)
		// done?
		if(MATH_AbsFloat(v.z)<0.1) LoopStep++
		break
	// going head down
	case 1:
		v=OBJ_HorizonGet()
		OBJ_RotateLocalY(v.z*dt*5)
		OBJ_RotateLocalX(dt*-2.5)
		v=OBJ_BankingGet()
		// done?
		if(v.z<-0.9) LoopStep++
		break
	// continue a while
	case 2:
		OBJ_RotateLocalX(dt*-2.5)
		v=OBJ_BankingGet()
		// done?
		if(v.z>-0.9) LoopStep++
		break
	// head up
	case 3:
		v=OBJ_BankingGet()
		if(v.z<0) OBJ_RotateLocalY(MATH_FloatSign(v.z)*dt*2.5)
		else
		{
			v=OBJ_HorizonGet()
			OBJ_RotateLocalY(v.z*dt*2.5)
		}
		v=OBJ_SightGet()
		OBJ_RotateLocalX(v.z*dt*1.5)
		OBJ_RotateGlobalZ(dt*MATH_VecAngle(OBJ_SightGet(),BumpDirection,cvector(0,0,1)))
//		OBJ_SightGeneralSet(MATH_VecBlend(OBJ_SightGet(),BumpDirection,dt*3),OBJ_BankingGet())
		// done?
		v=OBJ_BankingGet()
		if(v.z>0.9)
		{
			joy=Cv_NullVector
			v=OBJ_HorizonGet()
			RotationZ=-MATH_ASin(v.z)
			v=OBJ_SightGet()
			RotationX=-MATH_ASin(v.z)
			BlendKam=1
			COL_ColSetActivationSet(C_bit_zde_corps,none)
			OutOfControl=0
			AI_TrackCurChange("TP_bhv_fly")
		}
		break
}
TP_MoveFlaps()
TP_StopLoop_Gun()
TP_Smoke()
OBJ_PosSet(OBJ_PosGet()+(dt*25*(OBJ_SightGet()+cvector(0,0,-0.0))))
//@Kamera OBJ_SightGeneralSet(OBJ_PosGet()-@Kamera OBJ_PosGet(),cvector(0,0,1))
@Kamera OBJ_SightGeneralSet(
	MATH_VecBlendRotate(@Kamera OBJ_SightGet(),OBJ_PosGet()-@Kamera OBJ_PosGet(),dt*7),
	MATH_VecBlendRotate(@Kamera OBJ_BankingGet(),cvector(0,0,1),dt*15))
@Kamera OBJ_PosSet(@Kamera OBJ_PosGet()+(5*dt*@Kamera OBJ_SightGet()))
@KamRef OBJ_RejoinAndOrient(Kamera)
TP_GetMessages()
TP_WatchEndOfGameplay()