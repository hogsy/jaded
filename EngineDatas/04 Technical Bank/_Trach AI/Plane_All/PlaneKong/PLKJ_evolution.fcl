#include "PLKJ_Defines.var"
//------------------------------------------------------------------------------------------------------------------
//	Setup Kong for the alternative end
//------------------------------------------------------------------------------------------------------------------
procedure_local void PLKJ_GotoAlternativeEnd()
{
	OBJ_CapaSet(0,C_PLKJ_Capa_AltEndUnlocked)
//	OBJ_CapaSet(C_PLKJ_Capa_AlternativeEnd,0)	// now removed by cinematic
	HP=HP_Alternative
	Armor=C_PLKJ_Armor
	SpeedFactor=1
	PLKJ_SetAction(C_PLKJ_ACT_Wait)
	PLKJ_StartEvt(C_PLKJ_Cine_ProjosOn,vrai)
}

//------------------------------------------------------------------------------------------------------------------
//	Return true if Kong is injured
//------------------------------------------------------------------------------------------------------------------
procedure_local int PLKJ_IsInjured()
{
	return OBJ_CapaTest(C_PLKJ_Capa_Injured)
}

//------------------------------------------------------------------------------------------------------------------
//	Change the injure substate and trigger the FX
//------------------------------------------------------------------------------------------------------------------
procedure_local void PLKJ_SetInjure(int b)
{
	// if I need to trigger on
	if(b)
	{
		// if I'm not yet injured
		if(!OBJ_CapaTest(C_PLKJ_Capa_Injured))
		{
			// turn the fx on
			PLKJ_InjureFxSet()
			// set the injured state
			OBJ_CapaSet(C_PLKJ_Capa_Injured,0)
			// get time for max gladiator time
			GladiatorTime=clock+C_PLKJ_GladiatorTime
		}
	}
	// else if I need to trigger off
	else
	{
		// if I'm yet injured
		if(OBJ_CapaTest(C_PLKJ_Capa_Injured))
		{
			// turn the fx off
			PLKJ_InjureFxReset()
			// remove the injured state
			OBJ_CapaSet(0,C_PLKJ_Capa_Injured)
			// reset gladiator timer
			GladiatorTime=0
		}
	}
}

//------------------------------------------------------------------------------------------------------------------
//	Manage the injure state according to HP
//------------------------------------------------------------------------------------------------------------------
procedure_local void PLKJ_ManageInjureState()
{
	// if I'm in AI mode, I have few HP
	if(OBJ_CapaTest(C_PLKJ_Capa_AlternativeEnd))
	{
		// if I'm injured
		if(OBJ_CapaTest(C_PLKJ_Capa_Injured))
		{
			// if I wait long enough, get back to a non injured state
			if(clock>GladiatorTime)
			{
				HP=HP_Alternative
				GladiatorTime=0
				PLKJ_SetInjure(faux)
			}
//			// if I regenerate back to 4 or more, reset the injured state
//			if(HP>3) PLKJ_SetInjure(faux)
		}
		// else if I'm not injured
		else
		{
			// if I only have 2 HP left, set the injured state
			if(HP<3) PLKJ_SetInjure(vrai)
		}
	}
	// if I'm controled by the player, I have many HP but no regeneration
	else
	{
		// if I'm too low, set injured state
		if((OBJ_CapaTest(C_PLKJ_Capa_AltEndUnlocked) && HP<4) || HP<3)
		{
			PLKJ_SetInjure(vrai)
		}
		// else reset injured state
		else PLKJ_SetInjure(faux)
	}
}

//------------------------------------------------------------------------------------------------------------------
//	Make Kong invulnerable for a few seconds
//------------------------------------------------------------------------------------------------------------------
procedure_local void PLKJ_SetInvulnerable()
{
	// set invulnerable for a few moments
	DelayInvulnerable=clock+C_PLKJ_DelayInvulnerable
}