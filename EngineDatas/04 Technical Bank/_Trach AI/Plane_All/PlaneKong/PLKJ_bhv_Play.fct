#include "PLKJ_Defines.var"
// if I'm in the alternative end
if(OBJ_CapaTest(C_PLKJ_Capa_AlternativeEnd))
{
	// AI behaviour
	PLKJ_KongAI()
	if(@Jack OBJ_CapaTest(4) && !PLKJ_IsTimerUsed())
	{
		PLKJ_SetTimer(0.0,C_PLKJ_TimerEvent_StartCine,C_PLKJ_Cine_Escape)
	}
	OBJ_CapaSet(0,C_PLKJ_Capa_NoDamage)
	SpeedFactor=1
}
// else use player's control
else
{
	// initial speech sequence
	PLKJ_InitialSpeech()
	// make sur the enemies keep coming
	PLKJ_SpawnEnemies()
	// get player inputs
	PLKJ_GetPlayerInputs()
	// place the Kamera
	PLKJ_Kamera()
}
// read messages
PLKJ_GetMessages()
// set the propre state & ambiance according to HP
PLKJ_ManageInjureState()
// do the animation: wait, attack...
PLKJ_Animate()
// manage the grabed planes
PLKJ_ManageGrab()
// manage "armor" and HP regeneration
PLKJ_Regenerate()
// delayed events
PLKJ_TimerEvent()

//#ifndef _FINAL_
//if(IO_KeyJustReleased(VK_UP)) PLKJ_SetTimer(2.0,C_PLKJ_TimerEvent_StartCine,C_PLKJ_Cine_ProjosOn)
//if(IO_KeyJustReleased(VK_DOWN)) PLKJ_SetTimer(2.0,C_PLKJ_TimerEvent_StartCine,C_PLKJ_Cine_Escape)
//if(!OBJ_CapaTest(C_PLKJ_Capa_AlternativeEnd) && IO_ButtonPressed(joy_button_L) && !PLKJ_IsTimerUsed())
//{
//	// set a timer to trigger the alternative end
//	PLKJ_SetTimer(1.0,C_PLKJ_TimerEvent_AlternativeEnd,0)
//}
//DBG_RenderVector(OBJ_PosGet(),JoyDirection*10,0xff2020)
//DBG_RenderVector(OBJ_PosGet(),CurrentDirection*10,0xffffff)
//DBG_RenderVector(OBJ_PosGet(),NewDirection*10,0x20ff20)
//if(ClosestEnemy) Str_DisplayTextOnce("Me!",VIEW_3dWorldTo2d(0,@ClosestEnemy OBJ_PosGet()))
//Str_DisplayIntOnce(JoyAngleWithDir,VIEW_3dWorldTo2d(0,OBJ_PosGet()))
//#endif