#include "KIGO_defines.var"

int		mi_GFX_Explose
vector	tv_pos

// INITIALISATION ETAT ==============================================================
if (i_etat_courant != ETAT_KIGO_explose)
{
	i_dernier_etat = i_etat_courant
	i_etat_courant = ETAT_KIGO_explose
	f_time_start_etat = 0.0

//	if ( !i_ODE_ON)
//		LIBGFX_Explosion_mur_temp( GFX_Explose, COL_ZonePosGet( C_zdm_recalagespecial))
//	LIBGFX_Expl( GFX_Explose, OBJ_PosGet())

	DYN_Off()

	tv_pos = OBJ_PosGet()

	mi_GFX_Explose = GFX_Add(13)												// Create the boum
	GFX_Explose = mi_GFX_Explose
	GFX_FlagSet(mi_GFX_Explose, 0 , 1)					
	GFX_FlagSet(mi_GFX_Explose, 2 , 1)
	
	GFX_MaterialSet(mi_GFX_Explose, get_SFX_light_and_smoke, -1)	// met le materiau
	GFX_Seti(mi_GFX_Explose, 13101, 8)										// Materiau 0

	GFX_Seti(mi_GFX_Explose, 13100, 50)										// *Buffer number of sprite
	GFX_Seti(mi_GFX_Explose, 13106, 10000)						// *number of sprite to generate

	GFX_Setf(mi_GFX_Explose, 13003, 0.4)										// Time fase 1
	GFX_Setf(mi_GFX_Explose, 13004, 0.6)										// Time fase 2
	
	GFX_Setf(mi_GFX_Explose, 13012, 0.0) //16)								// Time random de temps de vie
			
	GFX_Seti(mi_GFX_Explose, 13107, 0)											// Sprites non triés
		GFX_Setf(mi_GFX_Explose, 13000, 0.3)										// Growing speed min
	GFX_Setf(mi_GFX_Explose, 13001, 0.9)										// Growing speed max
	GFX_Setf(mi_GFX_Explose, 13002, 0.001)								// Friction Grow
	
	GFX_Setf(mi_GFX_Explose, 13005, 0.1)									// Creation size min
	GFX_Setf(mi_GFX_Explose, 13006, 0.3)									// Creation size max
	GFX_Setf(mi_GFX_Explose, 13007, -20.0)  										// TGravity
	
	GFX_Setv(mi_GFX_Explose, 13203, cvector(0.01, 0.01, 0.01))		// friction speed
	
	GFX_Seti(mi_GFX_Explose, 13103, 0xD0C0C0C0)					// Color fase 0
	GFX_Seti(mi_GFX_Explose, 13104, 0xB0C0C0C0)					// Color fase 1
	GFX_Seti(mi_GFX_Explose, 13105, 0x00000000)						// Color fase 2

	GFX_Setf(mi_GFX_Explose, 13008, 0.00)								// generation rate
	
	GFX_Setv(mi_GFX_Explose, 13204, Cv_NullVector)					// wind
	GFX_Setv(mi_GFX_Explose, 13206, Cv_NullVector)					// Mainpossfriction
	GFX_Setv(mi_GFX_Explose, 13205, Cv_NullVector)					// Mainposspeed
	
	GFX_Setf(mi_GFX_Explose, 13009, 5.0)		// Norm speed min
	GFX_Setf(mi_GFX_Explose, 13010, 7.0)		// Norm speed max
	
	GFX_Setv(mi_GFX_Explose, 13200, tv_pos) 						// Creation Pos
	
	GFX_Setv(mi_GFX_Explose, 13207, 0.2 * OBJ_HorizonGet())				// CreaPosAxe X
	GFX_Setv(mi_GFX_Explose, 13208, 0.2 * OBJ_SightGet())					// CreaPosAxe Y
	GFX_Setv(mi_GFX_Explose, 13209, 0.2 * OBJ_BankingGet())				// CreaPosAxe Z
	
	o_grabbed_actor_KK = LNK_ServeurGet(Ci_LNK_GRAB_KONG, mid_grabbed_by_Kong_LNK_ID, faux, nofunc, nofunc)
}
else
{
	f_time_start_etat += TIME_GetDt()
}

// COMPORTEMENT ==============================================================

if ( f_time_start_etat > 0.1)
	OBJ_FlagInvisibleSet( vrai)

if ( f_time_start_etat > 1.0)
	OBJ_Destroy()
