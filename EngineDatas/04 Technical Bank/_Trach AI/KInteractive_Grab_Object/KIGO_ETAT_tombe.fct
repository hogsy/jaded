
//===============================================================================
// Tombe : le tronc en attente de grab a reçu un paf
//===============================================================================

#include "KIGO_defines.var"

#define		Cf_add_speed_amorti_blend			4.0

int		ti_sol


// SORTIE ETAT ===================================================================
if (i_sort_etat)
{
	i_sort_etat = faux
	return
}

// INITIALISATION ETAT ==============================================================
if (i_etat_courant != ETAT_KIGO_tombe )
{
	i_dernier_etat = i_etat_courant
	i_etat_courant = ETAT_KIGO_tombe
	
	if (fct_last_etat)
	{
		i_sort_etat = vrai
		AI_Execute(fct_last_etat)
	}
	fct_last_etat = AI_TrackCurGet()
	f_time_start_etat = 0.0
	
	i_tombe_impact_done	= faux
	f_horizontal_blend_coef = 0.0
}
else
{
	f_time_start_etat += TIME_GetDt()
}

// ANALYSE ==============================================================

o_grabbed_actor_KK = LNK_ServeurGet(Ci_LNK_GRAB_KONG, mid_grabbed_by_Kong_LNK_ID, vrai, nofunc, nofunc)
if (o_grabbed_actor_KK)
	AI_TrackCurChangeNow("KIGO_ETAT_grabbed")


// COMPORTEMENT ==============================================================

ti_sol  = faux
if ( i_grab_entite == Ci_Two_Handed )
{
	// vitesse courante
	v_last_speed = DYN_SpeedGetVector()
	if( v_last_speed.z > 0.0 )
	{
		v_last_speed.z = 0.0
		DYN_SpeedSetVector(v_last_speed)
	}
	
	// vitesse ajoutée
	if ( ! MATH_VecNullEpsilon( v_add_speed ))
	{
		DYN_SpeedSetVector( DYN_SpeedGetVector() + v_add_speed)
		v_add_speed = MATH_VecBlend( v_add_speed, Cv_NullVector, Cf_add_speed_amorti_blend * TIME_GetDt())
		if( v_last_speed.z > 0.0 )
			v_last_speed.z = 0.0
	}
	else
		ti_sol = vrai
}
else
{
	COL_ODEKeepNext()
//	if ( COL_CollideType( COL_C_Wall) || COL_CollideType( COL_C_Ground) )
//	{
//		AI_TrackChange( 2, "KIGO_ETAT_explose")
//		AI_TrackStop( 1)
//	}
}


if ( ! i_tombe_impact_done && COL_CollideType( COL_C_Ground))
{
	i_tombe_impact_done  = vrai
	SND_RequestPlay(Ci_SND_Fallen)
}

if ( ti_sol )
{
	AI_TrackCurChangeNow("KIGO_ETAT_attente_grab")
}

//OBJ_BankingGeneralSet( MATH_VecBlendRotate( OBJ_SightGet(), Cv_VerticalVector, 5.0 * TIME_GetDt()), OBJ_BankingGet())

AI_Execute("KIGO_exec_incline_horiz")

