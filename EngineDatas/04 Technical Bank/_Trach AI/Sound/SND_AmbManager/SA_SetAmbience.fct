//------------------------------------------------------------------------------------------------------------------
//------------------------------------------------------------------------------------------------------------------
#include "SA_Constant.var"


//------------------------------------------------------------------------------------------------------------------
//------------------------------------------------------------------------------------------------------------------
int ti_idx, ti_transition, ti_DoFade
int ti_mode
ti_DoFade = Cte_Vol_DontTouch


//------------------------------------------------------------------------------------------------------------------
//------------------------------------------------------------------------------------------------------------------
if( mi_Next != -1 )
{
	if( ! SND_IsPlaying(mi_CurrInstance) )
	{
		mi_CurrInstance = mi_Next
		mi_Next = -1
		
		// ---- restore the vol group ----
		mf_CurrVolume = 1.0
		SND_VolSet(mi_CurrInstance, mf_CurrVolume)
		
		// ---- play the new ambience ----
		SND_FlagSet(mi_CurrInstance, SND_Cte_RandomPos)
		SND_PlayLooped(mi_CurrInstance, -1)
				
		// ---- stop the transition ----
		ti_transition = SND_GetBeginSound(SND_M_GetAmbPhase)
		if( ti_transition != -1 )
		{
			SND_Stop(mai_AmbienceInstance[ti_transition])
			SND_Stop(mai_AmbienceInstance[ti_transition+1])
		}
	}
}

if(mf_Timer && (mf_Timer <= TIME_Get()) )
{
		ti_transition = SND_GetBeginSound(SND_M_GetAmbPhase)
		if( ti_transition != -1)
		{
			SND_Stop(mai_AmbienceInstance[ti_transition])
			SND_Stop(mai_AmbienceInstance[ti_transition+1])
		}
}


//------------------------------------------------------------------------------------------------------------------
ti_idx = SND_M_GetAmbIdx
if(ti_idx < 0) return


//------------------------------------------------------------------------------------------------------------------
if( mi_AmbienceIdx  != ti_idx )
{
	SND_M_Assert(ti_idx >= 0, "[SND_AmbManager] bad music index")
	SND_M_Assert(ti_idx < SND_Cte_AmbienceNb, "[SND_AmbManager] bad music index")
	
	mi_Next = mai_AmbienceInstance[ti_idx]
	if(mi_Next == -1)	
	{
		ti_DoFade = Cte_Vol_StartFade
		ti_idx = @ "univ" SND_gi_AmbienceArea * SND_Cte_AmbPhase_Nb
		mi_Next = mai_AmbienceInstance[ti_idx]
	}
	else if( (mi_AmbienceIdx!=-1) && (mai_AmbienceInstance[mi_AmbienceIdx]  == -1) )
		ti_DoFade = Cte_Vol_StartFadeToFullPower
	else 
		ti_DoFade = Cte_Vol_Reinit
		
	
	// ---- if there was a previous sound  ----
	if( (mi_AmbienceIdx!=-1) && (mai_AmbienceInstance[mi_AmbienceIdx] != -1)  && (mi_AmbienceIdx != ti_idx) )
	{
		mf_Timer = 0.0
		
		// stop the previous one if fade out
		if( SND_InstanceGeti(mi_CurrInstance, SND_Cte_GetInstFadeOut) )
		{
			// stop the previous
			SND_Stop( mi_CurrInstance )
		}
		else
		{
			// chain with the next
			mi_CurrInstance = mai_AmbienceInstance[ti_idx]
			ti_mode = SND_GetBeginMode(SND_M_GetAmbPhase)
			if( (ti_DoFade == Cte_Vol_Reinit) && ti_mode)
			{
				SND_FlagSet(mi_CurrInstance, SND_Cte_RandomPos)
				SND_PlayLooped(mi_CurrInstance, -1)
			}
			else
			{
				SND_FlagReset(mi_CurrInstance, SND_Cte_RandomPos)
				SND_TrackChain(-1, mi_CurrInstance, SND_Cte_TrackRq_ModeWaitMarker, SND_Cte_TrackRq_TagStart, -1)
			}
			
			ti_transition = SND_GetBeginSound(SND_M_GetAmbPhase)
			 if( ti_transition != -1 )
			 {
				mf_Timer = SND_SoundDurationGet(ti_transition) * Cte_TransitionLoopNb
				mf_Timer += TIME_Get()
			}
			mi_Next = -1
		}
		
		// play one shot the transition
		ti_transition = SND_GetBeginSound(SND_M_GetAmbPhase)
		if( ti_transition != -1)	
		{
			SND_PlayLooped(mai_AmbienceInstance[ti_transition], -1)
			SND_PlayLooped(mai_AmbienceInstance[ti_transition+1], -1)
		}
	}
	
	// ---- register we want to play a new ambience ----
	mi_AmbienceIdx = ti_idx 
	
	// ---- do a fade ----
	switch( ti_DoFade)
	{
		////////////
		case Cte_Vol_StartFade :
			switch( @ "univ" SND_gi_AmbiencePhase)
			{
				case SND_Cte_AmbPhase_Cool :
					SND_StartFade(f_Cool_GrpVol, f_FadeDuration)
					break
				case SND_Cte_AmbPhase_Stress :
					SND_StartFade(f_Wait_GrpVol, f_FadeDuration)
					break
				case SND_Cte_AmbPhase_Fight :
					SND_StartFade(f_Fight_GrpVol, f_FadeDuration)
					break
				default:
					SND_StartFade(1.0, f_FadeDuration)
					break
			}
			break
		
		////////////
		case Cte_Vol_StartFadeToFullPower :
			SND_StartFade(1.0, f_FadeDuration)
			break
			
		////////////
		case Cte_Vol_Reinit :
			mf_CurrVolume = 1.0
			SND_VolSet(mi_CurrInstance, mf_CurrVolume)
			break
			
		///////////
		default: 
			break
	}
}














