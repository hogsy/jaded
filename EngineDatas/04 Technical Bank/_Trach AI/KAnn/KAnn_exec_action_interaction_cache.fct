#include "KAnn_Defines.var"

int ti_interaction_type

vector tv_pos
vector tv_new_pos

object to_cache

#ifndef _FINAL_
if( i_DBG_display_interaction )
	Str_DisplayTextOnce("Interaction Cache (K-TREX)", Cv_Interaction_type_display_pos2d)
#endif

to_cache = o_safe_wp.des_object1

if ( to_cache )
{
	i_run_breath_enabled = vrai		// autorisée à jouer le son GeneKAnn_C_breath_run_fear

	// goto cache
	if (to_cache && ! @to_cache COL_BV_PivotCollide(OBJ_Me()) && ! i_in_cache)
	{
		ACT_ActionSet(Ann_stress_trot)
		
		// goto cache
		v_sight = @to_cache OBJ_PosGet() - OBJ_PosGet()
		
		if ( ! MATH_VecNullEpsilon(v_sight))
			v_sight = MATH_VecNormalize(v_sight)
			
		v_sight 	= MATH_VecBlend(OBJ_SightGet(),v_sight ,TIME_GetDt() * 10)
		OBJ_BankingGeneralSet(v_sight ,Cv_VerticalVector)
		i_freezeSight = vrai
	}
	// at cache
	else
	{
		//==================================
		// INTERACTING (hiding)
		//==================================
		i_in_cache = 1
	
		if (ao_SRV[Ci_LNK_INTERACTION] && i_interaction == 0)
		{
//			SPEECH_M_RqHuman	(C_ID_Ann, GeneKAnn_C_danger_fear)
		}

		if (ao_SRV[Ci_LNK_INTERACTION])
		{	
			i_interaction = 1
			ti_interaction_type = LNK_InteractionParamGet(amid_SRV_LIAISON_ID[Ci_LNK_INTERACTION])
			o_fight_actor = ao_SRV[Ci_LNK_INTERACTION]
			if (ti_interaction_type == C_INTER_FIGHT_WAIT_FOR_ANN)
			{
//				if (ACT_ActionGet() != Ann_cache_mur_cycle)
//					ACT_ActionSet(Ann_cache_mur_cycle)
//				else if (!ACT_ActionIsTransition() && ACT_ActionFinished())
//				{
//					ACT_ActionSet(Ann_cache_mur_cote)
//					LNK_InteractionParamSet(amid_SRV_LIAISON_ID[Ci_LNK_INTERACTION], C_INTER_FIGHT_ANN_READY)
//				}
				ACT_ActionSet(Ann_cache_mur_cycle)
				LNK_InteractionParamSet(amid_SRV_LIAISON_ID[Ci_LNK_INTERACTION], C_INTER_FIGHT_ANN_READY)
			}
		  	else if (ti_interaction_type == C_INTER_FIGHT_ENEMY_FAKE_ATTACK )
			{
				if (f_attack_reaction_delay == -1)
					f_attack_reaction_delay = 0
				else if (f_attack_reaction_delay < Cf_Attack_Reaction_Delay)
					f_attack_reaction_delay += TIME_GetDt()
				else
				{
					if (ACT_ActionGet() != Ann_cache_reculD && ACT_ActionGet() != Ann_cache_reculG)
					{
						if (i_dodge_side == 0)
						{
							i_action_dodge = Ann_cache_reculG
							i_dodge_side = 1
						}
						else
						{
							i_action_dodge = Ann_cache_reculD
							i_dodge_side = 0
						}
					}
											
					if (ACT_ActionGet() != i_action_dodge)
					{
						ACT_ActionSet(i_action_dodge)
//						SPEECH_M_RqHuman	(C_ID_Ann, GeneKAnn_C_bitten)
					}	
					else if (ACT_ActionFinished())
					{	
						ACT_ActionSet(Ann_cache_mur_cote)			
						LNK_InteractionParamSet(amid_SRV_LIAISON_ID[Ci_LNK_INTERACTION], C_INTER_FIGHT_ANN_READY)	
						f_attack_reaction_delay = -1
					}	
				}
			}
		  	else if (ti_interaction_type == C_INTER_FIGHT_ENNEMY_ATTACK )
			{
				if (f_attack_reaction_delay == -1)
					f_attack_reaction_delay = 0
				else if (f_attack_reaction_delay < Cf_Attack_Reaction_Delay)
					f_attack_reaction_delay += TIME_GetDt()
				else
				{
					if (ACT_ActionGet() != Ann_cache_mur_desequilibre)
					{
//						SPEECH_M_RqHuman	(C_ID_Ann, GeneKAnn_C_bitten)
						ACT_ActionSet(Ann_cache_mur_desequilibre)
						LIBGFX_ShakeCam(0.1, 35.0, 0.1, 20.0, 0.2, 1.1)
					}
					else if (ACT_ActionFinished())
					{
						ACT_ActionSet(Ann_cache_mur_cote)			
						LNK_InteractionParamSet(amid_SRV_LIAISON_ID[Ci_LNK_INTERACTION], C_INTER_FIGHT_ANN_READY)	
						f_attack_reaction_delay = -1
					}
				}
			}
			else
			{
				if (ACT_ActionFinished())
					ACT_ActionSet(Ann_cache_mur_cote)
			}
		}
		else // no interaction yet
		{
			i_interaction = 0
//			ACT_ActionSet(Ann_cache_mur_cote)
			ACT_ActionSet(Ann_cache_mur_cycle)
		}
		
		v_sight = @to_cache OBJ_SightGet()
		v_sight 	= MATH_VecBlend(OBJ_SightGet(),v_sight ,TIME_GetDt() * 10)
		OBJ_BankingGeneralSet(v_sight ,Cv_VerticalVector)
		i_freezeSight = vrai	
		
		if (i_in_cache)
		{
			tv_pos = OBJ_PosGet()
			tv_new_pos = MATH_VecBlend(tv_pos, @to_cache OBJ_PosGet(), TIME_GetDt() * 5)
			tv_new_pos.z = tv_pos.z
			OBJ_PosSet(tv_new_pos)
		}
	}
}

// TIMER MORT ANN ========================== 
if( ao_SRV[Ci_LNK_INTERACTION] )
{
	KAnn_Death_Timer_Countdown()
}

