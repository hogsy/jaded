#include "KAnn_defines.var"

int			ti_i
int			ti_context
float		tf_liferatio
object	to_kong 
object	to_sight_object
vector	tv_temp
int			ti_type_liaison
int			ti_GrabKong_MainBloquee


// SORTIE ETAT ===================================================================
if (i_sort_etat)
{
	AI_CBDel(o_grabbed_KK_actor, CallBack_After_Blend, "KAnn_CALLBACK_set_pos")
	COL_ColSetActivationSet( C_bit_zdm_pied, none)
	DYN_GravitySet( Cv_NormalGravity)
	o_grabbed_KK_actor = nobody
	
	// VINCE : pour tout recalculer en sortie de grab KK
	o_safe_wp = nobody	
	i_wp_already_set = 0
	i_CINE_force_new_safe_WP = vrai
	
	i_sort_etat = faux
	return
}

// INITIALISATION ETAT ==============================================================
if (i_etat_courant != ETAT_grabbed_KK)
{
	i_dernier_etat = i_etat_courant
	i_etat_courant = ETAT_grabbed_KK

	if (fct_last_etat)
	{
		i_sort_etat = vrai
		AI_Execute(fct_last_etat)
	}

	fct_last_etat = AI_TrackCurGet()

	// AUTORISATIONS DES GRABS
	for (ti_i = 0; ti_i < Ci_LNK_TYPE_NB; ti_i++)
		ai_SRV_ENABLE[ti_i] = faux
	ai_SRV_ENABLE[Ci_LNK_GRAB_RAPTOR]		= vrai
	ai_SRV_ENABLE[Ci_LNK_GRAB_TRANSPORTE]	= vrai
	ai_SRV_ENABLE[Ci_LNK_KKGRAB_OBJECT]	= vrai
	
	o_grabbed_KK_actor = ao_SRV[Ci_LNK_KKGRAB_OBJECT]
	
	f_time_start_etat = 0.0
	AI_CBAdd(o_grabbed_KK_actor, CallBack_After_Blend, "KAnn_CALLBACK_set_pos")
	
	COL_ColSetActivationSet( none, C_bit_zdm_pied)
	DYN_GravitySet( Cv_NullVector)
	DYN_SpeedSetVector( Cv_NullVector)
	
	i_grabbed_KK_transition = 0			// Transitions pour prendre ANN
	
	f_time_Kamera = 0.0			// fin de la caméra cut ANN (si cut scene en cours)
	
	if (ACT_ActionGet() != Ann_sacrifice_att)
	{
//	 	if( i_has_weapon )
//			ACT_ActionSet(Ann_att_enjoue_bambou)
//		else
//			ACT_ActionSet(Ann_stress_attente)
			ACT_ActionSet(Ann_Cache_Att)
	}
	
	KAnn_Set_Safe_Wp(nobody)
	o_old_safe_wp = nobody
}
else
{
	f_time_start_etat += TIME_GetDt()
	f_pos_blend_coef = MATH_FloatBlend(f_pos_blend_coef, 1.0, 10.0 * TIME_GetDt())
}


// ANALYSE =======================================================================================================
AI_Execute("KAnn_exec_CHECK_paf")
if (o_paf_sender) 
{
	ao_SRV[Ci_LNK_KKGRAB_OBJECT] = LNK_ServeurGet(Ci_LNK_KKGRAB_OBJECT, amid_SRV_LIAISON_ID[Ci_LNK_KKGRAB_OBJECT], faux, afct_SRV[Ci_LNK_KKGRAB_OBJECT], nofunc)	
	macro_change_etat("KAnn_ETAT_paf")
}

// SERVEURS ===================================================================
AI_Execute("KAnn_exec_serveur_get")
if( ! ao_SRV[Ci_LNK_KKGRAB_OBJECT] )
//	macro_change_etat("KAnn_ETAT_follow_network")
	macro_change_etat("KAnn_ETAT_FPS")
if(ao_SRV[Ci_LNK_GRAB_TRANSPORTE])
	macro_change_etat("KAnn_ETAT_grabbed_bat")

// COMPORTEMENT =======================================================================================================

i_au_sol_flag = faux

if( ao_SRV[Ci_LNK_KKGRAB_OBJECT] && MSG_GlobalIsValid(amid_SRV_LIAISON_ID[Ci_LNK_KKGRAB_OBJECT]) )
{
	ti_type_liaison = LNK_KKGrabObject_TypeGet(amid_SRV_LIAISON_ID[Ci_LNK_KKGRAB_OBJECT])
	
	if( i_grabbed_KK_transition != ti_type_liaison )
	{
		// nouvelle étape dans le grab de ANN
		i_grabbed_KK_transition = ti_type_liaison
		
		if( ti_type_liaison == Ci_KKGrabObject_Attrappe_Attend
		|| ti_type_liaison == Ci_KKGrabObject_Attrappe_Dans_Main
		|| ti_type_liaison == Ci_KKGrabObject_Porte_Epaule
		|| ti_type_liaison == Ci_KKGrabObject_Porte_Epaule_TroncD
		|| ti_type_liaison == Ci_KKGrabObject_Porte_Epaule_TroncG
		|| ti_type_liaison == Ci_KKGrabObject_Porte_Main
		|| ti_type_liaison == Ci_KKGrabObject_PoseSol)
			f_pos_blend_coef = 0.0			// blend de position pour attrapper ANN au sol puis pour la poser sur l'épaule
	}
	
	switch( ti_type_liaison )
	{
		case Ci_KKGrabObject_PoseSol :
		case Ci_KKGrabObject_Attrappe_Attend :
		case Ci_KKGrabObject_Attrappe_Dans_Main :
			i_run_breath_enabled = vrai		// entendre Ann
			break
			
		case Ci_KKGrabObject_Depose :
			// KONG vient de déposer ANN
//			o_KK_safe_WP = LNK_KKGrabObject_SafeWPGet(amid_SRV_LIAISON_ID[Ci_LNK_KKGRAB_OBJECT])
			ao_SRV[Ci_LNK_KKGRAB_OBJECT] = LNK_ServeurGet(Ci_LNK_KKGRAB_OBJECT, amid_SRV_LIAISON_ID[Ci_LNK_KKGRAB_OBJECT], faux, afct_SRV[Ci_LNK_KKGRAB_OBJECT], nofunc)
			
			// Kcamera_Insert_Plan( float Kcamera_duration, vector Kcamera_axis, float Kcamera_dist, object Kcamera_target, int Kcamera_module , vector Kcamera_offset, float Kcamera_transpeed, int Kcamera_flags)
			tv_temp = @o_grabbed_KK_actor OBJ_PosGet() - OBJ_PosGet()
			tv_temp.z = 0.0
			tv_temp = MATH_VecBlendRotate(tv_temp, Cv_VerticalVector, 0.2)
			
//			Kcamera_Insert_Plan(3.0, tv_temp, 5.0, OBJ_Me(), Anim_Canal_Tete, cvector(0.0, 0.0, 0.0), 0.0, 0b0)
			
			//macro_change_etat("KAnn_ETAT_au_sol")
			macro_change_etat("KAnn_ETAT_FPS")

			break

		case Ci_KKGrabObject_Lache :
			// KONG lache ANN
			ao_SRV[Ci_LNK_KKGRAB_OBJECT] = LNK_ServeurGet(Ci_LNK_KKGRAB_OBJECT, amid_SRV_LIAISON_ID[Ci_LNK_KKGRAB_OBJECT], faux, afct_SRV[Ci_LNK_KKGRAB_OBJECT], nofunc)			
			
			// Kcamera_Insert_Plan( float Kcamera_duration, vector Kcamera_axis, float Kcamera_dist, object Kcamera_target, int Kcamera_module , vector Kcamera_offset, float Kcamera_transpeed, int Kcamera_flags)
			tv_temp = @o_grabbed_KK_actor OBJ_PosGet() - OBJ_PosGet()
			tv_temp.z = 0.0
			tv_temp = MATH_VecBlendRotate(tv_temp, Cv_VerticalVector, 0.2)
			
//			Kcamera_Insert_Plan( 1.0, tv_temp, 5.0, OBJ_Me(), Anim_Canal_Tete, cvector(0.0, 0.0, 0.0), 0.0, 0b0)
			
			macro_change_etat("KAnn_ETAT_FPS")
			break

		default:
			break
	}
	
	if( ti_type_liaison == Ci_KKGrabObject_Attrappe_Attend )
	{
		// ANN n'est pas encore dans la main de KONG
		if( o_fight_actor )
			ACT_ActionSet(Ann_terrorisee_attente)		// il y a un ennemi proche
		//else
			//ACT_ActionSet(KAnn_Select_Action(Ci_Action_Type_Attente))	// pas d'ennemi proche : test de la santé de ANN
		
		// Orientation vers KONG
		OBJ_BankingGeneralSet(
			MATH_VecBlendRotate(OBJ_SightGet(), @o_grabbed_KK_actor OBJ_PosGet() - OBJ_PosGet(), 3*TIME_GetDt()),
			MATH_VecBlendRotate(OBJ_BankingGet(), Cv_VerticalVector, 3*TIME_GetDt()))
	}
	else
		ACT_ActionSet( Ann_Sur_Epaule)
}


// SUIVI DU REGARD =======================================================================

to_sight_object = nobody
v_suivi_regard_position = @get_Kong_Path o_grabbed_KK_actor v_look_position
if( MATH_VecNullEpsilon(v_suivi_regard_position) )
{
	if( LNK_KKGrabObject_TypeGet(amid_SRV_LIAISON_ID[Ci_LNK_KKGRAB_OBJECT]) == Ci_KKGrabObject_Porte_Main )
		to_sight_object = o_grabbed_KK_actor		// ANN dans la main de KONG
	else
	{
		ti_GrabKong_MainBloquee = @get_Kong_Path o_grabbed_KK_actor i_GrabKong_MainBloquee
		if( ti_GrabKong_MainBloquee != -1 )
		{
			// grab TREX
			to_sight_object = @get_Kong_Path o_grabbed_KK_actor ao_CL_GRABKONG[ti_GrabKong_MainBloquee]
		}
	}
}
o_suivi_regard_object = to_sight_object

//Str_DisplayGaoOnce(o_suivi_regard_object, Cv_NullVector)
//Str_DisplayVectorOnce(v_suivi_regard_position, cvector(0,0.1,0))

