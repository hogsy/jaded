#include "KAnn_defines.var"

float			tf_dist
float			tf_angle
float			tf_dot_product

vector		tv_pos
vector		tv_head_pos
vector		tv_head_banking
vector		tv_last_pos
vector		tv_dest_pos
vector		tv_temp
vector		tv_temp2
vector		tv_new_sight
vector		tv_new_banking
vector		tv_hand
vector 		tv_pivot

object		to_obj
object		to_serveur
object		to_raptor
object		to_head
object		to_hand
object		to_bone
object		to_module

int				ti_type

// Snap Ann sur Epaule
object		to_gao
object		to_gao_cou
object		to_gao_tete 

if( ao_SRV[Ci_LNK_KKGRAB_OBJECT] && MSG_GlobalIsValid(amid_SRV_LIAISON_ID[Ci_LNK_KKGRAB_OBJECT]) )
{
	// GRABBEE PAR KONG
	DYN_SpeedSetVector( Cv_NullVector)
	to_serveur = ao_SRV[Ci_LNK_KKGRAB_OBJECT]
	to_bone = LNK_KKGrabObject_BoneGet(amid_SRV_LIAISON_ID[Ci_LNK_KKGRAB_OBJECT])
	switch ( LNK_KKGrabObject_TypeGet(amid_SRV_LIAISON_ID[Ci_LNK_KKGRAB_OBJECT]) )
	{
		case Ci_KKGrabObject_Attrappe_Attend :
			f_pos_blend_coef = 0.0
		case 	Ci_KKGrabObject_PoseSol :
		case Ci_KKGrabObject_Attrappe_Dans_Main :
		{
			// KONG attrappe ANN
			if ( !to_bone)
			{
				f_pos_blend_coef = 0.0
				break			// Pas de positionnement spécial
			}
			tv_pos = @to_bone OBJ_PosGet()
			if( to_bone == @to_serveur ANI_CanalObjectGet(Anim_Canal_MainDroite) )
			{
				tv_pos += @to_bone MATH_VecLocalToGlobal(Cv_KONG_Offset_Creux_MainDroite_ANN)
				OBJ_BankingGeneralSet(
					MATH_VecBlendRotate(OBJ_SightGet(), - @to_bone OBJ_HorizonGet(), f_pos_blend_coef), 
					MATH_VecBlendRotate(OBJ_BankingGet(), @to_bone OBJ_SightGet(), f_pos_blend_coef) )
			}
			else
			{
				tv_pos += @to_bone MATH_VecLocalToGlobal(Cv_KONG_Offset_Creux_MainGauche_ANN)
				OBJ_BankingGeneralSet( 
					MATH_VecBlendRotate( OBJ_SightGet(), @to_bone OBJ_HorizonGet(), f_pos_blend_coef), 
					MATH_VecBlendRotate( OBJ_BankingGet(), @to_bone OBJ_SightGet(), f_pos_blend_coef) )
			}
			tv_pos = MATH_VecBlend(OBJ_PosGet(), tv_pos, f_pos_blend_coef)		// Blend position
			OBJ_PosSet(tv_pos)
			break
		}
		case Ci_KKGrabObject_Pose_Epaule :
		{
			// KONG pose ANN sur son épaule après l'avoir attrapée
			tv_pos = @to_bone OBJ_PosGet()
			if( to_bone == @to_serveur ANI_CanalObjectGet(Anim_Canal_MainDroite) )
			{
				tv_pos += @to_bone MATH_VecLocalToGlobal(Cv_KONG_Offset_Creux_MainDroite_ANN)
				OBJ_BankingGeneralSet( - @to_bone OBJ_HorizonGet(), @to_bone OBJ_SightGet())
			}
			else
			{
				tv_pos += @to_bone MATH_VecLocalToGlobal(Cv_KONG_Offset_Creux_MainGauche_ANN)
				OBJ_BankingGeneralSet( @to_bone OBJ_HorizonGet(), @to_bone OBJ_SightGet())
			}
			OBJ_PosSet(tv_pos)
			break
		}
		case Ci_KKGrabObject_Porte_Epaule :
		{
			// KONG porte ANN sur son épaule et il ne tient pas de tronc
			tv_pos = MATH_VecBlend(OBJ_PosGet(), @to_bone OBJ_PosGet(), f_pos_blend_coef)		// Blend position
			tv_pos += MATH_VecBlend(@to_bone MATH_VecLocalToGlobal(cvector(0.05,0.6,0)), Cv_NullVector, 1 - f_pos_blend_coef)
			OBJ_PosSet(tv_pos)
			to_bone = @to_serveur ANI_CanalObjectGet(Anim_Canal_Cou)
			OBJ_BankingGeneralSet(
				MATH_VecBlendRotate(OBJ_SightGet(), @to_bone OBJ_BankingGet(), f_pos_blend_coef), 
				MATH_VecBlendRotate(OBJ_BankingGet(), - @to_bone OBJ_SightGet(), f_pos_blend_coef) )
			break
		}
		case Ci_KKGrabObject_Porte_Epaule_TroncD :
		{
			//===========================================================================================
			// TODO : modifier le positionnement de ANN !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
			//===========================================================================================
			
			// KONG porte ANN sur son épaule et il tient un tronc sur la droite
			tv_pos = MATH_VecBlend(OBJ_PosGet(), @to_bone OBJ_PosGet(), f_pos_blend_coef)		// Blend position
			tv_pos += MATH_VecBlend(@to_bone MATH_VecLocalToGlobal(cvector(0.05,0.6,0)), Cv_NullVector, 1 - f_pos_blend_coef)
			OBJ_PosSet(tv_pos)
			to_bone = @to_serveur ANI_CanalObjectGet(Anim_Canal_Cou)
			OBJ_BankingGeneralSet(
				MATH_VecBlendRotate(OBJ_SightGet(), @to_bone OBJ_BankingGet(), f_pos_blend_coef), 
				MATH_VecBlendRotate(OBJ_BankingGet(), - @to_bone OBJ_SightGet(), f_pos_blend_coef) )
			break
		}
		case Ci_KKGrabObject_Porte_Epaule_TroncG :
		{
			//===========================================================================================
			// TODO : modifier le positionnement de ANN !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
			//===========================================================================================
			
			// KONG porte ANN sur son épaule et il tient un tronc sur la gauche
			tv_pos = MATH_VecBlend(OBJ_PosGet(), @to_bone OBJ_PosGet(), f_pos_blend_coef)		// Blend position
			tv_pos += MATH_VecBlend(@to_bone MATH_VecLocalToGlobal(cvector(0.05,0.6,0)), Cv_NullVector, 1 - f_pos_blend_coef)
			OBJ_PosSet(tv_pos)
			to_bone = @to_serveur ANI_CanalObjectGet(Anim_Canal_Cou)
			OBJ_BankingGeneralSet(
				MATH_VecBlendRotate(OBJ_SightGet(), @to_bone OBJ_BankingGet(), f_pos_blend_coef), 
				MATH_VecBlendRotate(OBJ_BankingGet(), - @to_bone OBJ_SightGet(), f_pos_blend_coef) )
			break
		}
		case Ci_KKGrabObject_Porte_Main :
		{
			// KONG porte ANN dans sa main
			tv_pos = @to_bone OBJ_PosGet()
			if( to_bone == @to_serveur ANI_CanalObjectGet(Anim_Canal_MainDroite) )
			{
				tv_pos += @to_bone MATH_VecLocalToGlobal(Cv_KONG_Offset_Creux_MainDroite_ANN + cvector(-0.5, 0.0, -0.3))
				OBJ_PosSet(tv_pos)
				OBJ_BankingGeneralSet( - @to_bone OBJ_HorizonGet(), @to_bone OBJ_SightGet())
				OBJ_RotateLocalX(-Cf_PiBy6)
			}
			else
			{
				tv_pos += @to_bone MATH_VecLocalToGlobal(Cv_KONG_Offset_Creux_MainGauche_ANN + cvector(0.5, 0.0, -0.3))
				OBJ_PosSet(tv_pos)
				OBJ_BankingGeneralSet( @to_bone OBJ_HorizonGet(), @to_bone OBJ_SightGet())
				OBJ_RotateLocalX(-Cf_PiBy6)
			}
			break
		}
		default:
		{
			DBG_TraceString("Type KK Grab Object inconnu...")
			DBG_TraceEOL()
			tv_pos = @to_bone OBJ_PosGet()
			OBJ_PosSet(tv_pos)
			OBJ_BankingGeneralSet(@to_bone OBJ_BankingGet(), - @to_bone OBJ_SightGet())
			break
		}
	}
}
else if( ao_SRV[Ci_LNK_GRAB_RAPTOR] && MSG_GlobalIsValid(amid_SRV_LIAISON_ID[Ci_LNK_GRAB_RAPTOR]) )
{
	// GRABBEE PAR UN RAPTOR
//	if (ACT_ActionGet() == Ann_grabed_raptor_jambe)
	//{
//		AI_Execute("KAnn_exec_IK_snake")
//		return
//	}
	
	to_raptor = ao_SRV[Ci_LNK_GRAB_RAPTOR]
	to_head	= @to_raptor ANI_CanalObjectGet(Anim_Canal_Tete)
	tv_dest_pos = @to_head OBJ_PosGet()
	tv_dest_pos += @to_head OBJ_BankingGet() * 0.8
	tv_dest_pos += @to_head OBJ_SightGet() * 0.35

	to_bone = ANI_CanalObjectGet(Anim_Canal_MainGauche)
	
	tv_temp = @to_bone OBJ_PosGet() - OBJ_PosGet()
	tv_temp.z = 0.0

	tv_temp2 = tv_dest_pos - OBJ_PosGet()
	tv_temp2.z = 0.0

	OBJ_Rotate_FromTo(MATH_VecGlobalToLocal(tv_temp), MATH_VecGlobalToLocal(tv_temp2))

	tv_temp = tv_dest_pos
	tv_temp -= @to_bone OBJ_PosGet()
	tv_temp.z = 0.0
	tv_temp *= 0.8

	tv_pos = OBJ_PosGet()
	tv_pos += tv_temp
	OBJ_PosSet(tv_pos)
	
	OBJ_LIB_IK(ao_IK_bones[Ci_IK_main_gauche][0], ao_IK_bones[Ci_IK_main_gauche][1], af_IK_bones_length[Ci_IK_main_gauche][0], af_IK_bones_length[Ci_IK_main_gauche][1], tv_dest_pos, @ao_IK_bones[Ci_IK_main_gauche][0] OBJ_BankingGet(), 1.0)
}
else if( ao_SRV[Ci_LNK_GRAB_KONG] && MSG_GlobalIsValid(amid_SRV_LIAISON_ID[Ci_LNK_GRAB_KONG]) )
{
	// GRABBEE PAR UN TREX
	DYN_SpeedSetVector( Cv_NullVector)
	to_serveur = ao_SRV[Ci_LNK_GRAB_KONG]
	to_bone = LNK_GrabKong_BoneGet(amid_SRV_LIAISON_ID[Ci_LNK_GRAB_KONG])
	
	tv_pos = @to_bone OBJ_PosGet()
	tv_pos += @to_bone MATH_VecLocalToGlobal(cvector(0.0, 0.5, 1.0))
	OBJ_BankingGeneralSet(
		MATH_VecBlendRotate(OBJ_SightGet(), @to_bone OBJ_BankingGet(), f_pos_blend_coef), 
		MATH_VecBlendRotate(OBJ_BankingGet(), - @to_bone OBJ_SightGet(), f_pos_blend_coef) )
	tv_pos = MATH_VecBlend(OBJ_PosGet(), tv_pos, f_pos_blend_coef)		// Blend position
	OBJ_PosSet(tv_pos)
}
else if( ao_SRV[Ci_LNK_GRAB_TRANSPORTE] && MSG_GlobalIsValid(amid_SRV_LIAISON_ID[Ci_LNK_GRAB_TRANSPORTE]) )
{
	// GRABBEE PAR UNE BAT
	DYN_SpeedSetVector( Cv_NullVector)
	to_serveur = ao_SRV[Ci_LNK_GRAB_TRANSPORTE]
	to_bone = LNK_GrabBoneGet(amid_SRV_LIAISON_ID[Ci_LNK_GRAB_TRANSPORTE])
	ti_type = LNK_GrabTransporte_TypeGet(amid_SRV_LIAISON_ID[Ci_LNK_GRAB_TRANSPORTE])
	switch( ti_type )
	{
		case Ci_GrabTransporte_Type_Vole :
			// orientation
			tv_new_sight = @to_bone OBJ_BankingGet()
			tv_new_banking = @to_bone OBJ_HorizonGet()
			DBG_RenderVector(OBJ_PosGet(), tv_new_banking * 5, color_bleu)
			tv_new_banking = MATH_VecInCone(tv_new_banking, Cv_VerticalVector, (Cf_PiBy8 / 2.0), 0)
			DBG_RenderVector(OBJ_PosGet(), tv_new_banking * 5, color_rouge)
			
			// position
			to_hand = ANI_CanalObjectGet(Anim_Canal_MainDroite)		// Ann
			tv_temp = OBJ_PosGet() - @to_hand OBJ_PosGet()
			DBG_RenderVector(@to_hand OBJ_PosGet(), tv_temp, color_vert)
			tv_pos = @to_bone OBJ_PosGet() + tv_temp
			tv_pos += @to_bone OBJ_BankingGet()
			break
			
		case Ci_GrabTransporte_Type_Atterrit :
			// orientation	
			tv_new_sight = @to_serveur OBJ_SightGet()
			tv_new_banking = @to_serveur OBJ_BankingGet()
			
			// position
			to_obj = @to_serveur KBC_GetLandingWP()
			tv_pos = @to_obj OBJ_PosGet()
			tv_pos += 0.5 * @to_serveur OBJ_SightGet()
			tv_pos -= 0.15 * @to_serveur OBJ_HorizonGet()
			break
			
		case Ci_GrabTransporte_Type_Pose :
			// orientation	
			tv_new_sight = @to_serveur OBJ_SightGet()
			tv_new_banking = @to_serveur OBJ_BankingGet()
			
			// position
			tv_pos = @to_serveur OBJ_PosGet()
			tv_pos += 0.5 * @to_serveur OBJ_SightGet()
			tv_pos -= 0.15 * @to_serveur OBJ_HorizonGet()
			break	
			
		default:
			// orientation
			tv_new_sight = @to_serveur OBJ_SightGet()
			tv_new_banking = @to_serveur OBJ_BankingGet()
			
			// position
			tv_pos = @to_serveur OBJ_PosGet()
			break
	}
	// coef
	if( i_grabbed_bat_afterblend_type != ti_type )
		f_pos_blend_coef = 0.0
	// orientation
	tv_new_sight = MATH_VecBlendRotate(OBJ_SightGet(), tv_new_sight, f_pos_blend_coef)
	tv_new_banking = MATH_VecBlendRotate(OBJ_BankingGet(), tv_new_banking, f_pos_blend_coef)
	OBJ_BankingGeneralSet(tv_new_sight, tv_new_banking)
	// position
	tv_pos = MATH_VecBlend(v_grabbed_old_pos, tv_pos, f_pos_blend_coef)
	OBJ_PosSet(tv_pos)
	COL_StartMatrixSet(tv_pos)
	v_grabbed_old_pos = tv_pos
	i_grabbed_bat_afterblend_type = ti_type
}

