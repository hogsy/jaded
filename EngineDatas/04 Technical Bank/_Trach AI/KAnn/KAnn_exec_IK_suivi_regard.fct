#include "KAnn_defines.var"

int					ti_enable_blend
object			to_head
float				tf_temp
vector			tv_suivi_regard_pos
vector			tv_bone_to_cam_pos
object			to_bone
vector			tv_start_sight
vector			tv_dest_sight
vector			tv_cible_tete
object			to_obj
vector			tv_temp

if (@get_global i_IK_NECK_Off)
	return

if(o_suivi_regard_object)
{
	// regarde un gao
	ti_enable_blend = vrai
	to_obj = @o_suivi_regard_object ANI_CanalObjectGet(Anim_Canal_Tete)
	if( ! to_obj ) 
		to_obj = o_suivi_regard_object
	tv_suivi_regard_pos = @to_obj OBJ_PosGet()
}
else if( ! MATH_VecNullEpsilon(v_suivi_regard_position) )
{
	// regard une position
	tv_suivi_regard_pos = v_suivi_regard_position
}
else
{
	// ne regarde rien
	ti_enable_blend = faux
	to_obj = ANI_CanalObjectGet(Anim_Canal_Tete)
	tv_suivi_regard_pos = OBJ_PosGet() + OBJ_SightGet()
	tv_suivi_regard_pos.z = @to_obj OBJ_PosGet().z
}


// Test contraintes
to_head = ANI_CanalObjectGet(Anim_Canal_Tete)
tv_temp = @to_head MATH_VecGlobalToLocal(tv_suivi_regard_pos - @to_head OBJ_PosGet())

// Contrainte : jamais derrière
if(tv_temp.y > - 0.1) 
{
	tv_temp.y = -0.1
//	tv_temp.z = 0
}

// Contrainte : jamais trop haut
if(tv_temp.z > 0.7 ) 
{
	tv_temp.z = 0.7
}


// Blend cible tete
tf_temp = DYN_SpeedGet() * 4
tf_temp = MATH_FloatMax(5, tf_temp)
v_cible_tete = MATH_VecBlendRotate(v_cible_tete, tv_temp, tf_temp * TIME_GetDt())
tv_cible_tete = @to_head MATH_VecLocalToGlobal(v_cible_tete) + @to_head OBJ_PosGet()

if( ! ti_enable_blend )
{
	f_suivi_regard_coef -= MATH_FloatMin(f_suivi_regard_coef, 1.0 * TIME_GetDt())
}
else 
{
	f_suivi_regard_coef += MATH_FloatMin(1.0 - f_suivi_regard_coef, 4.0 * TIME_GetDt())
}

// Tete
if (f_suivi_regard_coef)
{
	tv_bone_to_cam_pos = tv_cible_tete - @to_head OBJ_PosGet()

	to_bone = ANI_CanalObjectGet(Anim_Canal_Ventre)
	tv_start_sight = @to_bone MATH_VecGlobalToLocal(@to_head OBJ_SightGet())
	tv_dest_sight = @to_bone MATH_VecGlobalToLocal(tv_bone_to_cam_pos)
	tv_dest_sight = MATH_VecBlendRotate(tv_start_sight, tv_dest_sight, f_suivi_regard_coef * 0.1)
	@to_bone OBJ_Rotate_FromTo(tv_start_sight, tv_dest_sight)

	to_bone = ANI_CanalObjectGet(Anim_Canal_Torse)
	tv_start_sight = @to_bone MATH_VecGlobalToLocal(@to_head OBJ_SightGet())
	tv_dest_sight = @to_bone MATH_VecGlobalToLocal(tv_bone_to_cam_pos)
	tv_dest_sight = MATH_VecBlendRotate(tv_start_sight, tv_dest_sight, f_suivi_regard_coef * 0.25)
	@to_bone OBJ_Rotate_FromTo(tv_start_sight, tv_dest_sight)

	to_bone = ANI_CanalObjectGet(Anim_Canal_Cou)
	tv_start_sight = @to_bone MATH_VecGlobalToLocal(@to_head OBJ_SightGet())
	tv_dest_sight = @to_bone MATH_VecGlobalToLocal(tv_bone_to_cam_pos)
	tv_dest_sight = MATH_VecBlendRotate(tv_start_sight, tv_dest_sight, f_suivi_regard_coef * 0.2)
	@to_bone OBJ_Rotate_FromTo(tv_start_sight, tv_dest_sight)

	tv_start_sight = cvector(0.0, -1.0, 0.0)
	tv_dest_sight = @to_head MATH_VecGlobalToLocal(tv_bone_to_cam_pos)
	tv_dest_sight = MATH_VecBlendRotate(tv_start_sight, tv_dest_sight, f_suivi_regard_coef * 0.8)
	@to_head OBJ_Rotate_FromTo(tv_start_sight, tv_dest_sight)		
}
