//==============================================================
// returns the oldest or youngest mouche
// you can restrict the search with mouches having a specific state or -1 to include them all
// pushed arguments are in order of pushing
int tb_oldest		// 1 = retreives oldest,  0 = retrieves youngest
int ti_restrictState
//==============================================================
int ti_bestIdx
int ti_curMouche
float tf_curAge
float tf_bestAge
float tf_curTime

ti_restrictState = pop
tb_oldest = pop

ti_bestIdx = -1

if (tb_oldest)
{
	tf_bestAge = -1.0
}
else
{
	tf_bestAge = Cf_Infinit
}
tf_curTime = TIME_Get()

for (ti_curMouche = 0; ti_curMouche < i_nbMouchesMax; ti_curMouche++)
{
	if (IsMoucheActive(ao_moucheList[ti_curMouche]) && (ti_restrictState == -1 || ti_restrictState == ai_moucheState[ti_curMouche]))
	{
		tf_curAge = tf_curTime - af_moucheBirth[ti_curMouche]
		if ( (tb_oldest && tf_curAge > tf_bestAge) ||
		     (!tb_oldest && tf_curAge < tf_bestAge) )
		{
			tf_bestAge = tf_curAge
			ti_bestIdx = ti_curMouche
		}
	}		

}

push(ti_bestIdx)


