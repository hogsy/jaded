#include "KTC_Defines.var"

vector 	v_MyCurrentPos
float		f_ElapsedTime
vector 	v_MyNewPos
float		f_MetersToMove
int 		i_Index
float		f_DistanceMovedOnClamp

//if ( mi_TriggerIndex < 0 || mi_TriggerIndex >= C_MAX_Start_Triggers || !mo_MaximumZPosition[mi_TriggerIndex] )
//{
//	AI_TrackStop( C_TRACK_Run )
//	AI_TrackCurStop()
//
//	return
//}
//
//mv_MyPos					= OBJ_PosGet()
//mv_DestPos				= @mo_MaximumZPosition[mi_TriggerIndex] OBJ_PosGet()
//
//if ( ( mv_DestPos.z ) - ( mv_MyPos.z ) >= 0.0 )
//{
//	mi_IsGoingUp = vrai
//}
//
//v_MyCurrentPos	= OBJ_PosGet()
//f_ElapsedTime	= TIME_GetDt()
//
//f_MetersToMove	= mf_Speed[mi_TriggerIndex] * f_ElapsedTime
//
//if ( mi_IsGoingUp )
//{
//	f_DistanceMovedOnClamp = mv_DestPos.z - v_MyCurrentPos.z
//	
//	if ( ( f_MetersToMove + v_MyCurrentPos.z ) < mv_DestPos.z )
//	{
//		v_MyCurrentPos.z += f_MetersToMove
//		
//		OBJ_PosSet( v_MyCurrentPos )
//		
//		for ( i_Index = 0; i_Index < C_MAX_Linked_Objects; i_Index++ )
//		{
//			if ( mao_LinkedObject[i_Index] )
//			{
//				vector v_CurrentPos
//				
//				v_CurrentPos = @mao_LinkedObject[i_Index] OBJ_PosGet()
//				
//				v_CurrentPos.z += f_MetersToMove
//				
//				@mao_LinkedObject[i_Index] OBJ_PosSet( v_CurrentPos )
//			}
//		}
//	}
//	else
//	{
//		v_MyCurrentPos.z = mv_DestPos.z
//		
//		OBJ_PosSet( v_MyCurrentPos )
//		
//		for ( i_Index = 0; i_Index < C_MAX_Linked_Objects; i_Index++ )
//		{
//			if ( mao_LinkedObject[i_Index] )
//			{
//				vector v_CurrentPos
//				
//				v_CurrentPos = @mao_LinkedObject[i_Index] OBJ_PosGet()
//				
//				v_CurrentPos.z += f_DistanceMovedOnClamp
//				
//				@mao_LinkedObject[i_Index] OBJ_PosSet( v_CurrentPos )
//			}
//		}
//		
//		AI_TrackChange( C_TRACK_Wait, "KTC_BHV_Wait" )
//		AI_TrackStop( C_TRACK_Run )
//		AI_TrackCurStop()
//	}
//}
//else
//{
//	f_DistanceMovedOnClamp = v_MyCurrentPos.z - mv_DestPos.z
//	
//	if ( (v_MyCurrentPos.z - f_MetersToMove ) > mv_DestPos.z )
//	{
//		v_MyCurrentPos.z -= f_MetersToMove
//		
//		OBJ_PosSet( v_MyCurrentPos )
//		
//		for ( i_Index = 0; i_Index < C_MAX_Linked_Objects; i_Index++ )
//		{
//			if ( mao_LinkedObject[i_Index] )
//			{
//				vector v_CurrentPos
//				
//				v_CurrentPos = @mao_LinkedObject[i_Index] OBJ_PosGet()
//				
//				v_CurrentPos.z -= f_MetersToMove
//				
//				@mao_LinkedObject[i_Index] OBJ_PosSet( v_CurrentPos )
//			}
//		}
//	}
//	else
//	{
//		v_MyCurrentPos.z = mv_DestPos.z
//		
//		OBJ_PosSet( v_MyCurrentPos )
//		
//		for ( i_Index = 0; i_Index < C_MAX_Linked_Objects; i_Index++ )
//		{
//			if ( mao_LinkedObject[i_Index] )
//			{
//				vector v_CurrentPos
//				
//				v_CurrentPos = @mao_LinkedObject[i_Index] OBJ_PosGet()
//				
//				v_CurrentPos.z -= f_DistanceMovedOnClamp
//				
//				@mao_LinkedObject[i_Index] OBJ_PosSet( v_CurrentPos )
//			}
//		}
//		
//		AI_TrackChange( C_TRACK_Wait, "KTC_BHV_Wait" )
//		AI_TrackStop( C_TRACK_Run )
//		AI_TrackCurStop()
//	}
//}

v_MyCurrentPos	= OBJ_PosGet()
f_ElapsedTime	= TIME_GetDt()

	v_MyNewPos = v_MyCurrentPos + ( mv_DirPos * f_ElapsedTime * mf_Speed)
	if ( MATH_VecDotProduct( mv_DirPos, mv_DestPos - v_MyNewPos) < 0 )
	{
		// ARRIVED
		if ( mi_mode_z_only)
			v_MyNewPos.z = mv_DestPos.z
		else
			v_MyNewPos = mv_DestPos
		OBJ_PosSet( v_MyNewPos)
		for ( i_Index = 0; i_Index < C_MAX_Linked_Objects; i_Index++ )
		{
			if ( mao_LinkedObject[i_Index] )
			{
				if ( mi_mode_z_only)
				{
					v_MyNewPos = @mao_LinkedObject[i_Index] OBJ_PosGet( )
					v_MyNewPos.z = mv_DestPos.z
				}
				else
				{
					v_MyNewPos = @mao_LinkedObject[i_Index] OBJ_PosGet( ) + ( mv_DirPos * f_ElapsedTime * mf_Speed)
					v_MyNewPos -= ( mv_DestPos -( v_MyCurrentPos + ( mv_DirPos * f_ElapsedTime * mf_Speed)))
				}
				@mao_LinkedObject[i_Index] OBJ_PosSet( v_MyNewPos)
			}
		}
		OBJ_CapaSet(CAPA_Termine, none)
		AI_TrackStop( C_TRACK_Run )
		AI_TrackCurStop()		 
	}
	else	
	{
		OBJ_PosSet( v_MyNewPos)
		for ( i_Index = 0; i_Index < C_MAX_Linked_Objects; i_Index++ )
		{
			if ( mao_LinkedObject[i_Index] )
			{
				v_MyNewPos = @mao_LinkedObject[i_Index] OBJ_PosGet( ) + ( mv_DirPos * f_ElapsedTime * mf_Speed)
				@mao_LinkedObject[i_Index] OBJ_PosSet( v_MyNewPos)
			}
		}
	}