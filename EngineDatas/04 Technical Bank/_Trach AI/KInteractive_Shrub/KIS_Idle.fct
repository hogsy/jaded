#include "KIS_Defines.var"

{
	int 			i_NumCols
	int 			i_Index
	int				i_Index2
	object		o_GFXSource
	message	m_Msg
	
	i_NumCols = 0

	// checking for generic collisons.
	i_NumCols =  COL_ZDE_ZDEListGet( &mao_ZDECol_Objects[0], C_zde_corps, C_zde_corps, OBJ_C_IdentityFlag_ZDE, 0, 0 )

	for ( i_Index = 0; i_Index < i_NumCols; i_Index++ )
	{
		if ( mi_DisableColMeshesAfterCol )
		{
			COL_ColMapActivationSet( none, all )
			COL_ColSetActivationSet( none, C_bit_zde_corps )
		}
		
		@mo_State1Object OBJ_FlagInvisibleSet( vrai )
		
		if ( mo_State2Object )
		{	
			@mo_State2Object OBJ_FlagInvisibleSet( faux )
		}
				
		for ( i_Index2 = 0; i_Index2 < C_MAX_GFX; i_Index2++ )
		{
			if ( mao_GFXTemplate[i_Index2] )
			{
				if ( mao_GFXLocationWP[i_Index2] )
				{
					o_GFXSource = @mao_GFXTemplate[i_Index2] OBJ_Duplicate( @mao_GFXLocationWP[i_Index2] OBJ_PosGet() )

					m_Msg.msg_sender = mao_GFXLocationWP[i_Index2]
				}
				else
				{
					o_GFXSource = @mao_GFXTemplate[i_Index2] OBJ_Duplicate( @mo_State1Object OBJ_PosGet() )
					
					m_Msg.msg_sender = nobody
				}
				
				Dispatch_Interaction( o_GFXSource, m_Msg )
			}
		}
		
		if ( mi_DestroyFirstObjectOnActivation )
		{
			@mo_State1Object OBJ_Destroy()
		}
		
		AI_TrackCurStop()
		
		break
	}
}

