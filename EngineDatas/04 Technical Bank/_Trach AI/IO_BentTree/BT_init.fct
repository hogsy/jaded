#include "IO_BentTree_Defines.var"

mf_CurrTreeBendFrequency  = mf_TreeBendFrequency 

//if ( "univ" && @"univ" ao_AllHumains[C_ID_Kong] )
//{
	mi_KongExists = vrai
//}

v_init_banking	= OBJ_BankingGet()
mv_CurrentBank 	= v_init_banking

mv_InititalBank.x = 0.000
mv_InititalBank.y = 0.000
mv_InititalBank.z = 1.000

// initialize the starting rotation of the vines
{
	int i_Index
	
	for ( i_Index = 0; i_Index < C_Max_Vines;  i_Index++ )
	{
		if ( mao_Vine[i_Index] )
		{	
			@mao_Vine[i_Index] OBJ_BankingSet( mv_InititalBank )
			mav_InitialVineRotation[i_Index]		= @mao_Vine[i_Index] OBJ_BankingGet()
			mi_HasDecayedThisPass[i_Index]	= FALSE
		}
	}
}

// initialize the branches to be part of the tree's hierarchy
{
	int i_Index
	
	for ( i_Index = 0; i_Index < C_Max_Branches; i_Index++ )
	{
		if ( mo_Branch[i_Index] )
		{
			@mo_Branch[i_Index] OBJ_HierarchySet( OBJ_Me() )
		}
	}
}

// init the PAG state stuff
{
	int i_Index

	for ( i_Index = 0; i_Index < C_MaxHitPAGS;  i_Index++ )
	{
		mai_IsPAGActiveForLocation[i_Index] = FALSE
		maf_PAGStartTime[i_Index]				= 0.0
	}
}


// get the usable (i.e. squared) value for the distance parameters
mf_SqrOfFallingSensitiveDist = mf_FallingItemTriggerDistance * mf_FallingItemTriggerDistance

f_SensitivitySqrd	= f_sensibility * f_sensibility
mf_OldSensSqrd	= f_SensitivitySqrd
tf_LastDistance 	= f_SensitivitySqrd

// make sure the tree starts at a banking of 0.0.0 (this is so it that people who make the levels are able to put the tree down, interact with it with Kong,
// and then change its position and set its initial position at the new spot without it starting with a bent banking)
OBJ_BankingSet( mv_InititalBank )

mf_MaxTotalBendAngleInRads = mf_MaxTotalBendAngle * Cf_PiBy180

// setup hierarchy with swing waypoints
if ( mo_SwingPivotPoint )
{
	@mo_SwingPivotPoint OBJ_HierarchySet( OBJ_Me() )
}

AI_TrackCurChangeNow("bhv_Move")