#include "KIMO_defines.var"

// Define at least one function in a track
// function track0 = "name"
// function track1 = "name"
function track2 = "KIMO_Init"
// function track3 = "name"
// function track4 = "name"

// CONFIG
separator "Config"
int									i_kit = enum ( "0-Rocher" 0 "1-Arbre" 1 "2-Porte" 2 "3-GrabObj" 3 "4-PilierKong-Vide" 4 "5-PilierKong-Mur" 5 "6-NYC Bus" 6 )	// animation,etc. kit for kong and the object
//int									i_ODE_ON = vrai_faux			// ODE PAS ENCORE GERE !!!!!
int									i_dyna_option = enum ( "0-Static" 0 "1-Dynamic" 1 "2-Dynamic at win" 2 "3-ODE" 3 "4-ODE at win" 4 )	// see Ci_DynaOption_xxx
int									i_mashSettings = enum ("From kit" 0 "Manual" 1)
int									i_use_std_mashing_kamera = faux_vrai
trigger							trig_win_restriction		// if <EMPTY> there is no win restriction, else the trigger must be valid

// MANUAL MASH SETTINGS
separator "manual mash Settings"
float								f_ms_Force_Coef_Kong_Down
float								f_ms_Force_Coef_Object_Up
float								f_ms_Force_Activate_Object
float								f_ms_Force_Diminution_Object
float								f_ms_Force_Trigger_Kong


// Mashed object animation kit settings
private int						i_kit_Anim_Obj_Wait
private int						i_kit_Anim_Positionne
private int						i_kit_Anim_Challenge
private int						i_kit_Anim_KK_Gagne
private int						i_kit_Anim_KK_Perdu
private int						i_kit_Anim_KK_Gagne_fixe
private int						i_kit_Challenge_Type
private int						i_kit_Kamera_Status
private int						i_kit_Kamera_Finish_ID
function							fn_kit_KK_Gagne
function							fn_kit_KK_Perdu
vector							v_kit_Mashing_Position
vector							v_kit_Mashing_Orientation
vector							v_grab_pos_offset				// offset of pivot where kong needs to be to grab


// KAMERA
private		int					i_kamera_status
private		int					i_kamera_finish_id

// ETATS
private		int					i_etat_courant = 0
private		int					i_etat_ancien = 0
private		function			fct_last_etat
private		int					i_sort_etat
private		float				f_time_start_etat

// LIAISON
private		messageid		mid_mashing_LNK_ID
private		object			o_mashing_actor_tmp			// acteur avec lequel on essaie d'établir une liaison
private		object			o_mashing_actor					// acteur avec lequel on a établi une liaison
private		float				f_time_last_mashing_grab = 0.0		// heure du dernier grab mashing
private		int					i_mashing_LNK_accepte		// indique si le gao accepte ou refuse une liaison
private		int					i_flag_liaison_coupee_cette_trame
private		float				f_pourcentage = 0.0

// POSITION INIT
private		float				f_pourcentage_init = 0.0
private		vector			v_pos_init
private		int					i_reinit = vrai

// PROJETE
private		object			o_projete_actor

//ADDED SURESH
//GFX
separator "GFX"
object 							o_GFX_Locations[NUM_LOCATIONS]							//waypoints used for the position of the GFX
object 							o_GFX_Start_Finish_Animation_Effects[NUM_GFX]	 	//GFX duplicated and executed when object moves at START and END of animation
object 							o_GFX_Middle_Of_Animation_Effects[NUM_GFX]	    		//GFX duplicated and executed when object moves during MIDDLE of animation
//object 							o_GFX_Effects[NUM_GFX]										//GFX duplicated and executed when object moves

private 	vector 				o_GFX_InitPos[NUM_LOCATIONS]
private 	object 				o_bone 
private 	float 					f_global_time 
private 	float 					f_start_Start_Finish_AnimationGFX_time
private 	float 					f_start_Middle_AnimationGFX_time
private	float 					f_delay = 1.0

separator "TRIGGER WON"
trigger			TriggerExec1_Won
trigger			TriggerExec2_Won

// DEBUG
separator "Debug"
int									i_DBG_trace_propose_grab = vrai_faux

private	float	f_SFX_gen_delay

// SF
separator	"SF"
int									i_MemoBrokenStatus	= vrai_faux
private	int						i_SF_AlreadyPlayed