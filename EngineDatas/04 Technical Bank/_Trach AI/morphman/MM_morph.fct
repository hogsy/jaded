vector	tv_pos	

#define Cf_temps_deplacement_camera			20.0

// CAMERA
f_camera_move_coef += TIME_GetDt() / Cf_temps_deplacement_camera*1.6
// DEPLACEMENT CAMERA
@camera OBJ_PosSet(MATH_VecBlend(@dep_object[cur_obj] OBJ_PosGet(), @Morph_object[cur_obj] OBJ_PosGet(), f_camera_move_coef))

// DEPLACEMENT TARGET CAMERA
tv_pos = MATH_VecBlend(@dep_object[cur_obj] OBJ_PosGet(), @Morph_object[cur_obj] OBJ_PosGet(), f_camera_move_coef + 1)
tv_pos.z = @Morph_object[cur_obj] OBJ_PosGet().z
@o_perso_a_snapper OBJ_PosSet(tv_pos)

@camera VIEW_AssignObject(0)
@camera OBJ_OrientTo(o_perso_a_snapper)
VIEW_FocaleSet(0,1.2)

if (morph==end[cur_obj]) // fin du morph
{
	f_delay_betwenn_render+= TIME_GetDt()
	if (f_delay_betwenn_render>2) //attente de la fin de la pause puis reinit render
	{
		f_delay_betwenn_render=0
		if (i<max_obj)		
			i=i+1
		cur_obj=ordre[i]
		morph=1
		f_camera_move_coef=0
		pause_debut_render=1
	}
}
else
{
	if (cur_obj>=B_start)
	{
		// TPS ENTRE 2 POINTS
		f_delay_betwenn_spot += TIME_GetDt()
		if (f_delay_betwenn_spot > tps[cur_obj]+pause_debut_render)
		{
			pause_debut_render=0	
			f_delay_betwenn_spot = 0.0
			morph++
		}
	}
}

@Morph_object[cur_obj] OBJ_MorphProgSet(0,morph)
