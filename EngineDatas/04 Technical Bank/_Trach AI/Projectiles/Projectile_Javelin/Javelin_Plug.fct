vector		tv_temp, tv_temp1
object		to_obj
int				ti_unplug
int				ti_nbmsg
message	msg

if ( o_plug_to == nobody )
{
	macro_del_callback_after_cam("Javelin_Plug")
	return
}

tv_temp = @o_plug_to MATH_VecLocalToGlobal(v_plug_local)
OBJ_PosSet(@o_plug_to OBJ_PosGet() + tv_temp)

tv_temp = @o_plug_to MATH_VecLocalToGlobal(v_plug_sight)
tv_temp1 = @o_plug_to MATH_VecLocalToGlobal(v_plug_banking)
//tv_temp = MATH_VecBlendRotate(OBJ_SightGet(), tv_temp, 2.0 * TIME_GetDt())
//tv_temp1 = MATH_VecBlendRotate(OBJ_BankingGet(), tv_temp1, 2.0 * TIME_GetDt())
OBJ_SightGeneralSet(tv_temp, tv_temp1)

AI_Execute("Javelin_Plug_testSIG")
AI_Execute( "Javelin_waittaken" )

ti_unplug = faux

if (f_plug_timer >= 0 )
{
	f_plug_timer -= TIME_GetDt()
	if (f_plug_timer < 0 )
		ti_unplug = vrai
}

ti_nbmsg = MSG_GetCount()
while	( ti_nbmsg )
{
	msg = MSG_Get()
	ti_nbmsg = MSG_GetCount()
	if (msg.msg_id == msg_id_grenadedestroy )
	{
//		AI_Execute( "Javelin_destroy" )
		OBJ_Destroy()
		return
	}
}

if ( ti_unplug || (OBJ_CapaGet() & OBJ_Capa_4) )
{
	OBJ_CapaSet( 0, OBJ_Capa_4 )
	if ( !i_dynon_done )
	{
		DYN_On()
		i_dynon_done = vrai
	}
	DYN_FlagsSet( DYN_C_BasicForces | DYN_C_VectorFriction | DYN_C_GlobalFriction, none)
	DYN_FrictionVectorSet( mv_LaunchFriction )
	DYN_GravitySet( mv_LaunchGravity )
	DYN_SpeedSetVector( Cv_NullVector )

	COL_ColSetActivationSet( all, none)
	COL_UnCollidableAdd( o_plug_to_master )
		
	o_plug_to_master = nobody
	o_plug_to = nobody

	macro_del_callback_after_cam("Javelin_Plug")

	AI_TrackChange(2,  "Javelin_endofmove" )
}

mi_State = Ci_bambou_state_plug


