// Define at least one function in a track
function track0 = "Projectile_init"
// function track1 = "name"
// function track2 = "name"
// function track3 = "name"
function track4 = "Projectile_Reflex"

			int 			mi_Type = enum("Dynamite" 0 "Crane" 1 "Levier" 2 "Crane Flamme" 3)

			vector		mv_LaunchSpeed
			vector		mv_LaunchGravity
			vector		mv_LaunchFriction
			object		mo_Sender

			int				on_ground
			int				mi_NoDyn = vrai_faux
			
			object		crane_blindage
			float			crane_blindage_timer = 1

private 	int				i_dynam_allumee

private 	int				has_been_launched
private 	vector 		v_last_speed
private	vector		v_start_impulsion
private	vector		v_last_pos
private	vector		v_start_pos

private	int				mi_crane_allume
private	int				mi_crane_choc
private	int				mi_crane_gfx
private	vector		mi_crane_gfx_lastpos
private	vector		mi_crane_gfx_lastsight
			int				mi_crane_takepaf = vrai_faux

private	vector		mv_ImpactPos
private	vector		mv_ImpactNormal

private	int				mi_craneflamme_tramecount
private	float			mf_craneflamme_timeleft
private	int				mi_craneflamme_splof
private	int				mi_craneflamme_spg2
private	vector		mv_craneflamme_grid
private	float			mf_craneflamme_distmin
private	vector		mv_craneflamme_spot
private	int				mi_craneflamme_spg2_nb
private	int				mai_craneflamme_spg2[ 10 ]
private	float			maf_craneflamme_spg2_timer[ 10 ]

private	int				mi_dyna_gfx
private	float			mf_dyna_time
private 	float			mf_dyna_timecoef
private	int				mi_dyna_resetgravity

private	float			f_Timer

private	int				i_dans_l_eau = faux

separator "Special Flags"
int							i_SF_TakeOnlyOnce			=	vrai_faux		// SF
private int				i_SF_AlreadyTaken

private float f_time_blindage