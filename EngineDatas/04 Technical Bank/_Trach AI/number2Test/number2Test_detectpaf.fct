#include "number2Test_defines.var"
	
message	tm_msg_filter
messageid	tmid_paf_event
object		to_sender
int				ti_rank
int				ti_paf
int				ti_control_flag

gloTime = TIME_Get()

for( i1 = 0; i1 < NUM_PILLERS ; i1++)
{
	MSG_SetNull(tm_msg_filter)
	tm_msg_filter.msg_gao1 = OBJ_Me()
	ti_rank = -1

	for(	tmid_paf_event = MSG_GlobalSearchIntGao(C_EVENT_TYPE_Paf, &ti_rank, tm_msg_filter);
		MSG_GlobalIsValid(tmid_paf_event);
		tmid_paf_event = MSG_GlobalSearchIntGao(C_EVENT_TYPE_Paf, &ti_rank, tm_msg_filter)	)
	{
		to_sender = MSG_GlobalGetSender( tmid_paf_event)
		kongHit = vrai
		tv_paf_dir1 += EVENT_PafDirGet(tmid_paf_event)
		tv_paf_pos =  EVENT_PafPositionGet(tmid_paf_event)
		ti_paf_force = EVENT_PafTypeGet(tmid_paf_event)
		//speedVector 	= @to_sender DYN_SpeedGetVector()
		speedVector1 = @to_sender OBJ_SightGet()
		//LIBGFX_Explosion_mur_temp(GFX_Explose, @o_Piller_Peices[1] OBJ_PosGet() )
	}
}

//for( j = 0; j< NUM_PILLERS; j++)
//{z
	//num =  COL_ZDE_ZDEListGet(&tao_zdecol_objects[0], 50, C_zde_corps, OBJ_C_IdentityFlag_ZDE , 0, 0)
	   

	num =  COL_ZDE_ZDEListGet(&tao_zdecol_objects[0], C_zde_corps, C_zde_corps, OBJ_C_IdentityFlag_ZDE , 0, 0)
	
		for( i1=0; i1 < NUM_NON_PAF; i1++)
		{
			if(! (ao_objets_non_paffables[i1] == tao_zdecol_objects[i1]))
			{
				if(tao_zdecol_objects[i1])
					speed1 	= @tao_zdecol_objects[0]  DYN_SpeedGet()
			}
		}
	
	if(num)
	{

			if ( !mi_IsKnocking )
			{
				
				resistanceTimer 	= TIME_Get()
				once = vrai			
				//speed1 	= @tao_zdecol_objects[0]  DYN_SpeedGet()
				fat=vrai
			}
				
			mi_IsKnocking		= vrai
			
			if(speed1 < speedThreshold)
			{

				//DBG_TraceString("SPEED\n")
				//DBG_TraceEOL()
				//TIME_Unlock()
				//resistanceTimer 	= TIME_Get()
				mi_IsKnocking	= faux
			}

	}
	else
	{
		//DBG_TraceString("COL\n")
		//DBG_TraceEOL()
		speed1				=0.0
		//resistanceTimer	= 0.0
		mi_IsKnocking	= faux
	}
		if(num > 15)
		DBG_BreakPoint()

if(gloTime - resistanceTimer > 5.0 && fat)
{
	speed2 = @tao_zdecol_objects[0]  DYN_SpeedGet()
}

//if(once)
//{
//	for( k = 0;k <num; k++)
//	{
//		for(l=0;l<NUM_NON_PAF; l++)
//		{
//			if(! (ao_objets_non_paffables[l] == tao_zdecol_objects[k]))
//			{	
//				if(tao_zdecol_objects[k])
//				{
//					speed 			= @tao_zdecol_objects[k]  DYN_SpeedGet()
//					speedVector 	= @tao_zdecol_objects[k]  DYN_SpeedGetVector()
//					for( i = 0;i < NUM_PILLERS; i++)
//					{
//
//						@o_Piller_Peices[i] ODE_Enable( vrai)
//						@o_Piller_Peices[i] ODE_Setv(0, speedVector)
//						@o_Piller_Peices[i] ODE_Setf(2, speed)
//						ti_control_flag = @o_Piller_Peices[i]ODE_Geti(0)
//						ti_control_flag &= ~0x20		// Immovable
//						@o_Piller_Peices[i] ODE_Seti(0, ti_control_flag)
//						@o_Piller_Peices[i] OBJ_FlagInactiveSet( faux)
//		
//					}
//								
//				}
//			}
//		}
//	}
//	once = faux
//}




