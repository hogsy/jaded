#include "Fleche_defines.var"

object	to_obj
object	to_target

vector	tv_temp
vector	tv_temp1
vector	tv_impact_pos

float		tf_contact_dist
float		tf_arrow_length

messageid		tmid_paf

int			ti_snd
int			ti_plug
int			ti_crac

tf_arrow_length = 0.8
to_target = nobody
ti_plug = faux
ti_crac = faux
tv_impact_pos = Cv_NullVector

OBJ_FlagInvisibleSet(faux)

if( mi_State != Ci_bambou_state_launch )
{
	mi_State = Ci_bambou_state_launch
	mf_State_Duration = 0.0
	
	i_Tir_Paf_done = faux
	
	DYN_On()
	DYN_FlagsSet( DYN_C_BasicForces | DYN_C_VectorFriction | DYN_C_GlobalFriction | DYN_C_HorizontalGrounds, none)
	DYN_FrictionVectorSet(cvector(0.0,0.0,0.0))
	DYN_SpeedSetVector(v_Tir_Speed)
	DYN_GravitySet(Cv_NullVector)
	
	XMEN_OnOff(-1, vrai)
	XMEN_SetSize(0, -1, 0.5)

	f_game_speed = 0.5
	f_real_dt = TIME_GetDt()
}
else
{
	mf_State_Duration += TIME_GetDt()
//	if( mf_State_Duration > 1.0 )
		DYN_GravitySet(MATH_VecBlend(DYN_GravityVectorGet(), Cv_NormalGravity, 0.5 * f_real_dt))
}


// tomber trop bas ?
//if( MATH_AbsFloat( OBJ_PosGet().z - mf_ZInit) > 50 )
if( (mf_ZInit - 50) > OBJ_PosGet().z )
{
	DBG_TraceObject(OBJ_Me())
	DBG_TraceString(" détruit après 50m de chute\n")
	OBJ_Destroy()
}

// trop long ?
if( mf_State_Duration > 15.0 )
{
	DBG_TraceObject(OBJ_Me())
	DBG_TraceString(" détruit après ")
	DBG_TraceFloat(mf_State_Duration)
	DBG_TraceString(" sec\n")
	OBJ_Destroy()
}

//--------( Lancers de rayon sur les objects qui sont susceptibles d'avoir des obbox )--------------------
if( ! MATH_VecNullEpsilon(OBJ_PosGet() - v_last_pos) )
{
//	tv_temp1 = mf_ContactPointDistance* OBJ_SightGet() + v_last_pos
	tv_temp1 = OBJ_PosGet() + (tf_arrow_length * OBJ_SightGet())
//	tv_temp1 = OBJ_PosGet()
	tv_temp = v_last_pos
	
	DBG_RenderVector( tv_temp, tv_temp1 - tv_temp, color_rouge) 
	
	if(mo_Sender && o_joueur && mo_Sender == o_joueur)
	{
		@mo_Sender OBJ_FlagsControlSet(OBJ_C_ControlFlag_RayInsensitive, 0)
		if( Fleche_DoNotHitKong() )
			@o_kong OBJ_FlagsControlSet(OBJ_C_ControlFlag_RayInsensitive, 0)
	}
	
	to_obj = COL_RayObject_Vector(tv_temp, tv_temp1 - tv_temp, all, none, Ci_Filter_IdentityFlag, i_LRay_type)
	
//	DBG_TraceString("to_obj = ")
//	DBG_TraceObject(to_obj)
//	DBG_TraceEOL()
	
	if (to_obj && COL_RayObject_ActorGet() != mo_Sender) 
	{
		o_plug_to = to_obj
		tv_impact_pos = COL_RayObject_PosGet()
		
		DBG_RenderVector(tv_impact_pos, OBJ_BankingGet(), color_bleu)
		DBG_RenderVector(tv_impact_pos, OBJ_HorizonGet(), color_rouge)
		DBG_RenderVector(tv_impact_pos, OBJ_SightGet(), color_vert)
		
		to_obj = COL_RayObject_ActorGet()
		i_plug_canal = COL_RayObject_CanalGet()
		v_plug_normal = COL_RayObject_NormalGet()
		to_target = to_obj
		o_plug_to_master = to_obj
		
		ti_snd = COL_RayObject_SoundGet()
		if( ! ti_snd )
		{
			ti_snd = SND_plante_dirt
			if( i_plug_canal != -1 )
			{
				// ça a un canal donc c vivant !
				ti_snd = SND_plante_flesh
				ti_plug = vrai
			}
		}
		SND_RequestPlay( ti_snd )

		switch( ti_snd )
		{
			case COL_C_Snd_None :
			case COL_C_Snd_Dirt :
			case COL_C_Snd_Veget : 
			case COL_C_Snd_Wood : 
				i_GFX_impactcolor = 0xFF808080
				ti_plug = vrai
				break
			case COL_C_Snd_Flesh :
				//i_GFX_impactcolor = 0xFF
				i_GFX_impactcolor = 0x04050E30
				ti_plug = vrai
				break
			case COL_C_Snd_Stone	: 
			case COL_C_Snd_Steel	: 
				i_GFX_impactcolor = 0xFF808080
				ti_crac = vrai
				break
			case COL_C_Snd_Water	:
				to_target = nobody
				break
		}
	}
	
	if(mo_Sender && o_joueur && mo_Sender == o_joueur)
	{
		@mo_Sender OBJ_FlagsControlSet(0, OBJ_C_ControlFlag_RayInsensitive)
		if( Fleche_DoNotHitKong() )
			@o_kong OBJ_FlagsControlSet(0, OBJ_C_ControlFlag_RayInsensitive)
	}
}


// HIT ???
if ( to_target && ! i_Tir_Paf_done )
{
	i_Tir_Paf_done = vrai
	tmid_paf = EVENT_AddEventPafCanal(
		C_EVENT_FILTER_All, 
		C_PAF_KK_Arrow, 
		mo_Sender, 
		Cf_EVENT_Duree_1Trame, 
		to_target,
		i_plug_canal,
		5.0,
		OBJ_SightGet(),
		OBJ_PosGet())
	EVENT_Gao2Set(tmid_paf, OBJ_Me())
	
	DBG_TraceObject(OBJ_Me())
	DBG_TraceString(" a paffé ")
	DBG_TraceObject(to_target)
	DBG_TraceEOL()
	
	// plug ou crac !
	if( ! ti_plug )
	{
		ti_crac = vrai
		macro_del_callback_tir("Fleche_cb_Tir")
	}
}

// CRAC ???
if( ti_crac )
{
	DBG_TraceObject(OBJ_Me())
	DBG_TraceString(" détruite en ayant touchée ")
	DBG_TraceObject(to_target)
	DBG_TraceEOL()
//	if( MATH_VecNullToler(tv_impact_pos, 0.01) )
//		tv_impact_pos = OBJ_PosGet() - OBJ_SightGet()
//	OBJ_PosSet(tv_impact_pos)
	OBJ_PosSet(v_last_pos - (0.25 * v_last_sight))
	
	Fleche_GFX_Impact()
	macro_del_callback_tir("Fleche_cb_Tir")
	OBJ_Destroy()
	return
}

// PLUG ???
if( ti_plug )
{
	if ( o_plug_to_master != o_plug_to)
	{
		tv_temp = @o_plug_to OBJ_PosGet()
		tv_temp += @o_plug_to MATH_VecLocalToGlobal(@o_plug_to BV_OBBoxMinGet())
		tv_temp += @o_plug_to MATH_VecLocalToGlobal(@o_plug_to BV_OBBoxMaxGet() - @o_plug_to BV_OBBoxMinGet()) * 0.5

		tv_temp -= tv_impact_pos
//		if ( MATH_AbsFloat(MATH_VecDotProduct(OBJ_SightGet(), @o_plug_to OBJ_BankingGet())) <= Cf_Cos60 )
//			tv_temp -= MATH_VecDotProduct(tv_temp, @o_plug_to OBJ_BankingGet()) * @o_plug_to OBJ_BankingGet()
		
		OBJ_SightSet(tv_temp)
	}
	DBG_RenderSphere(tv_impact_pos, 0.25, color_jaune)
	tv_impact_pos -= tf_arrow_length * OBJ_SightGet()
	DBG_RenderSphere(tv_impact_pos, 0.25, color_rouge)
	OBJ_PosSet(tv_impact_pos)
	
	v_plug_local = @o_plug_to MATH_VecGlobalToLocal(OBJ_PosGet() - @o_plug_to OBJ_PosGet())
	v_plug_sight = @o_plug_to MATH_VecGlobalToLocal(OBJ_SightGet())
	v_plug_banking = @o_plug_to MATH_VecGlobalToLocal(OBJ_BankingGet())
	
	DYN_SpeedSetVector( Cv_NullVector )
	DYN_GravitySet( Cv_NullVector )
	DYN_TractionSet( Cv_NullVector )
	DYN_FrictionVectorSet( Cv_NullVector )
	
	if( o_joueur && to_target == o_joueur )
		f_plug_timer = 0.0
	else if ( o_kong && to_target == o_kong )
		f_plug_timer = MATH_RandFloat( 0.5, 1.0)
	else
		f_plug_timer = MATH_RandFloat( mf_MinPlugTime, mf_MaxPlugTime )
	
	Fleche_GFX_Impact()
//	AI_RunContext(CTX_Normal)
	macro_del_callback_tir("Fleche_cb_Tir")
	macro_add_callback_after_cam("Fleche_cb_Plugged")
	return
}

// ORIENTATION
OBJ_SightGeneralSet(DYN_SpeedGetVector(), OBJ_BankingGet())
v_last_pos = OBJ_PosGet()
v_last_sight = OBJ_SightGet()

//f_game_speed = MATH_FloatBlend(f_game_speed, 1.0, 5 * f_real_dt)
//@get_global f_game_speed = f_game_speed
//@get_camera OBJ_PosSet(OBJ_PosGet())
//@get_camera OBJ_SightGeneralSet(OBJ_SightGet(), Cv_VerticalVector)


//Fleche_Trainee_GFX_8()
i_GFX_flag = vrai


#ifndef _FINAL_
if( i_DEBUG )
	Str_DisplayTextOnce("cb Tir", VIEW_3dWorldTo2d(0, OBJ_PosGet()))
#endif



