vector	tv_paf_pos 
vector	tv_paf_ortho
float		tf_speed

AI_Execute("iam_exec_check_proche")
if ( o_paf_actor)
{ 
	SND_RequestPlay( 1)
	while( i_morceau < 5) 
	{
		// Ejectons 1 morceau
	
		ai_KC[i_morceau] = 1
		@ao_morceaux[i_morceau] DYN_On()
		@ao_morceaux[i_morceau] DYN_FlagsSet(DYN_C_BasicForces + DYN_C_NeverDynamicFather, none)
		@ao_morceaux[i_morceau] DYN_GravitySet(cvector( 0.0, 0.0, -65.0))
		@ao_morceaux[i_morceau] DYN_FrictionSet( 0.0)	
		tv_paf_pos = @ao_morceaux[i_morceau] OBJ_PosGet()
		DBG_RenderVector(tv_paf_pos, cvector( 0.0, 0.0, 5.0), 0xFF00)
		if ( i_paf_type == 0)
		{
			// PAF
			tv_paf_pos += v_paf_sens * MATH_RandFloat( 8.0, 15.0)
			tv_paf_ortho.x = -v_paf_sens.y
			tv_paf_ortho.y = v_paf_sens.x
			tv_paf_ortho.z = 0.0
//			tf_speed = @o_paf_actor DYN_SpeedGet()
			tv_paf_pos += tv_paf_ortho *  MATH_RandFloat( -8.0, 8.0)
			DBG_RenderVector(tv_paf_pos, cvector( 0.0, 0.0, 5.0), 0xFF00)
			@ao_morceaux[i_morceau] DYN_Impulsion( tv_paf_pos, MATH_RandFloat( 2.0, 4.0))
		}
		else if ( i_paf_type == 1)
		{
			// CHARGE
			tv_paf_pos += v_paf_sens * MATH_RandFloat( f_paf_speed * 0.5, f_paf_speed * 0.66)
//			tv_paf_pos += v_paf_sens * MATH_RandFloat( 8.0, 15.0)
			tv_paf_ortho.x = -v_paf_sens.y
			tv_paf_ortho.y = v_paf_sens.x
			tv_paf_ortho.z = 0.0
			tv_paf_ortho *= MATH_FloatSign(MATH_RandFloat( -1.0, 1.0))
			f_paf_speed = f_paf_speed
			tv_paf_pos += tv_paf_ortho *  MATH_RandFloat( f_paf_speed * 0.33, f_paf_speed* 0.5)
//			tv_paf_pos += tv_paf_ortho *  MATH_RandFloat( 8.0, 12.0)
			DBG_RenderVector(tv_paf_pos, cvector( 0.0, 0.0, 5.0), 0xFF00)
			@ao_morceaux[i_morceau] DYN_Impulsion( tv_paf_pos, MATH_RandFloat( f_paf_speed * 0.0833, f_paf_speed * 0.166))
		}
		else
		{
			// COLLISION
			tv_paf_pos += v_paf_sens * MATH_RandFloat( 0.25, 0.33)
			tv_paf_ortho.x = -v_paf_sens.y
			tv_paf_ortho.y = v_paf_sens.x
			tv_paf_ortho.z = 0.0
			tv_paf_ortho *= MATH_FloatSign(MATH_RandFloat( -1.0, 1.0))
			f_paf_speed = f_paf_speed
			tv_paf_pos += tv_paf_ortho *  MATH_RandFloat( 0.16, 0.25)
			DBG_RenderVector(tv_paf_pos, cvector( 0.0, 0.0, 5.0), 0xFF00)
			@ao_morceaux[i_morceau] DYN_Impulsion( tv_paf_pos, 0.1) //MATH_RandFloat( f_paf_speed * 0.0833, f_paf_speed * 0.166))
			af_KC_X[i_morceau] *= 0.33
			af_KC_Y[i_morceau] *= 0.33
		}
		
		af_KC_X[i_morceau] = MATH_RandFloat( 0.5, 2.0) * 5.0
		af_KC_X[i_morceau] *= MATH_FloatSign(MATH_RandFloat( -1.0, 1.0))
		af_KC_Y[i_morceau] = MATH_RandFloat( -2.0, -0.5) * 5.0
		af_KC_Y[i_morceau] *= MATH_FloatSign(MATH_RandFloat( -1.0, 1.0))
		af_KC_Z[i_morceau] = MATH_RandFloat( 1.0, 2.0) * 5.0
		af_KC_Z[i_morceau] *= MATH_FloatSign(MATH_RandFloat( -1.0, 1.0))
		i_morceau++
	}
	if ( i_morceau == 5)
	{
		COL_ColMapActivationSet( none, all)
		AI_TrackStop(2)
	}
}
f_paf_time = 0.0