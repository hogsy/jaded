 #include "KNG_Defines.var"

vector 	tv_sight
int 		ti_i
vector 	tv_target
object	to_best_wp	
vector 	tv_center 
vector	tv_pos
object	tv_first_valid_native
//int			ti_action
int			ti_action_active
int			ti_total_frame, ti_frame
vector	tv_random_pos

// SORTIE ETAT
if (i_sort_etat)
{
	i_sort_etat = faux
	return
}


// ENTREE ETAT
if (i_etat_courant != ETAT_Movement )
{
	i_etat_ancien = i_etat_courant
	i_etat_courant = ETAT_Movement 
	
	if (fct_last_etat)
	{
		i_sort_etat = vrai
		AI_Execute(fct_last_etat)
	}
	
	fct_last_etat = AI_TrackCurGet()
	
	f_time_start_etat = 0.0
	
	for (ti_i = 0; ti_i < i_number_of_natives; ti_i++)
	{
		if (! ao_native_list[ti_i])
			continue 

		@ao_native_list[ti_i] ACT_ActionSet(Ci_AnimNative_Deplacement)
		
		ti_total_frame = @ao_native_list[ti_i] ANI_NbFrameGet(0)	
		ti_frame	= MATH_RandInt(0,ti_total_frame)
		@ao_native_list[ti_i] ANI_CurrentFrameSet(0,ti_frame)		
	}
	
	if (o_cur_wp == nobody)
		o_cur_wp = KNG_GetNearestWP()
	else if ( ! i_wp_already_set )
	{
		o_cur_wp  = WAY_NetNextWP(n_cur_net,o_cur_wp,0,0)

		if (! o_cur_wp )
			o_cur_wp = KNG_GetNearestWP()
	}
}	
else
{
	f_time_start_etat += TIME_GetDt()
}

if (o_cur_wp == nobody)
{
	o_cur_wp = KNG_GetNearestWP()
}

// check if we're at destination
if (o_cur_wp != nobody)
{
	// destination reached?
	if ( (i_waypoint_reached_detection == Ci_wp_radius && MATH_VecNorm(@o_cur_wp OBJ_PosGet() - OBJ_PosGet()) < f_rayon ) ||
         (i_waypoint_reached_detection == Ci_wp_bv && COL_BV_PivotCollide(o_cur_wp)) )
	{
		i_action = 0
		ti_action_active = 0
		
		if ( mi_WaitForMoveEndToDWZ && !( @o_cur_wp OBJ_CapaTest(Ci_Capa_DWZNotAllowed ) ) )
		{
			mi_AllowDWZ = vrai
		}
		
		if (@o_cur_wp OBJ_CapaTest(Ci_Capa_Action))
			ti_action_active = 1 
	
		if (ti_action_active )
		{
			if ( @o_cur_wp OBJ_FlagsIdentityTest(OBJ_C_IdentityFlag_DesignStruct) )
			{
				i_action	 = o_cur_wp.des_int1
			}
			
			switch (i_action)
			{
				case Ci_Action_Wait :
					AI_TrackCurChangeNow("KNG_ETAT_Wait")
					break	
				case Ci_Spread :				
					AI_Execute("KNG_exec_spread")
					break	
				case Ci_Throw_Spears_Normal :
					AI_TrackCurChangeNow("KNG_ETAT_Digwazai")
					break	
				case Ci_Throw_Spears_Digwazai :
					OBJ_CapaSet(Ci_Capa_Digwazai_Attack,none)
					break	
				case  Ci_Destroy	:
					AI_Execute("KNG_exec_Destroy")
					AI_TrackCurChangeNow("KNG_ETAT_Dead")
					break	
				case  Ci_Teleport	:
					o_cur_wp = o_cur_wp.des_object1
					n_cur_net = @o_cur_wp WAY_NetOfObj()
					OBJ_PosSet(@o_cur_wp OBJ_PosGet())
					OBJ_SightSet(@o_cur_wp OBJ_SightGet())
					COL_StartMatrixSet(OBJ_PosGet())

					for (ti_i = 0; ti_i < i_number_of_natives; ti_i++)
					{	
						if ( ! ao_native_list[ti_i] )
							continue 
							
						tv_random_pos = BV_RandomPosGet(1)
						@ao_native_list[ti_i] OBJ_PosSet(tv_random_pos)
						@ao_native_list[ti_i] OBJ_BankingGeneralSet(OBJ_SightGet(), Cv_VerticalVector)
						@ao_native_list[ti_i] COL_StartMatrixSet(OBJ_PosGet())
					}	
					
					break					
				case Ci_Cohesion :
					i_cohesion = o_cur_wp.des_int2
					break	
				case Ci_Throw_and_Go : 
					OBJ_CapaSet(Ci_Capa_Digwazai_Attack,none)
					break
			}
		}
		
		if ( i_action != Ci_Teleport)
		{
			// if capa 0, disable the waypoint, it should be used only once
			if (o_cur_wp && @o_cur_wp OBJ_CapaTest(OBJ_Capa_0))
			{
				@o_cur_wp OBJ_FlagInactiveSet(1)	
			}	
		
			if (n_cur_net)
				o_cur_wp  = WAY_NetNextWP(n_cur_net,o_cur_wp,0,0)
			else
				o_cur_wp = nobody
		}
	
	}	
}


// find first valid native in array
tv_first_valid_native = nobody
for (ti_i = 0; ti_i < i_number_of_natives && tv_first_valid_native == nobody; ti_i++)
{	
	if (ao_native_list[ti_i])
		tv_first_valid_native = ao_native_list[ti_i]
}

// if no wp to follow, check if flee mode is on
if (o_cur_wp == nobody)
{
	if (i_flee_mode == Ci_flee_none)
		tv_target = @o_target_movement OBJ_PosGet()		
	else if (i_flee_mode == Ci_flee_group) 
		tv_target = (2.0 * @tv_first_valid_native OBJ_PosGet())  - @o_target_movement OBJ_PosGet() 
}

tv_center = Cv_NullVector

f_rayon = 0.0

// update boids sights
for (ti_i = 0; ti_i < i_number_of_natives; ti_i++)
{	
	if ( ! ao_native_list[ti_i] )
		continue 

	if (o_cur_wp)
		tv_target = @o_cur_wp OBJ_PosGet()
	else if (i_flee_mode == Ci_flee_scatter)	
		tv_target = (2.0 * @ao_native_list[ti_i] OBJ_PosGet())  - @o_target_movement OBJ_PosGet() 
		
	tv_sight = FLK_GetSight(&ao_native_list[0], i_number_of_natives, ao_native_list[ti_i], tv_target)

	tv_sight = MATH_VecBlend(@ao_native_list[ti_i] OBJ_SightGet(),tv_sight, TIME_GetDt()*10)
	@ao_native_list[ti_i] OBJ_BankingGeneralSet(tv_sight,Cv_VerticalVector)

	tv_pos = @ao_native_list[ti_i] OBJ_PosGet()
 
	tv_center += tv_pos

	if (i_waypoint_reached_detection == Ci_wp_radius)
	{
		if ( MATH_VecNorm(OBJ_PosGet() - tv_pos) > 	f_rayon)
			f_rayon = MATH_VecNorm(OBJ_PosGet() - tv_pos)
	}
}

DBG_RenderCircle(OBJ_PosGet()+cvector(0.0,0.0,1.0),f_rayon,Cv_VerticalVector,color_bleu)	

//tv_center  /= i_number_of_natives
//OBJ_PosSet(tv_center)

// check for digwazai request
if ( mi_AllowDWZ )
{
	if ( OBJ_CapaTest(Ci_Capa_Digwazai_Attack))
	{
		AI_TrackCurChange("KNG_ETAT_Digwazai")
	}
	// check for random throwing request
	if ( OBJ_CapaTest(Ci_Capa_Normal_Attack))
	{
		AI_TrackCurChange("KNG_ETAT_Digwazai")
	}
}
