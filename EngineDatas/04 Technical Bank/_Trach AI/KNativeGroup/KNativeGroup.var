// Define at least one function in a track
// function track0 = "name"
 function track1 = "KNG_Reflex"
function track2 = "KNG_Init"
//function track3 = "KNG_Reflex"
// function track4 = "name"

#include "KNG_Defines.var"

// ETATS
separator "Etat"
private int				i_etat_courant = -1									// état courant
private int				i_etat_ancien = -1									// dernier état
private int				i_sort_etat = faux										// test sortie d'état
private function 		fct_last_etat											// fonction du dernier état
private int				i_force_reinit											// pour forcer un état à se ré-initialiser
private float				f_time_start_etat = 0.0
private int				i_inited_once = 0

//private function		fct_ancien_etat

// NATIVES
separator "Natives"
object				ao_native_ref[Ci_number_of_reference_natives]
int 					i_number_of_natives = 15
int 					i_nb_javelin_to_validate_wave = 3
private int 			i_current_number_of_natives
int						i_invincible = 0 
private int 			i_nb_native_ref
private int 			i_max_number_of_natives = Ci_max_number_of_natives
private object 		ao_native_list[Ci_max_number_of_natives]
private vector		ao_native_init_pos[Ci_max_number_of_natives]
private int			ai_native_has_thrown_javelin[Ci_max_number_of_natives]
private float			af_native_throwing_delay[Ci_max_number_of_natives]
private object		o_leader
private float			f_rayon
object				o_weapon
int						i_weapon_fire = 0
int						i_respawn_when_dead = enum( "None" 0 "Only When Dead" 1 "Always" 2 )	// type of respawn when some or all natives die in the group
float					f_respawn_delay_min = 2.0
float					f_respawn_delay_max = 4.0
//float					mf_SpearFlameProportion = 0.25           // percentage chance to have a flaming spear if i_weapon_fire is true (0.0 – 1.0)
object				ao_uncol_objects[Ci_uncol_objects_max]

// TRIGGER
separator "Trigger"
trigger				tr_movement_trigger
trigger				tr_activation_trigger
trigger				mt_StopRespawn									// trigger to stop respawning.

// TARGETS
separator "Target"
object				o_target_movement
private object		o_cur_wp
private network	n_cur_net
int						i_target_zone = enum( "Body" 2 "Pivot" 0 "Head" 1 )
float					f_radius_normal = 3.0
float					f_radius_digwazai = 1.0
private vector		v_locked_position = Cv_NullVector
private vector		v_next_locked_position	= Cv_NullVector
private object		o_ann
private object		o_kong

// Movement
separator "Movement"
int						i_flee_mode = enum("None" 0  "Group" 1 "Scatter" 2)
int						i_waypoint_reached_detection = enum("BV" 0 "Radius" 1)
float					i_cohesion = 5.0

private int			mi_KeepMovementTriggered 	= faux
private int			mi_JustDied						= faux

int						mi_WaitForMoveEndToDWZ	= vrai_faux							// wait for a movement to a WP with Capa 12 not set to allow DWZ attacks
private int			mi_AllowDWZ						= vrai

float					mf_InactiveDWZFireRate 		= 0.66								// percentage (from 0.0 to 1.0) of natives that are throwing spears
private int			mai_AleadyTestedForInactiveDWZThrowRate[Ci_max_number_of_natives]

private int			i_wp_already_set = 0

private int			i_action = 0

private float			f_wait_time


// ACTIVATION
private int			i_all_natives_generated = 0
private int			i_all_natives_ready = 0
private int         	i_frame_nb = 0
private int			i_do_respawn = 0
private int			mi_ReflexExecCounter			= 0
private int			mi_IsGravityOn 					= vrai
private	float		f_respawn_delay = 0.0

// PAF 
separator "Paf"
private 	object	EVT_Paf_Pere
private 	vector	v_paf_dir 
int 					i_no_paf = 0
private	int			i_nb_wave = 0
int						i_nb_wave_kill_ann = 3
private	int			i_nb_javelin_this_wave
private	int			i_wave_validee

// SPECIAL
separator "Special"
object				ao_fixed_spawn_wp[Ci_max_number_of_fixed_spawn_wp]
private int			i_cur_fixed_spawn_wp = 0

// DEBUG
separator "Debug"
int						i_dbg = vrai_faux
vector				v_dbg

float					f_time_AdditionalWait = 0.0