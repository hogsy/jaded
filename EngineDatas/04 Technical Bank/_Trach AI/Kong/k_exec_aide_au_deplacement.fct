#include "k_define.var"

vector	tv_joy_axis
vector	tv_normal
vector	tv_pos
vector	tv_last_ground_pos

int			ti_calcul_normale
int			id_str 
int			ti_gmat 

tv_joy_axis = pop

ti_gmat = 0

ti_calcul_normale = faux	
if ( !tai_ground_flag[2] )
{

	tv_last_ground_pos  = v_last_ground_pos - (OBJ_SightGet() * 0.05)
	if ( COL_RayObject_Vector( tv_last_ground_pos + cvector(0.0,0.0,0.1), -Cv_VerticalVector, all, none, 0, COL_C_Ray_on_ColMap_NoCrossable))
	{
		ti_calcul_normale = vrai
		tv_normal = OBJ_SightGet() * 1.4
		tv_normal += OBJ_HorizonGet() * 1.5
		tv_normal.z = 0.0
		ti_gmat = COL_RayObject_FlagsGet()
	}
}
else if ( !tai_ground_flag[1])
{
	tv_last_ground_pos  = v_last_ground_pos - (OBJ_SightGet() * 0.05)
 	if ( COL_RayObject_Vector( tv_last_ground_pos + cvector(0.0,0.0,0.1), -Cv_VerticalVector, all, none, 0, COL_C_Ray_on_ColMap_NoCrossable))
	{	
		ti_calcul_normale = vrai
		tv_normal = OBJ_SightGet() * 1.4
		tv_normal -= OBJ_HorizonGet() * 1.5
		tv_normal.z = 0.0
		ti_gmat = COL_RayObject_FlagsGet()
	}
}

//if ( ( ti_calcul_normale && !MATH_VecNullEpsilon( tv_joy_axis)) && (!(ti_gmat & Gmat_KK_Cross_All_But_Kong)) )
if ( ti_calcul_normale && ! MATH_VecNullEpsilon( tv_joy_axis) && ( ! (ti_gmat & Gmat_KK_Cross_All_But_Kong_And_Raptors) ) && ( ! (ti_gmat & Gmat_KK_Cross_All_But_Kong_Only) ) )
{
	tv_pos = COL_TipTopPointGet(tv_normal, Cf_largeur_Kong, faux, vrai, faux, vrai)
	tv_pos += Cv_VerticalVector * 5.0
	macro_render_Vector( tv_pos, tv_joy_axis * 5.0, color_vert)
	tv_normal = COL_RayObject_EdgeNormalGet()							// Normale de l edge
	
	macro_render_Vector( tv_pos, tv_normal , 0xFF00FF)
	if ( !MATH_VecNullEpsilon( tv_normal))
	{
		// TEST D'INTENTION DU JOUEUR
		if ( MATH_VecDotProduct( tv_normal, tv_joy_axis) <= Cf_Cos30)
		{
			// Le joueur ne fonce pas dans le vide
			tv_joy_axis = MATH_VecInCone(tv_joy_axis, -tv_normal, Cf_1Degre * 90, 0)
//			OBJ_PosSet( OBJ_PosGet() - ((tv_normal * TIME_GetDt())*10))
		}
		else
			ti_calcul_normale = faux
	}
	else
	{
		ti_calcul_normale = faux
		DBG_TraceString( "Cas De Merde Ne Rien Faire")
		DBG_TraceEOL()
	}		
	macro_render_Vector( tv_pos, tv_joy_axis * 5.0, color_rouge)
}
push(ti_calcul_normale)
push(tv_joy_axis)
//