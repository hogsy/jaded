// LE JOUEUR CONTROLE KONG ===========================================

#include "k_define.var"

int				ti_rank
messageid	EVT_ID
object		to_gao


// ACTIONS ===================================================

// GRAB ---------------------------------------------------------------------------
if( IO_ButtonJustPressed(Kong_Joy_Grab) )
	i_flag_just_grab = vrai

// DASH ---------------------------------------------------------------------------
if( IO_ButtonPressed(Kong_Joy_Jump) )
{
	i_joy_flag_dash = vrai
	i_dash_for_walling = faux
}

// JUMP ----------------------------------------------------------------------------
if( IO_ButtonJustPressed(Kong_Joy_Jump) )
{
	i_flag_just_Action = vrai
	i_flag_trample = vrai
}

// PUNCH + MASHING ------------------------------------------------------
if( IO_ButtonJustPressed(Kong_Joy_Punch) )
{
	i_flag_just_coup = vrai
	i_flag_just_Rage_Any_Button = vrai
}

// RAGE + MASHING --------------------------------------------------------
if( IO_ButtonJustPressed(Kong_Joy_Rage) )
{
	i_flag_just_Rage = vrai
	i_flag_just_Rage_Any_Button = vrai
}
// RAGE + MASHING --------------------------------------------------------
if( IO_ButtonPressed(joy_button_L) )
{
	i_flag_galop = vrai
}


// JOYJOYJOYJOYJOY ===========================================
v_joy_sight_old = v_joy_sight			// Memo du joypour détection du SWEEP
f_joy_norm = glob_joynorm_get
if ( f_joy_norm)
	v_joy_sight = glob_joyvector_get
else
	v_joy_sight = v_look_direction  // OBJ_SightGet()
v_joy_sight_normalized = MATH_VecNormalize( v_joy_sight)



#ifndef _FINAL_

// CHEAT MODE =================================================================
if( ! i_cheat_mode && IO_ButtonPressed(joy_button_R) && IO_ButtonPressed(joy_button_R2) && IO_ButtonPressed(joy_button_L) && IO_ButtonPressed(joy_button_L2) )
	i_cheat_mode = vrai
else if( i_cheat_mode == vrai && ( ! IO_ButtonPressed(joy_button_R) || ! IO_ButtonPressed(joy_button_R2) || ! IO_ButtonPressed(joy_button_L) || ! IO_ButtonPressed(joy_button_L2) ) )
	i_cheat_mode = faux
else if  ( i_cheat_mode == vrai && IO_ButtonJustPressed(JoyPSX_Button_carre)) 
      i_cheat_mode = 2
else if( i_cheat_mode == 2 && ( IO_ButtonJustPressed(JoyPSX_Button_carre) ))
      i_cheat_mode = faux

// PAF KITUE ===================================================================
if ( IO_ButtonPressed(joy_button_R2) &&  IO_ButtonPressed(joy_button_R) )
{
	if ( IO_ButtonJustPressed(JoyPSX_Button_triangle) && IO_ButtonJustPressed(JoyPSX_Button_rond) )
	{
		ti_rank = -1
		EVT_ID = MSG_GlobalScan(C_EVENT_TYPE_Visibility, &ti_rank)
		while(MSG_GlobalIsValid(EVT_ID))
		{
			to_gao = EVENT_PereGet(EVT_ID)
			if (to_gao != OBJ_Me() && to_gao != o_Joueur)
				Proc_KK_Send_Paf( C_EVENT_FILTER_KingKong, C_PAF_KK_KiTue, OBJ_Me(), Cf_EVENT_Duree_1Trame, to_gao, -1, 0.0, -OBJ_SightGet(), OBJ_PosGet() + OBJ_SightGet())
			EVT_ID = MSG_GlobalScan(C_EVENT_TYPE_Visibility, &ti_rank)
		}
	}
}

// PAF SUR KONG ==============================================================
if ( IO_ButtonPressed(joy_button_L2) &&  IO_ButtonPressed(joy_button_L) )
{
	if ( IO_ButtonPressed(joy_button_R2) )
	{
		if ( IO_ButtonJustPressed( JoyPSX_Button_croix))
			Proc_KK_Send_Paf( C_EVENT_FILTER_Enemy, C_PAF_KK_Moyen, o_Joueur, Cf_EVENT_Duree_1Trame, OBJ_Me(), -1, 0.0, -OBJ_SightGet(), OBJ_PosGet() + OBJ_SightGet())
		else if ( IO_ButtonJustPressed( JoyPSX_Button_triangle	))
			Proc_KK_Send_Paf( C_EVENT_FILTER_Enemy, C_PAF_KK_Moyen, o_Joueur, Cf_EVENT_Duree_1Trame, OBJ_Me(), -1, 0.0, OBJ_SightGet(), OBJ_PosGet() - OBJ_SightGet())
		else if ( IO_ButtonJustPressed( JoyPSX_Button_carre))
			Proc_KK_Send_Paf( C_EVENT_FILTER_Enemy, C_PAF_KK_Moyen, o_Joueur, Cf_EVENT_Duree_1Trame, OBJ_Me(), -1, 0.0, OBJ_HorizonGet(), OBJ_PosGet() - OBJ_HorizonGet())
		else if ( IO_ButtonJustPressed( JoyPSX_Button_rond))
			Proc_KK_Send_Paf( C_EVENT_FILTER_Enemy, C_PAF_KK_Moyen, o_Joueur, Cf_EVENT_Duree_1Trame, OBJ_Me(), -1, 0.0, -OBJ_HorizonGet(), OBJ_PosGet() + OBJ_HorizonGet()) 
	}
	else if ( IO_ButtonJustPressed( JoyPSX_Button_croix))
		Proc_KK_Send_Paf( C_EVENT_FILTER_Enemy, C_PAF_KK_Fort, o_Joueur, Cf_EVENT_Duree_1Trame, OBJ_Me(), -1, 0.0, -OBJ_SightGet(), OBJ_PosGet() + OBJ_SightGet())
	else if ( IO_ButtonJustPressed( JoyPSX_Button_triangle	))
		Proc_KK_Send_Paf( C_EVENT_FILTER_Enemy, C_PAF_KK_Fort, o_Joueur, Cf_EVENT_Duree_1Trame, OBJ_Me(), -1, 0.0, OBJ_SightGet(), OBJ_PosGet() - OBJ_SightGet())
	else if ( IO_ButtonJustPressed( JoyPSX_Button_carre))
		Proc_KK_Send_Paf( C_EVENT_FILTER_Enemy, C_PAF_KK_Fort, o_Joueur, Cf_EVENT_Duree_1Trame, OBJ_Me(), -1, 0.0, OBJ_HorizonGet(), OBJ_PosGet() - OBJ_HorizonGet())
	else if ( IO_ButtonJustPressed( JoyPSX_Button_rond))
		Proc_KK_Send_Paf( C_EVENT_FILTER_Enemy, C_PAF_KK_Fort, o_Joueur, Cf_EVENT_Duree_1Trame, OBJ_Me(), -1, 0.0, -OBJ_HorizonGet(), OBJ_PosGet() + OBJ_HorizonGet()) 
}

// WATER DEBUG: PRESS A
//if (IO_KeyJustPressed(65))
//	i_Water_ON = 1 - i_Water_ON

if (IO_KeyJustPressed(81))
	i_DBG_TETE_ON = 1 - i_DBG_TETE_ON
if (IO_KeyJustPressed(83))
	i_DBG_ROTX_ON = 1 - i_DBG_ROTX_ON
if (IO_KeyJustPressed(68))
	i_DBG_IK_ON = 1 - i_DBG_IK_ON

#endif

