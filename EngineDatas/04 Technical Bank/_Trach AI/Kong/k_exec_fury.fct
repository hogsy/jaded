#include "k_define.var"

#define    ZoomSmoothMax			0.9
#define    ZoomSmoothTimeDec		4.0

object	to_camera

float		tf_volume_fury_tgt
float		tf_volume_speed
float		tf_perfect_coef
float		tf_blend_coef

int			ti_Coup_ID
int			ti_diminution

//f_time_fury = 10.0
if( ! MATH_FloatNullEpsilon(f_time_fury) )
{
	tf_volume_speed = 1.0
	tf_volume_fury_tgt = MATH_FloatMin(0.8, f_time_fury / ZoomSmoothTimeDec )  // Son Par defaut (ATTENTION c'est aussi utilisé pour les FX)
	to_camera = @get_global o_camera
	if( @get_Kamera_Path to_camera i_cc_cam_sur_ann )
	{
 		tf_volume_fury_tgt *= 0.5  // Son en sourdine
 		tf_volume_speed = 5.0   // On y va vite !
//		@get_global Proc_AE_ZoomSmoothCenterSet( -0.00001 , @o_tete[0] OBJ_PosGet() - @get_Kamera OBJ_PosGet() )
	}
	else
	{
//		@get_global Proc_AE_ZoomSmoothCenterSet( ZoomSmoothMax * tf_volume_fury_tgt, @o_tete[0] OBJ_PosGet() - @get_Kamera OBJ_PosGet() )
//		if( f_time_fury < Cf_Fury_AFX_end_delay )
//			f_fury_afx_coef += TIME_GetDt()
//			f_fury_afx_coef = MATH_FloatMax(0.0, f_fury_afx_coef - (TIME_GetDt() / Cf_Fury_AFX_end_delay) )
//		else
//			f_fury_afx_coef = MATH_FloatMin(f_fury_afx_coef + TIME_GetDt(), 1.0)
		
		// AFX COEF
		if( f_time_fury > Cf_Fury_AFX_end_delay )
		{
			tf_perfect_coef = 1.0
			tf_blend_coef = 1.0
		}
		else
		{
			tf_perfect_coef = MATH_FloatMax(0.0, f_time_fury / Cf_Fury_AFX_end_delay)
			tf_blend_coef = 3.0
		}
		f_fury_afx_coef = MATH_FloatBlend(f_fury_afx_coef, tf_perfect_coef, tf_blend_coef * TIME_GetDt())
		
		if( @to_camera Proc_Kam_IsInGame() )
		{
			@get_global Proc_AE_BlackAndWhiteSet(MATH_FloatBlend(@get_global Proc_AE_BlackAndWhiteGet(), f_fury_afx_blackandwhite * f_fury_afx_coef, 5.0 * TIME_GetDt()))
			@get_global Proc_AE_ContrasteSet(MATH_FloatBlend(@get_global Proc_AE_ContrasteGet(), f_fury_afx_contraste * f_fury_afx_coef, 5.0 * TIME_GetDt()))
			@get_global Proc_AE_RemanenceSet(MATH_FloatBlend(@get_global Proc_AE_RemanenceGet(), f_fury_afx_remanance * f_fury_afx_coef, 5.0 * TIME_GetDt()))
			@get_global Proc_AE_ColorBalanceSet(MATH_FloatBlend(@get_global Proc_AE_ColorBalance1Get(), f_fury_afx_colorbalance1 * f_fury_afx_coef, 5.0 * TIME_GetDt()), f_fury_afx_colorbalance2)
			@get_global Proc_AE_MotionBlurSet(MATH_FloatBlend(@get_global Proc_AE_MotionBlurGet(), f_fury_afx_blur * f_fury_afx_coef, 5.0 * TIME_GetDt()))
		}
//		Str_DisplayTextOnce("FURY Time = ", cvector(0.4,0.7,0))
//		Str_DisplayFloatOnce(f_time_fury, cvector(0.55,0.7,0))
//		Str_DisplayTextOnce("FURY Coef = ", cvector(0.4,0.75,0))
//		Str_DisplayFloatOnce(f_fury_afx_coef, cvector(0.55,0.75,0))	
	}
	
	if( f_time_fury != Cf_Infinit && @to_camera Proc_Kam_IsInGame() )
	{
		ti_diminution = vrai
		switch( i_etat_courant )
		{
			case ETAT_Kong_finish :
			case ETAT_Kong_grab_mashing : 
			case ETAT_Kong_finished :		// finihs contre big scolo, je peux être en furie
				ti_diminution = faux
				break
				
			case ETAT_Kong_grab : 
				if( Proc_KK_TestMashing(faux) )
					ti_diminution = faux
				break
		}
		if( ti_diminution )
			f_time_fury -= MATH_FloatMin(f_time_fury, TIME_GetDt())       // décrémentation du temps de Fury
	}
	
	if ( ! f_time_fury )
		Fury_End
}
else
{
	tf_volume_fury_tgt = 0.0    // Volume NULL
	tf_volume_speed = 0.2     // Vitesse de decrement
}


if (tf_volume_fury_tgt < 0.5)
{
	tf_volume_fury_tgt = 0.5
	tf_volume_speed = 10.0
}

switch (i_etat_courant)
{
	case ETAT_Kong_finish :
	case ETAT_Kong_finished :
	case ETAT_Kong_grab :

	switch (ACT_ActionGet())
	{
		case 232:
		case 272:
		case 286:
		case 296:
			// Baisser Vol Zic fin des finishs
			f_fury_time_Volnull = 2.0 
			break
 
//		case 270 :
//		case 271 :
//		case 272 :
//		case 273 :
//			// Kong Mord le TREX
//		    tf_volume_fury_tgt = 0.3    // Volume Medium
//			tf_volume_speed = 2.0     // Vitesse
//		   	break
		default:
		if (tf_volume_fury_tgt < 0.8 )
		{
			tf_volume_fury_tgt = 0.8   // Volume Medium
			tf_volume_speed = 1.0    // Vitesse
		}
	}
} 
 
if (f_fury_time_Volnull)
{
	tf_volume_fury_tgt = 0.0     // Volume Medium
	tf_volume_speed = 3.0      // Vitesse
	f_fury_time_Volnull -= MATH_FloatMin(f_fury_time_Volnull ,TIME_GetDt())
}
 
// GESTION VOLUME ==================================================================================================
f_volume_fury = MATH_FloatBlend(f_volume_fury,tf_volume_fury_tgt , tf_volume_speed * TIME_GetDt())     // Blend pour simuler les fades IN / OUT...
 

// AUREL AUREL AUREL AUREL AUREL AUREL AUREL AUREL AUREL
// AUREL AUREL AUREL AUREL AUREL AUREL AUREL AUREL AUREL
// AUREL AUREL AUREL AUREL AUREL AUREL AUREL AUREL AUREL
//DBG_TraceFloat(f_volume_fury)
//DBG_TraceEOL()
// AUREL AUREL AUREL AUREL AUREL AUREL AUREL AUREL AUREL
// AUREL AUREL AUREL AUREL AUREL AUREL AUREL AUREL AUREL
// AUREL AUREL AUREL AUREL AUREL AUREL AUREL AUREL AUREL


SIG_SendFloat2( SIG_C_SETMUSVOL, f_volume_fury, OBJ_Me())
// GESTION VOLUME ==================================================================================================


// Gestion SON CHEST + GROUP 
ti_Coup_ID = COUP_MODE()
if (ti_Coup_ID == C_Mode_Fury && (ACT_ActionGet() == Ci_Kanim_IntimidG && ANI_CurrentFrameGet(0) > 25 )
|| (ACT_ActionGet() == Ci_Kanim_Intimid_Furie && ANI_CurrentFrameGet(0) < 140 ))
{
	Proc_KK_SND_CHEST_Play()
	f_sound_volume_B -= MATH_FloatMin(f_sound_volume_B, TIME_GetDt() * 0.2)
}
else
{
	Proc_KK_SND_CHEST_Stop()
	if (ACT_ActionGet() != Ci_Kanim_Intimid_Furie || ANI_CurrentFrameGet(0) > 140 )                        // Frame de debut de l'augmentation du volume.
		f_sound_volume_B = MATH_FloatMin(1.0 , f_sound_volume_B + ( 5.0 * TIME_GetDt() ))
}

if (f_sound_volume_B != 1.0)
	SND_M_SetAllVolButMusAndB(f_sound_volume_B) 


// INFOS DEBUG ====================================================
#ifndef _FINAL_
if( @"univ" i_cheat_page == 4 )
{
	// TEMPS DE FURY
	Str_DisplayTextOnce("Fury = ", cvector(0.8,0,0))
	Str_DisplayFloatOnce(f_time_fury, cvector(0.87,0,0))
	
	// NB BIG NMI
	Str_DisplayTextOnce("BIG NMI = ", cvector(0.8,0.1,0))
	Str_DisplayIntOnce(Proc_KK_Get_BIG_NMI_Count(nobody), cvector(0.9,0.1,0))
}
#endif
