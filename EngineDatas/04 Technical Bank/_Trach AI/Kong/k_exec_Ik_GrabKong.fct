int				ti_i

float			tf_dist
float			tf_dot
float			tf_coef_epaule

object		to_snap
object		to_bras
object		to_avbras
object		to_epaule 
object		to_main
//
vector		tv_pos_hand
vector		tv_sens

vector		tv_main_delta
vector		tv_angle_coude
vector		tv_save_sight
vector		tv_save_bank
vector		tv_hor
vector		tv_decal
vector		tv_snap_offset

if ( i_IK_end)
{
	f_grab_blend_main = MATH_FloatMax( f_grab_blend_main - ( 8.0 * TIME_GetDt()), 0.0)
	if ( !f_grab_blend_main)
	{
		i_IK_end = faux
		AI_CBDel( o_GrabKong_Target, CallBack_After_Blend, "k_exec_Ik_GrabKong")
//		o_GrabKong_Target = nobody
		return
	}
}
else
	f_grab_blend_main = MATH_FloatMin( 1.0, f_grab_blend_main + ( 6.0 *  TIME_GetDt()))

if ( i_GrabKong_MainBloquee == -1 
|| !MSG_GlobalIsValid(amid_CL_LIAISON_ID_GRABKONG[i_GrabKong_MainBloquee]))
{
	return
}

// De cote pas d IK
if( i_GrabKong_cote)
	return

for ( ti_i = 0; ti_i < 2; ti_i++)
{

	tf_dot = MATH_VecDotProduct(  LNK_GrabKong_AncrageVectorGet(  amid_CL_LIAISON_ID_GRABKONG[i_GrabKong_MainBloquee]), @ao_CL_GRABKONG[i_GrabKong_MainBloquee] OBJ_SightGet())
	tv_snap_offset = Cv_NullVector
	if ( tf_dot < Cf_Cos5)
	{
		if ( tf_dot < -Cf_Cos5)
		{
			// Derrière
			to_snap = @o_GrabKong_Target ANI_CanalObjectGet( Anim_Canal_CuisseDroite + ( ti_i * 20))
		}
		else
		{
			// Coté
			tf_dot = MATH_VecDotProduct(  LNK_GrabKong_AncrageVectorGet(  amid_CL_LIAISON_ID_GRABKONG[i_GrabKong_MainBloquee]), @ao_CL_GRABKONG[i_GrabKong_MainBloquee] OBJ_HorizonGet())
			if ( tf_dot > 0.0)
			{
				if ( ti_i)
					to_snap = @o_GrabKong_Target ANI_CanalObjectGet( Anim_Canal_BrasDroit)
				else
				{
//						tv_snap_offset = @to_snap OBJ_HorizonGet()
						to_snap = @o_GrabKong_Target ANI_CanalObjectGet( Anim_Canal_JambeGauche) // CHECKED
				}
			}
			else
			{
				if ( ti_i)
				{
					to_snap = @o_GrabKong_Target ANI_CanalObjectGet( Anim_Canal_JambeDroite)
				}
				else
					to_snap = @o_GrabKong_Target ANI_CanalObjectGet( Anim_Canal_BrasGauche)			
			}
		}
//			to_main = ANI_CanalObjectGet(Anim_Canal_MainDroite + (ti_i * 20))
//			tv_save_sight = @to_main OBJ_SightGet()
//			tv_save_bank = @to_main OBJ_BankingGet()
//		}
	}	
	else
		to_snap  =	@o_GrabKong_Target ANI_CanalObjectGet( Anim_Canal_Grab_MainD + ti_i)
	

	
	if ( to_snap)
	{
		to_bras = ANI_CanalObjectGet( Anim_Canal_BrasDroit + (ti_i * 20))
		to_avbras = ANI_CanalObjectGet( Anim_Canal_AvantBrasDroit + (ti_i * 20))
		to_main = ANI_CanalObjectGet(Anim_Canal_MainDroite + (ti_i * 20))
	
		// NEW NEW
		to_epaule = ANI_CanalObjectGet(Anim_Canal_EpauleDroite + (ti_i * 20))
		v_pos_main_old = @to_main OBJ_PosGet()

//	if ( tf_dot < Cf_Cos5)
//	{
//		v_pos_main = @to_snap OBJ_PosGet()
//		if ( tf_dot < -Cf_Cos5)
//		{
//			v_pos_main += @o_GrabKong_Target OBJ_HorizonGet() * 0.5 * ( (ti_i * 2.0) - 1.0)
//		}
//		else
//			v_pos_main += @o_GrabKong_Target OBJ_SightGet() * MATH_FloatSign(MATH_VecDotProduct( OBJ_SightGet(), OBJ_HorizonGet())) * 0.5 * ( (ti_i * 2.0) - 1.0)
//	}	
//	else	
		v_pos_main = @to_snap OBJ_PosGet() + tv_snap_offset


		tf_coef_epaule = MATH_VecDistance(v_pos_main, @to_bras OBJ_PosGet())
		tf_coef_epaule -= 2.5//zf_dist //2.0 // f_dist_main_coude_D + f_dist_bras_coude_D
		tf_coef_epaule *= 0.6 * MATH_FloatSign(ti_i * -1)  //0.5
//		Str_DisplayFloatOnce(tf_coef_epaule, cvector(0,0.2*ti_i,0))
 		@to_epaule OBJ_RotateGlobalZ(tf_coef_epaule)

 		f_dist_main_coude_D = 1.899 // MATH_VecDistance( v_pos_main_old, @to_avbras OBJ_PosGet())
		f_dist_bras_coude_D = 1.594 //MATH_VecDistance( @to_bras OBJ_PosGet(), @to_avbras OBJ_PosGet())	
	
		v_pos_main = MATH_VecBlend( v_pos_main_old, v_pos_main, f_grab_blend_main)
		tf_dist = MATH_VecDistance( @to_bras OBJ_PosGet(), v_pos_main)
		if ( tf_dist > f_dist_main_coude_D + f_dist_bras_coude_D)
		{
			// Limitation de la position de la main en fonction de la longuer du bras + l avant bras
			v_pos_main -= @to_bras OBJ_PosGet()
			MATH_VecSetNorm( v_pos_main,f_dist_main_coude_D + f_dist_bras_coude_D - 0.05)
			v_pos_main += @to_bras OBJ_PosGet()
		}

	//	object to_gao1, object to_gao2, float tf_length_1, float tf_length_2, vector tv_dest_pos, vector tv_flexion_dir, float tf_IK_coef)
		OBJ_LIB_IK(to_bras,  to_avbras, f_dist_bras_coude_D, f_dist_main_coude_D, v_pos_main, @to_epaule OBJ_BankingGet(), f_grab_blend_main)
		if ( tf_dot > Cf_Cos5)
		{
			// Devant
			@to_main OBJ_BankingGeneralSet( @to_snap OBJ_SightGet(), @to_snap OBJ_BankingGet() ) // * ( ( 2 * ti_i) - 1)
		}
		else if ( tf_dot < -Cf_Cos5)
		{
			// Derrière
			@to_main OBJ_BankingGeneralSet( @to_snap OBJ_SightGet(), -@to_snap OBJ_BankingGet() ) // * ( ( 2 * ti_i) - 1)
		}

//		if ( tf_dot > Cf_Cos5)
//		{
			tv_save_sight = @to_main OBJ_SightGet()
			tv_save_bank = @to_main OBJ_BankingGet()
//		}
		tv_hor = MATH_VecCrossProduct( @to_bras OBJ_BankingGet(), @to_avbras OBJ_BankingGet())
		tv_hor = -MATH_VecCrossProduct( @to_avbras OBJ_BankingGet(), tv_hor)
		@to_avbras OBJ_BankingGeneralSet( tv_hor, @to_avbras OBJ_BankingGet())
		@to_main OBJ_BankingGeneralSet( tv_save_sight, tv_save_bank)
		DBG_RenderVector( @to_main OBJ_PosGet(), Cv_VerticalVector, color_rouge)
		DBG_RenderVector( v_pos_main, Cv_VerticalVector, color_vert)
		DBG_RenderVector( @to_snap OBJ_PosGet(), Cv_VerticalVector, color_bleu)
	}
}	
