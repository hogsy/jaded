#include "k_define.var"

int				ti_i
int				ti_flag_kill_GFX

float			tf_coef

vector		tv_point_A
vector		tv_point_B
vector		tv_wind
vector		tv_wind_dir

object		to_hand

return
if ( !i_SFX_on)
	return


ti_flag_kill_GFX = vrai

//if (OBJ_FlagsStatusGet() & OBJ_C_StatusFlag_Culled)
//	ti_flag_kill_GFX = vrai
//else if (OBJ_FlagsControlGet() & (OBJ_C_ControlFlag_ForceInvisible + OBJ_C_ControlFlag_SecInvisible))
//	ti_flag_kill_GFX = vrai
//else if (i_etat_courant != ETAT_jump)
//	ti_flag_kill_GFX = vrai
//else if ( i_etat_courant == ETAT_commun_climb_swing)
//	ti_flag_kill_GFX = vrai
//else if ( i_etat_courant == ETAT_commun_climb_swing_G)
//	ti_flag_kill_GFX = vrai
//else if (ACT_ActionGet() <= Ci_Kanim_saute_cycl)
//	ti_flag_kill_GFX = vrai
//else
//	ti_flag_kill_GFX  = ti_flag_kill_GFX 

if  ( i_GFX_reception) 
{
	i_GFX_reception = faux
	ti_flag_kill_GFX  = faux
}

if (ti_flag_kill_GFX)
{
	for (ti_i = 0; ti_i < 4; ti_i++)
	{
		if (GFX_Jump_Smoke[ti_i] != -1)
		{
			GFX_Seti(GFX_Jump_Smoke[ti_i], 13106, 0)						// *number of sprite to generate
			GFX_Jump_Smoke[ti_i] = -1
		}
	}
	
	return
}

tv_wind_dir =v_jump_last_speed
tv_wind_dir.z = 0.0

tf_coef = MATH_VecNorm(tv_wind_dir)
//if (tf_coef)
//	tv_wind_dir /= tf_coef
//else
tv_wind_dir = OBJ_SightGet()

tv_wind = tv_wind_dir
tv_wind_dir *= 4.0
	
for (ti_i = 0; ti_i < 4; ti_i++)
{
	if (!ti_i)
		to_hand = ANI_CanalObjectGet(Anim_Canal_MainGauche)
	else if (ti_i == 1)
		to_hand = ANI_CanalObjectGet(Anim_Canal_MainDroite)
	else if (ti_i == 2)
		to_hand = ANI_CanalObjectGet(Anim_Canal_PiedGauche)
	else if (ti_i == 3)
		to_hand = ANI_CanalObjectGet(Anim_Canal_PiedDroit)	

	if (@to_hand OBJ_PosGet().z > OBJ_PosGet().z + 1.0)
	{
		if (GFX_Jump_Smoke[ti_i] != -1)
		{
			GFX_Seti(GFX_Jump_Smoke[ti_i], 13106, 0)						// *number of sprite to generate
			GFX_Jump_Smoke[ti_i] = -1
		}
		
		continue
	}

	if (GFX_Jump_Smoke[ti_i] == -1)
	{
		GFX_Jump_Smoke[ti_i] = GFX_Add(13)																// Create the boum
		
		GFX_MaterialSet(GFX_Jump_Smoke[ti_i], get_SFX_light_and_smoke, -1)						// met le materiau
		GFX_Seti(GFX_Jump_Smoke[ti_i], 13101, 8)															// Materiau 0
	//	GFX_Seti(GFX_Jump_Smoke[ti_i], 13110, 9)															// Materiau 1
	//	GFX_Seti(GFX_Jump_Smoke[ti_i], 13111, 8)															// Materiau 3
	//	GFX_Seti(GFX_Jump_Smoke[ti_i], 13112, 10)															// Materiau 2
	
		GFX_Seti(GFX_Jump_Smoke[ti_i], 13100, 25)															// *Buffer number of sprite
		GFX_Seti(GFX_Jump_Smoke[ti_i], 13106, 0xFFFFFFFF)												// *number of sprite to generate
	
		GFX_Setf(GFX_Jump_Smoke[ti_i], 13003, 0.5)															// Time fase 1
		GFX_Setf(GFX_Jump_Smoke[ti_i], 13004, 2.0)															// Time fase 2
	
		GFX_Seti(GFX_Jump_Smoke[ti_i], 13107, 0)															// Sprites non triés
	
		GFX_Setf(GFX_Jump_Smoke[ti_i], 13007, 1.0)															// Gravity
			
		GFX_FlagSet(GFX_Jump_Smoke[ti_i], 0 , 1)
		GFX_FlagSet(GFX_Jump_Smoke[ti_i], 2 , 1)
		
		GFX_Setf(GFX_Jump_Smoke[ti_i], 13012, 0.75)														// Time random
	
//		GFX_Setv(GFX_Jump_Smoke[ti_i], 13201, cvector(-1.0, -1.0,  -1.0))						// Speed min
//		GFX_Setv(GFX_Jump_Smoke[ti_i], 13202, cvector(1.0, 1.0, 1.0))							// Speed max

		GFX_Setv(GFX_Jump_Smoke[ti_i], 13206, Cv_NullVector)										// Mainpossfriction
		GFX_Setv(GFX_Jump_Smoke[ti_i], 13205, Cv_NullVector)										// Mainposspeed

		GFX_Setf(GFX_Jump_Smoke[ti_i], 13000, 1.0)														// Growing speed min
		GFX_Setf(GFX_Jump_Smoke[ti_i], 13001, 2.0)														// Growing speed max
		GFX_Setf(GFX_Jump_Smoke[ti_i], 13002, 0.0001)													// Friction Grow
		
		GFX_Setf(GFX_Jump_Smoke[ti_i], 13005, 0.35)														// Creation size min
		GFX_Setf(GFX_Jump_Smoke[ti_i], 13006, 0.75)														// Creation size max
		
		GFX_Setv(GFX_Jump_Smoke[ti_i], 13203, cvector(0.02, 0.02, 0.1))							// friction speed
		
		GFX_Seti(GFX_Jump_Smoke[ti_i], 13103, 0x80C0C0C0)											// Color fase 0
		GFX_Seti(GFX_Jump_Smoke[ti_i], 13104, 0x40C0C0C0)											// Color fase 1
		GFX_Seti(GFX_Jump_Smoke[ti_i], 13105, 0x00C0C0C0)											// Color fase 2
		
//		GFX_Setf(GFX_Jump_Smoke[ti_i], 13009, 3.0)														// Norm speed min
//		GFX_Setf(GFX_Jump_Smoke[ti_i], 13010, 5.0)														// Norm speed max
		
		GFX_Setf(GFX_Jump_Smoke[ti_i], 13008, 0.005)														// generation rate

		GFX_Setv(GFX_Jump_Smoke[ti_i], 13204, tv_wind)												// wind
	}

	tv_point_A = @to_hand OBJ_PosGet()
	tv_point_A.z = OBJ_PosGet().z + 1.0
 	tv_point_A -= tv_wind * TIME_GetDt()
	GFX_Setv(GFX_Jump_Smoke[ti_i], 13200, tv_point_A) 								// Creation Pos

	GFX_Setv(GFX_Jump_Smoke[ti_i], 13201, tv_wind_dir + cvector(-1.0, -1.0,  -1.0))	// Speed min
	GFX_Setv(GFX_Jump_Smoke[ti_i], 13202, tv_wind_dir + cvector(1.0, 1.0, 1.0))		// Speed max

	GFX_Setf(GFX_Jump_Smoke[ti_i], 13009, tf_coef * 0.75)													// Norm speed min
	GFX_Setf(GFX_Jump_Smoke[ti_i], 13010, tf_coef * 1.5)															// Norm speed max
	
	GFX_Setv(GFX_Jump_Smoke[ti_i], 13207, OBJ_HorizonGet())						// CreaPosAxe X
	GFX_Setv(GFX_Jump_Smoke[ti_i], 13208, OBJ_SightGet())						// CreaPosAxe Y
}

