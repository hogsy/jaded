#include"k_define.var"

vector	tv_pos

// SORTIE ETAT ===================================================================
if (i_sort_etat)
{
	i_sort_etat = faux
	return
}

// INITIALISATION ETAT ==============================================================
if (i_etat_courant != ETAT_Kong_mort)
{
	i_etat_courant = ETAT_Kong_mort

	if (fct_last_etat)
	{
		i_sort_etat = vrai
		AI_Execute(fct_last_etat)
	}

	fct_last_etat = AI_TrackCurGet()

	// CAMERA -----------------------------------------------------------------
	switch ( i_mode_mort )
	{
		case Ci_Kcamera_saut_mort_digwazai :
			ACT_ActionSet( Ci_Kanim_Mort_Digwazai)
			break
		case Ci_Kcamera_saut_mort_chute :
			COL_ColSetActivationSet( none, all)
			ACT_ActionSet( Ci_Kanim_Mort_Chute)
			break
		case Ci_Kcamera_saut_mort_lava :
			v_mort_pos = OBJ_PosGet()
			COL_ColSetActivationSet( none, all)
			DYN_Off()
			ACT_ActionSet( Ci_Kanim_Mort_Lava)
			break		
		case Ci_Kcamera_saut_mort_gladiator :
			ACT_ActionSet( Ci_Kanim_Mort_Digwazai)		
			break
		case Ci_Kcamera_mort_piranha :
			ACT_ActionSet( Ci_Kanim_Mort_Piranha)
			break
		default:
			ACT_ActionSet( Ci_Kanim_Mort_Gene)	
	}
	// CAMERA -----------------------------------------------------------------
	COL_CrossableSet( Gmat_KK_Face_de_mort, none)
	COL_ColMapActivationSet(none, all)
	Proc_KK_Death(i_mode_mort)
	f_blend_mort = 0.0
}

switch ( i_mode_mort)
{
	case Ci_Kcamera_saut_mort_lava :
//		tv_pos = OBJ_PosGet()
//		tv_pos.z = v_mort_pos.z
		@get_Kamera Proc_Kam_FinishMode_Set( Ci_Kcamera_saut_mort_lava, OBJ_Me())	// Parametres pour le moment, le type de Finish et le perso de reference de ce finish (en principe KONG)
		v_mort_pos.z -= TIME_GetDt() * 5.0
		OBJ_PosSet( v_mort_pos)
	case Ci_Kcamera_saut_mort_chute :
	case Ci_Kcamera_saut_mort_digwazai :
	case Ci_Kcamera_mort_piranha :
		break
	case Ci_Kcamera_saut_mort_gladiator :
		f_blend_mort += 5.0 * TIME_GetDt()
		OBJ_BankingGeneralSet( MATH_VecBlendRotate( OBJ_SightGet(), v_paf_dir, f_blend_mort) , Cv_VerticalVector)
}