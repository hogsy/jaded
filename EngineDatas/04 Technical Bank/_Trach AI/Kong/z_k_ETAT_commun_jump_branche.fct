#include"k_define.var"

int			ti_i
int			ti_nb_link

float		tf_speed
float		tf_norm
float		tf_joy_norm
float		tf_hand_dist
float		tf_ponderation
float		tf_best_ponderation
float		tf_best_link_length

vector	tv_joy_dir
vector	tv_pos
vector	tv_new_sight
vector	tv_current_to_next_wp
vector	tv_best_link_axis
vector	tv_plan_normale
vector	tv_last_climb_position

object	to_bassin
object	to_collide_object
object	to_hand
object	to_next_wp
object	to_best_next_wp

#define	Cf_tolerance								4.0
#define	Cf_climb_1D_speed						8.0


// SORTIE ETAT ===================================================================
if (i_sort_etat)
{
	i_sort_etat = faux
	
	v_zdm_pos = Cv_Kong_zdm_pos
	DYN_GravitySet(Cv_Kong_Gravity)

	return
}

// INITIALISATION ETAT ==============================================================
if (i_etat_courant != ETAT_commun_jump_branche) 
{
	i_etat_courant = ETAT_commun_jump_branche

	if (fct_last_etat)
	{
		i_sort_etat = vrai
		AI_Execute(fct_last_etat)
	}

	fct_last_etat = AI_TrackCurGet()

	// CAMERA -----------------------------------------------------------------
	@get_global i_kong_camera_status = Ci_Kcamera_grab_grimpe
	// CAMERA -----------------------------------------------------------------

	ACT_ActionSet(Ci_Kanim_saute_branche_att)
	DYN_GravitySet(Cv_NullVector)	

//	v_zdm_pos = cvector(0.0, 3.4, 0.0)
	v_zdm_pos = Cv_Kong_zdm_pos

	f_time_start_etat = 0.0
}
else
{
	f_time_start_etat += TIME_GetDt()
}

// ANALYSE ======================================t================================
AI_Execute("k_exec_joy")

n_climb_1D =  @o_climb_1D_current_wp WAY_NetOfObj()

if (! i_flag_grab || WAY_LinkCapaGet(n_climb_1D, o_climb_1D_current_wp, o_climb_1D_next_wp) & Capa_prise_HS)
{
	o_climb_1D_last_current_wp = nobody
	o_climb_1D_last_next_wp	= nobody

	macro_change_etat("k_ETAT_commun_climb_slide")
}

if (i_flag_just_jump)
	macro_change_etat("k_ETAT_commun_climb_impulsion")

o_climb_1D_last_current_wp = o_climb_1D_current_wp
o_climb_1D_last_next_wp = o_climb_1D_next_wp

// COMPORTEMENT ================================================================
tv_last_climb_position = v_climb_position

v_climb_speed = Cv_NullVector

//v_climb_position = @o_climb_1D_current_wp OBJ_PosGet()
//v_climb_position += f_climb_1D_axis_dist * v_climb_1D_axis

//v_climb_normale = MATH_VecCrossProduct(v_climb_1D_axis, Cv_VerticalVector)
//v_climb_normale *= MATH_FloatSign(MATH_VecDotProduct(-OBJ_SightGet(), v_climb_normale))
//MATH_VecSetNormalize(v_climb_normale)

//v_climb_hand_offset = MATH_VecBlend(v_climb_hand_offset, cvector(0.0, 0.0, 5.0), 6.0 * TIME_GetDt())

tv_pos = v_climb_position
tv_pos -= v_climb_hand_offset

macro_render_Vector(v_climb_position, -v_climb_hand_offset, color_jaune)

tv_pos = MATH_VecBlend(OBJ_PosGet(), tv_pos, 4.0 * TIME_GetDt())
OBJ_PosSet(tv_pos)

tv_new_sight = MATH_VecBlendRotate(OBJ_SightGet(), - v_climb_normale, 6.0 * TIME_GetDt())
OBJ_BankingGeneralSet(tv_new_sight, Cv_VerticalVector)

DYN_SpeedSetVector(Cv_NullVector)