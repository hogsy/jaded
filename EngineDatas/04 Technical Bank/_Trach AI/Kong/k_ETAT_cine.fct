#include	"k_define.var"

object		to_cine_gao

int				ti_cine_mode

float			tf_debut_controle
float			tf_finished_timeout
float			tf_percent
float			tf_coef 
float			tf_secure_dt


// SORTIE ETAT ===================================================================
if (i_sort_etat)
{
	// réactivation
	COL_ColSetActivationSet(all, none)
	COL_ColMapActivationSet(all, none)
	Proc_KK_DynOn()
	
	i_sort_etat = faux
	return
}

// INITIALISATION ETAT ==============================================================
if (i_etat_courant != ETAT_Kong_cine) 
{
	i_dernier_etat = i_etat_courant
	i_etat_courant = ETAT_Kong_cine

	if (fct_last_etat)
	{
		i_sort_etat = vrai
		AI_Execute(fct_last_etat)
	}
	fct_last_etat = AI_TrackCurGet()
	f_time_start_etat = 0.0
	
	RIDE_Clear_Link_Bat(vrai) // Decrocher tout sauf les bats
	if ( i_Grab_Torse_Actor && ! i_Grab_Torse_ANN)
	{
		ao_CL_GRABKONG[i_Grab_Torse_Actor] = LNK_ClientGet(Ci_LNK_GRAB_KONG, amid_CL_LIAISON_ID_GRABKONG[i_GrabKong_MainActionGrab], faux, "k_exec_grab_object_param", nofunc, nofunc)
		i_GrabKong_MainBloquee = -1
		i_Grab_Torse_Actor = 0
		i_Grab_Torse_Main = -1
	}
	
	// désactivation
//	COL_ColSetActivationSet(none, all)
//	COL_ColMapActivationSet(none,all)
//	DYN_Off()
//	ODE_Enable(faux)
	
	// NYC Theater
//	f_theatre_afx_eclair_delay = MATH_RandFloat(1.0,2.0)
}
else
{
	f_time_start_etat += TIME_GetDt()
}

// ANALYSE	  ===============================================================================
if ( ! OBJ_CapaTest( Capa_Mode_Cine ))
{
	#ifndef _FINAL_
	DBG_TraceString("je n'ai plus la capa 9, je sors du modé ciné")
	DBG_TraceEOL()
	#endif
	macro_change_etat("k_ETAT_main")
}

// COMPORTEMENT ===========================================================================
to_cine_gao = @get_global o_cine_gao
if( to_cine_gao && @to_cine_gao OBJ_FlagsIdentityTest(OBJ_C_IdentityFlag_DesignStruct) )
{
	ti_cine_mode = to_cine_gao.des_int1
	switch( ti_cine_mode )
	{
		// NYC THEATER =================================================================
		case 1 :
//			f_theatre_afx_eclair_delay -= MATH_FloatMin(f_theatre_afx_eclair_delay, TIME_GetDt())
//			if( f_theatre_afx_eclair_delay <= 0.0 )
//			{
//				KK_AFX_Eclairs()
//				f_theatre_afx_eclair_delay = MATH_RandFloat(0.5, 2.0)
//			}
			ti_cine_mode = ti_cine_mode
			if( @to_cine_gao OBJ_CapaTest(Capa_NYC_Theater_Mashing_Interdit) )
			{
				// Enchaîné, mashing impossible ------------------------------------------------------
				switch( ACT_ActionGet() )
				{
					case Ci_Kanim_Cine_Theatre_Att :
						if( i_flag_just_coup )
						{
							ACT_ActionSet(Ci_Kanim_Cine_Theatre_Att_Grogne)
							SND_RequestPlay(22)
						}
						break
					case Ci_Kanim_Cine_Theatre_Att_Grogne :
						if( ACT_ActionFinished() )
							ACT_ActionSet(Ci_Kanim_Cine_Theatre_Att)
						break
					default:
						ACT_ActionSet(Ci_Kanim_Cine_Theatre_Att)		// entrée dans le mode
						break
				}
			}
			else if( @to_cine_gao OBJ_CapaTest(Capa_NYC_Theater_Mashing_Possible) )
			{
				// Enchaîné, mashing possible ---------------------------------------------------------
				switch( ACT_ActionGet() )
				{
					case Ci_Kanim_Cine_Theatre_Att :
						ACT_ActionSet(Ci_Kanim_Cine_Theatre_Colere)
						break
					case Ci_Kanim_Cine_Theatre_Att_Grogne :
						if( ACT_ActionFinished() )		// on attend la fin de l'anim
							ACT_ActionSet(Ci_Kanim_Cine_Theatre_Colere)
						break
					case Ci_Kanim_Cine_Theatre_Colere :
						if( i_flag_just_coup )
						{
							SND_RequestPlay(60)
							ACT_ActionSet(Ci_Kanim_Cine_Theatre_Mashing)
							f_finished_challenge_duration = 0.0
						}
						break
					case Ci_Kanim_Cine_Theatre_Mashing :
						// mashing en cours
						tf_debut_controle = 1.16		// 70 frames, 50% de l'anim
						f_finished_challenge_duration += TIME_GetDt()
						if( f_finished_challenge_duration < tf_debut_controle )
						{
							// le joueur n'a pas encore la main
							f_finished_frame = ANI_CurrentFrameGet(0)
							f_finished_force_nmi = 2.0
						}
						else
						{
							// le joueur a la main
							if( f_finished_frame < 25 )
							{
								f_finished_frame -= MATH_FloatMin(f_finished_frame, f_finished_force_nmi)
								ANI_Pause(faux)
								ANI_RatioSet(0, MATH_FloatMin(f_finished_frame / ANI_NbFrameGet(0), 0.95) )
								if( ANI_CurrentFrameGet(0) < 20 )		// si je change d'anim trop tôt, le blend fait avancer kong
								{
									ACT_ActionSet(Ci_Kanim_Cine_Theatre_Colere)		// mashing perdu
									SND_RequestPlay(60)

									f_snd_mashing = 0.0								// SND Replay Growl

									if( i_snd_mashing_loopA != -1)					// SND Stop Loops
									{
										SND_Stop(i_snd_mashing_loopA)
										SND_Stop(i_snd_mashing_loopB)
										i_snd_mashing_loopA = -1
										i_snd_mashing_loopB = -1
									}	
								
								}
							}
							else
							{
								// TIME OUT & PERTE TROP IMPORTANTE
								tf_finished_timeout = 5.0 //3.5
								if( (f_finished_force_kong - f_finished_force_nmi) < -2.5 )
									tf_finished_timeout = 0
								
								tf_secure_dt = MATH_FloatLimit(TIME_GetDt(), 0.016, 0.048)		// SECURE DT FOR LOW FRAMERATE !!!
								
								// NE PAS MONTER LA FORCE DE L'ENNEMI SI KONG EST FORT
								if( f_finished_force_kong < 2.0 )
									f_finished_force_nmi = MATH_FloatMin(f_finished_force_nmi + (2.0 * tf_secure_dt), 10.0)
								
								// REDUCTION DE LA FORCE DE KONG
								f_finished_force_kong = MATH_FloatMax(0,f_finished_force_kong - (30.0 * tf_secure_dt))
								
								// GESTION DU BOUTON
								if( f_finished_challenge_duration < tf_debut_controle + tf_finished_timeout )
								{
									if( Proc_KK_Mashing_Button_Just_Pressed() )
									{
										#ifndef _FINAL_
										if( @"univ" i_cheat_page == 4 )
											Str_DisplayTextOnce("MASHING !!!", cvector(0.45,0.75,0))
										#endif
										f_finished_force_nmi = MATH_FloatMax(0, f_finished_force_nmi - 0.5)
										tf_percent = Proc_KK_Mashing_Pct()
										@get_Kamera Proc_Kam_RumbleSet(tf_percent / Cf_Rumble_Amplitude, 6.0)
										f_finished_force_kong = 2.5 + (15.5-(MATH_FloatLimit(tf_percent+0.25, 0.0, 1.0) * 15.5))
//										f_finished_force_kong = 3.0 + (15.5-(MATH_FloatLimit(tf_percent+0.25, 0.0, 1.0) * 15.5))
									}
								}
								
								// AJOUT DES FORCES
								f_finished_frame += f_finished_force_kong * 0.85
								f_finished_frame -= f_finished_force_nmi * 0.85
								#ifndef _FINAL_
								if( @"univ" i_cheat_page == 4 )
								{
									Str_DisplayTextOnce("FRAME = ", cvector(0.4,0.9,0))
									Str_DisplayFloatOnce(f_finished_frame, cvector(0.5,0.9,0))
									Str_DisplayTextOnce(" / ", cvector(0.55,0.9,0))
									Str_DisplayIntOnce(ANI_NbFrameGet(0), cvector(0.57,0.9,0))
								}
								#endif
								// % D'ANIM

								// SND ============================================
								if( f_finished_frame > 80 && !f_snd_mashing)						// SND GROWL
								{
									SND_RequestPlay(61)
									f_snd_mashing = 1.0 
								}
								if( f_finished_frame > 20 && i_snd_mashing_loopA == -1)		// SND LOOP
								{
									i_snd_mashing_loopA = SND_RequestPlayLoop(62)
									i_snd_mashing_loopB = SND_RequestPlayLoop(63)
								}
								if (i_snd_mashing_loopA != -1)
								{
									tf_coef = f_finished_frame / ANI_NbFrameGet(0)
									SND_InsertVarSet(i_snd_mashing_loopA,11,tf_coef)
									SND_InsertVarSet(i_snd_mashing_loopB,11,tf_coef)
								}

								// SND ============================================
																
								if( f_finished_frame > ANI_NbFrameGet(0) )
								{
									@to_cine_gao OBJ_CapaSet(Capa_NYC_Theater_Mashing_Gagne, none)
									@to_cine_gao OBJ_CapaSet(none, Capa_NYC_Theater_SND_Ambiance)
//									ACT_ActionSet(Ci_Kanim_Cine_Theatre_Intimid)		// mashing gagné
									ACT_ActionSet(Ci_Kanim_Cine_Theatre_Mashing_tr_Intimid)		// mashing gagné VERSION COURTE
									SND_RequestPlay(64)
									SND_RequestPlay(65)
		
									if( i_snd_mashing_loopA != -1)					// SND DESTROY Loops
									{
										SND_Destroy(i_snd_mashing_loopA)
										SND_Destroy(i_snd_mashing_loopB)
										i_snd_mashing_loopA = -1
										i_snd_mashing_loopB = -1
									}		
					
								}
								else
								{
									ANI_Pause(faux)
									ANI_RatioSet(0, MATH_FloatMin(f_finished_frame / ANI_NbFrameGet(0), 0.95) )
								}
							}
						}
						break
					case Ci_Kanim_Cine_Theatre_Mashing_tr_Intimid :
//						break		// VERSION COURTE
					case Ci_Kanim_Cine_Theatre_Intimid :
						if( ACT_ActionFinished() )
						{
							@to_cine_gao OBJ_CapaSet(none, Capa_NYC_Theater_Mashing_Possible)
							@to_cine_gao OBJ_CapaSet(none, Capa_NYC_Theater_Mashing_Gagne)
							@get_global o_cine_gao = nobody		// ne pas revenir en mode NYC Theater
							RAGE_Launch_Action(Ci_Kanim_Intimid_FinishFurieCri)
							#ifndef _FINAL_
							DBG_TraceString("NY theatre gagné et anim intimid terminée, je retire la capa 9")
							DBG_TraceEOL()
							#endif
							OBJ_CapaSet(none, Capa_Mode_Cine)
						}
						break
					default:
						ACT_ActionSet(Ci_Kanim_Cine_Theatre_Colere)
						break
				}
			}
			break
		// DEFAULT =====================================================================
		default:
			break
	}
}

// ANN GRAB EN CINE
if ( o_Joueur && @o_Joueur OBJ_CapaTest(OBJ_Capa_2))
{
	if ( ! ao_CL[Ci_LNK_KKGRAB_OBJECT])
	{
		v_grab_object_pos = @o_Joueur OBJ_PosGet()
		ao_CL[Ci_LNK_KKGRAB_OBJECT] = LNK_ClientGet(Ci_LNK_KKGRAB_OBJECT, amid_CL_LIAISON_ID[Ci_LNK_KKGRAB_OBJECT], vrai, "k_exec_grab_object_param", nofunc, "k_exec_grab_object_init")
		if (ao_CL[Ci_LNK_KKGRAB_OBJECT])
		{
			// J'ai un perso dans la main
			i_GrabKong_1_attrape_par_action = vrai
			i_flag_positionne_ANN = faux
			i_GrabKong_MainActionGrab = 0
			
			@get_global i_KK_ANN_On_Shoulder = vrai // Forcer Ann a etre sur l'épaule par la suite
			// ANN sur l'épaule
			LNK_KKGrabObject_TypeSet(amid_CL_LIAISON_ID[Ci_LNK_KKGRAB_OBJECT], Ci_KKGrabObject_Porte_Epaule)
			LNK_KKGrabObject_BoneSet(amid_CL_LIAISON_ID[Ci_LNK_KKGRAB_OBJECT], ANI_CanalObjectGet(Anim_Canal_Snap_Ann) )				
		}	
	}
}
