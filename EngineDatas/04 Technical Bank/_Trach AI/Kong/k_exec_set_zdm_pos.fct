#include "k_define.var"

vector	tv_zdm_pos
vector	tv_last_zdm_pos
vector	tv_backface_speed_add

if (!f_time_change_zdm && v_zdm_pos != v_old_zdm_pos)
	f_time_change_zdm = 1.0

if (f_time_change_zdm)
{
	tv_last_zdm_pos	= COL_ZonePosGet(C_zdm_pied)

	f_time_change_zdm -= MATH_FloatMin(f_time_change_zdm, 4.0 * TIME_GetDt())
	if (f_time_change_zdm)
	{ 
		tv_zdm_pos = MATH_VecBlend(v_zdm_pos, v_old_zdm_pos, f_time_change_zdm)
	}
	else
	{
		v_old_zdm_pos = v_zdm_pos
		tv_zdm_pos = v_zdm_pos
	}

	DYN_FlagsSet(DYN_C_OptimizeColDisable, none)

	COL_ZonePosSet(C_zdm_pied, tv_zdm_pos)	
	COL_BackFaceSet(DYN_SpeedGetVector() + (COL_ZonePosGet(C_zdm_pied) - tv_last_zdm_pos))
}

if ( f_time_zdm_walling)
{
	f_time_zdm_walling -= MATH_FloatMin( f_time_zdm_walling, 4.0 * TIME_GetDt())

//	v_last_zdm_walling_pos	= COL_ZonePosGet(C_zdm_pied)

	DYN_FlagsSet(DYN_C_OptimizeColDisable, none)
	tv_backface_speed_add = v_walling_normal
	tv_backface_speed_add.z = 0.0
	tv_backface_speed_add -= Cv_VerticalVector - OBJ_BankingGet()
	DBG_RenderVector( OBJ_PosGet(), tv_backface_speed_add , color_bleu)
	COL_BackFaceSet(DYN_SpeedGetVector() - tv_backface_speed_add) // ( COL_ZonePosGet(C_zdm_pied) - v_last_zdm_walling_pos))
//	macro_render_Vector( v_last_zdm_walling_pos, COL_ZonePosGet(C_zdm_pied) - v_last_zdm_walling_pos, 0xFFFF)

	v_last_zdm_walling_pos	= COL_ZonePosGet(C_zdm_pied)
	
}
