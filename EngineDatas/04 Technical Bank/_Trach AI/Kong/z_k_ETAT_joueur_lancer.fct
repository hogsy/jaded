#include"k_define.var"

int				ti_rank
int				ti_i

float			tf_dist_min
float			tf_dist
 
vector		tv_sight
vector		tv_pos_proche

object		EVT_Pere

messageid	EVT_Visibility_ID

// SORTIE ETAT ===================================================================
if (i_sort_etat) 
{
	i_sort_etat = faux
	return
}

// INITIALISATION ETAT ==============================================================
if (i_etat_courant != ETAT_joueur_frappe) 
{
	i_etat_courant = ETAT_joueur_frappe

	if (fct_last_etat)
	{
		i_sort_etat = vrai
		AI_Execute(fct_last_etat)
	}

	fct_last_etat = AI_TrackCurGet()
	f_time_start_etat = 0.0
	i_fight_paf = faux
	
	// RIDE A CLEAN
	for (ti_i = 0; ti_i < Ci_Ride_Client_Nb; ti_i++)
		ao_bone_rider[ti_i] = LNK_ServeurGet(Ci_LNK_RIDE_DINO, amid_bone_rider_LNK_ID[ti_i], faux, nofunc, nofunc)

	// VITESSE
	v_frappe_speed = DYN_SpeedGetVector()

	ACT_ActionSet(Ci_Kanim_frappe)
}
else
{
	f_time_start_etat += TIME_GetDt()
}

// ANALYSE ===========================================================================

// DETECTER SI KONG PAF
//if ( !i_fight_paf && f_time_start_etat < 0.358)
//	AI_Execute("k_exec_zdf_zdc")
	
// DETECTER SI KONG EST PAF
AI_Execute("k_exec_detect_paf")
if ( !i_fight_paf && o_paf_actor)
	PAF_Test_ChangeEtatValid()
	
// COMPORTEMENT ===========================================================================


// CAMERA -----------------------------------------------------------------
if (o_fight_actor)
{
	@get_global i_kong_camera_status = Ci_Kcamera_fight
	@get_global mid_kong_camera_status = mid_fight_actor
}
else
	@get_global i_kong_camera_status = Ci_Kcamera_deplacement
// CAMERA -----------------------------------------------------------------

if ( ACT_ActionFinished())
	macro_change_etat("k_ETAT_joueur_deplacement")

DYN_SpeedSetVector(v_frappe_speed )

OBJ_BankingGeneralSet( MATH_VecBlendRotate( OBJ_SightGet(), v_frappe_sight , 2.0 * TIME_GetDt()), Cv_VerticalVector)

	
