#include "GFX_Smoke_Defines.var"

// Define at least one function in a track
// function track0 = "name"
// function track1 = "name"
function track2 = "GFX_Smoke_Init.fct"
// function track3 = "name"
// function track4 = "name"

separator "Settings"
	float				mf_GeneralDuration													= 5.0											// that amount of time that we will continue to emit new sprites
	int					mi_IsPersistent														= faux_vrai									// is the effect continuous, or should we use mf_GeneralDuration and mf_FadeOutTime to eventually stop the whole GFX
	
separator "Dynamics"
	float 				mf_Friction																= 0.1																				// Friction (La vitesse est mulitpliee par ce figeur a chaque trame)
	vector			mv_SpeedMin															= cvector( -1.0, -1.0, 1.0 )					// min linear speed in each direction
	vector			mv_SpeedMax															= cvector( 1.0, 1.0, 10.0 )					// max linear speed in each direction
	
separator "Size"
	float 				mf_SmokeStartSize													= 0.1											// Taille initiale du sprite
	float				mf_SmokeEndSize													= 2.0											// Taille finalle du sprite
	
separator "Sprites"
	int					mi_MaxNumberOfSprites											= 50											// Nombre maximum de sprite
	
	float				mf_TimeBetweenSpriteCreation									= 0.035										// number of seconds between particle creation

	float 				mf_LifeSpan															= 0.5											// duree de vie de sprite
	
separator "Appearance"
	color				mc_StartColour														= 0x5FFFFFFF							// Couleur initiall du sprite
	color				mc_EndColour															= 0x00FFFFFF							// Couleur finale du sprite
	
separator "State"
	private int		mi_GFX_Key															= -1
	private object	mo_SourceObject													= nobody
	
	private float		mf_StartTime															= 0.0
	private int		mi_IsChild 																= faux
	
	private float 	mf_LastCreationTime				 								= 0.0
		
separator "Material"
	int 				mi_MatOpacity														= enum( "matériau transparent" 1 "matériau opaque" 0 )	// should the material be transparent or opaque
	
	object 			mo_Material																											// material game object to reference
	int					mi_MaterialIndex 														= 0											// sous materiau utilise par les 4 elements
	
	int 				mi_DynamicMaterialIndex[C_Max_Dynamic_Materials]	= ( -1, -1, -1, -1 )							// sub mat index to be used in random selection of materials for dynamic change (N.B.: -1 means no material for this entry)
	private int		mi_NumberOfDynamicMaterials									= 0
	
separator "Modifiers"
	float				mf_FadeOutTime 													= 1.0											// how long after SFX the GFX should dissappear and be destroyed
	
	int					mi_SmokeModifierType												= enum( "Random" 2 "Sine Wave" 1 )			// how the smoke speed is modified between its min and max
	
	float				mf_XSineFreq															= 500.0										// frequency of sine wave (how rapidly wave repeats) applied to X direction
	float 				mf_XSinePhase														= 0.0											// starting point of sine wave applied to X direction
	
	float				mf_YSineFreq															= 500.0										// frequency of sine wave (how rapidly wave repeats) applied to Y direction
	float 				mf_YSinePhase														= 0.0											// starting point of sine wave applied to Y direction
	
	float				mf_ZSineFreq															= 500.0										// frequency of sine wave (how rapidly wave repeats) applied to Z direction
	float 				mf_ZSinePhase														= 0.0											// starting point of sine wave applied to Z direction
	
	int					mi_PositionOffsetModifierType									= enum( "Random" 2 "Sine Wave" 1 "None" 0 )		// type of modifier on the position offset of the smoke creation
	
	vector			mv_PositionMin														= cvector( -0.1, -0.1, 0.0 )					// min in each direction of offset to source position for creation of each smole particle
	vector			mv_PositionMax														= cvector( 0.1, 0.1, 0.0 )					// max in each direction of offset to source position for creation of each smole particle
	
separator "Start Delay Settings"
	int 				mi_UseStartDelay													= vrai_faux										// for debugging only!: wait the following delay before running the init of this GFX
	float				mf_StartDelay															= 0.5												// seconds to wait between initializations of this GFX
	private float		mf_TimeRunning														= 0.0
	
separator "Ambiance Controller"
	object o_GFX_Ambiant_Controller																					//fill this with the GFX ambiant AI waypoint
	private int i_no_death  = faux																							//ADDED SURESH: if we don't want a GFX that is a child to be destroyed, set this to true