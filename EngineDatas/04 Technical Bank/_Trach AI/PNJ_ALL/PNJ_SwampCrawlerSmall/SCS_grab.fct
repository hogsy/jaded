#include "PNJ_SwampCrawlerSmall_defs.var"
//#include "ROOT/EngineDatas/04 Technical Bank/AI Models/KingKong/Humain/H_action.var"
#define Action_Grabed_raptor_bras							090
#define Action_Grabed_raptor_jambe						091

float		tf_deltaz
vector	tv_sight, tv_newsight, tv_pos
object	to_head
object	to_gao 

//--------( Sortie Etat )--------
if (etat_i_quitte)
{
	if ( i_SND_Grab != -1)
	{
		SND_Stop(i_SND_Grab)
		i_SND_Grab = -1
	}

	if (grab_o_actor)
		grab_o_actor = LNK_ClientGet(Ci_LNK_GRAB_RAPTOR, grab_mid_LNKID, faux, nofunc, nofunc, nofunc)
	if ( GFX_blood != -1)
		LIBGFX_BloodStop( GFX_blood )
	etat_i_quitte = faux
	return
}

//--------( Entrée Etat )--------
if ( etat_i_courant != SCS_ETAT_grab )
{
	etat_i_ancien = etat_i_courant
	etat_i_courant = SCS_ETAT_grab
		
	//----( quitte état précédent )----
	if ( etat_fct )
	{
		etat_i_quitte = vrai
		AI_Execute( etat_fct )
	}

	SND_RequestPlay(SCS_Snd_Bite)
	
	if ( i_SND_Grab == -1)
		i_SND_Grab = SND_RequestPlayLoop(SCS_Snd_GRAB)
	
	//--------( init variable )------------------------------------------------------------------------------------
	etat_fct = AI_TrackCurGet()
	if (grab_o_actor != AI_MainActorGet(C_ID_Joueur) )
	{
		@grab_o_actor ACT_ActionSet( Action_Grabed_raptor_jambe )
		ACT_ActionSet( SCS_ACT_water_swim )
		ACT_ActionFrequencySet( SCS_ACT_water_swim, 32 * f_SpeedGrab )
	}
	else
		ACT_ActionSet( SCS_ACT_water_grab )

	f_sfx = 0

	etat_i_state = 0
	etat_f_timer = f_GrabStatic
	grab_f_timer = f_GrabPafTimer

	f_timer_start_etat = 0
		
	//--------( destination ou on tire le perso )-----------------------------------------------------------
	//move_v_dest = move_v_attackstart
//	move_v_dest = move_v_start

	AI_Execute( "SCS_exec_choosecache" )
	if (move_i_cache)
		move_v_dest = move_v_cache 
	return
}
else
{
	if ( ! f_timer_start_etat && grab_o_actor == AI_MainActorGet(C_ID_Joueur))
		EVENT_AddEventPaf(C_EVENT_FILTER_All, C_PAF_KK_Faible, OBJ_Me(), Cf_EVENT_Duree_1Trame, grab_o_actor, 6.0 * PAF_Unit, OBJ_SightGet())

	f_timer_start_etat += TIME_GetDt()
}

move_v_dest = OBJ_PosGet() - OBJ_SightGet()		// toujours reculer !!!!

//--------( grab parti tout seul )---------
if ( !grab_o_actor )
	macro_change_etat( "SCS_swim" )


//		EVENT_AddEventPaf(C_EVENT_FILTER_All, C_EVENT_PAF_Fort, OBJ_Me(), Cf_EVENT_Duree_1Trame, grab_o_actor, 6*PAF_Unit, OBJ_SightGet())


//--------( timer )---------
etat_f_timer -= TIME_GetDt()
if ((etat_f_timer < 0) && (etat_i_state < 2))
{
	if (etat_i_state == 0)
		etat_f_timer = f_GrabDynamic
	etat_i_state++
}

#ifndef _FINAL_
if ((i_debug_display || @get_global i_debug_all_swamp) && !@"univ" Engine)
{
	to_gao = ANI_CanalObjectGet(Anim_Canal_Tete)
	Str_DisplayTextOnce("GRAB", VIEW_3dWorldTo2d(0, @to_gao OBJ_PosGet()))
}
#endif

//grab_f_timer -= TIME_GetDt()
//if (grab_f_timer < 0)
//{
//	grab_f_timer = f_GrabPafTimer
//	EVENT_AddEventPaf(C_EVENT_FILTER_All, C_EVENT_PAF_Leger,  OBJ_Me(), 0.01, grab_o_actor, PAF_Unit, OBJ_SightGet())
//}

//--------( déplacement )--------
move_v_dest.z = move_f_Zsurface + 0.2
move_f_speed = f_SpeedGrab

if (etat_i_state == 0)
{
}
else if (etat_i_state == 1)
{
	to_head	= ANI_CanalObjectGet(Anim_Canal_Tete)
	if (to_head)
	{
		tv_pos = @to_head OBJ_PosGet()
		tv_pos += @to_head OBJ_BankingGet() * 0.2
		tv_pos += @to_head OBJ_SightGet() * 0.1
		LIBGFX_Blood( GFX_blood, tv_pos, (cvector( 0, 0, 1) + OBJ_SightGet()) * 0.5)
	}
	
	LNK_GrabStatusSet( grab_mid_LNKID, 2 )
}
else
{
	if ( GFX_blood != -1)
		LIBGFX_BloodStop( GFX_blood )
}

move_i_brakewhennear = 0
move_i_ondule = 0
if (grab_o_actor == AI_MainActorGet(C_ID_Joueur) )
	move_i_remote = 1 //(marche arriere )
else
	move_i_remote = 0 //(marche avant )
f_SpeedZ = 0.5
AI_Execute( "SCS_exec_move" )


f_sfx -= MATH_FloatMin(f_sfx, TIME_GetDt())

if (	!f_sfx )
{
	f_sfx = MATH_RandFloat(0.2,0.3)
	SCS_fct_GFX_SplashGrab( OBJ_PosGet() )
}



////--------( proche WP arrivée )--------
//if ( move_i_neardest )
//{
////	move_v_dest.z = move_v_start.z
////	if (move_v_dest == move_v_start )
////	{
//		EVENT_AddEventPaf(C_EVENT_FILTER_All,  C_EVENT_PAF_Tuant,  OBJ_Me(), 0.01, grab_o_actor, 1000 * PAF_Unit, OBJ_SightGet())
//		macro_change_etat( "SCS_swim" )
////	}
////	else
////		move_v_dest = move_v_start
//}

if (grab_o_actor == AI_MainActorGet(C_ID_Joueur) )
{
	//-------( réoriente (pour marche arriere) )--------
	tv_newsight = OBJ_PosGet() - move_v_dest
	tv_newsight.z = 0
	if (!MATH_VecNull(tv_newsight) )
		OBJ_SightSet( tv_newsight )

	if (f_timer_start_etat > 5.0)
	{
		EVENT_AddEventPaf(C_EVENT_FILTER_All,  C_PAF_KK_KiTue,  OBJ_Me(), 0.01, grab_o_actor, 1000.0 * PAF_Unit, OBJ_SightGet())
		macro_change_etat( "SCS_swim" )
	}
}
else
{
	if (f_timer_start_etat > 10.0)
	{
		EVENT_AddEventPaf(C_EVENT_FILTER_All,  C_PAF_KK_KiTue,  OBJ_Me(), 0.01, grab_o_actor, 1000.0 * PAF_Unit, OBJ_SightGet())
		macro_change_etat( "SCS_swim" )
	}
}

//--------( se prend un paf )--------
if ( stimul_i_paf )
{
	SND_RequestPlay(SCS_Snd_Plouf)
	stimul_i_paftype = C_PAF_KK_Repousse
	macro_takeapaf( SCS_PAF_one )
}
	
////--------( collision sur le sol )--------
//if ( move_i_ground && (OBJ_PosGet().z >= move_f_Zsurface - move_f_Zsurfacebattement) )
//{
//	move_v_dest = move_v_start
//	move_v_dest.z = move_f_Zunderwater
//	etat_f_swimnoattack_timer = SCS_Ct_NoAttackTimer
//	etat_i_swimnoattack = 1
//	macro_change_etat( "SCS_swim" )
//}
