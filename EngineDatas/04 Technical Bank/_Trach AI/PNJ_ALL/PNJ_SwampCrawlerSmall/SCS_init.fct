int			i
int			ti_sf
object	to_bone
object	to_obj
float		tf_temp


// SF RULES =======================================================
if ( ! OBJ_FlagsIdentityTest(OBJ_C_IdentityFlag_Generated))
{
	i_SF_AlreadyPlayed = AI_SFDynGet(0, SF_MinById, SF_MaxById)		// Detruite ?
	SpecialFlag_get(i_SF_AlreadyPlayed, ti_sf)
	if ( ti_sf )
	{
		OBJ_CapaSet(OBJ_Capa_15,none)
		OBJ_Destroy()
	}
}
// SF RULES =======================================================

OBJ_FlagsIdentitySet(OBJ_C_IdentityFlag_DesignStruct, 0)
OBJ_Me().des_int1 = Ci_DISPLAY_FIGHT

//--------( INIT VAR )-------------------------------------------------
for (i = 0; i < 8; i++)
	move_af_coltemp[ i ] = 0
stimul_o_pafby = nobody
net_i_test = 0

i_DieAfterHit = faux

//--------( FORCE SPEED )-------------------------------------------------
f_Speed = 1.0
f_SpeedAttack = 1.5
f_SpeedBackAttack = 1.0
f_SpeedFlee = 3.0
f_SpeedGrab = 0.5

f_AttackDist = 3.0

//--------( FORCE ETATS )-------------------------------------------------
i_Attack_CanGrab = vrai
//f_Attack_GrabRatio = 1
//f_Attack_GrabRatio = 0

//--------( zoom )--------------------------------------------------------------
move_f_zoom =  OBJ_ZoomGet()

//--------( Init pos )--------------------------------------------------------------
if ( o_WPstart )
	to_bone = o_WPstart
else
	to_bone = OBJ_Me()

move_v_start = @to_bone OBJ_PosGet()
move_v_startsight = @to_bone OBJ_SightGet()

//--------( récupère la hauteur de l'eau ? )--------
if( IsInWater(OBJ_PosGet(), tf_temp) )
{
	move_f_Zsurface = tf_temp
}
else
{
	to_obj = COL_RayObject_Vector(OBJ_PosGet(), cvector(0,0,2 ), OBJ_C_IdentityFlag_ColMap, OBJ_C_IdentityFlag_Anims, Ci_Filter_IdentityFlag, COL_C_Ray_on_ColMap_Crossable)
	if(!to_obj)
		to_obj = COL_RayObject_Vector(OBJ_PosGet(), cvector(0,0,-2 ), OBJ_C_IdentityFlag_ColMap, OBJ_C_IdentityFlag_Anims, Ci_Filter_IdentityFlag, COL_C_Ray_on_ColMap_Crossable)
	if (!to_obj)
		move_f_Zsurface = move_v_start.z
	else
	{
		DBG_RenderSphere( COL_RayObject_PosGet(), 0.1, color_rouge )
		move_f_Zsurface  = COL_RayObject_PosGet().z
	}
}
SCS_Compute_All_Z()


move_f_Zsurfacebattement = move_f_zoom * 1.0	//0.2

if (o_WPrepli)
	to_bone = o_WPrepli
move_v_repli = @to_bone OBJ_PosGet()
move_v_replisight = @to_bone OBJ_SightGet()
	
if (o_WPend)
	move_v_end = @o_WPend OBJ_PosGet()
else
	move_v_end = move_v_start + (OBJ_SightGet() * 10)

// DEBUG ==============================
if (i_Type == 1 && !o_WPend)
{
	DBG_TraceString(">> SWAMPCRAWLER: Pas de WPend sur SwampC ")
	DBG_TraceObject(OBJ_Me())
	DBG_TraceString("\n")
}
//else if (i_Type == 1 && (GRID_CapaGet(move_v_end) & 0x0F) != Ci_sol_eau)
else if (i_Type == 1 && ! IsInWater(move_v_end, tf_temp) )
{
	DBG_TraceString(">> SWAMPCRAWLER: Le GAO WPend ")
	DBG_TraceObject(OBJ_Me())
	DBG_TraceString(" n'est pas dans l'eau\n")
}
// DEBUG ==============================

if (o_WaitInHere)
{
	// Default settting for the UP/DOWN time
	f_DownTimeMin	= 	1.0
	f_DownTimeMax = 	4.0
	f_UpTimeMin	= 		5.0
	f_UpTimeMax	= 		10.0
}

move_v_end.z = move_f_Zunderwater

move_v_dest = move_v_start
move_v_dest.z = move_f_Zunderwater
OBJ_PosSet( move_v_dest )

f_DeathHeight = 0.2

move_i_gotodeath = faux
move_i_diewhenunderwater = faux

//--------( default transition )--------
ACT_DefaultTransition(60)

//--------( désactive colmap )--------
COL_ColMapActivationSet(none, all)		// on éteind les colmaps
//COL_CrossableSet(Gmat_Jack_Face_eau | Gmat_Jack_DefaultCrossable, 0)
COL_CrossableSet(Gmat_KK_Crossable_Default, none)


//--------( Bouée d'aide à la visée )--------
if ( !OBJ_ModifierType(20) )
	OBJ_InfoPhotoParamSet( 0, 0, 3, 3, 1.0, 0.0, 0.0, 2 * move_f_zoom)

//-------( BV )---------------------
BV_MinSet(cvector(-4.5, -4.5, -3.0) * move_f_zoom)
BV_MaxSet(cvector(4.5, 4.5, 3.0) * move_f_zoom)

to_bone = ANI_CanalObjectGet( 18 )
@to_bone OBJ_FlagsIdentitySet(none, OBJ_C_IdentityFlag_OBBox)

to_bone = ANI_CanalObjectGet(Anim_Canal_Machoire)
@to_bone BV_OBBoxMinSet(cvector(-0.25, -0.1, -0.1))
@to_bone BV_OBBoxMaxSet(cvector(0.25, 0.1, 0.5))

to_bone = ANI_CanalObjectGet(Anim_Canal_Tete)
@to_bone BV_OBBoxMinSet(cvector(-0.25, -0.25, -0.1))
@to_bone BV_OBBoxMaxSet(cvector(0.25, 0.25, 0.5))

to_bone = ANI_CanalObjectGet(Anim_Canal_Cou)
@to_bone BV_OBBoxMinSet(cvector(-0.35, -0.6, -0.1))
@to_bone BV_OBBoxMaxSet(cvector(0.35, 0.4, 0.4))

to_bone = ANI_CanalObjectGet(Anim_Canal_Torse)
@to_bone BV_OBBoxMinSet(cvector(-0.4, -0.4, -0.1))
@to_bone BV_OBBoxMaxSet(cvector(0.4, 0.6, 0.6))

to_bone = ANI_CanalObjectGet(Anim_Canal_Ventre)
@to_bone BV_OBBoxMinSet(cvector(-0.4, -0.4, -0.1))
@to_bone BV_OBBoxMaxSet(cvector(0.4, 0.6, 0.6))

to_bone = ANI_CanalObjectGet(Anim_Canal_Bassin)
@to_bone BV_OBBoxMinSet(cvector(-0.55, -0.4, -0.1))
@to_bone BV_OBBoxMaxSet(cvector(0.55, 0.6, 0.7))

to_bone = ANI_CanalObjectGet(Anim_Canal_Queue)
@to_bone BV_OBBoxMinSet(cvector(-0.3, -0.35, -0.1))
@to_bone BV_OBBoxMaxSet(cvector(0.3, 0.35, 0.5))

to_bone = ANI_CanalObjectGet(Anim_Canal_Queue + 1)
@to_bone BV_OBBoxMinSet(cvector(-0.25, -0.3, -0.1))
@to_bone BV_OBBoxMaxSet(cvector(0.25, 0.3, 0.5))

to_bone = ANI_CanalObjectGet(Anim_Canal_Queue + 2)
@to_bone BV_OBBoxMinSet(cvector(-0.2, -0.2, -0.1))
@to_bone BV_OBBoxMaxSet(cvector(0.2, 0.2, 0.5))

to_bone = ANI_CanalObjectGet(Anim_Canal_Queue + 3)
@to_bone BV_OBBoxMinSet(cvector(-0.15, -0.15, -0.1))
@to_bone BV_OBBoxMaxSet(cvector(0.15, 0.15, 1.0))

to_bone = ANI_CanalObjectGet(Anim_Canal_MainDroite)
@to_bone OBJ_FlagsIdentitySet(none, OBJ_C_IdentityFlag_OBBox)
 to_bone = ANI_CanalObjectGet(Anim_Canal_AvantBrasDroit)
@to_bone OBJ_FlagsIdentitySet(none, OBJ_C_IdentityFlag_OBBox)
 to_bone = ANI_CanalObjectGet(Anim_Canal_BrasDroit)
@to_bone OBJ_FlagsIdentitySet(none, OBJ_C_IdentityFlag_OBBox)
 to_bone = ANI_CanalObjectGet(Anim_Canal_EpauleDroite)
@to_bone OBJ_FlagsIdentitySet(none, OBJ_C_IdentityFlag_OBBox)

to_bone = ANI_CanalObjectGet(Anim_Canal_MainGauche)
@to_bone OBJ_FlagsIdentitySet(none, OBJ_C_IdentityFlag_OBBox)
 to_bone = ANI_CanalObjectGet(Anim_Canal_AvantBrasGauche)
@to_bone OBJ_FlagsIdentitySet(none, OBJ_C_IdentityFlag_OBBox)
to_bone = ANI_CanalObjectGet(Anim_Canal_BrasGauche)
@to_bone OBJ_FlagsIdentitySet(none, OBJ_C_IdentityFlag_OBBox)
to_bone = ANI_CanalObjectGet(Anim_Canal_EpauleGauche)
@to_bone OBJ_FlagsIdentitySet(none, OBJ_C_IdentityFlag_OBBox)

to_bone = ANI_CanalObjectGet(Anim_Canal_PiedGauche)
@to_bone OBJ_FlagsIdentitySet(none, OBJ_C_IdentityFlag_OBBox)
to_bone = ANI_CanalObjectGet(Anim_Canal_JambeGauche)
@to_bone OBJ_FlagsIdentitySet(none, OBJ_C_IdentityFlag_OBBox)
to_bone = ANI_CanalObjectGet(Anim_Canal_CuisseGauche)
@to_bone OBJ_FlagsIdentitySet(none, OBJ_C_IdentityFlag_OBBox)
to_bone = ANI_CanalObjectGet(Anim_Canal_HancheGauche)
@to_bone OBJ_FlagsIdentitySet(none, OBJ_C_IdentityFlag_OBBox)

to_bone = ANI_CanalObjectGet(Anim_Canal_PiedDroit)
@to_bone OBJ_FlagsIdentitySet(none, OBJ_C_IdentityFlag_OBBox)
to_bone = ANI_CanalObjectGet(Anim_Canal_JambeDroite)
@to_bone OBJ_FlagsIdentitySet(none, OBJ_C_IdentityFlag_OBBox)
to_bone = ANI_CanalObjectGet(Anim_Canal_CuisseDroite)
@to_bone OBJ_FlagsIdentitySet(none, OBJ_C_IdentityFlag_OBBox)
to_bone = ANI_CanalObjectGet(Anim_Canal_HancheDroite)
@to_bone OBJ_FlagsIdentitySet(none, OBJ_C_IdentityFlag_OBBox)

//--------( GFX )--------
//GFX_traceon = vrai
if (GFX_traceon)
	GFX_trace = LIBGFX_WaterTrace_Create()
else
	GFX_trace = -1
	
GFX_blood = -1

//--------( Track )--------
//AI_TrackChange(0, "SCS_tagoff")
AI_TrackChange(1, "SCS_reflex")
//AI_TrackChange(4, "SCS_tagon")

v_last_pos = OBJ_PosGet()

//--------( Life )--------
if( life_f_max < 0.0 )
	life_f_max = 0.0
if( life_f_max == 0.0 )
	life_f_max = 20.0
life_f_max *= PAF_Unit
//life_f_cur = life_f_max
ID_LIFE = EVENT_AddEventLife(life_f_max, life_f_max, 0.0)

if( f_point_de_viande < 0.0 )
	f_point_de_viande = 10.0

//--------( Etat initial )--------
etat_i_courant = -1

if ( ( net_o_startwp != nobody ) && ( AI_TriggerIsValid( net_t_Use) || AI_TriggerIsValid( net_t_Start ) ) )
{
	net_Network = @net_o_startwp WAY_NetOfObj()
	if ( AI_TriggerIsValid( net_t_Start ) )
	{
		net_i_test = 2
		AI_TrackCurChange( "SCS_wait" )
		return
	}
	
	if (call_trigger( net_t_Use ) )
	{
		net_o_wp = net_o_startwp
		AI_TrackCurChange( "SCS_follownet" )
		return
	}
	
	net_i_test = 1
}

AI_TrackCurChange( "SCS_wait" )

	
