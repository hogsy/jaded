#include "PNJ_SwampCrawlerSmall_defs.var"

vector	sight, temp, newsight

//--------( Sortie Etat )--------
if (etat_i_quitte)
{
	etat_i_quitte = faux
	return
}

//--------( Entrée Etat )--------
if ( etat_i_courant != SCS_ETAT_follownet )
{
	etat_i_ancien = etat_i_courant
	etat_i_courant = SCS_ETAT_follownet
		
	//----( quitte état précédent )----
	if ( etat_fct )
	{
		etat_i_quitte = vrai
		AI_Execute( etat_fct )
	}
	
	//--------( init variable )------------------------------------------------------------------------------------
	etat_f_timer = MATH_RandFloat( f_DownTimeMin, f_DownTimeMax)
	etat_i_state = 0
	
	etat_fct = AI_TrackCurGet()
	ACT_ActionSet( SCS_ACT_water_swim )
	return
}

//--------( changement de position )---------------------------------------------------------
etat_f_timer -= TIME_GetDt()
if (etat_f_timer < 0 )
{
	if (etat_i_state == 0)
	{
		etat_i_state = 1
		etat_f_timer = MATH_RandFloat( f_UpTimeMin, f_UpTimeMax)
	}
	else
	{
		etat_i_state = 0
		etat_f_timer = MATH_RandFloat( f_DownTimeMin, f_DownTimeMax)
	}
}

if ( i_Attack_HideBeforeTrigger )
	etat_i_state = 0

//--------( déplacement )--------
move_v_dest = @net_o_wp OBJ_PosGet()
move_v_dest.z = move_f_Zsurface
if (etat_i_state == 0 )
	move_v_dest.z = move_f_Zunderwater
move_f_speed = f_Speed
move_i_brakewhennear = 1
move_i_ondule = 0
move_i_remote = 0
f_SpeedZ = 0.5
AI_Execute( "SCS_exec_move" )

//-------( réoriente )--------
newsight = move_v_startsight
if (stimul_i_visu)
{
	temp = @stimul_o_target OBJ_PosGet() - OBJ_PosGet()
	temp.z = 0
	if ( !MATH_VecNull( temp ) )
		newsight = temp
}
if ( ( (OBJ_PosGet() == move_v_dest) || move_i_ground) && (etat_i_state == 0))
{
	sight = OBJ_SightGet()
	if (MATH_VecDotProduct(sight, newsight)	 )
		sight += 0.1 * newsight
	else
		sight = MATH_VecBlend(sight, newsight, 0.01)
	OBJ_SightGeneralSet( sight, Cv_VerticalVector )
}

//--------( se prend un paf )--------
if ( stimul_i_paf )
	macro_takeapaf( SCS_PAF_one )
	
//--------( arrivée au WP )--------
if ( move_i_neardestlarge )
{
	net_o_wp = WAY_NetNextWP( net_Network, net_o_wp, 0, 0)
	if (net_o_wp == nobody )
	{
		if ( net_i_DyeWhenInLastWPBV  )
		{
			if (GFX_trace != -1)
			{
				GFX_Del( GFX_trace )
				GFX_trace = -1
			}
			OBJ_Destroy()
		}
		else		
			AI_TrackCurChange( "SCS_wait" )
		return
	}
}

//--------( arrivée dans la BV d'un WP avec CAPA_1 )--------
if ( @net_o_wp OBJ_CapaTest( OBJ_Capa_1 ) )
{
	if ( COL_Pivot_BVCollide( net_o_wp ) )
	{
		if ( net_i_DyeWhenInLastWPBV  )
		{
			if (GFX_trace != -1)
			{
				GFX_Del( GFX_trace )
				GFX_trace = -1
			}
			OBJ_Destroy()
		}
		else		
			AI_TrackCurChange( "SCS_wait" )

	}
}

//--------( ne plus suivre le réseau )--------
if ( !call_trigger( net_t_Use ) )
{
	AI_TrackCurChange( "SCS_wait" )
	return
}
	



