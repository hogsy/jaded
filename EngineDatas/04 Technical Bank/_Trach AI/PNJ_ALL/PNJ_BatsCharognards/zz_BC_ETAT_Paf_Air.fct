
#include "BC_defines.var"

//=============================================================================
// LA BAT SE PREND UN GROS PAF EN L'AIR
//=============================================================================

// SORTIE ETAT
if (i_sort_etat)
{
	i_flag_neck = vrai
	
	i_sort_etat = faux
	return
}

// ENTREE ETAT
if (i_etat_courant != ETAT_Paf_Air )
{
	i_etat_ancien = i_etat_courant
	i_etat_courant = ETAT_Paf_Air
	 
	if (fct_last_etat)
	{
		i_sort_etat = vrai
		AI_Execute(fct_last_etat)
	}
	fct_last_etat = AI_TrackCurGet()
	
	ACT_ActionSet(ACTION_Paf_Air)		// action
	
	// Dyna
	AI_Execute("BC_exec_dyn_on")
	
	// pas de suivi du regard
	v_look_pos = Cv_NullVector
	i_flag_neck = faux
	
	f_time_action = TIME_Get()		// durée de la chute
	
	i_flag_can_attack = faux
}


if( TIME_Elapsed(f_time_action, 10.0) )
{
	// le bat tombe dans le vide depuis 10 sec
//	DYN_Off()
//	AI_TrackCurStop()
	OBJ_Destroy()
}


if( (ACT_ActionGet() == ACTION_Paf_Air) && ACT_ActionFinished() )
	ACT_ActionSet(ACTION_Vol_Vrille )
else if( ACT_ActionGet() == ACTION_Vol_Vrille && BC_Collide_Ground() )
	macro_change_etat("BC_ETAT_Ecrase")			// Chute pas guidée -> vrille puis écrasement


//======== DEPLACEMENT ========

if( i_sum_pafs_force )
	DYN_SpeedSetVector(DYN_SpeedGetVector() + v_sum_pafs_dir )		// le bat s'est repris un paf

// orientation du bat : le sight vers l'origine du paf, le banking à la verticale
OBJ_BankingGeneralSet( 
	MATH_VecBlendRotate(OBJ_SightGet(), v_last_paf_sight, 5 * TIME_GetDt()), 
	MATH_VecBlendRotate(OBJ_BankingGet(),Cv_VerticalVector,5 * TIME_GetDt()) )

