#include "BC_defines.var"

int				ti_i
int				ti_cpt

object		tao_lray_bone[3]
object		to_ray_object

vector		tv_lray_pos
vector		tv_inclinaison


// SORTIE ETAT
if (i_sort_etat)
{
	i_sort_etat = faux
	return
}

// ENTREE ETAT
if (i_etat_courant != ETAT_Mort)
{
	i_etat_ancien_ancien = i_etat_ancien
	i_etat_ancien = i_etat_courant
	i_etat_courant = ETAT_Mort	
	if (fct_last_etat)
	{
		i_sort_etat = vrai
		AI_Execute(fct_last_etat)
	}
	fct_last_etat = AI_TrackCurGet()
	f_time_start_etat = 0.0
	BC_DBG_Trace_Etat("etat mort")
	
	if( BC_Boss() && o_attaque_finale_decor )		// big bat mort en ciné
	{
		ACT_ActionSet(ACTION_CINE_BAT_Mort)
		if( @o_attaque_finale_decor ACT_HasActionKit() )
			@o_attaque_finale_decor ACT_ActionSet(ACTION_CINE_PIEUX_Casse_Fixe)		// Ah, j't'ai KC !!! =)
	}
	else if( i_paf_sol_mort_flag )
		ACT_ActionSet(ACTION_Mort_Ventre)
	else
		ACT_ActionSet(ACTION_Mort_Dos)
	BC_action_frequency_set(1.0)
	
	OBJ_Me().des_int1 = Ci_DISPLAY_NOTHING
	OBJ_InfoPhotoParamSet(0, 0, 0, 0, 0.0, 0.0, 0.0, 0.0)
	
	macro_change_tag_size( Cv_NullVector, Cv_NullVector )	// TAG
	DYN_Off()		// on éteint la dyna
	if( f_time_mort == 0 )
	{
		OBJ_CapaSet(CAPA_inactive, 0)
		f_HP = 0.0		// pour tuer la bat si elle vient de l'agonie ou autre...
	}
	
	f_obbox_size_coef = 0.8
	AI_Execute("BC_exec_set_obbox")
	
	if( i_splash_flag || i_flag_barbeuc )
		OBJ_FlagsControlSet(OBJ_C_ControlFlag_RayInsensitive, none)
}
else
{
	f_time_start_etat += TIME_GetDt()
	
	// la big bat ne disparait pas
	if( ! BC_Boss() )
	{
		// test intéret 
//		if( ( ! i_splash_flag || i_splash_flag_posok ) 
//			&& ! BC_Get_Interet_Status_Model_Nb(OBJ_Me(), -1, faux) )
		if( ! BC_Get_Interet_Status_Model_Nb(OBJ_Me(), -1, faux) )
			f_time_mort += TIME_GetDt()			// le timer de mort avance si personne n'a d'intéret sur la bat
		
		// Test Ground par LRay (détection des cas foireux)
		if( ! i_splash_flag && ! i_flag_barbeuc )
		{
			if( ! i_ground_lray_test_done )
			{
				i_ground_lray_test_done = vrai
				ti_cpt = 0
				tao_lray_bone[0] = ANI_CanalObjectGet(Anim_Canal_Cou)
				tao_lray_bone[1] = ANI_CanalObjectGet(Anim_Canal_Bassin)
				tao_lray_bone[2] = ANI_CanalObjectGet(Anim_Canal_OrteilDroit)
				
				for( ti_i=0; ti_i < 3; ti_i++)
				{
					tv_lray_pos = @tao_lray_bone[ti_i] OBJ_PosGet() + (v_ground_normale * 0.5)
					DBG_RenderVector(tv_lray_pos, - v_ground_normale, color_rouge)
					to_ray_object = COL_RayObject_Dist(tv_lray_pos, - v_ground_normale, 1.0, all, OBJ_C_IdentityFlag_Anims, Ci_Filter_IdentityFlag, COL_C_Ray_on_ColMap_NoCrossable)
					if( to_ray_object && to_ray_object != OBJ_Me() )
						ti_cpt++
				}
				
				if( ti_cpt != 3 )
				{
					// la bat n'est pas stable au sol
					f_time_mort = Cf_duree_mort
				}
			}
		}
	}
}

// ANALYSE ======================================================================
o_predateur = LNK_ServeurGet(Ci_LNK_GRAB_RAPTOR, mid_predateur, vrai, nofunc, nofunc)
if( o_predateur )
	macro_change_etat("BC_ETAT_Grabbed")

if( v_zdm_cur_size == Cv_ZDM_Sol )
{
	// la callback n'est efffacée qu'une fois que la ZDM est de la bonne taille
	if( ! i_cb_destroy_called )
	{
		i_cb_destroy_called = vrai
		i_cb_destroy_manual = vrai
		AI_Execute("BC_cb_when_destroy")
		i_cb_destroy_manual = faux
	}
}


// COMPORTEMENT =====================================================================

i_flag_neck = faux

if( ACT_ActionGet() == ACTION_CINE_BAT_Paf_Mort )
{
	if( ACT_ActionFinished() )
	{
		ACT_ActionSet(ACTION_CINE_BAT_Paf_Mort_Fixe)
		if( @o_attaque_finale_decor ACT_HasActionKit() )
			@o_attaque_finale_decor ACT_ActionSet(ACTION_CINE_PIEUX_Casse_Paf_Denham_Fixe)
	}
}
else if( ACT_ActionGet() == ACTION_Mort_Dos || ACT_ActionGet() == ACTION_Mort_Ventre || ACT_ActionGet() == ACTION_CINE_BAT_Mort )
{
	if( f_sum_pafs_force )
	{
		if( BC_Boss() && o_attaque_finale_decor )
		{
			if( i_attaque_finale_cine_paf )
			{
				i_attaque_finale_cine_paf = faux
				ACT_ActionSet(ACTION_CINE_BAT_Paf_Mort)
				if( @o_attaque_finale_decor ACT_HasActionKit() )
					@o_attaque_finale_decor ACT_ActionSet(ACTION_CINE_PIEUX_Casse_Paf_Denham)
			}
		}
	}
	
	// FAIRE REMONTER LA BAT A LA SURFACE
//	if( i_splash_flag && ! i_splash_flag_posok )
//	{
//		tv_temp = OBJ_PosGet()
//		switch( i_modele )
//		{
//			case Ci_MODELE_Bat_Rouge :
//				tf_Z_diff = 0.05
//				break
//			case Ci_MODELE_Bat_Grise :
//				tf_Z_diff = 0.25
//				break
//			case Ci_MODELE_Bat_Noire :
//				tf_Z_diff = 0.75
//				break
//			case Ci_MODELE_Bat_Mini :
//				tf_Z_diff = 0.05
//				break
//		}
//		if( tv_temp.z < (f_water_Z - tf_Z_diff) )
//			OBJ_PosSet(OBJ_PosGet() + (Cv_VerticalVector * 1.0 * TIME_GetDt()) )
//		else
//			i_splash_flag_posok = vrai
//	}
	
	// PASSER EN FADE
	if( i_modele != Ci_MODELE_Bat_Noire && (  f_time_mort >= Cf_duree_mort || f_point_de_viande <= 0.0 || i_flag_barbeuc ) )
	{
		if( ! i_DBG_no_fade_out )
		{
			macro_change_etat("BC_ETAT_Fade")
		}
	}
}

if( ! BC_Boss() || ! o_attaque_finale_decor )
{
	// petite bat ou big bat mais sans mort en cinématique
	if( i_splash_flag )
		tv_inclinaison = Cv_VerticalVector
	else if( ! MATH_VecNullEpsilon(v_ground_normale) )
		tv_inclinaison = v_ground_normale
	else
		tv_inclinaison = Cv_VerticalVector
	OBJ_BankingSet(MATH_VecBlendRotate(OBJ_BankingGet(), tv_inclinaison, 10.0 * TIME_GetDt()))
}

