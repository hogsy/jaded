#include 		"BC_defines.var"

#define			Cf_vitesse_min		0.5

float		tf_dist
float		tf_ref_speed
float		tf_dot

// CALCUL RESTRICTION SPEED ==================================================
tf_dot = BC_Move_Speed_Dot()
tf_ref_speed = f_ref_speed * tf_dot
if( i_flag_frein && i_modele != Ci_MODELE_Bat_Noire )
{
	// vitesse bornée en fonction de la distance restante
	tf_dist = MATH_VecNorm( v_dest_pos - OBJ_PosGet())
	if( BC_ReseauSoftColRayonOptimEnabled(i_etat_courant) )
	{
		// la bat considère qu'elle a atteint le wp si son rayon de col molles l'a atteint
		tf_dist = MATH_FloatMax(0.0, tf_dist - f_softcol_rayon_current)
	}
	
	tf_ref_speed = MATH_FloatMin(tf_ref_speed, tf_dist * 0.5 )
}

// vitesse réelle
if( i_etat_courant != ETAT_Fight_Contact )
	tf_ref_speed = MATH_FloatMax(tf_ref_speed, Cf_vitesse_min)		// vitesse min pour continuer à avancer
f_speed = MATH_FloatBlend(f_speed, tf_ref_speed, f_speed_blend_coef * TIME_GetDt())			// calcul d'une vitesse progressive

// vitesse coll molles
f_softcol_link_speed = MATH_FloatBlend(f_softcol_link_speed, f_ref_speed, f_speed_blend_coef * TIME_GetDt())

// raz coef
f_speed_blend_coef = Cf_coef_blend_speed_def

