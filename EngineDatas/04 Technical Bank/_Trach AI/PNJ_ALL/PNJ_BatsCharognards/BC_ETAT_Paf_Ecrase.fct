#include "BC_defines.var"

vector			tv_paf_depl			// dépacement engendré par le paf
vector			tv_inclinaison


// SORTIE ETAT
if (i_sort_etat)
{	
	i_sort_etat = faux
	return
}

// ENTREE ETAT
if (i_etat_courant != ETAT_Paf_Ecrase )
{
	i_etat_ancien_ancien = i_etat_ancien
	i_etat_ancien = i_etat_courant
	i_etat_courant = ETAT_Paf_Ecrase
	if (fct_last_etat)
	{
		i_sort_etat = vrai
		AI_Execute(fct_last_etat)
	}
	fct_last_etat = AI_TrackCurGet()
	f_time_start_etat = 0.0
	BC_DBG_Trace_Etat("etat paf ecrase")
	
	if( o_chute_bats_wp )
		i_paf_sol_mort_flag = vrai		// mort sur le ventre
	
	if( BC_Boss() && o_attaque_finale_decor )
	{
		ACT_ActionSet(ACTION_CINE_BAT_Ecrasement)
		if( @o_attaque_finale_decor ACT_HasActionKit() )
			@o_attaque_finale_decor ACT_ActionSet(ACTION_CINE_PIEUX_Ecrasement)
	}
	else if( i_paf_sol_mort_flag )
		ACT_ActionSet(ACTION_Ecrase_Ventre)
	else
		ACT_ActionSet(ACTION_Ecrase_Dos)
	
	BC_mort_sur_sol_correct()		// check EAU
	BC_action_frequency_set(1.0)
	
	// recul calculé par rapport au déplacement effectué
	if( ! o_chute_bats_wp )
	{
		// déplacement engendré par le paf (sauf en cas de chute guidée vers un wp)
		tv_paf_depl = OBJ_PosGet() - v_pos_avant_paf
		tv_paf_depl.z = 0.0
		DBG_RenderVector(v_pos_avant_paf, tv_paf_depl, color_rouge)
		DYN_SpeedSetVector( tv_paf_depl )		// sens du déplacement pour l'écrasement
	}
	
	macro_change_tag_size( Cv_Tag_Min, Cv_Tag_Max )	// TAG
	SND_RequestPlay(Ci_SND_Ecrasement)
	
	if( i_DBG_YOAN )
	{
		DBG_TraceObject(OBJ_Me())
		DBG_TraceString(" vient de jouer le son n° ")
		DBG_TraceInt(Ci_SND_Ecrasement)
		DBG_TraceString(" (écrasement)")
		DBG_TraceEOL()
	}
	
	// CADAVRES
	o_cadavre = nobody
}
else
{
	f_time_start_etat += TIME_GetDt()
}


i_flag_neck = faux

if( ANI_CurrentFrameGet(0) >= 28 && ! i_ecrase_snd_mort )
{
	i_ecrase_snd_mort = vrai
	SND_RequestPlay(Ci_SND_Cri_Mort)
}

if( ACT_ActionFinished() && ( BC_Boss() || BC_est_au_sol() || i_splash_flag ) )
{
	macro_change_etat("BC_ETAT_Agonie")			// bat agonisant
}

if( ! BC_Boss() || ! o_attaque_finale_decor )
{
//	OBJ_BankingSet(MATH_VecBlendRotate(OBJ_BankingGet(),Cv_VerticalVector,10.0 * TIME_GetDt()))
//	OBJ_BankingSet(MATH_VecBlendRotate(OBJ_BankingGet(),v_ground_normale,10.0 * TIME_GetDt()))

	if( ! MATH_VecNullEpsilon(v_ground_normale) )
		tv_inclinaison = v_ground_normale
	else
		tv_inclinaison = Cv_VerticalVector
	OBJ_BankingSet(MATH_VecBlendRotate(OBJ_BankingGet(), tv_inclinaison, 10.0 * TIME_GetDt()))
}
