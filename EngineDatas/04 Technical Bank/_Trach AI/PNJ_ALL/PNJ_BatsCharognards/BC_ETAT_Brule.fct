#include "BC_defines.var"

vector		tv_inclinaison


// SORTIE ETAT
if (i_sort_etat)
{
	i_sort_etat = faux
	return
}

// ENTREE ETAT
if (i_etat_courant != ETAT_Brule)
{
	i_etat_ancien_ancien = i_etat_ancien
	i_etat_ancien = i_etat_courant
	i_etat_courant = ETAT_Brule
	if (fct_last_etat)
	{
		i_sort_etat = vrai
		AI_Execute(fct_last_etat)
	}
	fct_last_etat = AI_TrackCurGet()
	f_time_start_etat = 0.0
	BC_DBG_Trace_Etat("etat brule")
	
	ACT_ActionSet(ACTION_Paf_Air_Moyen)
	BC_action_frequency_set(1.0)
	
	SND_RequestPlay(Ci_SND_Fire_Start)
	if( i_snd_barbeuc == -1 )
		i_snd_barbeuc = SND_RequestPlayLoop(Ci_SND_Fire_Loop)
	f_snd_barbeuc_scream_delay = 0.25
	
//	AI_Execute("BC_exec_dyn_on")
//	DYN_GravitySet(Cv_NormalGravity)
	
	f_HP = 0.0		// pour tuer la bat si elle vient de l'agonie ou autre...
	f_point_de_viande = 0.0
	OBJ_CapaSet(CAPA_inactive, none)
	i_flag_barbeuc = vrai
	
	// simule un paf
	f_paf_offset_coef = 0.0
	v_last_paf_sight = - OBJ_SightGet()
	v_paf_offset = 1.5 * v_last_paf_sight

	BC_STATS_NMI_Killed(o_jack)
}
else
{
	f_time_start_etat += TIME_GetDt()
}


// COMPORTEMENT ================================================================

i_flag_neck = faux

// ENCHAINEMENT DES ACTIONS ---------------------------------------------------------------------
switch( ACT_ActionGet() )
{
	case ACTION_Paf_Air_Moyen :
		if( ACT_ActionFinished() )
		{
			if( BC_Collide_Ground() )
			{
				SND_RequestPlay(Ci_SND_Ecrasement)
				ACT_ActionSet(ACTION_Ecrase_Dos)
			}
			else
				ACT_ActionSet(ACTION_Vol_Vrille)
		}
		break
	
	case ACTION_Vol_Vrille :
		if( BC_Collide_Ground() )
		{
			SND_RequestPlay(Ci_SND_Ecrasement)
			SND_RequestPlay(Ci_SND_Cri_Mort)
			ACT_ActionSet(ACTION_Ecrase_Dos)
		}
		break
		
	case ACTION_Ecrase_Dos :
		if( ACT_ActionFinished() )
			ACT_ActionSet(ACTION_Mort_Dos)
		break
		
	case ACTION_Mort_Dos :
		if( BC_Collide_Ground() )
			macro_change_etat("BC_ETAT_Mort")
		break
}


// ORIENTATION ------------------------------------------------------------------------------------------
switch( ACT_ActionGet() )
{
	case ACTION_Paf_Air_Moyen :
	case ACTION_Vol_Vrille :
		tv_inclinaison = Cv_VerticalVector
		break
	default:
		if( ! MATH_VecNullEpsilon(v_ground_normale) )
			tv_inclinaison = v_ground_normale
		else
			tv_inclinaison = Cv_VerticalVector
		break
}
OBJ_BankingGeneralSet( 
	MATH_VecBlendRotate(OBJ_SightGet(), - v_last_paf_sight, 5 * TIME_GetDt()), 
	MATH_VecBlendRotate(OBJ_BankingGet(), tv_inclinaison, 5.0 * TIME_GetDt()))
