#include "BC_defines.var"

int			ti_i
int			ti_rank

float		tf_dist
float		tf_dot_product
float		tf_near_dist

vector	tv_start_pos
vector	tv_end_pos
vector	tv_shoot_dir
vector	tv_nearest_pos
vector	tv_me_to_nearest_pos

object	to_lance

messageid		tmid_shoot_event
messageid		tmid_invalid_event

if (i_flag_check_shoot_done)
	return

i_flag_check_shoot_done = vrai
i_near_shoot_flag = faux

if( MSG_GlobalIsValid(mid_grab_charogne) )
	return

MSG_GlobalSetInvalid(tmid_invalid_event)

//tf_near_dist = 100.0 * OBJ_ZoomGet()
if( i_etat_courant == ETAT_Wait_Perche )
	tf_near_dist = 10.0
else
	tf_near_dist = 5.0

ti_rank = -1
for (	tmid_shoot_event = MSG_GlobalScan(C_EVENT_TYPE_Shoot, &ti_rank); 
		MSG_GlobalIsValid(tmid_shoot_event);
		tmid_shoot_event = MSG_GlobalScan(C_EVENT_TYPE_Shoot, &ti_rank)	)
{
	tv_start_pos = EVENT_ShootStartPosGet(tmid_shoot_event)
	tv_end_pos = EVENT_ShootEndPosGet(tmid_shoot_event)	
	tv_shoot_dir = tv_end_pos - tv_start_pos
	
	if (MATH_VecDotProduct(tv_shoot_dir, OBJ_PosGet() - tv_start_pos) > 0.0)
	{
		// Le tir va vers moi, est-ce qu'il est passé près de moi ?
		tf_dist = MATH_VecNorm(tv_shoot_dir)
		if (tf_dist)
		{
			tv_shoot_dir /= tf_dist
			
			tf_dot_product = MATH_VecDotProduct(OBJ_PosGet() - tv_start_pos, tv_shoot_dir)
	
			tv_nearest_pos = MATH_FloatMin(tf_dist, tf_dot_product) * tv_shoot_dir
			tv_nearest_pos += tv_start_pos
			
			tv_me_to_nearest_pos	= tv_nearest_pos
			tv_me_to_nearest_pos -= OBJ_PosGet()
		
			tf_dist = MATH_VecDotProduct(tv_me_to_nearest_pos, tv_me_to_nearest_pos)
			if (tf_dist < tf_near_dist)
			{
				DBG_RenderVector(tv_start_pos, tv_nearest_pos - tv_start_pos, color_rouge)
				i_near_shoot_flag = vrai
				o_cible_attaque = EVENT_PereGet(tmid_shoot_event)
			}
		}
	}
}

// ON VA AUSSI REGARDER LES LANCES
for (ti_i = 0; ti_i < Ci_bambou_maxinmap; ti_i++)
{
	to_lance = 	@get_global ao_Lances[ti_i]
	if (to_lance && @get_Arme_Lance_path to_lance mi_State == Ci_bambou_state_launch)
	{
		tv_me_to_nearest_pos = @to_lance OBJ_PosGet()
		tv_me_to_nearest_pos -= OBJ_PosGet()
		
		if (MATH_VecDotProduct(tv_me_to_nearest_pos, tv_me_to_nearest_pos) < tf_near_dist)
		{
			i_near_shoot_flag = vrai
			o_cible_attaque = @get_Arme_Lance_path to_lance mo_Sender		// celui qui a lancé la lance
		}
	}
}

