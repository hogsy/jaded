#include "BC_defines.var"

vector			tv_sight1
vector			tv_sight2

float				tf_dot

messageid		tmid_vision

object			to_head


// SORTIE ETAT
if (i_sort_etat)
{
	if( i_etat_courant != ETAT_Fight_Approche)
		BC_WP_Reservation_Del(o_backup_wp_depl_utilise)
	i_sort_etat = faux
	return
}

// ENTREE ETAT
if (i_etat_courant != ETAT_Fight_Wait_Begin)
{
	i_etat_ancien_ancien = i_etat_ancien
	i_etat_ancien = i_etat_courant
	i_etat_courant = ETAT_Fight_Wait_Begin
	if (fct_last_etat)
	{
		i_sort_etat = vrai
		AI_Execute(fct_last_etat)
	}
	fct_last_etat = AI_TrackCurGet()
	f_time_start_etat = 0.0
	BC_DBG_Trace_Etat("etat fight wait begin")
	
	ACT_ActionSet(i_ACTION_Vol_Standard)		// vol attente
	if( i_modele == Ci_MODELE_Bat_Noire )
		BC_action_frequency_set(2.0)
	else
		BC_action_frequency_set(1.0)
	BC_ref_speed_set(0.0)

//	f_rotation_angle_courant = 0.0
	f_time_wait_desyncho = 0.0
//	i_fight_wait_begin_mode = Ci_fight_wait_begin_camera
	i_fight_wait_begin_mode = Ci_fight_wait_begin_orientation_and_time_plongeon
	
	v_fight_wait_pos = OBJ_PosGet()	
	
//	SND_RequestPlay(Ci_SND_Cri_Attack_Loin)			// je crie pour annoncer que je vais attaquer
	BC_Global_Plongeon_Sound_Play()
}
else
{
	f_time_start_etat += TIME_GetDt()
}

// EMERGENCY ABORT =============================
if( o_cible_attaque && ! BC_TargetActive(o_cible_attaque) )
{
	DBG_TraceObject(OBJ_Me())
	DBG_TraceString(" : EMERGENCY ABORT : Target non active (")
	DBG_TraceObject(o_cible_attaque)	
	DBG_TraceString(")")
	DBG_TraceEOL()	
	
	BC_Cadavre_Del(o_cible_attaque)
	o_cible_attaque = nobody
	AI_Execute("BC_exec_init_attente")
}

// ANALYSE ==================================================================================================
if( 0 )
{
	ANNULE_ATTAQUE:
	AI_Execute("BC_exec_init_attente")
}

AI_Execute("BC_exec_check_fight_exit")
if( i_fight_exit_flag )
{
	goto ANNULE_ATTAQUE
}

// COMPORTEMENT ==============================================================================================

// REGARD 
to_head = @o_cible_attaque ANI_CanalObjectGet(Anim_Canal_Tete)
if( ! to_head )
	to_head = o_cible_attaque

i_flag_neck = vrai
v_look_pos = @to_head OBJ_PosGet()


// INTERET 
BC_Interet_Update(mid_interet_attaque, C_EVENT_InteretStatusLock, o_cible_attaque, tmid_vision)

// MODE -----------------------------------------------------------------------------------------------
if( i_fight_wait_begin_mode == Ci_fight_wait_begin_camera )
{
//	if( f_time_start_etat == 0.0 )
//		SND_RequestPlay(Ci_SND_Cri_Attack_Loin)			// je crie pour annoncer que je vais attaquer
	
	if( TIME_Elapsed(f_time_debut_wait_hors_champ, f_duree_wait_hors_champ) || f_duree_dans_champ_camera > f_duree_min_dans_champ )
	{
		// attente hors champ terminée
		i_fight_wait_begin_mode = Ci_fight_wait_begin_desynchro
//		f_time_wait_desyncho = MATH_RandFloat(0.0,1.5)
		f_time_wait_desyncho = 0.0
	}
}

if( i_fight_wait_begin_mode == Ci_fight_wait_begin_desynchro )
{
	f_time_wait_desyncho -= MATH_FloatMin(f_time_wait_desyncho, TIME_GetDt())
	if( ! f_time_wait_desyncho )
	{
		// désynchronisation terminée
		i_fight_wait_begin_mode = Ci_fight_wait_begin_orientation_and_time_plongeon
	}
}

if( i_fight_wait_begin_mode == Ci_fight_wait_begin_orientation_and_time_plongeon )
{
	tv_sight1 = OBJ_SightGet()
	tv_sight1.z = 0.0
	if( ! MATH_VecNullEpsilon(tv_sight1) )
		MATH_VecSetNormalize(tv_sight1)
	tv_sight2 = @o_cible_attaque OBJ_PosGet() - OBJ_PosGet()
	tv_sight2.z = 0.0
	if( ! MATH_VecNullEpsilon(tv_sight2) )
		MATH_VecSetNormalize(tv_sight2)
	tf_dot = MATH_VecDotProduct(tv_sight1, tv_sight2) 

	if( ! BC_Boss() || f_time_start_etat > 2.0 )
	{			
		if( tf_dot > f_plongeon_cos_min 
			&& ( BC_Boss() 
				|| i_modele != Ci_MODELE_Bat_Grise 
				|| MATH_FloatNullEpsilon(@get_global f_bat_plongeon_delay) ) )
		{
			if( BC_Boss() )
			{
				BC_Boss_Attack_Compute_Pos()
				SND_RequestPlay(Ci_SND_Annonce_Pique)
			}
			macro_change_etat("BC_ETAT_Fight_Approche")	
		}
	}
}


// ORIENTATION 
AI_Execute("BC_exec_MOVE_fight_wait")

