#include "BC_defines.var"

BC_DBG_Trace_Etat("init attaque")

AI_Execute("BC_exec_dyn_on")

if( MSG_GlobalIsValid(mid_interet_charogne) )
	EVENT_Delete(mid_interet_charogne, C_EVENT_EOFDEL )			// perte de l'intérêt pour la charogne

// raz compteur d'attaque (si le bat était déjà en train d'attaquer)

i_mode_depl = Ci_mode_depl_attaque
i_flag_reach_attack_wp = faux					// la bat doit se repositionner
i_flag_net_1st_move = vrai							// 1er mouvement pour attaquer


i_attack_mode = Ci_attack_mode_paf

i_flag_frein = faux

o_cible_attaque_contact = o_cible_attaque

// TEST MODE BOSS
if( BC_Boss() )
{
	// force un comportement ou la bat s'acharne au contact et va obligatoirement au wp d'attaque spécifié
	i_attaque_a_partir_de_la_ronde = faux
	i_attaque_a_partir_des_wp = vrai
	f_time_agonie = Cf_duree_agonie		// pas d'agonie
//	f_paf_head_multiplicateur = 1.0
//	f_paf_wing_multiplicateur = 1.0
}

BC_action_frequency_set(1.0)
if( i_cadavre_joueur_proche_flag )
{
	macro_change_etat("BC_ETAT_Fight_Contact")
}
else if( i_etat_init == Ci_etat_init_perchee || i_etat_init == Ci_etat_init_dans_trou )
{
	i_etat_courant = -1 		// forcer l'init
	macro_change_etat("BC_ETAT_Fight_Approche")				// attaque directe
}
else
	macro_change_etat("BC_ETAT_Fight_Network")		// suivi réseau

