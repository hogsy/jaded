
#include 		"BC_defines.var"

vector		tv_pos_cible		// position de la cible
vector		tv_to_cible			// vecteur du bat vers la cible
float			tf_dist				// distance entre le bat et la cible


// calcul de la distance
tv_pos_cible = v_look_pos + (v_decalage * 1.1)				// selon le mode, le bat reste au-dessus de la cible
tv_to_cible = tv_pos_cible - OBJ_PosGet()
DBG_RenderVector(OBJ_PosGet(),tv_to_cible, color_cyan)
tf_dist = MATH_VecNorm(tv_to_cible)
tv_to_cible /= tf_dist

// calcul d'une vitesse progressive et bornée par la distance restante (pour freiner à l'approche de la cible)
f_speed = MATH_FloatBlend(f_speed, f_ref_speed, 4 * TIME_GetDt())
f_speed = MATH_FloatMin( f_speed, tf_dist * (20 * TIME_GetDt() ) )


push(tv_to_cible)
