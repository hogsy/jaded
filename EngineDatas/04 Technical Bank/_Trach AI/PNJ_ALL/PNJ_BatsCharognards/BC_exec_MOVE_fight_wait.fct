vector			tv_sight
vector			tv_banking

if( i_perchee_fake_attaque )
{
	if( f_time_fight_fake_wait >= 0.75 )
	{
		tv_sight = OBJ_SightGet()
		f_rotation_angle_courant = 0.0
	}
	else
		tv_sight = v_perchee_init_pos - OBJ_PosGet()
	
	tv_sight.z = 0.0
//	tv_sight = MATH_FloatSign(MATH_VecDotProduct(OBJ_HorizonGet(), v_perchee_init_pos - OBJ_PosGet())) * OBJ_HorizonGet()
	tv_sight = BC_BlendRotate(OBJ_SightGet(), tv_sight, 100.0, f_rotation_angle_courant * (30.0 * Cf_1Degre) )		// 30 ° x30 (à cause du getdt)
}
else if( o_cible_attaque )
{
	tv_sight = @o_cible_attaque OBJ_PosGet() - OBJ_PosGet()
	tv_sight = BC_BlendRotate(OBJ_SightGet(), tv_sight, 100.0, f_rotation_angle_courant * (30.0 * Cf_1Degre) )		// 30 ° x30 (à cause du getdt)
}
else
{
	tv_sight = OBJ_SightGet()
}

//tv_banking = MATH_VecRotate(Cv_VerticalVector, OBJ_HorizonGet(), Cf_PiBy4)
//DBG_RenderVector(OBJ_PosGet(), tv_banking, color_vert)
//tv_banking = MATH_VecBlendRotate(OBJ_BankingGet(), tv_banking, 5 * TIME_GetDt())
//DBG_RenderVector(OBJ_PosGet(), tv_banking, color_rouge)

tv_banking = MATH_VecBlendRotate(OBJ_BankingGet(), Cv_VerticalVector, 5 * TIME_GetDt())

OBJ_BankingGeneralSet(tv_sight, tv_banking)

// collisions molles
//DBG_RenderVector(OBJ_PosGet(), v_soft_collision_current, color_bleu)
//OBJ_PosSet(OBJ_PosGet() + v_soft_collision_current)

//if( ! MATH_VecNullEpsilon(v_fight_wait_pos) )
//	OBJ_PosSet(v_fight_wait_pos)		// force la position courante (pour les coll molles, pour ne pas être repoussé trop loin par la succession de PosSet en tagon)
//else
//	DBG_Error("v_fight_wait_pos null ????")

