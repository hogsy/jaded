//
//#include "KBC_defines.var"
//
//
//// SORTIE ETAT
//if (i_sort_etat)
//{
//	i_sort_etat = faux
//	return
//}
//
//// ENTREE ETAT
//if (i_etat_courant != ETAT_Chute)
//{
//	i_etat_ancien = i_etat_courant
//	i_etat_courant = ETAT_Chute
//	
//	if (fct_last_etat)
//	{
//		i_sort_etat = vrai
//		AI_Execute(fct_last_etat)
//	}
//	fct_last_etat = AI_TrackCurGet()
//	
//	// Dyna
//	DYN_On()
//	DYN_FlagsSet(DYN_C_GlobalFriction + DYN_C_BasicForces + DYN_C_VectorFriction + DYN_C_NeverDynamicFather, none)
//	DYN_GravitySet(Cv_NormalGravity)
//	DYN_FrictionVectorSet(Cv_Friction)
//	
//	ACT_ActionSet(ACTION_Vol_Chute)
//	
//	// durée de la chute
//	f_time_action = TIME_Get()
//	
//	// pas de suivi du regard
//	v_look_pos = Cv_NullVector
//	i_flag_neck = faux
//}
//
//
//if( TIME_Elapsed(f_time_action, 5.0) )
//{
//	// le bat tombe dans le vide
//	DYN_Off()
//	AI_Execute("KBC_exec_attente_choix")
//}
//
//
//if( COL_CollideType( COL_C_Ground ) )
//	macro_change_etat("KBC_ETAT_Ecrase")			// le bat s'écrase au sol
//
//if( i_sum_pafs_force )
//	DYN_SpeedSetVector(DYN_SpeedGetVector() + v_sum_pafs_dir )		// le bat reçoit un nouveau paf
//
//// orientation du bat : le sight vers l'origine du paf, le banking à la verticale
//OBJ_BankingGeneralSet( MATH_VecBlendRotate(OBJ_SightGet(),v_last_paf_sight,5 * TIME_GetDt()), MATH_VecBlendRotate(OBJ_BankingGet(),Cv_VerticalVector,5 * TIME_GetDt()) )
//
//