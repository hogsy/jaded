#include "KBC_defines.var"

messageid		tmid_proposition

object	to_serveur
object	to_bone

float		tf_dist

vector	tv_temp
vector	tv_sens
vector	tv_grab_pos

int			ti_propose


tmid_proposition = pop
to_serveur = MSG_GlobalGetGao(tmid_proposition, SERVEUR)
to_bone = LNK_GrabBoneGet(tmid_proposition)

ti_propose = faux
tv_grab_pos = LNK_GrabPositionGet(tmid_proposition)

//DBG_RenderVector(tv_grab_pos, Cv_VerticalVector * 10, color_jaune)


// jamais en fade ------------------------------------------------------
if( i_etat_courant == ETAT_Fade )
{
	LNK_ServeurRefuse(tmid_proposition)
	return
}

// jamais pour les bats rouges ------------------------------------
if( i_little_bat )
{
	LNK_ServeurRefuse(tmid_proposition)
	return	
}


if( i_big_bat )
{
	// BIG BAT : FINISH ONLY =======================================================================
	if( ( i_etat_courant == ETAT_Agonie || i_etat_courant == ETAT_Sol_Ecrasement ) 
		&& ( LNK_GrabStatusGet(tmid_proposition) & Ci_GrabKong_Type_Finish ) 
		&& MATH_VecDistance(OBJ_PosGet(), tv_grab_pos) < 12.0 )
//		&& MATH_VecDotProduct(OBJ_SightGet(), tv_grab_pos - OBJ_PosGet()) > 0.0 		// kong est devant moi
//		&& MATH_VecDotProduct(@to_serveur OBJ_SightGet(), OBJ_SightGet()) < 0.0 )		// kong ne me tourne pas le dos
	{
		LNK_ClientPropose(tmid_proposition, 1.0)		// Tres prioritatire
		MSG_GlobalSetGao(tmid_proposition, OBJ_Me(), GAO3)
		LNK_GrabKong_TypeSet( tmid_proposition, Ci_GrabKong_Type_Finish)
	}
	else
		LNK_ServeurRefuse(tmid_proposition)
}
else
{
	// SMALL BATS : GRAB ONLY ====================================================================
	tv_temp = @to_serveur OBJ_PosGet()
	tv_temp -= OBJ_PosGet()
	tf_dist = MATH_VecDotProduct(tv_temp, tv_temp)
	
	if( LNK_GrabStatusGet(tmid_proposition) & (Ci_GrabKong_Type_Petit | Ci_GrabKong_Type_TRex_Choppe) )
	{
		if( to_serveur == o_bone_ride_KK )
		{
			ti_propose = vrai
			tf_dist = 0.01
		}
		else if( tf_dist <= 64) //25.0 )
		{
			ti_propose = vrai
			tv_sens = LNK_GrabVectorGet(tmid_proposition)
			o_bone_ride_KK = LNK_ClientGet(Ci_LNK_RIDE_DINO, mid_bone_ride_KK_LNK_ID, faux, nofunc, nofunc, nofunc)
			
			tf_dist = MATH_FloatMin(tf_dist, 999)
			tf_dist += Ci_Grab_Kong_Pond_Bat_Kong
			if( EVENT_LIFE_CurLifeGet(ID_LIFE) <= 0.0 )
				tf_dist += Ci_Grab_Kong_Pond_Dead
			if( ( ! MATH_VecNullEpsilon(tv_sens) ) && MATH_VecDotProduct(tv_sens, tv_temp) > 0.0 )
				tf_dist += Ci_Grab_Kong_Pond_Bad_Axe 			// BAD AXE
		}
	}
	if( ti_propose )
	{
		LNK_ClientPropose(tmid_proposition, tf_dist)
		LNK_GrabKong_TypeSet( tmid_proposition, Ci_GrabKong_Type_Petit)
	}
	else
		LNK_ServeurRefuse(tmid_proposition)
}

