//#include "KBC_defines.var"
//
//vector			tv_sens_paf
//
//messageid		tmid_vision
//
//
//// SORTIE ETAT
//if (i_sort_etat)
//{
//	f_cible_poids = 0.0
//	f_speed = 0.0		// bat à l'arrêt
//	i_mange_mode = 0
//	i_flag_neck = vrai
//	
//	if( i_etat_courant != ETAT_Move_Decolle )
//	{
//		if( i_uncol )
//		{
//			i_uncol = faux
//			COL_UnCollidableDel(o_uncol_actor)
//			o_uncol_actor = nobody
//		}
//	}
//	
//	i_sort_etat = faux
//	return
//}
//
//// ENTREE ETAT
//if (i_etat_courant != ETAT_Sol_Interaction_Ann)
//{
//	i_etat_ancien_ancien = i_etat_ancien
//	i_etat_ancien = i_etat_courant
//	i_etat_courant = ETAT_Sol_Interaction_Ann
//	if (fct_last_etat)
//	{
//		i_sort_etat = vrai
//		AI_Execute(fct_last_etat)
//	}
//	fct_last_etat = AI_TrackCurGet()
//	f_time_start_etat = 0.0
//	KBC_DBG_Trace(i_DBG_trace_etat, "etat sol interaction ANN")
//	
//	f_time_action = TIME_Get()			// init durée manger (pour goûter avant de décider s'il s'envole avec ou pas)
//
//	ACT_ActionSet(ACTION_BigBat_vs_Ann_attente)
//	
//	DYN_Off()		// pour ne pas glisser
//	f_interaction_timer = MATH_RandFloat(0.5,1.5)
//	i_paf_send = faux
//	
//	i_request_txt_forced = GeneKAnn_C_danger_need
//	i_interaction_sol_ann_link_done = faux
//}
//else
//{
//	f_time_start_etat += TIME_GetDt()
//	
//	f_nid_kill_ann_delay -= MATH_FloatMin(f_nid_kill_ann_delay, TIME_GetDt())
//	if( ! i_interaction_sol_ann_link_done && f_nid_kill_ann_delay == 0.0 )
//	{
//		i_request_txt_forced = GeneKAnn_C_bitten
//	}
//
//	if( MSG_GlobalIsValid(mid_attack_interaction_LKN_ID) 
//		&& LNK_InteractionParamGet(mid_attack_interaction_LKN_ID) == C_INTER_FIGHT_ANN_READY 
//		&& ! f_nid_kill_ann_delay 
//		&& ACT_ActionGet() == ACTION_BigBat_vs_Ann_attente )
//		f_interaction_timer -= MATH_FloatMin(f_interaction_timer, TIME_GetDt())
//}
//
//
//// KAMERA ANN DEATH ====================================================
//if( i_bigbat_killed_Ann && o_Jack )
//{
//	if ( @get_global i_ann_background == 666)
//		@get_global i_ann_background = WOR_BackColGet(0)
//	WOR_BackColSet(0,0)
//	@get_Kamera Proc_Kam_FinishMode_Set(Ci_Kcamera_AnnDeath_BBat, o_Jack)
//}
//
//
//// DECOLLER ---------------------------------------------------------------
//if( ! MSG_GlobalIsValid(mid_grab_charogne) )
//{
//	KBC_DBG_Trace(i_DBG_trace_etat, " mid_grab_charogne invalide : j'ai déjà laché Ann donc je pars en ronde")
//	i_flag_do_not_reset_attaque_values = vrai
//	AI_Execute("KBC_exec_init_attente")		// abracadabra
//}
//if( OBJ_CapaTest(CAPA_Release_Grabbed_Actor) )
//{
//	KBC_DBG_Trace_Float(i_DBG_trace_etat, " a reçu la capa 4 (release), time = ", TIME_Get())
//	i_flag_do_not_reset_attaque_values = vrai
//	AI_Execute("KBC_exec_init_attente")		// abracadabra
//}
//
//
//// Décolle avec Ann grâce à la capa ----------------------------------------------
//if( OBJ_CapaTest(CAPA_Decolle) )
//{
//	KBC_DBG_Trace_Float(i_DBG_trace_etat, " a reçu la capa 0 (décolle), time = ", TIME_Get())
//	OBJ_CapaSet(none, CAPA_Decolle)
//	if( MSG_GlobalIsValid(mid_grab_charogne) )
//	{
//		LNK_GrabStatusSet(mid_grab_charogne, Ci_GrabTransporte_Type_Vole)		// la proie change d'anim
//		i_request_txt_forced = GeneKAnn_C_danger_need
//	}
//	i_envol_palier = 2
//	macro_change_etat("KBC_ETAT_Move_Decolle")
//}
//
//
//i_flag_neck = faux
//KBC_Interet_Update(mid_interet_charogne, C_EVENT_InteretStatusAttack, o_cible, tmid_vision)
//
//// délai avant compteur ANN ----------------------------------------
//if( f_nid_kill_ann_delay )
//{
//	i_flag_neck = faux
//	if( i_DBG_display_nest_wait_timer )
//	{
//		Str_DisplayTextOnce("BIG BAT Wait for Eat : ", cvector(0.35,0,0))
//		Str_DisplayFloatOnce(f_nid_kill_ann_delay, cvector(0.6,0,0))
//	}
//	returntrack
//}
//
//
////if( i_interaction_sol_ann_link_done && ! o_attack_interaction )		// je repars en ronde si l'intéraction est coupée (et pas si elle n'est pas encore initialisée)
////	macro_change_etat("KBC_ETAT_Move_Ronde")
//
//if( ! i_interaction_sol_ann_link_done && o_attack_interaction )
//	i_interaction_sol_ann_link_done = vrai
//
//// COMPORTEMENT ========================================================
//switch( ACT_ActionGet() )
//{
//	case ACTION_BigBat_vs_Ann_attente :
//		if( ! f_interaction_timer )
//		{
//			if( o_Jack && @o_Jack KAnn_Death_Attack_Enabled() )
//			{
//				ACT_ActionSet(ACTION_BigBat_vs_Ann_attackFace)
//				if( MSG_GlobalIsValid(mid_attack_interaction_LKN_ID) )		// la liaison peut etre coupée si kong passe en finished
//					LNK_InteractionParamSet(mid_attack_interaction_LKN_ID, C_INTER_FIGHT_ENNEMY_ATTACK )
//			}
//			else
//			{
//				@get_global i_KAnn_fake_attack_index = MATH_Modulo(@get_global i_KAnn_fake_attack_index +1, 2)
//				if( @get_global i_KAnn_fake_attack_index == 0 )
//					ACT_ActionSet(ACTION_BigBat_vs_Ann_attackD)
//				else
//					ACT_ActionSet(ACTION_BigBat_vs_Ann_attackG)
//				if( MSG_GlobalIsValid(mid_attack_interaction_LKN_ID) )		// la liaison peut etre coupée si kong passe en finished
//					LNK_InteractionParamSet(mid_attack_interaction_LKN_ID, C_INTER_FIGHT_ENEMY_FAKE_ATTACK )
//			}
//			SND_RequestPlay(Ci_SND_Cri_Attack_Loin)
//			i_paf_send = faux
//			f_interaction_timer = MATH_RandFloat(0.25, 1.5)
//		}
//		break
//		
//	case ACTION_BigBat_vs_Ann_attackD :
//	case ACTION_BigBat_vs_Ann_attackG :
//
////		if( LNK_InteractionParamGet(mid_attack_interaction_LKN_ID) == C_INTER_FIGHT_ENEMY_FAKE_ATTACK )
////		{
////			if( @get_global i_KAnn_fake_attack_index == Ci_KAnn_fake_attack_a_droite )
////				tv_offset = - 3.0 * @o_Jack OBJ_HorizonGet()
////			else
////				tv_offset = 3.0 * @o_Jack OBJ_HorizonGet()
////			to_head = ANI_CanalObjectGet(Anim_Canal_Tete)
////			DBG_RenderVector(@to_head OBJ_PosGet(), v_look_pos - @to_head OBJ_PosGet(), color_bleu)
////			v_look_pos += tv_offset
////			DBG_RenderVector(@to_head OBJ_PosGet(), v_look_pos - @to_head OBJ_PosGet(), color_rouge)
////		}
////		if( ! i_paf_sent && ANI_CurrentFrameGet(0) > 10 && LNK_InteractionParamGet(mid_attack_interaction_LKN_ID) == C_INTER_FIGHT_ENNEMY_ATTACK )
////		{
////			i_paf_sent = vrai
////			tv_sens_paf = - OBJ_SightGet()		// pour l'orientation de ANN
////			EVENT_AddEventPaf( C_EVENT_FILTER_Enemy, C_PAF_KK_KiTue, OBJ_Me(), Cf_EVENT_Duree_1Trame, o_Jack, 99, tv_sens_paf )
////		}
//		if (ACT_ActionFinished() )
//		{
//			ACT_ActionSet(ACTION_BigBat_vs_Ann_attente)
//			if( MSG_GlobalIsValid(mid_attack_interaction_LKN_ID) )		// la liaison peut etre coupée si kong passe en finished
//				LNK_InteractionParamSet(mid_attack_interaction_LKN_ID, C_INTER_FIGHT_WAIT_FOR_ANN )
//		}
//		break
//		
//	case ACTION_BigBat_vs_Ann_attackFace :
//		if( ! i_paf_send && ANI_CurrentFrameGet(0) > 10 && o_Jack )
//		{
//			i_paf_send = vrai
//			tv_sens_paf = - OBJ_SightGet()		// pour l'orientation de ANN
//			EVENT_AddEventPaf(C_EVENT_FILTER_Enemy, C_PAF_KK_KiTue, OBJ_Me(), Cf_EVENT_Duree_1Trame, o_Jack, 99, tv_sens_paf )
//			i_bigbat_killed_Ann = vrai
//		}
//		if (ACT_ActionFinished() )
//		{
//			ACT_ActionSet(ACTION_BigBat_vs_Ann_attente)
//			if( MSG_GlobalIsValid(mid_attack_interaction_LKN_ID) )		// la liaison peut etre coupée si kong passe en finished
//				LNK_InteractionParamSet(mid_attack_interaction_LKN_ID, C_INTER_FIGHT_WAIT_FOR_ANN )
//		}
//		break
//}
//
//