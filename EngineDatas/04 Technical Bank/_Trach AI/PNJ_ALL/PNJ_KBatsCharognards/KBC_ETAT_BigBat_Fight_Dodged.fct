#include "KBC_defines.var"

messageid	tmid_vision

object		to_head


// SORTIE ETAT ========================================================================
if (i_sort_etat)
{
	f_rotation_angle_courant = 0.0		// Rotation
//	AI_Execute("KBC_exec_dyn_on")
//	DYN_GravitySet(Cv_NormalGravity)
	f_bigbat_delai_no_attack = Cf_bigbat_delai_no_attack
	f_bigbat_delai_no_kamera = Cf_bigbat_delai_no_kamera

	// STEPH ADD	
	if ( i_charge_KK_dodge)
	{
		OBJ_CapaSet(none, CAPA_BigBat_attaque_en_cours)
		i_charge_KK_dodge = faux
	}
	// STEPH ADD
		
	i_sort_etat = faux
	return
}


// ENTREE ETAT =======================================================================
if (i_etat_courant != ETAT_BigBat_Fight_Dodged)
{
	i_etat_ancien_ancien = i_etat_ancien
	i_etat_ancien = i_etat_courant
	i_etat_courant = ETAT_BigBat_Fight_Dodged
	if (fct_last_etat)
	{
		i_sort_etat = vrai
		AI_Execute(fct_last_etat)
	}
	fct_last_etat = AI_TrackCurGet()
	f_time_start_etat = 0.0
	KBC_DBG_Trace(i_DBG_trace_etat, "etat bigbat fight dodged")
	
	DYN_Off()
	
	ACT_ActionSet(i_ACTION_Vol_Standard)
	KBC_ref_speed_set(0.0)
	KBC_action_frequency_set(1.0)
	
	v_fight_wait_pos = OBJ_PosGet()
}
else
{
	f_time_start_etat += TIME_GetDt()
}

// ANALYSE ==========================================================================================================
MACRO_CHECK_PAFS


// COMPORTEMENT ==========================================================================================
if( o_cible_attaque )
{
	// INTERET 
	if( EVENT_LIFE_CurLifeGet(ID_LIFE) > 0.0 )
		KBC_Interet_Update(mid_interet_attaque, C_EVENT_InteretStatusAttack, o_cible_attaque, tmid_vision)

	// REGARD -----------------------------------------------------------
	to_head = @o_cible_attaque ANI_CanalObjectGet(Anim_Canal_Tete)
	if( ! to_head )
		to_head = o_cible_attaque
	
	i_flag_neck = vrai
	v_look_pos = @to_head OBJ_PosGet()
}


// DELAI PAUSE ---------------------------------------------------
if( MATH_VecNullToler(v_vitesse_derapage, Cf_vitesse_derapage_null_toler) )
	f_paf_pause_time -= MATH_FloatMin(f_paf_pause_time, TIME_GetDt())


// FIN DE LA PAUSE --------------------------------------------
if( f_paf_pause_time <= 0.0 )
{
	if( i_etat_ancien == ETAT_Paf )
		AI_Execute("KBC_exec_init_attente")		// après un paf -> ronde (on a déjà repris de l'altitude)
	else
	{
		// après un dodge -> envol pour reprendre de l'altitude
		i_envol_palier = 0
		macro_change_etat("KBC_ETAT_Move_Decolle")
	}
}


// ORIENTATION --------------------------------------------------
AI_Execute("KBC_exec_MOVE_fight_wait")


// ACTION ? ------------------------------------------------------------
//if( ACT_ActionGet() == ACTION_Vol_Plonge_Freine && ACT_ActionFinished() )
//	ACT_ActionSet(ACTION_Falaise_Vol)
//


if( ! MATH_VecNullToler(v_vitesse_derapage, Cf_vitesse_derapage_null_toler) )
	ACT_ActionSet(ACTION_Falaise_Vol)
else
	ACT_ActionSet(i_ACTION_Vol_Standard)

