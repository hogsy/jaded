#include "KBC_defines.var"

messageid		tmid_vision


// SORTIE ETAT
if (i_sort_etat)
{
	i_flag_reseau_array = faux
	
	i_sort_etat = faux
	return
}


// ENTREE ETAT
if (i_etat_courant != ETAT_Move_Network)
{
	i_etat_ancien_ancien = i_etat_ancien
	i_etat_ancien = i_etat_courant
	i_etat_courant = ETAT_Move_Network
	if (fct_last_etat)
	{
		i_sort_etat = vrai
		AI_Execute(fct_last_etat)
	}
	fct_last_etat = AI_TrackCurGet()
	f_time_start_etat = 0.0
	KBC_DBG_Trace(i_DBG_trace_etat, "etat move network")
	
	if( i_big_bat )
		macro_change_etat("KBC_ETAT_Move_Ronde")		// la big bat suit le réseau d'attente
	
	// CALCUL DU RESEAU et du next_wp
	n_reseau = net_move
	i_flag_depl_fini = faux			// pour bien recalculer le réseau pour remonter (ne pas sauter un wp en optimisant)
	i_force_test_inclinaison = vrai
	
	i_flag_net_1st_calcul = vrai
	// i_mode_depl a été initialisé à l'appel du mode car le mode sert dans plusieurs cas (transport de charogne || retour au réseau)
	
	// Choix de la destination
	if( KBC_RetourneSePercher_EnCours() )
	{
		@o_tmp_obj_next OBJ_PosSet(v_pendu_init_pos)
		@o_tmp_obj_next OBJ_BankingGeneralSet(v_pendu_init_sight, v_pendu_init_banking)
		o_next_wp = o_tmp_obj_next
		o_cible_depl = o_next_wp
		i_reseau_wp_count = 0
		i_flag_reseau_array = faux
		i_flag_reseau_oneway = faux
//		i_flag_frein = vrai
		f_speed = 0.0
		f_ref_speed = 3.0
	}
	else 
	{
		i_flag_reseau_array = vrai

		if( i_etat_ancien != ETAT_Move_Decolle )
			o_cible_depl = KBC_Choix_Cible_Deplacement_Calme()				// wp cible de dépacement déjà calculé dans l'état décolle (regarde en décollant)
		
		AI_Execute("KBC_exec_network_pos_next")
	}
}
else
{
	f_time_start_etat += TIME_GetDt()
}

// ANALYSE ===========================================================================================
MACRO_CHECK_PAFS


if( o_big_bat_target )
	KBC_Interet_Update(mid_interet_attaque, C_EVENT_InteretStatusLock, o_big_bat_target, tmid_vision)

// Action et fréquence
if( KBC_select_action() )
	KBC_action_frequency_set(Cf_freq_standard)

// Suivi du regard
i_flag_neck = faux
if( ( i_reseau_wp_count >=2 ) && ao_reseau_wp[1] && ( MATH_VecDotProduct(OBJ_SightGet(), @ao_reseau_wp[1] OBJ_PosGet() - OBJ_PosGet()) >0 ) )
{
	i_flag_neck = vrai
	v_look_pos = @ao_reseau_wp[1] OBJ_PosGet()
}
else if( o_next_wp && ( OBJ_SqrDist(o_next_wp) > 25.0 ) )
{
	i_flag_neck = vrai
	v_look_pos = @o_next_wp OBJ_PosGet()
}

//==================== ANALYSE ======================

if( ! i_flag_cine )
{
	o_cadavre = KBC_Cadavre_Nearest(faux)
	if( o_cadavre && ! KBC_ModeCharognardKongTropProche() )	// anti loop
	{
		KBC_Cadavre_Nouveau_Select(o_cadavre)		// marqué comme "visité"
		KBC_Interet_Update(mid_interet_charogne, C_EVENT_InteretStatusFoodchainLocked, o_cadavre, tmid_vision)
		macro_change_etat("KBC_ETAT_Move_Cadavre")
	}
	
	if( ! MSG_GlobalIsValid(mid_grab_charogne) 
		&& KBC_Test_Attaque() 
		&& f_time_since_last_obstacle >= Cf_delai_since_last_obstacle_pour_attaque )
		AI_Execute("KBC_exec_init_attaque")
		
	if( ! MSG_GlobalIsValid(mid_grab_charogne) 
		&& ! JOUR_NUIT_HeureCorrecte(f_Heure_Debut, f_Heure_Fin) )
		AI_Execute("KBC_exec_init_attente")
}

// ======== DEPLACEMENT ==========

AI_Execute("KBC_exec_MOVE_beziers")

if( o_cible && MSG_GlobalIsValid( mid_grab_charogne ) )
{
	// la bat transporte une charogne
//	if( i_flag_depl_fini )
//	{
//		if( i_flag_cine )
//		{
//			// après un grab rapide, la bat remonte au réseau. Une fois le wp atteint, l'item ciné est validé.
//			i_flag_cine = faux
//			i_cine_close = vrai
//		}
//	}
//	else
//	{
//		macro_change_etat("KBC_ETAT_Move_Ronde")		// le bat suit le réseau d'attente
//	}
	
	// la bat transporte une charogne
	if( i_flag_depl_fini )
	{
		if( i_flag_cine )
		{
			// après un grab rapide, la bat remonte au réseau. Une fois le wp atteint, l'item ciné est validé.
			i_flag_cine = faux
			i_cine_close = vrai
		}
		else if( i_reseau_wp_count == 0 )
		{
			i_atterrissage_mode = Ci_atterrissage_nid_pause
			macro_change_etat("KBC_ETAT_Move_Atterrit")	
		}
	}
}
else
{
	if( ! i_reseau_wp_count && i_flag_depl_fini )
	{
		if( KBC_RetourneSePercher_EnCours() )
			macro_change_etat("KBC_ETAT_Wait_Perchee")		// retourne se pendre :)
		else
			macro_change_etat("KBC_ETAT_Move_Ronde")		// le bat suit le réseau d'attente
	}
}

// release prey ? --------------------------------------------------------------------------------------------------------------------------------------------------------
if( o_cible && @o_last_wp OBJ_CapaTest(CAPA_WP_Release_Grabbed_Actor) )
{
	o_cible = LNK_ServeurGet(Ci_LNK_GRAB_TRANSPORTE, mid_grab_charogne, faux, nofunc, nofunc)
	o_attack_interaction = LNK_ClientGet(Ci_LNK_INTERACTION, mid_attack_interaction_LKN_ID, faux, "KBC_exec_interaction_add_data", nofunc, "KBC_exec_interaction_init")
	f_release_grab_actor_keep_kamera = Cf_duree_just_release_keep_kamera
}
