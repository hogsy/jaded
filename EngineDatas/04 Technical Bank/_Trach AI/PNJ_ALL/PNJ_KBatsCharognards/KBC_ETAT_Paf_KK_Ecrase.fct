#include "KBC_defines.var"

// SORTIE ETAT
if (i_sort_etat)
{
	AI_Execute("KBC_exec_dyn_on")
	DYN_GravitySet(Cv_NullVector)
	DYN_FrictionVectorSet(Cv_Bat_friction)
	f_bigbat_delai_no_attack = Cf_bigbat_delai_no_attack
	f_bigbat_delai_no_kamera = Cf_bigbat_delai_no_kamera
	f_speed = 0.0
	i_paf_repousse_flag = faux

	i_sort_etat = faux
	return
}

// ENTREE ETAT
if (i_etat_courant != ETAT_Paf_KK_Ecrase )
{
	i_etat_ancien = i_etat_courant
	i_etat_courant = ETAT_Paf_KK_Ecrase
	if (fct_last_etat)
	{
		i_sort_etat = vrai
		AI_Execute(fct_last_etat)
	}
	fct_last_etat = AI_TrackCurGet()
	f_time_start_etat = 0.0
	KBC_DBG_Trace(i_DBG_trace_etat, "etat paf kk ecrase")
	
	AI_Execute("KBC_exec_dyn_on")
	DYN_GravitySet(Cv_NormalGravity * 4)
	DYN_FrictionVectorSet(Cv_Bat_friction_KK_ecrase)
	ACT_ActionSet(ACTION_Paf_KK_Ecrase)
//	ACT_ActionSet(ACTION_Paf_Air_Moyen)
	
	// BACKUP DIRECTION DU PAF POUR S'ORIENTER PENDANT LA CHUTE ========
	v_last_paf_sight = v_sum_pafs_dir
	v_last_paf_sight.z = 0.0
	if( ! MATH_VecNullEpsilon(v_last_paf_sight) )
		MATH_VecSetNormalize(v_last_paf_sight)
	DBG_RenderVector(OBJ_PosGet(), v_last_paf_sight * 10, color_vert)
	
	if( i_big_bat )
	{
		DBG_Error("Une K Big Bat en état Paf KK Ecrase ?????")
	}
	
	// CADAVRES
	o_cadavre = nobody
	
	KBC_Paf_BankingReset()
}
else
{
	f_time_start_etat += TIME_GetDt()
}

// ANALYSE ============================================================================

if( f_time_start_etat >= 5.0 )
{
	OBJ_Destroy()
}

// COMPORTEMENT =====================================================================

i_flag_neck = faux

if( ! ACT_ActionIsTransition() && ACT_ActionFinished() && COL_CollideType(COL_C_Ground) )
	macro_change_etat("KBC_ETAT_Sol_Agonie")

//if( ! ACT_ActionIsTransition() && ACT_ActionFinished() )
//	macro_change_etat("KBC_ETAT_Chute_Libre")
//	
//OBJ_BankingGeneralSet(
//	MATH_VecBlendRotate(OBJ_SightGet(), - v_last_paf_sight, 5 * TIME_GetDt()), KBC_Paf_BankingGet())
//
//