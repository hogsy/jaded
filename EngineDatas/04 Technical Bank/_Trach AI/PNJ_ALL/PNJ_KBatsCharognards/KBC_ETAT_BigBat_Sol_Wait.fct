#include "KBC_defines.var"

vector			tv_sens_paf

messageid		tmid_vision


// SORTIE ETAT
if (i_sort_etat)
{
	f_cible_poids = 0.0
	f_speed = 0.0		// bat à l'arrêt
	i_mange_mode = 0
	i_flag_neck = vrai	
	i_sort_etat = faux
	return
}

// ENTREE ETAT
if (i_etat_courant != ETAT_Sol_Interaction_Ann)
{
	i_etat_ancien_ancien = i_etat_ancien
	i_etat_ancien = i_etat_courant
	i_etat_courant = ETAT_Sol_Interaction_Ann
	if (fct_last_etat)
	{
		i_sort_etat = vrai
		AI_Execute(fct_last_etat)
	}
	fct_last_etat = AI_TrackCurGet()
	f_time_start_etat = 0.0
	KBC_DBG_Trace(i_DBG_trace_etat, "etat big bat sol wait")
	
	f_time_action = TIME_Get()			// init durée manger (pour goûter avant de décider s'il s'envole avec ou pas)

	ACT_ActionSet(ACTION_BigBat_vs_Ann_attente)
	
	DYN_Off()		// pour ne pas glisser
	f_interaction_timer = MATH_RandFloat(0.5,1.5)
}
else
{
	f_time_start_etat += TIME_GetDt()
}


// DECOLLER ---------------------------------------------------------------

if( OBJ_CapaTest(CAPA_Release_Grabbed_Actor) )
{
	KBC_DBG_Trace_Float(i_DBG_trace_etat, " a reçu la capa 4 (release), time = ", TIME_Get())
	i_flag_do_not_reset_attaque_values = vrai
	AI_Execute("KBC_exec_init_attente")		// abracadabra
}


// Décolle avec Ann grâce à la capa ----------------------------------------------
if( OBJ_CapaTest(CAPA_Decolle) )
{
	KBC_DBG_Trace_Float(i_DBG_trace_etat, " a reçu la capa 0 (décolle), time = ", TIME_Get())
	OBJ_CapaSet(none, CAPA_Decolle)
	i_envol_palier = 2
	macro_change_etat("KBC_ETAT_Move_Decolle")
}


// regard
i_flag_neck = faux

// interet
if( o_cible )
	KBC_Interet_Update(mid_interet_charogne, C_EVENT_InteretStatusAttack, o_cible, tmid_vision)

