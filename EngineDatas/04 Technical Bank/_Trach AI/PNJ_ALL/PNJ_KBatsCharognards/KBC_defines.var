//--------------------------------------------------------------------------------------------------------
// Capa de la bat
//--------------------------------------------------------------------------------------------------------
#define	CAPA_Decolle									OBJ_Capa_0			// decole du nid si a vrai (ou n'atterit pas si pas encore atterit)
#define	CAPA_BigBat_Attente_Finish				OBJ_Capa_1			// capa qui dit que la big bat attend d'etre terminée
#define	CAPA_Rotation									OBJ_Capa_2			// capa event
#define	CAPA_BigBat_Attaque_Mashing			OBJ_Capa_3			// capa qui dit que la big bat a été teleportée pour attaquer Kong qui est parti faire un mashing, le salop :)
#define	CAPA_Release_Grabbed_Actor				OBJ_Capa_4			// fait la cher la proie immédiatement
#define	CAPA_Ignore_Pafs								OBJ_Capa_5
#define	CAPA_BigBat_attaque_possible				OBJ_Capa_6			// la big bat est en train de faire une attaque
#define	CAPA_BigBat_attaque_en_cours			OBJ_Capa_7			// la big bat est en train de faire une attaque
#define	CAPA_waits_for_KONG						OBJ_Capa_8			// pour moduler la vitesse de la bat en fonction de sa distance à KONG
#define	CAPA_Dead_on_Ground						OBJ_Capa_9			// la bat a 0 hp
#define	CAPA_Attaque_Ratee							OBJ_Capa_10			// si la capa est à vrai, la bat rate toutes ses attaques (grab et paf)
#define	CAPA_BigBat_Kamera							OBJ_Capa_11
#define	CAPA_CINE_Annulee							OBJ_Capa_12			// ciné action annulée
#define	CAPA_CINE_Terminee							OBJ_Capa_13			// ciné action terminée
#define	CAPA_BigBat_Finished_CrashDown		OBJ_Capa_14			// la big bat se fait écraser au sol pendant le finish
#define	CAPA_Dead										OBJ_Capa_15			// la bat est morte et au sol
//--------------------------------------------------------------------------------------------------------
// Capas des wp du réseau de ronde (net_idle)
//--------------------------------------------------------------------------------------------------------
//			(dispo)												OBJ_Capa_0
//			(dispo)												OBJ_Capa_1
//			(dispo)												OBJ_Capa_2
#define	CAPA_WP_pause								OBJ_Capa_3			// fait atterrir la bat sur le wp (au sol !!!)
#define	CAPA_WP_Release_Grabbed_Actor		OBJ_Capa_4			// fait la cher la proie une fois le wp atteint
#define	CAPA_WP_Vitesse_Nulle						OBJ_Capa_5			// tant que le prochain wp a cette capa, la vitesse de la bat tombe à 0.0
//			(dispo)												OBJ_Capa_6
//			(dispo)												OBJ_Capa_7
//			(dispo)												OBJ_Capa_8
#define	CAPA_WP_net_ronde_init_sight			OBJ_Capa_9			// interne, pour indiquer que le sight a été initialisé
#define	CAPA_WP_ride_walling_attaque_pique	OBJ_Capa_10			// jusqu'au wp, anim plongeon + test paf
#define	CAPA_WP_ride_walling_remonte			OBJ_Capa_11			// jusqu'au wp, anim remonte frénétique + test paf
#define	CAPA_WP_BigBat_Do_Not_Attack		OBJ_Capa_12			// la big bat informe le manager qu'elle ne peut pas recevoir de msg d'attaque
#define	CAPA_WP_no_kamera_capa				OBJ_Capa_13			// la big bat ne demande pas la caméra (capa 11)
#define	CAPA_WP_depart_apres_mashing			OBJ_Capa_14
#define	CAPA_WP_destroy_bat						OBJ_Capa_15			// destroy une fois le wp atteint
//--------------------------------------------------------------------------------------------------------
// Capas des wp du réseau de déplacement (net_move)
//--------------------------------------------------------------------------------------------------------
#define	CAPA_WP_deplacement						OBJ_Capa_0
#define	CAPA_WP_point_d_attaque					OBJ_Capa_1
#define	CAPA_WP_mange_charogne				OBJ_Capa_2
//			(dispo)												OBJ_Capa_3
//			(dispo)												OBJ_Capa_4
//#define	CAPA_WP_Vitesse_Nulle	(cf net_idle)		OBJ_Capa_5
//			(dispo)												OBJ_Capa_6
//			(dispo)												OBJ_Capa_7
#define	CAPA_WP_point_reserve						OBJ_Capa_8
//			(dispo)												OBJ_Capa_9
//			(dispo)												OBJ_Capa_10
//			(dispo)												OBJ_Capa_11
//			(dispo)												OBJ_Capa_12
//			(dispo)												OBJ_Capa_13
#define	CAPA_WP_JourNuit								OBJ_Capa_14
//			(dispo)												OBJ_Capa_15



#define	Cf_duree_just_release_keep_kamera		2.0

// ANIM CBITS
#define	CBit_GrabbedKK_Anim_Speciale		0b01000000
#define	CBit_Big_Bat_Offset_a_compenser		0b10000000

#define	Cf_bigbat_delai_no_attack					0.0		// 6.0
#define	Cf_bigbat_delai_no_kamera				0.0		// 3.0

#define	Cf_vitesse_derapage_null_toler		 0.3

#define	Ci_wp_pause_nb					20

// CADAVRES
#define	Ci_cadavre_mode_deplacement			1
#define	Ci_cadavre_mode_observe					2


#define	Cf_dist_detect_budies						15.0

// FIRE
#define	Cf_fire_danger_dist							3.0

#define	Cf_atterrissage_decal_H		4.0
#define	Cf_atterrissage_decal_Z		4.0		// 6.0


#define	Cf_BigBat_AntiMashingLifePoints		10.0

// bat grise / noire
#define	Cf_delai_attaque_apres_bat_noire		2.0

// SOFT COLL
#define	Cf_softcol_rayon_en_vol			2.0
#define	Cf_softcol_rayon_contact			1.5	// 2.5
#define	Cf_soft_coll_norm_max				0.5

// béziers
#define	Cf_beziers_pourcent_courbe_standard				0.33
#define	Cf_beziers_pourcent_courbe_atterrissage		0.5

// obstacle
#define	Cf_delai_since_last_obstacle_pour_attaque		1.0

// attente avant attaque
#define	Ci_fight_wait_begin_camera											1
#define	Ci_fight_wait_begin_desynchro										2
#define	Ci_fight_wait_begin_orientation_and_time_plongeon			3



// postionnement de l'attaque
#define	Ci_attaque_positionnement_retrait_initial				1
#define	Ci_attaque_positionnement_retrait						2
#define	Ci_attaque_positionnement_paffe						3
#define	Ci_attaque_positionnement_attack_en_cours		4
#define	Ci_attaque_positionnement_poursuit					5

// ZDE FIGHT
#define	Cv_zde_fight_size_normal		cvector(1.5, 1.5, 1.5)
//#define	Cv_zde_fight_size_big_bat		cvector(1.25, 1.25, 1.25)
#define	Cv_zde_fight_size_big_bat		cvector(1.75, 1.75, 1.75)
#define	Cv_zde_fight_size_big_bat_anti_mashing_or_climbing	cvector(2.5, 2.5, 2.5)

// attaque
#define	Ci_attaque_by_paf_actor			1
#define	Ci_attaque_by_trigger				2

// rotation
#define	Cf_angle_rotation_max_default		10.0
#define	Cf_angle_rotation_max_contact		8.0

// soft collision
#define	Ci_soft_collision_step					0.1

// etat initial
#define	Ci_etat_init_vol_ronde					0
#define	Ci_etat_init_perchee						1
#define	Ci_etat_init_KamAttack				2
#define	Ci_etat_init_cachee						3
#define	Ci_etat_init_follower						4
#define	Ci_etat_init_track_test					5
#define	Ci_etat_init_waiting_for_finish			6
#define	Ci_etat_init_spawn_finish_IA			7
#define	Ci_etat_init_spawn_finish_LD			8


// bat perchee retour
#define	Ci_bat_perchee_retour_vol_ronde		0
#define	Ci_bat_perchee_retour_se_percher		1

// Attaque falaise
#define	Cf_falaise_dist_stoppe_poursuite		30.0			// distance max de déplacement de la cible pour annuler la poursuite
#define	Cf_falaise_duree_poursuite				30.0			// durée max de poursuite au ras du sol
#define	Cf_falaise_delai_attaque					3.0			// durée entre la fin d'une attaque et le début de la prochaine

// chute wp
#define		Ci_chute_bats_mode_verticale_du_wp				1
#define		Ci_chute_bats_mode_sur_le_wp						2

// Caméra
#define	Cf_duree_min_dans_champ		0.5
#define	Cf_duree_wait_hors_champ		3.0

// Durée d'attente avant attaque
#define	Cf_time_wait_attaque_min			0.0
#define	Cf_time_wait_attaque_max		0.0

// Vitesses de Vol
#define	Cf_speed_vol						6.0
#define	Cf_speed_grab					4.0
#define	Cf_speed_observe				4.0
#define	Cf_speed_atterrit					4.0

#define	Cf_speed_decolle					5.0	// 10.0		// 5.0

#define	Cf_speed_move_ronde			5.0
#define	Cf_speed_move_network		5.0
#define	Cf_speed_fight_network		6.0		// 7.0
#define	Cf_speed_fight_approche		12.0
#define	Cf_speed_fight_contact			3.0
#define	Cf_speed_demi_tour				6.0
#define	Cf_speed_obstacle				5.0
#define	Cf_speed_chute_wp				12.0
#define	Cf_speed_CINE_vala_standard		4.0
#define	Cf_speed_CINE_vala_rapide			8.0
#define	Cf_speed_apparition_dans_trou		4.0
#define	Cf_speed_retourne_pendu		2.0
#define	Cf_speed_batR_hors_champ	12.5
//---------------
#define	Cf_coef_blend_speed_def		5.0


// Fréquences d'anim
#define	Cf_freq_standard						1.0
#define	Cf_freq_attaque_depl_reseau		1.0
#define	Cf_freq_sur_place					1.0
#define	Cf_freq_obstacle						1.0
#define	Cf_freq_decolle_lent					1.0
#define	Cf_freq_decolle_rapide				1.0
#define	Cf_freq_CINE_vala_standard		1.0
#define	Cf_freq_CINE_vala_rapide			1.0
#define	Cf_freq_CINE_wait					1.0

// Détection des obstacles
#define	Cf_dist_obstacle_vol				4.0			// dist max pour le test des obstacles avec le lancer de rayon
#define	Cf_dist_obstacle_falaise		2.0			// dist max pour le test des obstacles avec le lancer de rayon

// SOUND
#define	Ci_SND_Ecrasement				3
#define	Ci_SND_Cri_Presence				5
#define	Ci_SND_Cri_Attack_Loin			6				// plonge
#define	Ci_SND_Cri_Grabbed				6
#define	Ci_SND_Decolle						7
#define	Ci_SND_Paf_Petit					7
#define	Ci_SND_Paf_Gros					7
#define	Ci_SND_Cri_BigBat_Plongeon	9				// plonge
#define	Ci_SND_Envoie_Paf					10				// l'attaque coup de griffe paffe
#define	Ci_SND_Ride1						10
#define	Ci_SND_Cri_Mort						11
#define	Ci_SND_Big_Bat_Dodge_Now	12
#define	Ci_SND_Cri_Attack_Griffe			14				// lance l'attaque coup de griffe
#define	Ci_SND_Ride2						14
#define	Ci_SND_Parachute					15				// transition plonge -> vole en rase mott
#define	Ci_SND_Paf_Kong_Hit				18
#define	Ci_SND_Splash						19				// je tombe dans l'eau


// ZDM
#define	Cv_ZDM_Sol					cvector(0.7,0.7,0.7)	// cvector(1.0, 1.0, 1.0)
#define	Cv_ZDM_Air					cvector(0.75, 0.75, 0.75)
#define	Cv_ZDM_Contact				cvector(1.25, 1.25, 1.25)
#define	Cv_ZDM_Trans_Sol_Air		cvector(0.5, 0.5, 0.5)

// sous-modes d'atterrissage
#define	Ci_atterrissage_sur_charogne		1
#define	Ci_atterrissage_nid_pause				2
//#define	Ci_atterrissage_nid_charogne		3

// PAUSE
#define	Ci_pause_mode_aucun					0			// le next wp n'est pas un wp de pause
#define	Ci_pause_mode_on_y_va				1			// le next wp est un wp de pause, je me dirige vers lui
#define	Ci_pause_mode_atterrissage			2			// le next wp est un wp de pause, j'atterris dessus
#define	Ci_pause_mode_au_sol				3			// le next wp est un wp de pause, je suis posé dessus
#define	Ci_pause_mode_envol					4			// le next wp est un wp de pause, je me renvole

// TRACK
#define	Ci_Track_TagOff										00
#define	Ci_Track_Reflex										01
#define	Ci_Track_Etat											02
#define	Ci_Track_TagOn										03

// TAG
#define	Cv_Tag_Min 					cvector(-0.5, -1.0, 0.0)
#define	Cv_Tag_Max 					cvector(0.5, 1.0, 0.0)

// Distances
#define	Cf_distance_check_predateurs			10.0			// distance autour d'une charogne à laquelle la bat détecte les acteurs avant de se poser
#define	Cf_rayon_olfactif								100.0			// dist^2 à laquelle le bat peut sentir du sang
#define	Cf_rayon_corps_bat							1.5			// rayon de l'envergure du bat (event vision, zde corps)
#define	Cf_rayon_corps_big_bat_attack			1.0			// rayon de l'envergure du bat (event vision, zde corps)
#define	Cf_portee_bruit_chute						50.0			// portée du bruit généré par la bat en tombant

// Durées
#define	Cf_observ_trace					1.0	// durée pendant laquelle le bat patiente une fois arrivé à la trace de sang et qu'il ne voit rien.
#define	Cf_observ_charogne				1.0	// durée pendant laquelle le bat observe la charogne avant de se poser dessus
#define	Cf_duree_rampe					5.0	// durée pendant laquelle le bat rampe au sol après un paf avant de tenter de redécoller
#define	Cf_freq_check_sang				0.5	// fréquence de test des odeurs de sang
#define	Cf_memoire_attaque				10.0	// durée de la mémoire du bat (pour attaquer)
#define	Cf_delai_attaque_sol			5.0	// fréquence à laquelle le bat peut lancer des attaques au sol
#define	Cf_delai_lance_attaque			5.0	// délai entre le moment ou la bat est revenue après avoir attaqué et le moment ou elle va choisir une nouvelle cible à attaquer
#define	Cf_freq_check_attaque			2.0	// fréquence de check de cible à attaquer
#define	Cf_delai_paf						2.0	// délai entre 2 pafs
#define	Cf_delai_sang_no_check		15.0	// durée pendant laquelle la bat ne s'intéresse plus du tout aux odeurs de sang
#define	Cf_delai_sang_check_dead	45.0	// durée pendant laquelle la bat s'intéresse uniquement aux cadavres et plus aux blessés
#define	Cf_duree_agonie					5.0	//  durée pendant laquelle la bat agonise avant de mourir automatiquement si personne ne vient l'achever
#define	Cf_duree_mort						5.0	// 0.0	//	1.0	//  durée pendant laquelle le cadavre de la bat reste sur la map avant d'être détruit
#define	Cf_delai_paf_mange				2.0	// délai entre 2 pafs mange

// Attaques
#define	Ci_dmg_attaque_air				10.0
#define	Ci_dmg_attaque_ride			20.0

// Mode d'attaque
#define	Ci_attack_mode_aucun				0		// mode d'attaque pas encore défini
#define	Ci_attack_mode_paf					1		// la bat attaque pour paffer
#define	Ci_attack_mode_grab				2		// la bat attaque pour grabber la cible


// Pafs
#define	Ci_big_paf							5			// dégats min pour considérer que c'est un gros paf
#define	Cf_v_big_paf_null_blend 		8.0		// coef de blend du vecteur de recul vers le vecteur nul pour un gros paf
#define	Cf_v_petit_paf_null_blend 		8.0		// coef de blend du vecteur de recul vers le vecteur nul pour un petit paf

// Dyna
#define  	Cf_Bat_friction						5.0
#define 	Cv_Bat_friction					cvector(Cf_Bat_friction, Cf_Bat_friction, 3.0)
#define 	Cv_Bat_friction_KK_ecrase	cvector(8.0, 8.0, 0.0)
#define 	Cf_Bat_throw_friction			1.5
#define 	Cv_Bat_throw_friction			cvector(Cf_Bat_throw_friction, Cf_Bat_throw_friction, 0.0)

// Suivi du regard
#define	Ci_head_bones_count		3

// Balancier
#define	Cf_bras_de_levier				3.0		// longueur du bras de levier

// Contournement d'obstacle
#define	Cf_decalage_wall				0.05		// décalage de l'axe du mur (pour toujours avancer "dans" le mur)


// Deplacement par reseau
#define	Ci_mode_depl_attente						1
#define	Ci_mode_depl_attaque						2
#define	Ci_mode_depl_charogne_transport		5
#define	Ci_mode_depl_cadavre						6
#define	Ci_mode_depl_jour_nuit					7

// Manger
#define	Ci_mange_gouter_charogne				1
#define	Ci_mange_interaction_Ann				2

// Intérêt pour une proie
#define	Cf_interet_proie_grab						300

// Paliers pour s'envoler
#define	Ci_envol_palier_nb							2
#define	Ci_envol_palier_1st							1.0
#define	Ci_envol_palier_autre						0.5
#define	Cf_envol_wait_length						1.0

// Mode de projectile
#define	Ci_projectile_lache						1
#define	Ci_projectile_lance_unknown			2
#define	Ci_projectile_lance_target				3
#define	Ci_projectile_lance_aveugle			4
#define	Ci_projectile_lance_finish_echec	5

#define	Cf_dist_aide_tir_min			10
#define	Cf_dist_aide_tir_max		50

#define 	Cv_Bat_throw_gravity	cvector(0.0,0.0,-40.0)



// RIDE CONSTANTES
#define	Ci_ride_grab_ann							1		// (init) va grabber ann
#define	Ci_ride_grab_sur_kong_init_jump	2		// calcul de la destination du saut (après avoir grabbé et jeté ann)
#define	Ci_ride_paf_kong							3		// (init) va paffer kong
#define	Ci_ride_paf_kong_done					4		// calcul de la destination du saut (après avoir paffé kong)
#define	Ci_ride_orientation_jump				5		// orientation avant le saut
#define	Ci_ride_grab_sur_kong_done			6		// orientation vers destination du saut ok, début de la séquence de saut
#define	Ci_ride_grab_impulsion					7		// impulsion pour sauter
#define	Ci_ride_grab_descend					8		// saut en cours
#define	Ci_ride_grab_au_sol						9		// saut terminé
#define	Ci_ride_finish_fake						10		// fake de finish (c'est une autre bat qui fait le challenge)

#define	Cf_ride_duration							5.0
#define	Ci_ride_paf_delay							2.5    // intervale de temps entre chaque paf lorsqu'en ride
#define   Cf_delay_before_finish                   3.0   // intervale de temps entre un ride a 2 bats et leur finish

#define	Ci_FinishAttack_OFF							0			// not in finish attack
#define	Ci_FinishAttack_WaitForAllRiders			1			// waiting for other riders to arrive (land)
#define	Ci_FinishAttack_WaitForLink					2			// waiting for the finish link to be ok with kong
#define	Ci_FinishAttack_Finishing						3			// waiting for other riders to arrive (land)

#define		Cf_FORCE_KONG		0.2//3.0
#define		Cf_FORCE_RAPTS		0.5//2.0

#define		Cf_FRAME_RAPTS_WIN		20
#define		Cf_FRAME_KONG_WIN		80


// Where is Ann ?
#define	Ci_AnnLocation_OnGround					0
#define	Ci_AnnLocation_KongShoulder				1
#define	Ci_AnnLocation_KongHand					2

// Attack configuration
#define	Ci_LD_attack_config_grab						0
#define	Ci_LD_attack_config_paf						1
#define	Ci_LD_attack_config_1_bat_sur_2			2


// ETATS ===================================================================
// Attentes & Déplacement
#define	ETAT_Move_Ronde						1
#define	ETAT_Wait_Perche						2
#define	ETAT_Wait_Grotte						3
#define	ETAT_Move_Network					4
#define	ETAT_Mange								5
#define	ETAT_Move_Decolle						6
#define	ETAT_Move_Atterrit						7
#define	ETAT_Move_Cadavre					8
//#define	ETAT_Sol_Interaction_Ann			9
#define	ETAT_Wait_JourNuit					90
#define	ETAT_Move_JourNuit					91
// Paf et Mort
#define	ETAT_Paf									10
#define	ETAT_Paf_KK_Ecrase					11
#define	ETAT_Chute_Libre						12
#define	ETAT_Chute_WP							122
#define	ETAT_Sol_Ecrasement					13
#define	ETAT_Mort									14
#define	ETAT_Fade								15
#define	ETAT_Agonie								16
// Combat
#define	ETAT_Fight_Network					17
#define	ETAT_Fight_Approche					18
#define	ETAT_Fight_Contact					19
#define	ETAT_Fight_Wait_Begin				20
#define	ETAT_Fight_Pause						21
#define	ETAT_Fight_Wait_Prio					22
//#define	ETAT_Fight_Pique_Remonte			23
//#define	ETAT_Fight_Poursuit					24
#define	ETAT_Fight_Follower					25
// Fight BigBat
#define	ETAT_BigBat_Fight_Plonge			100
#define	ETAT_BigBat_Fight_Poursuit			101
#define	ETAT_BigBat_Fight_Repart			102
#define	ETAT_BigBat_Fight_Griffe				103
#define	ETAT_BigBat_Fight_Dodged			104
//#define	ETAT_BigBat_Fight_Plonge			100
#define	ETAT_Sol_Interaction_Ann			105

// Cine
#define	ETAT_CINE_Wait						26
#define	ETAT_CINE_Wait_Default				27
#define	ETAT_CINE_Vala							28
#define	ETAT_CINE_Attaque					29
#define	ETAT_CINE_temp						30
#define	ETAT_CINE_Force_Etat				31
// KK
#define	ETAT_KK_Grabbed_by_Kong						32
#define 	ETAT_KK_Projectile						33
#define 	ETAT_KK_Ride							34
#define	ETAT_KK_Finish							35
#define	ETAT_KK_Finished						36
// Autre
#define	ETAT_TEST								37

#define	ETAT_Grabbed_Predateur				38


// ACTIONS ===================================================================
#define	ACTION_Vol_cycle						0
#define	ACTION_Vol_Plane						1
#define	ACTION_Vol_Proie						2
#define	ACTION_Vol_Blesse					3
#define	ACTION_Vol_Vrille						4
#define	ACTION_Vol_Atterrissage_deb		5
#define	ACTION_Vol_Atterrissage_fin			6
#define	ACTION_Paf_Air_Moyen				10
#define	ACTION_Ecrase							12
#define	ACTION_Mort								15

#define	ACTION_Perchee_Attente				20
#define	ACTION_Perchee_Panic				21
#define	ACTION_Perchee_Panic_var			22
#define	ACTION_Mange							25
#define	ACTION_Mange_Attente				26

#define	ACTION_Vol_Plonge_Freine			30
#define	ACTION_Falaise_Vol					31
#define	ACTION_Falaise_Attaque				32
#define	ACTION_Grabbed_Mort_Bouge		36
#define	ACTION_Grabbed_Vivant				37
#define	ACTION_Grabbed_Projectile			39
#define	ACTION_Grabbed_Mort_Fixe			40
#define	ACTION_Paf_Mur							41
#define	ACTION_Paf_Mur_TR_Vol_Vrille		42
#define	ACTION_Paf_KK_Ecrase				43
#define	ACTION_Paf_KK_Ecrase_Mort		44
#define	ACTION_Ride_Kong						47
#define	ACTION_Ride_Attack					49
#define	ACTION_Ride_Frenetic					50
#define	ACTION_Tombe_au_sol_sur_le_dos			53
#define	ACTION_Mort_sur_le_dos							54
// FINISHED
#define	ACTION_Paf_Tombe_Sol_Dos_tr_Agonie		55
#define	ACTION_Agonie_Avant_Finished				56
#define	ACTION_Finished_SePositionne					57
#define	ACTION_Finished_Challenge						58
#define	ACTION_Finished_KKWins						59
#define	ACTION_Finished_KKLoses						60
#define	ACTION_Finished_Mort								61

// FINISH SUR KONG : Main G
#define	ACTION_I_Finish_MainG_Deb					64
#define	ACTION_I_Finish_MainG_Challenge			65
#define	ACTION_I_Finish_MainG_KK_Loses			66

// FINISH SUR KONG : AvantBras G
#define	ACTION_I_Finish_AvantBrasG_Deb			69
#define	ACTION_I_Finish_AvantBrasG_Challenge	70
#define	ACTION_I_Finish_AvantBrasG_KK_Loses	71

// FINISH SUR KONG : Cuisse D
#define	ACTION_I_Finish_CuisseD_Deb					84
#define	ACTION_I_Finish_CuisseD_Challenge			85
#define	ACTION_I_Finish_CuisseD_KK_Loses		86

// INTERACTION BIG BAT / KANN
#define	ACTION_BigBat_vs_Ann_attente				90
#define	ACTION_BigBat_vs_Ann_attackD				91
#define	ACTION_BigBat_vs_Ann_attackG				92
#define	ACTION_BigBat_vs_Ann_attackFace			93


// MACROS ===========================================================

#define macro_change_etat(etat)	\
{	\
	if (AI_TrackCurGetNum() == Ci_Track_Etat)	\
		AI_TrackCurChangeNow(etat)	\
	else	\
		AI_TrackChange(Ci_Track_Etat, etat)	\
}

#define MACRO_CHECK_PAFS	\
AI_Execute("KBC_exec_check_paf")	\
if( i_paf_change_etat_flag )	\
{	\
	i_paf_change_etat_flag = faux		// remettre à faux pour éviter 2 checks pafs valides dans la même trame ! \
	if( i_etat_courant == ETAT_Paf )		\
		i_etat_courant = -1	// refaire l'init	\
	if( i_etat_courant == ETAT_KK_Finish )	\
	{	\
		DBG_TraceString("============================ paf lors d'un finish !!!")	\
		if( i_I_finish_leader )		\
			DBG_TraceString(" (leader !!!!)")	\
		DBG_TraceEOL()		\
	}	\
	macro_change_etat("KBC_ETAT_Paf")	\
}	//\
//else if( o_best_paf_pere_enabled && i_etat_courant != ETAT_Paf && EVENT_LIFE_CurLifeGet(ID_LIFE) )	\
//{	\
//	macro_change_etat("KBC_exec_init_attente")	// pour targetter mon paf actor ensuite 	\
//}



// BONES CANAUX IA SPECIFIC BAT
#define 	BAT_Canal_Torse			3
#define 	BAT_Canal_Ventre			4
#define	BAT_Canal_BrasGauche	41
#define	BAT_Canal_BrasDroit		21
#define	BAT_Canal_AileDroite		20
#define	BAT_Canal_AileGauche	40

// Type du trigger d'attaque
#define	Ci_trig_attaque_type_GAO5			0
#define	Ci_trig_attaque_type_specifique		1
#define	Ci_trig_attaque_type_joueur			2

// MAX NB
#define	Ci_budy_nb_max					40
#define	Ci_cadavre_max_nb				20
#define	Ci_blind_zone_max_nb			3
#define	Ci_ignore_target_max_nb		3
#define	Ci_spawned_max_nb			10
#define	Ci_javelin_max_nb				10
#define	Ci_paf_cumul_max				10
#define	Ci_max_wall						40
#define	Ci_max_reseau_wp				100
#define	Ci_trigexec_max_nb				3

