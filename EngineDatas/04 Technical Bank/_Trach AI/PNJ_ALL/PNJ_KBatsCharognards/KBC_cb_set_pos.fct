#include "KBC_defines.var"

object	to_bone
object	to_bassin 
object	to_serveur

vector	tv_pos
vector	tv_new_sight
vector	tv_new_banking
vector	tv_temp 
vector	tv_grab_foot_pos
vector	tv_sight
vector	tv_banking

float		tf_coef


//Cf_PiBy2 = 1.57
//Cf_PiBy4 = 0.75
//Cf_PiBy8 = 0.39
//PiBy16 = 0.19



// Accroché a Kong apres une attaque
if (MSG_GlobalIsValid(mid_bone_ride_KK_LNK_ID) && o_bone_ride_KK)
{
	f_pos_blend_coef_ride += MATH_FloatMin(1.0 - f_pos_blend_coef_ride, TIME_GetDt())

	//to_bone = @o_Kong ANI_CanalObjectGet(Anim_Canal_Torse)
	to_bone = LNK_GrabBoneGet(mid_bone_ride_KK_LNK_ID)
	
	// CALCUL DE L'ORIENTATION ET DE LA POSITION SELON LE BONE DE RIDE
	if( ! to_bone )
	{
		DBG_Error("KBC set pos : pas de bone dans la liaison de ride !!!")
	}
	else if( to_bone == @o_Kong ANI_CanalObjectGet(Anim_Canal_EpauleGauche) )
	{
		// Bat pas synchro, anim frénétique
		tv_new_sight = @to_bone MATH_VecLocalToGlobal(cvector(-1,0,0))
		tv_new_banking = @to_bone MATH_VecLocalToGlobal(cvector(0,1,0))
		tv_pos = @to_bone OBJ_PosGet() + @to_bone MATH_VecLocalToGlobal(cvector(0,1,1))
//		DBG_RenderVector(tv_pos, tv_new_sight * 5, color_vert)
//		DBG_RenderVector(tv_pos, tv_new_banking * 5, color_bleu)
	}
	else if( to_bone == @o_Kong ANI_CanalObjectGet(Anim_Canal_EpauleDroite) )
	{
		// Bat pas synchro, anim frénétique
		tv_new_sight = @to_bone MATH_VecLocalToGlobal(cvector(1,0,0))
		tv_new_banking = @to_bone MATH_VecLocalToGlobal(cvector(0,1,0))
		tv_pos = @to_bone OBJ_PosGet() + @to_bone MATH_VecLocalToGlobal(cvector(0,1,1))
//		DBG_RenderVector(tv_pos, tv_new_sight * 5, color_vert)
//		DBG_RenderVector(tv_pos, tv_new_banking * 5, color_bleu)
	}
	else if( to_bone == @o_Kong ANI_CanalObjectGet(Anim_Canal_BrasGauche) )		// OK
	{
		tv_new_sight = @to_bone MATH_VecLocalToGlobal(cvector(0,-1,0))
		tv_new_banking = @to_bone MATH_VecLocalToGlobal(cvector(-1,0,-1))
		tv_pos = @to_bone OBJ_PosGet() + @to_bone MATH_VecLocalToGlobal(cvector(0, 0, -0.5))
	}
	else if( to_bone == @o_Kong ANI_CanalObjectGet(Anim_Canal_BrasDroit) )			// OK
	{
		tv_new_sight = @to_bone MATH_VecLocalToGlobal(cvector(0,-1,0))
		tv_new_banking = @to_bone MATH_VecLocalToGlobal(cvector(0,0,-1))
		tv_pos = @to_bone OBJ_PosGet() + @to_bone MATH_VecLocalToGlobal(cvector(0, 0, -0.5))
	}
	else if( to_bone == @o_Kong ANI_CanalObjectGet(Anim_Canal_Bassin) )				// OK
	{
		tv_new_sight = @to_bone MATH_VecLocalToGlobal(cvector(-1,0,0))
//		DBG_RenderVector(OBJ_PosGet(), tv_new_sight * 5, color_blanc)
		tv_new_sight = MATH_VecRotate(tv_new_sight, @to_bone MATH_VecLocalToGlobal(cvector(0,1,0)), Cf_PiBy4)
		tv_new_banking = @to_bone MATH_VecLocalToGlobal(cvector(0,1,0))
		tv_pos = @to_bone OBJ_PosGet() + @to_bone MATH_VecLocalToGlobal(cvector(0,0.5,0.5))
	}
	else if( to_bone == @o_Kong ANI_CanalObjectGet(Anim_Canal_Torse) )		// OK
	{
		tv_new_sight = - @to_bone MATH_VecLocalToGlobal(cvector(-1,0,0))
		tv_new_banking = @to_bone MATH_VecLocalToGlobal(cvector(0,1,0))
		tv_pos = @to_bone OBJ_PosGet() + @to_bone MATH_VecLocalToGlobal(cvector(-1,0.8,0))
	}
	else if( to_bone == @o_Kong ANI_CanalObjectGet(Anim_Canal_Cou) )			// OK
	{
		tv_new_sight = @to_bone MATH_VecLocalToGlobal(cvector(0,0,1))
		tv_new_banking = @to_bone MATH_VecLocalToGlobal(cvector(0,1,0))
//		DBG_RenderVector(OBJ_PosGet(), tv_new_banking * 5, color_jaune)
		tv_new_banking = MATH_VecRotate(tv_new_banking, @to_bone MATH_VecLocalToGlobal(cvector(1,0,0)), Cf_PiBy8)
		tv_pos = @to_bone OBJ_PosGet() + @to_bone MATH_VecLocalToGlobal(cvector(0,0.5,0))
	}
	else
	{
		tv_new_sight = @to_bone MATH_VecLocalToGlobal(cvector(0,1,0))
		tv_new_banking = @to_bone MATH_VecLocalToGlobal(cvector(0,0,1))
		tv_pos = @to_bone OBJ_PosGet()
		DBG_Warning("KBAT SET POS RIDE : bone non reconnu : ")
		DBG_TraceObject(to_bone)
		DBG_TraceEOL()
	}
	tv_new_sight = MATH_VecBlendRotate(OBJ_SightGet(), tv_new_sight, f_pos_blend_coef_ride)
	tv_new_banking = MATH_VecBlendRotate(OBJ_BankingGet(), tv_new_banking, f_pos_blend_coef_ride)
	OBJ_BankingGeneralSet(tv_new_sight, tv_new_banking)
	tv_pos += MATH_VecBlendRotate(OBJ_PosGet() - tv_pos, tv_new_banking * 0.01, f_pos_blend_coef_ride)
	OBJ_PosSet(tv_pos) 
}


// Dans la main de Kong
if (MSG_GlobalIsValid(mid_grabbed_by_Kong) && o_grabbed_actor)
{
	to_bone = LNK_GrabKong_BoneGet(mid_grabbed_by_Kong)
	switch( LNK_GrabKong_TypeGet(mid_grabbed_by_Kong) )
	{
//		// GRABBE PAR REX
//		case Ci_GrabKong_Type_TRex_Choppe :
//			if( to_bone )
//			{
//				// Blend pour la position
//				tv_pos = MATH_VecBlend(OBJ_PosGet(), @to_bone OBJ_PosGet(), f_pos_blend_coef)
//				
//				// Blend pour le décalage bassin -> pieds
//				to_bassin = ANI_CanalObjectGet(Anim_Canal_Bassin)
//				tv_temp = OBJ_PosGet() - @to_bassin OBJ_PosGet()
//				tv_pos += MATH_VecBlend(tv_temp, Cv_NullVector, 1 - f_pos_blend_coef)
//				
//				// Blend pour l'offset
//				tv_pos += MATH_VecBlend(@to_bone MATH_VecLocalToGlobal(cvector(0.8, 0.0, 1.0)), Cv_NullVector, 1 - f_pos_blend_coef)
//				OBJ_PosSet(tv_pos)
//				
//				OBJ_BankingGeneralSet(
//						MATH_VecBlendRotate(OBJ_SightGet(), - @to_bone OBJ_HorizonGet(), f_pos_blend_coef), 
//						MATH_VecBlendRotate(OBJ_BankingGet(), - @to_bone OBJ_BankingGet(), f_pos_blend_coef) )
//			}
//			break
//		
		// GRABBE PAR KONG
		case Ci_GrabKong_Type_Petit :
			tv_new_sight = - @to_bone OBJ_HorizonGet()
			tv_new_banking = @to_bone OBJ_SightGet()
			OBJ_BankingGeneralSet(
				MATH_VecBlendRotate(OBJ_SightGet(), tv_new_sight, f_pos_blend_coef),
				MATH_VecBlendRotate(OBJ_BankingGet(), tv_new_banking, f_pos_blend_coef))
			tv_pos = @to_bone OBJ_PosGet()
			if( 0 )
			{
				OBJ_RotateLocalX(f_X_rot)
				OBJ_RotateLocalY(f_Y_rot)
				OBJ_RotateLocalZ(f_Z_rot)
				tv_pos += @to_bone MATH_VecLocalToGlobal(cvector(f_X_pos,f_Y_pos,f_Z_pos))
			}
			else if( ACT_ActionGet() == ACTION_Grabbed_Mort_Bouge )
			{
				// bat morte et kong bouge
				OBJ_RotateLocalX(0.3)
				OBJ_RotateLocalY(0.0)
				OBJ_RotateLocalZ(-0.3)
				tv_pos += @to_bone MATH_VecLocalToGlobal(cvector(-0.3, 0.2, 0.5))
			}
			else if( ACT_ActionGet() == ACTION_Grabbed_Mort_Fixe )
			{
				// bat morte et kong ne bouge pas
				OBJ_RotateLocalX(0.3)
				OBJ_RotateLocalY(0.0)
				OBJ_RotateLocalZ(-0.3)
				tv_pos += @to_bone MATH_VecLocalToGlobal(cvector(-0.3, 0.2, 0.5))
			}
			else
			{
				// bat vivante + default
				OBJ_RotateLocalX(-0.5)
				OBJ_RotateLocalY(0.0)
				OBJ_RotateLocalZ(-0.2)
				tv_pos += @to_bone MATH_VecLocalToGlobal(cvector(-0.7, 0.1, 0.5))
			}
			tv_pos = MATH_VecBlend(v_grabbed_pos_init_blend, tv_pos,f_pos_blend_coef )
			v_grabbed_pos = tv_pos
			OBJ_PosSet(tv_pos) 
			break
		
		default:
			DBG_Error("Positionnement de la Bat en afterblend : type GrabKong inconnu")
			break
	}
}


// DANS LA GEULE DE REX
if( MSG_GlobalIsValid(mid_predateur) && o_predateur )
{
	to_serveur = MSG_GlobalGetGao(mid_predateur, SERVEUR)
	switch( LNK_GrabServeurVisionIDGet(mid_predateur) )
	{
		case C_ID_Tyranosaure :
			// Position
			tf_coef = @to_serveur ANI_CurrentFrameGet(0)

			OBJ_ZoomSet(MATH_FloatBlend(OBJ_ZoomGet(), 0.5, tf_coef / 300))

			tf_coef /= 300

			to_bone	= @to_serveur ANI_CanalObjectGet(Anim_Canal_Machoire)

			tv_grab_foot_pos = @to_bone OBJ_PosGet()

//			tv_grab_foot_pos += @to_bone OBJ_BankingGet() * MATH_FloatBlend(2.3, 1.5, tf_coef)
//			tv_grab_foot_pos -= @to_bone OBJ_SightGet() * 0.5

			tv_grab_foot_pos += @to_bone OBJ_BankingGet() * MATH_FloatBlend(1.5, 1.0, tf_coef)
			tv_grab_foot_pos -= @to_bone OBJ_SightGet() * 0.33


			tv_sight = @to_bone OBJ_BankingGet()
			tv_banking = - @to_bone OBJ_SightGet()

//			tv_grab_foot_pos = MATH_VecBlendRotate(tv_grab_foot_pos - @to_bone OBJ_PosGet(), tv_sight * 0.1, tf_coef)
//			tv_grab_foot_pos += @to_bone OBJ_PosGet()
	
			tv_grab_foot_pos = MATH_VecBlend(OBJ_PosGet(), tv_grab_foot_pos, f_time_start_etat * 4.0)
			OBJ_PosSet(tv_grab_foot_pos)

			// Orientation
			tv_sight = MATH_VecBlendRotate(OBJ_SightGet(), tv_sight, f_time_start_etat * 4.0)
			tv_banking = MATH_VecBlendRotate(OBJ_BankingGet(), tv_banking, f_time_start_etat * 4.0)
			OBJ_BankingGeneralSet(tv_sight, tv_banking)
			break
		
		default:
			break
	}
}


