#include "KBC_Defines.var"

int 				ti_action

messageid		tmid_vision


// SORTIE ETAT
if (i_sort_etat)
{
	if( i_etat_courant != ETAT_KK_Projectile )
		o_grabbed_actor = LNK_ServeurGet(Ci_LNK_GRAB_KONG, mid_grabbed_by_Kong, faux, nofunc, nofunc)
	
	AI_CBDel(o_last_grabbed_actor, CallBack_After_Blend, "KBC_cb_set_pos")	
	
	i_sort_etat = faux
	return
}

// ENTREE ETAT
if (i_etat_courant != ETAT_KK_Grabbed_by_Kong)
{
	i_etat_ancien_ancien = i_etat_ancien
	i_etat_ancien = i_etat_courant
	i_etat_courant = ETAT_KK_Grabbed_by_Kong
	if (fct_last_etat)
	{
		i_sort_etat = vrai
		AI_Execute(fct_last_etat)
	}
	fct_last_etat = AI_TrackCurGet()
	f_time_start_etat = 0.0
	KBC_DBG_Trace(i_DBG_trace_etat, "etat kk grabbed")

	f_pos_blend_coef = 0.0
	v_grabbed_pos_init_blend = OBJ_PosGet()
	i_grabbed_snd_done = faux

	AI_CBAdd(o_grabbed_actor, CallBack_After_Blend, "KBC_cb_set_pos")	

	o_last_grabbed_actor = o_grabbed_actor
	
	// RAZ flags de mort
	i_mort_au_sol_sur_le_dos = faux
	OBJ_CapaSet(none, CAPA_Dead)
	OBJ_CapaSet(none, CAPA_Dead_on_Ground)
	i_splash_flag = faux
	f_water_Z = -Cf_Infinit
	
	// TREX = Dead !!!
	if( @o_grabbed_actor AI_IsModel(get_PNJ_KTREX_Path) )
	{
		OBJ_CapaSet(CAPA_Dead, none)
		EVENT_LIFE_CurLifeSet(ID_LIFE, 0.0)
	}
	
	// Réactivation wp chute pour les autres bats ----------------
	KBC_Chute_WP_reservation_free(o_chute_bats_wp)
}
else
{
	f_pos_blend_coef = MATH_FloatMin( f_pos_blend_coef +  (4.0 * TIME_GetDt()), 1.0)
	if( ! i_grabbed_snd_done && f_pos_blend_coef > 0.95 )
	{
		i_grabbed_snd_done = vrai
		if( EVENT_LIFE_CurLifeGet(ID_LIFE) > 0.0 )
			SND_RequestPlay(Ci_SND_Cri_Grabbed)
	}
	f_time_start_etat += TIME_GetDt()
}


MACRO_CHECK_PAFS


// TEST LIAISON GRAB ------------------------------------------------------------------------------------
o_grabbed_actor = LNK_ServeurGet(Ci_LNK_GRAB_KONG, mid_grabbed_by_Kong, vrai, nofunc, nofunc)
if (o_grabbed_actor == nobody)
{
	// il n'y a plus personne qui grabbe la bat
	EVENT_LIFE_CurLifeSet(ID_LIFE, 0.0)		// morte si projetée
	KBC_STATS_NMI_Killed(o_Kong)
	v_paf_dir = DYN_SpeedGetVector()
	if( MATH_VecNullEpsilon(v_paf_dir) )
		v_paf_dir = - Cv_VerticalVector
	i_projectile_mode = Ci_projectile_lache
	macro_change_etat("KBC_ETAT_Projectile")
}


//AI_Execute("KBC_exec_check_paf")


// ACTION ============================================================
if( EVENT_LIFE_CurLifeGet(ID_LIFE) > 0.0 )
{
	KBC_Interet_Update(mid_interet_attaque, C_EVENT_InteretStatusGrabbed, o_grabbed_actor, tmid_vision)
	ACT_ActionSet(ACTION_Grabbed_Vivant)
}
else if( @o_grabbed_actor DYN_SpeedGet() < 0.5 )
	ACT_ActionSet(ACTION_Grabbed_Mort_Fixe)
else
	ACT_ActionSet(ACTION_Grabbed_Mort_Bouge)


// ACTION REALISEE PAR KONG --------------------------------------------------------------------
ti_action = LNK_GrabKong_ActionGet(mid_grabbed_by_Kong)
switch( ti_action )
{
	case Ci_GrabKong_ModeKill :		// ne peut plus se libérer (kong va la niaker)
		break
	
	default:
		// RETROUVE SA LIBERTE APRES UN CERTAIN TEMPS
		if( f_time_start_etat > Cf_GrabKong_EscapeDuration && EVENT_LIFE_CurLifeGet(ID_LIFE) > 0.0 
			&& @o_grabbed_actor Proc_KK_GrabbedNMICanEscape() && ! i_DBG_grabbed_liberation_disabled )
		{
			SND_RequestPlay(Ci_SND_Cri_Attack_Griffe)
			o_grabbed_actor = LNK_ServeurGet(Ci_LNK_GRAB_KONG, mid_grabbed_by_Kong, faux, nofunc, nofunc)	
			AI_Execute("KBC_exec_init_attente")
		}
		break
}

if ( ti_action == Ci_GrabKong_Lance )
{
	// Projectile (KONG lance, ennemi en vue ou pas)
	EVENT_LIFE_CurLifeSet(ID_LIFE, 0.0)		// morte si projetée
	KBC_STATS_NMI_Killed(o_Kong)
	i_projectile_mode = Ci_projectile_lance_unknown		// à détecminer
	macro_change_etat("KBC_ETAT_Projectile")
}
else if ( ti_action == Ci_GrabKong_LanceEtTombe)
{
	// Projectile + Paf (REX jète)
	EVENT_LIFE_CurLifeSet(ID_LIFE, 0.0)		// morte si projetée
	KBC_STATS_NMI_Killed(o_Kong)
	i_projectile_mode = Ci_projectile_lance_aveugle
	macro_change_etat("KBC_ETAT_Projectile")
}
