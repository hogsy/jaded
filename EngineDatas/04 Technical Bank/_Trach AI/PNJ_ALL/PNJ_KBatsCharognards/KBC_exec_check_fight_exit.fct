#include "KBC_defines.var"

messageid		tmid_vision

object			to_actor
object			to_new_target


i_fight_exit_flag = faux

// ATTAQUE EN COURS =============================================
if( ! i_attaque_fin_desynchro_flag )
{
	// JOUR-NUIT -------------------------------------------------------------------------------------------------------
	if( ! JOUR_NUIT_HeureCorrecte(f_Heure_Debut, f_Heure_Fin) )
	{
		KBC_DBG_Trace(i_DBG_trace_etat, "Jour-Nuit : je repars... ")
		goto FIGHT_EXIT_DESYNCHRO
	}
	
	
	// LIAISON KONG-INDY -----------------------------------------------------------------------------------------
//	if( o_Jack  && o_cible_attaque == o_Jack && @o_Jack Proc_KIndigene_Kong_LiaisonStatusGet() != Ci_Kong_KIndigene_LinkStatus_None )
//	{
//		KBC_DBG_Trace(i_DBG_trace_etat, "INDY s'est fait grabber par Kong... :(")
//		goto FIGHT_EXIT_DESYNCHRO
//	}
	

	// VISION --------------------------------------------------------------------------------------------------------------
	if( ! KBC_Seen_Actor_Test(o_cible_attaque, tmid_vision) )
	{
		KBC_DBG_Trace(i_DBG_trace_etat, "cible perdue de vue...")
//		i_flag_check_vision_done = faux
//		KBC_Seen_Actor_Test(o_cible_attaque, tmid_vision)
		goto FIGHT_EXIT_DESYNCHRO
	}
	
	
	// Déjà Grabbé --------------------------------------------------------------------- // NE PAS DETECTER LES GRAB, IL S'AGIT DES FINISH !!!!
//	if( KBC_Get_Interet_Status_Model_Nb(o_cible_attaque, C_EVENT_InteretStatusGrab, vrai) )
//	{
//		KBC_DBG_Trace(i_DBG_trace_etat, "ma cible est déjà grabbée par une autre bats...")
//		goto FIGHT_EXIT_DESYNCHRO
//	}
	
	
	// Nouveau Cadavre ----------------------------------------------------------------------
	if( ! KBC_IsEtatCine(i_etat_courant) )
	{
		to_actor = KBC_Cadavre_Nearest(vrai)
		if( to_actor )
		{
			o_cadavre = to_actor
			KBC_DBG_Trace_Gao(i_DBG_trace_etat, "détection d'un nouveau cadavre :", to_actor)
			goto FIGHT_EXIT_DESYNCHRO
		}
	}
	
	
	// Trigger d'interruption d'attaque--------------------------------------------------------
	if( AI_TriggerIsValid(trig_do_not_attack) && call_trigger(trig_do_not_attack) )
	{
		KBC_DBG_Trace(i_DBG_trace_etat, " trig_do_not_attack")
		goto FIGHT_EXIT_DESYNCHRO
	}
	

	// Obstacle ----------------------------------------------------------------------------------
	AI_Execute("KBC_exec_check_obstacle")
	if( i_flag_obstacle )
	{
		KBC_DBG_Trace(i_DBG_trace_etat, "s'est pris un obstacle !!! ")
		goto FIGHT_EXIT_NOW
	}
	

	// Jack dispo alors que je suis sur Kong ?
	if( ! i_big_bat && o_cible_attaque == o_Kong && o_Jack && KBC_Target_Check(o_Jack) )
	{
		KBC_DBG_Trace(i_DBG_trace_etat, " Jack dispo alors que j'attaque Kong ! ")
		goto FIGHT_EXIT_DESYNCHRO
	}
}
else
{
	// DESYNCHRONISATION FIN D'ATTAQUE EN COURS =============================================
	o_cible_attaque = o_attaque_fin_desynchro_gao
	if( ! f_time_attaque_fin_desynchro )
	{
		// délai désynchro terminé
		i_attaque_fin_desynchro_flag = faux
		if( KBC_Check_New_Target(to_new_target) )
		{
			i_agresseur_ID = KBC_Vision_Get_ID(to_new_target)
			o_cible_attaque = to_new_target
			v_falaise_init_cible_pos = @o_cible_attaque OBJ_PosGet()
			f_time_start_etat = 0.0
			KBC_AttackModeSelect()
			if( i_DBG_trace_etat )
			{
				DBG_TraceObject(OBJ_Me())
				DBG_TraceString(" -> change de cible => ")	
				DBG_TraceObject(to_new_target)
				DBG_TraceEOL()
			}
		}
		else
		{
			if( i_DBG_trace_etat )
			{
				DBG_TraceObject(OBJ_Me())
				DBG_TraceString(" -> attaque annulée (etat ")
				switch( i_etat_courant )
				{
					case ETAT_Fight_Approche :
					DBG_TraceString("fight approche")
					break
					case ETAT_Fight_Contact :
					DBG_TraceString("fight contact")
					break
					case ETAT_Fight_Network :
					DBG_TraceString("fight network")
					break
					case ETAT_Fight_Pause :
					DBG_TraceString("fight pause")
					break
					case ETAT_Fight_Wait_Begin :
					DBG_TraceString("fight wait begin")
					break
					case ETAT_Fight_Wait_Prio :
					DBG_TraceString("fight wait prio")
					break
					default:
					DBG_TraceString("???")
					break
				}
				DBG_TraceString(")")
				DBG_TraceEOL()
			}
			goto FIGHT_EXIT_NOW
		}
	}
}


// DEBUT DESYNCHRONISATION ================================================================
if( 0 )
{
	FIGHT_EXIT_DESYNCHRO:
	i_attaque_fin_desynchro_flag = vrai
	f_time_attaque_fin_desynchro = KBC_Attaque_Desynchro_Time_Get()
	o_attaque_fin_desynchro_gao = o_cible_attaque
	KBC_DBG_Trace_Float(i_DBG_trace_etat, "délai de désynchronisation :", f_time_attaque_fin_desynchro)
}


// FIN D'ATTAQUE ==========================================================================
if( 0 )
{
	FIGHT_EXIT_NOW:
	i_fight_exit_flag = vrai
	KBC_WP_Reservation_Del(o_backup_wp_depl_utilise)
}

