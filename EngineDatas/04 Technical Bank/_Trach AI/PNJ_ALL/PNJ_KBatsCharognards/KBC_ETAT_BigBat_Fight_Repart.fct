#include "KBC_defines.var"

messageid		tmid_vision

// SORTIE ETAT =========================================================================
if (i_sort_etat)
{	
	f_bigbat_delai_no_attack = Cf_bigbat_delai_no_attack
	KBC_BigBat_UncolDel()
	i_sort_etat = faux
	return
}

// ENTREE ETAT =========================================================================
if (i_etat_courant != ETAT_BigBat_Fight_Repart)
{
	i_etat_ancien_ancien = i_etat_ancien
	i_etat_ancien = i_etat_courant
	i_etat_courant = ETAT_BigBat_Fight_Repart
	if (fct_last_etat)
	{
		i_sort_etat = vrai
		AI_Execute(fct_last_etat)
	}
	fct_last_etat = AI_TrackCurGet()
	f_time_start_etat = 0.0
	KBC_DBG_Trace(i_DBG_trace_etat, "etat fight remonte")

	// INIT DEPLACEMENT --------------------------------------------------------
	v_cible_pos = @o_big_bat_retreat_wp OBJ_PosGet()
	
	KBC_ref_speed_set(f_vitesse_fight_remonte)
	ACT_ActionSet(i_ACTION_Vol_Standard)
//	ACT_ActionSet(ACTION_Falaise_Vol)
	KBC_action_frequency_set(2.0)
	
	i_flag_depl_horiz = faux

	f_angle_rotation_max = Cf_angle_rotation_max_contact			// les bats rouges ne sont pas limitées dans la rotation
}
else
{
	f_time_start_etat += TIME_GetDt()
}

// ANALYSE =================================================================
MACRO_CHECK_PAFS

i_flag_frein = faux
i_flag_neck = vrai
v_look_pos = @o_cible_attaque OBJ_PosGet()

KBC_Interet_Update(mid_interet_attaque, C_EVENT_InteretStatusAttack, o_cible_attaque, tmid_vision)		// j'ai fini d'attendre

AI_Execute("KBC_exec_MOVE_beziers")
if( i_flag_depl_fini && ! i_reseau_wp_count )
{
	AI_Execute("KBC_exec_init_attente")		// retourne en ronde
}

