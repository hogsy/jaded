
#include "KBC_defines.var"

//=============================================================================
// LA BAT SE PREND UN GROS PAF EN L'AIR
//=============================================================================

messageid				tmid_vision


// SORTIE ETAT
if (i_sort_etat)
{
	AI_Execute("KBC_exec_dyn_on")
	DYN_GravitySet(Cv_NullVector)
	
	f_speed = 0.0
	i_sort_etat = faux
	return
}

// ENTREE ETAT
if (i_etat_courant != ETAT_Paf_Air )
{
	i_etat_ancien = i_etat_courant
	i_etat_courant = ETAT_Paf_Air
	
	if (fct_last_etat)
	{
		i_sort_etat = vrai
		AI_Execute(fct_last_etat)
	}
	fct_last_etat = AI_TrackCurGet()
	f_time_start_etat = 0.0
	
	if( i_paf_ecrase_flag )
	{
		AI_Execute("KBC_exec_dyn_on")
		DYN_GravitySet(Cv_NormalGravity)
		ACT_ActionSet(ACTION_Paf_Ecrase)
	}
	else 
	{
		DYN_Off()
		if( i_paf_mur )
		{
			SND_RequestPlay(Ci_SND_Ecrasement)
			ACT_ActionSet(ACTION_Paf_Mur)
		}
		else
			ACT_ActionSet(ACTION_Paf_Air_Moyen)
	}
	
	// BACKUP DIRECTION DU PAF POUR S'ORIENTER PENDANT LA CHUTE ========
	v_last_paf_sight = v_sum_pafs_dir
	v_last_paf_sight.z = 0.0
	if( ! MATH_VecNullEpsilon(v_last_paf_sight) )
		MATH_VecSetNormalize(v_last_paf_sight)
	DBG_RenderVector(OBJ_PosGet(), v_last_paf_sight * 10, color_vert)
	
	if( i_big_bat )
	{
		// BOSS : la bat noire ne conserve pas l'intérêt après un moyen/gros paf, afin que les bats grises descendent attaquer à leur tour
		KBC_reset_attaque()
		@get_global f_time_bat_noire_escape = TIME_Get()
	}
	
	if( i_DBG_trace_etat )
	{
		DBG_TraceObject(OBJ_Me())
		DBG_TraceString(" : etat paf air")
		DBG_TraceEOL()
	}
}
else
{
	f_time_start_etat += TIME_GetDt()
}

// ANALYSE ============================================================================

if( f_time_start_etat >= 10.0 )
{
	OBJ_Destroy()
}

// COMPORTEMENT =====================================================================

// INTERET ---------------------------------------------------------------------------------------------------------------------
if( f_HP && o_cible_attaque )
	KBC_Interet_Update(mid_interet_attaque, C_EVENT_InteretStatusAttack, o_cible_attaque, tmid_vision)

i_flag_neck = faux

if( ! ACT_ActionIsTransition() && ACT_ActionFinished() )
{
	if( ! f_HP )
	{
		if( i_paf_ecrase_flag )
			macro_change_etat("KBC_ETAT_Sol_Mort")		// anim paf qui écrasa au sol jouée -> anim mort écrasé au sol
		else
			macro_change_etat("KBC_ETAT_Chute_Libre")
	}
	else if( o_cible_attaque )
	{
		// j'ai une cible, je vais à un point d'attaque
		AI_Execute("KBC_exec_init_attaque")
	}
	else
	{
		// rien -> idle
		AI_Execute("KBC_exec_init_attente")
	}
}

OBJ_BankingGeneralSet( 
	MATH_VecBlendRotate(OBJ_SightGet(), - v_last_paf_sight, 5 * TIME_GetDt()), 
	MATH_VecBlendRotate(OBJ_BankingGet(), Cv_VerticalVector, 5 * TIME_GetDt()) )

