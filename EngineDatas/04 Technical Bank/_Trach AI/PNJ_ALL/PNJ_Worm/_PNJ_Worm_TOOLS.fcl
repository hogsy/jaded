#include "PNJ_Worm_defines.var"

procedure_local int PNJ_Worm_Add_Perceived_Actor(object to_actor, int ti_status, messageid tmid_visibility_ref)
{
	int					ti_index
	int					ti_rank

	float				tf_life_ratio

	object			to_nearest_wp
	object			to_serveur
	
	message		tmsg_filter

	messageid		tmid_lnk	
	messageid		tmid_visibility
	
	tmid_visibility = tmid_visibility_ref

	// EST-CE QU'ON RAJOUTE CE PERSO A LA LISTE DE CEUX QU'ON VOIT ?
	ti_index = ARR_ObjSearch(&ao_perceived_actor[0], i_perceived_actor_nb, to_actor)
	if (ti_index == -1)
	{
		ti_index = i_perceived_actor_nb
		i_perceived_actor_nb ++

		if (MSG_GlobalIsValid(mid_best_interet) && to_actor == EVENT_InteretTargetGet(mid_best_interet))
			i_perceived_best_actor_index = ti_index

		ao_perceived_actor[ti_index] = to_actor

		ai_perceived_hiding_place_index[ti_index] = -1

		ai_perceived_in_wide_cone[ti_index] = faux
		ai_perceived_in_small_cone[ti_index] = faux
		ai_perceived_seen[ti_index] = faux

		ai_perceived_status[ti_index] = 0

		if (MSG_GlobalIsValid(tmid_visibility))
		{
			// EST-CE QUE C'EST UN CADAVRE DEJA TRAITE ?
			tf_life_ratio = EVENT_VisionLifeStateGet(tmid_visibility) 
			if (tf_life_ratio <= Cf_Life_Agonisant)
			{
				// OK, ce perso est inconscient
				ai_perceived_status[ti_index]	|= Ci_PERCEIVED_STUNNED
			}
//			else
//			{
//				// Ce perso n'est plus un cadavre
//				PNJ_Worm_Forget_Body(to_actor)
//			}

			af_perceived_interest[ti_index] = EVENT_VisionInteretGet(tmid_visibility)
			ai_perceived_ID[ti_index] = EVENT_VisionIDGet(tmid_visibility)
			av_perceived_position[ti_index] = EVENT_PositionGet(tmid_visibility)
//			ai_perceived_territory[ti_index] = EVENT_VisionTerritoryGet(tmid_visibility)
//			ai_perceived_accessible[ti_index] = PNJ_Worm_Is_Accessible(av_perceived_position[ti_index], ai_perceived_territory[ti_index])
			
			if (ai_perceived_ID[ti_index] == C_ID_Joueur)
				i_perceived_main_actor_index = ti_index
		}
		else
		{
			af_perceived_interest[ti_index] = 30.0
			ai_perceived_ID[ti_index] = -1
			av_perceived_position[ti_index] = @to_actor OBJ_PosGet()
//			ai_perceived_territory[ti_index] = GST_EVENT_Territory_Get(av_perceived_position[ti_index])
//			ai_perceived_accessible[ti_index] = PNJ_Worm_Is_Accessible(av_perceived_position[ti_index], ai_perceived_territory[ti_index])
		}

		af_perceived_dist[ti_index] = MATH_VecNorm(av_perceived_position[ti_index] - OBJ_PosGet())

		ti_rank = -1
		MSG_SetNull(tmsg_filter)
		tmsg_filter.msg_sender = to_actor
		tmid_lnk = MSG_GlobalSearchIntGao(Ci_LNK_EVENT_OFFSET + Ci_LNK_GRAB_RAPTOR, &ti_rank, tmsg_filter)
		if (MSG_GlobalIsValid(tmid_lnk))
		{
			to_serveur = MSG_GlobalGetGao(tmid_lnk, SERVEUR)
			if (to_serveur && to_serveur != OBJ_Me())
				ai_perceived_status[ti_index] |= Ci_PERCEIVED_ALREADY_GRABBED
		}

//		if (! ai_perceived_accessible[ti_index] )
//		{
//			to_nearest_wp = PNJ_Worm_Nearest_Wp_Get(av_perceived_position[ti_index], all, Ci_Capa_Out_Of_Grid | Ci_Capa_Exclusion)
//			if (PNJ_Worm_Is_Wp_Memorised(to_nearest_wp))
//				ai_perceived_status[ti_index] |= Ci_PERCEIVED_ALREADY_CHECKED
//		}	
	}

	ai_perceived_status[ti_index] |= ti_status

	return(ti_index)
}

procedure_local int PNJ_Worm_Best_Interet_Update(int ti_index)
{
	int				ti_flag_update_best_interet	
	int				ti_flag_update_pos
	int				ti_flag_update_seen_time

	object		to_identified_actor
	object		to_last_best_interest_target

	if (ti_index == -1)
		return(-1)

	i_perceived_best_actor_index = ti_index

	ti_flag_update_pos = faux
	ti_flag_update_seen_time = faux

	if (ai_perceived_seen[ti_index])
	{
		ti_flag_update_seen_time = vrai
		ti_flag_update_pos = vrai
		
		to_identified_actor = ao_perceived_actor[ti_index]
	}
	else if (ai_perceived_status[ti_index] & (Ci_PERCEIVED_HEARD | Ci_PERCEIVED_PAF))
	{
		// En cas de paf, je sais d'ou ça vient mais je ne considère pas que je le vois...
		ti_flag_update_pos = vrai
		to_identified_actor = ao_perceived_actor[ti_index]
	}

	if (ti_flag_update_pos)
	{
		if (! MSG_GlobalIsValid(mid_best_interet))
		{
			// JE N'AVAIS PAS D'INTERET
			mid_best_interet = EVENT_AddEventInteret(OBJ_Me(), Cf_Infinit, af_perceived_interest[ti_index], av_perceived_position[ti_index], to_identified_actor)
			EVENT_InteretVisionIDSet(mid_best_interet, C_ID_Scorpion)
		}	
		else
		{
			to_last_best_interest_target = EVENT_InteretTargetGet(mid_best_interet)

			 if (ao_perceived_actor[ti_index] != to_last_best_interest_target)
			{
				// INTERET DIFFERENT DE L'ANCIEN
				MSG_GlobalDelete(mid_best_interet, C_EVENT_DEL)
				mid_best_interet = EVENT_AddEventInteret(OBJ_Me(), Cf_Infinit, af_perceived_interest[ti_index], av_perceived_position[ti_index], to_identified_actor)
				EVENT_InteretVisionIDSet(mid_best_interet, C_ID_Scorpion)
			}
		}

		EVENT_InteretPositionSet(mid_best_interet, av_perceived_position[ti_index])
	}

	if (ti_flag_update_seen_time)
	{
		EVENT_InteretTargetSet(mid_best_interet, to_identified_actor)
		EVENT_InteretSeenTimeSet(mid_best_interet, TIME_Get())
	}

	return(ti_index)
}


procedure_local void PNJ_Worm_Add_Budy(messageid EVT_Visibility_ID)
{
	int			ti_territory
	object	to_actor	

//	if (EVENT_VisionLifeStateGet(EVT_Visibility_ID) > 0.0)
	{	
		to_actor = EVENT_PereGet(EVT_Visibility_ID)
		if (to_actor != OBJ_Me())
		{
			ao_budy[i_budy_nb] = to_actor
			amid_budy_vision_event[i_budy_nb] = EVT_Visibility_ID
			i_budy_nb++
		}
	}
}

procedure_local void PNJ_Worm_UncollideAdd(object to_gao, float tf_duration)
{
	int		ti_index
	
	if (@to_gao OBJ_FlagsIdentityTest(OBJ_C_IdentityFlag_Generated))
		return
		
	if (! (@to_gao OBJ_FlagsIdentityTest(OBJ_C_IdentityFlag_ColMap)) )
		return

	ti_index = ARR_ObjSearch(&ao_uncollide_gao[0], i_uncollide_gao_nb, to_gao)
	if (ti_index == -1)
	{
		ao_uncollide_gao[i_uncollide_gao_nb] = to_gao
		af_uncollide_duration[i_uncollide_gao_nb] = tf_duration
		i_uncollide_gao_nb++
		COL_UnCollidableAdd(to_gao)
	}
	else
	{
		af_uncollide_duration[ti_index] = tf_duration
	}
}

procedure_local void PNJ_Worm_UncollideDel(object to_gao)
{
	int		ti_index
	ti_index = ARR_ObjSearch(&ao_uncollide_gao[0], i_uncollide_gao_nb, to_gao)
	if (ti_index != -1)
		af_uncollide_duration[ti_index] = 0.0
}

procedure_local void PNJ_Worm_UncollideCheck()
{
	int		ti_i
	
	for (ti_i = 0; ti_i < i_uncollide_gao_nb; ti_i++)
	{
		if (af_uncollide_duration[ti_i] == -1.0)
			continue
	
		af_uncollide_duration[ti_i] -= MATH_FloatMin(af_uncollide_duration[ti_i], TIME_GetDt())

		if (af_uncollide_duration[ti_i] <= 0.0 && ! OBJ_LIB_Virtual_Collision(OBJ_Me(), ao_uncollide_gao[ti_i], faux))
		{
			COL_UnCollidableDel(ao_uncollide_gao[ti_i])
			
			i_uncollide_gao_nb--

			af_uncollide_duration[ti_i] = af_uncollide_duration[i_uncollide_gao_nb]
			ao_uncollide_gao[ti_i] = ao_uncollide_gao[i_uncollide_gao_nb]
			
			af_uncollide_duration[i_uncollide_gao_nb] = -1.0
			ao_uncollide_gao[i_uncollide_gao_nb] = nobody
		}
	}
}

procedure_local void PNJ_Worm_Soft_Collision()
{
	int		ti_i
	
	float		tf_dist
	float		tf_intersection_dist
	float		tf_intersection_sqr_dist
	vector	tv_me_to_budy
	vector	tv_col_move_axis

	object	to_nearest_budy

 	if ( ! OBJ_FlagsIdentityTest(OBJ_C_IdentityFlag_Dyna) )
		return

	switch(i_etat_courant)
	{
		case ETAT_GRAB :
		case ETAT_MORT :
		case ETAT_SAUT :
			return
	}
	
	tv_col_move_axis = Cv_NullVector

	for (ti_i = 0; ti_i < i_budy_nb; ti_i++)
	{
		tf_intersection_dist = 0.75 * OBJ_ZoomGet()
		tf_intersection_dist += 0.75 * @ao_budy[ti_i] OBJ_ZoomGet()
	
		tf_intersection_sqr_dist = tf_intersection_dist
		tf_intersection_sqr_dist *= tf_intersection_sqr_dist

		tv_me_to_budy = @ao_budy[ti_i] OBJ_PosGet() - OBJ_PosGet()
		tv_me_to_budy.z = 0.0
		
		tf_dist = MATH_VecDotProduct(tv_me_to_budy, tv_me_to_budy) 

		if (tf_dist < tf_intersection_sqr_dist)
		{
			tf_dist = MATH_FloatSqrt(tf_dist)

			if (tf_dist)
				tv_me_to_budy /= tf_dist
			else
				tv_me_to_budy = OBJ_SightGet()

			tf_dist /= tf_intersection_dist
			tf_dist = 1.0 - tf_dist
			tv_me_to_budy *= tf_dist
			
			tv_col_move_axis -= tv_me_to_budy
		}
	}
	
	tv_col_move_axis *= 20.0 * DYN_FrictionGet()
	tv_col_move_axis += DYN_TractionVectorGet()
	DYN_TractionSet(tv_col_move_axis)
}

procedure_local void PNJ_Worm_OBBOX_Set(float tf_size_coef)
{
	object	to_bone

	if (tf_size_coef == f_obbox_size_coef)
		return

	f_obbox_size_coef = tf_size_coef

	to_bone = ANI_CanalObjectGet(Anim_Canal_Tete)
	@to_bone BV_OBBoxMinSet(cvector(-0.4 * tf_size_coef, -0.2 * tf_size_coef, -0.2))
	@to_bone BV_OBBoxMaxSet(cvector(0.4 * tf_size_coef, 0.2 * tf_size_coef, 0.5))

	to_bone = ANI_CanalObjectGet(Anim_Canal_Queue)
	@to_bone BV_OBBoxMinSet(cvector(-0.4 * tf_size_coef, -0.2 * tf_size_coef, -0.1))
	@to_bone BV_OBBoxMaxSet(cvector(0.4 * tf_size_coef, 0.2 * tf_size_coef, 0.1))
	
	to_bone = ANI_CanalObjectGet(Anim_Canal_Queue + 1)
	@to_bone BV_OBBoxMinSet(cvector(-0.3 * tf_size_coef, -0.1 * tf_size_coef, -0.2))
	@to_bone BV_OBBoxMaxSet(cvector(0.3 * tf_size_coef, 0.1 * tf_size_coef, 0.2))
	
	to_bone = ANI_CanalObjectGet(Anim_Canal_Queue + 2) 
	@to_bone BV_OBBoxMinSet(cvector(-0.3 * tf_size_coef, -0.1 * tf_size_coef, -0.2))
	@to_bone BV_OBBoxMaxSet(cvector(0.3 * tf_size_coef, 0.1 * tf_size_coef, 0.2))
	
	to_bone = ANI_CanalObjectGet(Anim_Canal_Queue + 3)
	@to_bone BV_OBBoxMinSet(cvector(-0.4 * tf_size_coef, -0.1 * tf_size_coef, -0.2))
	@to_bone BV_OBBoxMaxSet(cvector(0.4 * tf_size_coef, 0.1 * tf_size_coef, 0.2))

	to_bone = ANI_CanalObjectGet(Anim_Canal_Queue + 4)
	@to_bone BV_OBBoxMinSet(cvector(-0.4 * tf_size_coef, -0.1 * tf_size_coef, -0.1))
	@to_bone BV_OBBoxMaxSet(cvector(0.4 * tf_size_coef, 0.1 * tf_size_coef, 0.5))

	to_bone = ANI_CanalObjectGet(19)
	@to_bone OBJ_FlagsIdentitySet(none, OBJ_C_IdentityFlag_OBBox)

	to_bone = ANI_CanalObjectGet(20)
	@to_bone OBJ_FlagsIdentitySet(none, OBJ_C_IdentityFlag_OBBox)
	to_bone = ANI_CanalObjectGet(21)
	@to_bone OBJ_FlagsIdentitySet(none, OBJ_C_IdentityFlag_OBBox)

	to_bone = ANI_CanalObjectGet(30)
	@to_bone OBJ_FlagsIdentitySet(none, OBJ_C_IdentityFlag_OBBox)

	to_bone = ANI_CanalObjectGet(40)
	@to_bone OBJ_FlagsIdentitySet(none, OBJ_C_IdentityFlag_OBBox)
	to_bone = ANI_CanalObjectGet(41)
	@to_bone OBJ_FlagsIdentitySet(none, OBJ_C_IdentityFlag_OBBox)

	to_bone = ANI_CanalObjectGet(50)
	@to_bone OBJ_FlagsIdentitySet(none, OBJ_C_IdentityFlag_OBBox)

	to_bone = ANI_CanalObjectGet(60)
	@to_bone OBJ_FlagsIdentitySet(none, OBJ_C_IdentityFlag_OBBox)
	to_bone = ANI_CanalObjectGet(61)
	@to_bone OBJ_FlagsIdentitySet(none, OBJ_C_IdentityFlag_OBBox)
	to_bone = ANI_CanalObjectGet(62)
	@to_bone OBJ_FlagsIdentitySet(none, OBJ_C_IdentityFlag_OBBox)

	to_bone = ANI_CanalObjectGet(70)
	@to_bone OBJ_FlagsIdentitySet(none, OBJ_C_IdentityFlag_OBBox)
	to_bone = ANI_CanalObjectGet(71)
	@to_bone OBJ_FlagsIdentitySet(none, OBJ_C_IdentityFlag_OBBox)
	to_bone = ANI_CanalObjectGet(72)
	@to_bone OBJ_FlagsIdentitySet(none, OBJ_C_IdentityFlag_OBBox)

	to_bone = ANI_CanalObjectGet(80)
	@to_bone OBJ_FlagsIdentitySet(none, OBJ_C_IdentityFlag_OBBox)
	to_bone = ANI_CanalObjectGet(81)
	@to_bone OBJ_FlagsIdentitySet(none, OBJ_C_IdentityFlag_OBBox)
	to_bone = ANI_CanalObjectGet(82)
	@to_bone OBJ_FlagsIdentitySet(none, OBJ_C_IdentityFlag_OBBox)

	to_bone = ANI_CanalObjectGet(90)
	@to_bone OBJ_FlagsIdentitySet(none, OBJ_C_IdentityFlag_OBBox)
	to_bone = ANI_CanalObjectGet(91)
	@to_bone OBJ_FlagsIdentitySet(none, OBJ_C_IdentityFlag_OBBox)
	to_bone = ANI_CanalObjectGet(92)
	@to_bone OBJ_FlagsIdentitySet(none, OBJ_C_IdentityFlag_OBBox)

	to_bone = ANI_CanalObjectGet(210)
	@to_bone OBJ_FlagsIdentitySet(none, OBJ_C_IdentityFlag_OBBox)

	to_bone = ANI_CanalObjectGet(220)
	@to_bone OBJ_FlagsIdentitySet(none, OBJ_C_IdentityFlag_OBBox)

}