#include "PNJ_antilope_defines.var"

vector	tv_sens, tv_dest_pos
vector	tv_occluderNextPos
object	tao_raptors[1]
object	to_occluderJump
float		taf_fake[1]
float		tf_sens_danger
int			ti_nb, ti_occluderResult

// SORTIE ETAT ===================================================================
if (i_sort_etat)
{
	i_sort_etat = faux
	DYN_TractionSet(Cv_NullVector)
	DYN_SpeedSetVector( Cv_NullVector)
	v_retour_pos = Cv_NullVector
	return
}

// INIT ETAT ======================================================================
if ( i_etat_courant != ETAT_PA_FLEE)
{
	i_etat_courant = ETAT_PA_FLEE
	
	if (fct_last_etat)
	{
		i_sort_etat = vrai
		AI_Execute(fct_last_etat)
	}
	fct_last_etat = AI_TrackCurGet()
	
	if ( o_danger)
		v_flee_from_pos = @o_danger OBJ_PosGet()
	else
		v_flee_from_pos = v_paf_from_pos
		
	f_time_safe = 0.0
}



// REACTIONS ===============================================================
if ( ! o_danger)
	f_time_safe += TIME_GetDt()
else
	f_time_safe = 0.0
	
if ( f_time_safe > 2.0)
	macro_change_etat("pa_ETAT_paisible")

if( o_paf_actor)
	macro_change_etat("pa_ETAT_paf")
// COMPORTEMENT ===============================================================

// update flee from position
if ( o_danger)
	v_flee_from_pos = @o_danger OBJ_PosGet()

f_choose_sens_col += TIME_GetDt()
if ( COL_CollideType( COL_C_Wall))
{
	tv_sens = COL_NormalGet(COL_C_Wall)
	tv_sens = MATH_VecRotate( tv_sens, Cv_VerticalVector, Cf_PiBy2 )
	
	tf_sens_danger = MATH_FloatSign( MATH_VecDotProduct( tv_sens, OBJ_PosGet() - v_flee_from_pos))
	
	if ( tf_sens_danger * MATH_FloatSign(f_sens_flee) < 0 && f_choose_sens_col > 3.0)
	{
		// Mise a jour
		f_choose_sens_col = 0.0
		f_sens_flee = tf_sens_danger
	}
	tv_sens *= f_sens_flee
	DBG_RenderVector( OBJ_PosGet() + cvector(0.0,0.0,1.0), tv_sens * 10.0, color_bleu) 
}
else
{
	tv_sens = OBJ_PosGet() - v_flee_from_pos
	tv_sens.z = 0.0
	if ( MATH_VecNullEpsilon(tv_sens))
		tv_sens = OBJ_SightGet()
	else
		tv_sens = MATH_VecNormalize( tv_sens)
}	
tv_dest_pos = OBJ_PosGet() + ( tv_sens * 5.0)

ti_nb = 0
ti_occluderResult = WAY_LIB_Test_Occluder( 	OBJ_PosGet() + Cv_VerticalVector, 
																OBJ_SightGet(), 
																COL_ZoneSizeGet(C_zdm_pied) + 0.1,
																tv_dest_pos, 
																-1,	// territory not used for now
																tv_occluderNextPos,
																to_occluderJump, 
																&tao_raptors[0],
																&taf_fake[0],
																ti_nb,
																0 )

if ( ti_occluderResult != 0)
{
	tv_sens = tv_occluderNextPos - OBJ_PosGet()
}
else
	tv_sens = tv_dest_pos - OBJ_PosGet()
OBJ_BankingGeneralSet( MATH_VecBlendRotate( OBJ_SightGet(), tv_sens, 5.0 * TIME_GetDt()), Cv_VerticalVector)

ACT_ActionSet(PA_Fuite)
ANI_FrequencySet( 0, 90)