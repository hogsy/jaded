// Pour la fonction de rotation tete !
//#define C_RT_flags_regarde_la_tete_du_perso						0x00010000
//#define C_RT_flags_custom_limit_value								0x08000000
//#define C_RT_flags_ne_tourne_pas_le_torse						0x10000000
//#define C_RT_flags_ratio_de_rotation_torcetete_identique		0x20000000
//#define C_RT_flags_plus_de_limite_dangles							0x40000000
//#define C_RT_flags_regarde_devant_si_perso_dans_le_dos	0x80000000
//#define C_RT_flags_tourne_aussi_le_ventre							0x04000000

vector		tv_pos

vector	v_LookPos
object	to_gao 



// Positionnement du Projectile
if (o_projectile)
{
	tv_pos = @o_main OBJ_PosGet()
	tv_pos += @o_main OBJ_BankingGet() * 0.1
	tv_pos += @o_main OBJ_HorizonGet() * -0.05
	@o_projectile OBJ_PosSet( tv_pos )
	@o_projectile OBJ_SightSet(-@o_main OBJ_SightGet() )
}


// Suivi du Regard de la cible
if (o_target)
{
	v_LookPos = @o_target OBJ_PosGet()
	to_gao = ANI_CanalObjectGet(Anim_Canal_Tete)
	OBJ_EyeFollowParamSet(Cf_1Degre * 75.0,-Cf_1Degre * 75.0,1000 ,1000 ,1000 ,1000 ,1000 )	
	OBJ_EyeFollow(  v_LookPos, 0.2, C_RT_flags_custom_limit_value )
	//DBG_RenderVector(@to_gao OBJ_PosGet(),v_LookPos - @to_gao OBJ_PosGet(), color_jaune) 
}