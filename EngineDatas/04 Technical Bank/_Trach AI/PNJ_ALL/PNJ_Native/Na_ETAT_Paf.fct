
#include"Na_Defines.var"

vector		tv_wait
vector		tv_vec
vector		tv_sight


// SORTIE ETAT ===================================================================
if (i_flag_sort_etat)
{
	i_flag_sort_etat = faux
	return
}

// INITIALISATION ETAT ==============================================================
if (i_etat_courant != ETAT_Paf)
{
	i_dernier_etat = i_etat_courant
	i_etat_courant = ETAT_Paf

	if (fct_last_etat)
	{
		i_flag_sort_etat = vrai
		AI_Execute(fct_last_etat)
	}

	// Mort ==============
//	SPEECH_RequestPost
//	(
//		OBJ_Me(),
//		OBJ_Me(), 
//		0xD00066C9, 
//		0xD0006F41, 
//		1.0, 
//		SPEECH_Cte_PriorityDefault, 
//		5,
//		0,
//		0,
//		0
//	)
	// Mort ==============
	
//	COL_CrossableSet(Gmat_Jack_Crossable_All_But_RAPTORS + Gmat_Jack_Face_eau + Gmat_Jack_Face_de_Bord, none)
	COL_CrossableSet(Gmat_KK_Face_eau + Gmat_KK_Face_de_Bord, none)

	m_script.msg_int1 = 0

	tv_vec = m_script.msg_vec1
	tv_vec.z = 0
	m_script.msg_vec1 = tv_vec

	if (f_paf_degats < 0)
	{
		i_etat_phase = 2
		ACT_ActionSet(Ci_AnimNative_Deplacement)
	}
//	else if ( f_lifecur )
//	{
//		i_etat_phase = 0		// Petit PAF
//		ACT_ActionSet(Ci_AnimNative_Paf)
//	}
	else
	{
//		if (f_paf_degats > 5)
//		{
			ACT_ActionSet(Ci_AnimNative_PafChuteSol)
			i_etat_phase = 10	// Paf Mort Chute en arriere
//		}
//		else	
//		{
//			ACT_ActionSet(Ci_AnimNative_Paf)
//			i_etat_phase = 1		// Paf Mort Chute en arriere
//		}
	}

	fct_last_etat = AI_TrackCurGet()
	f_time_start_etat = 0.0
	
	if( ! i_mort_stat )
	{
		// si c toujours faux, c que l'auteur du paf était inconnu (structure effondrée ?) -> on considère que c'est Jack
		i_mort_stat = vrai
		STATS_IncEnemyKilled_New(@"univ" ao_AllHumains[C_ID_Joueur], C_EnemyType_Native, 0 ) 
	}
}
else
{
	f_time_start_etat += TIME_GetDt()
}

// ANALYSE =====================================================================

//if (f_lifecur <= 0)
//{
//	macro_change_etat("Na_ETAT_PAF")
//}
//
// COMPORTEMENT ===============================================================

//f_lifecur =f_lifecur 

switch ( i_etat_phase )
{
//	case 0 : 		// Paf simple apres je continue mon action sans la faire en entier.
//		if (ACT_ActionFinished())
//		{
//			switch (i_dernier_etat)
//			{
//				case ETAT_Launch : 
//					if (!i_move_flag_shootinmove)
//						macro_change_etat("Na_ETAT_GotoPoint")
//////						Macro_Script_Next			// Si le script precedant c'etait un tir, apres la paf je passe au script suivant
//					else
//						macro_change_etat("Na_ETAT_Move")
//
//					break
//
//				case ETAT_Wait : 
//					Macro_Script_Next			// Si le script precedant c'etait un tir, apres la paf je passe au script suivant
//					break
//			}
//			macro_change_etat(fct_last_etat)
//		}
//		break
//
//	case 1 :			//Marche en titubant
//		if (ACT_ActionFinished())	
//		{
//			i_etat_phase = 2
//			ACT_ActionSet(Ci_AnimNative_Deplacement)
//		}			
//		break
	
	case 2 :
		tv_sight = @o_fall_direction OBJ_PosGet() - OBJ_PosGet()
		tv_sight.z = 0.0
		DBG_RenderVector(OBJ_PosGet(), tv_sight, color_vert)
		tv_sight = MATH_VecBlendRotate(OBJ_SightGet(), tv_sight, 10.0 * TIME_GetDt())
		OBJ_BankingGeneralSet(tv_sight, Cv_VerticalVector)
		if( TIME_Elapsed(f_time_ground, 0.05) )
		{
			i_etat_phase = 3
			ACT_ActionSet(Ci_AnimNative_ChuteMort)
		}
		break
		
	case 3 :
		if ( ! TIME_Elapsed(f_time_ground, 0.05) )
			macro_change_etat("Na_ETAT_Mort")
		break
		
	case 10 : 		// Paf simple apres je continue mon action sans la faire en entier.
		OBJ_BankingGeneralSet(MATH_VecBlendRotate(OBJ_SightGet(), - v_paf_dir, 10 * TIME_GetDt()), Cv_VerticalVector)
		if( ACT_ActionFinished() )
			OBJ_Destroy()
		break

}			
