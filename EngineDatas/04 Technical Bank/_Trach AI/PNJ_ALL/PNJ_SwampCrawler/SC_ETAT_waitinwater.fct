#include "PNJ_SwampCrawler_defs.var"

int			i_signe, i_loop
vector	pos

//--------( Sortie Etat )--------
if (etat_i_quitte)
{
	etat_i_quitte = faux
	return
}

//--------( Entrée Etat )--------
if ( etat_i_courant != SCETAT_water )
{
	etat_i_ancien = etat_i_courant
	etat_i_courant = SCETAT_water
	etat_f_timer = MATH_RandFloat(SCTIMER_water_min,SCTIMER_water_max)
	
	//----( quitte état précédent )----
	if ( etat_fct )
	{
		etat_i_quitte = vrai
		AI_Execute( etat_fct )
	}
	etat_fct = AI_TrackCurGet()
	ACT_ActionSet( SCACT_water_wait )
}

//--------( calage en z )--------
move_v_dest = OBJ_PosGet()
move_i_groundrec = 0
move_f_speed = 10
move_f_destz = SCONDULE_ZStatic 
AI_Execute( "SC_exec_move" )

if ( move_i_ground && (OBJ_PosGet().z > SCONDULE_ZStatic ) )
	etat_f_timer = 0
	
//--------( se prend un paf )--------
if ( stimul_i_paf )
	macro_takeapaf( SCETATPARAM_PafOne )

//--------( fin de la sieste )--------
etat_f_timer -= TIME_GetDt()
if (etat_f_timer < 0)
{
	move_v_dest = @home_zone_waterZ BV_RandomPosGet(1)
	move_v_dest.z = home_f_zmax
	macro_change_etat( "SC_ETAT_nage" )
}
	
//--------( passage en chasse )--------
if (stimul_o_target && (move_f_withouthunt <= 0) )
{
	move_v_dest = @home_zone_waterZ BV_RandomPosGet(1)
	move_v_dest.z = home_f_zmax
	//macro_change_etat( "SC_ETAT_hunt" )
	macro_change_etat( "SC_ETAT_nage" )
}

