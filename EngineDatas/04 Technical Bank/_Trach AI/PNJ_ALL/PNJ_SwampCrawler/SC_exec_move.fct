vector	next_pos, dir, sight, x, y
float		dot, factor, fz
object		ooo

//--------( init )---------
next_pos = OBJ_PosGet()

//---------( déplacement dans le plan horizontal )--------
dir = move_v_dest - OBJ_PosGet()
dir.z = 0
dot = MATH_VecNorm( dir )
move_f_dist2dest = dot
//----(déplacement non nul )----
if (dot > 0)
{
	dir /= dot
	factor = move_f_speed * TIME_GetDt()
	//----( ralenti si proche de la cible )-----
	if ( (move_i_brakewhennear) && (dot < 3) )
		factor /= 4 - dot
			
	//----( orientation )-----
	sight = MATH_VecBlendRotate(OBJ_SightGet(), dir,0.1)
	sight.z = 0
	if (!MATH_VecNull(sight) )
		OBJ_SightSet( sight )

	//----( on attend d'etre a peut près en face de la cible pour avancer )-----
	dot = MATH_VecDotProduct(dir, sight)
	if ( dot > 0.2 ) 
		next_pos = OBJ_PosGet() + (dir * factor)
}

// --------( test si dans BV )--------	
move_i_isinbv = 1
if (home_use_BV && !@home_zone_waterZ COL_BV_PointCollide( next_pos ) )
{
	move_i_isinbv = 0
}

//--------( oscillation du Z )--------
move_zoffvalue += move_zoffspeed * TIME_GetDt()
fz = -move_zoff
if ( move_zoffvalue > move_zoffvalueoff)
	move_zoffvalue = 0
else if ( move_zoffvalue > move_zoffvalueon)
	fz = move_zoff

fz = 0
	
//--------( réglage du Z )--------
fz += move_f_destz
if (next_pos.z != fz )
{
	if (next_pos.z < fz)
	{
		next_pos.z += 0.5 * TIME_GetDt()
		if (next_pos.z > fz) next_pos.z = fz
	}
	else
	{
		next_pos.z -= 0.5 * TIME_GetDt()
		if (next_pos.z < fz) next_pos.z = fz
	}
}

OBJ_PosSet( next_pos )
if (!move_i_groundrec)
{
	move_v_groundnormal = Cv_VerticalVector
	OBJ_BankingSet( Cv_VerticalVector )
}

//--------( collision ? )--------
move_i_ground = 0
if( COL_CollideType(COL_C_Ground) )
{
	move_i_ground = 1
	move_v_groundnormal = COL_NormalGet(COL_C_Ground)
	//ooo = COL_ObjectGet(COL_C_Ground)

	if( move_i_groundrec)
	{
		//y = OBJ_SightGet()
		//x = OBJ_HorizonGet()

		//sight = MATH_VecCrossProduct(x, move_v_groundnormal )
		//sight.x = y.x
		//sight.y = y.y
		
		//OBJ_SightGeneralSet(  sight, move_v_groundnormal  )     
		OBJ_BankingSet( move_v_groundnormal  )     
	}
}
//else 
//	OBJ_BankingSet( move_v_groundnormal  ) 

//DBG_RenderVector( OBJ_PosGet(), dir * 10, 0xFF00FF00 )
//DBG_RenderSphere( move_v_dest, 0.1, 0xFF0000FF )
