
#include "KT_defines.var"


//====================================================================================
// CHOIX DU FIGHT ACTOR
//====================================================================================

float				tf_dist_max
float				tf_dist
messageid		tmid_vision
message		tm_filter
int					ti_rank
object			to_actor
float				tf_life_coef
float				tf_interet
float				tf_dist_bite
vector			tv_pos
int					ti_i
int					ti_is_best
int					ti_visibility_context
int					ti_type_sol


if( i_fight_actor_select_done )
	return
	
i_fight_actor_select_done = vrai

tf_dist_max = Cf_Infinit
o_fight_actor = nobody

// KONG attire le TREX
if( f_time_KONG)
	o_fight_actor = o_KONG


// KONG est trop près de REX
if( ( ! o_fight_actor ) && OBJ_SqrDist(o_KONG) <= Cf_dist_fight_force_KONG )
	o_fight_actor = o_KONG


// ANN présente et KONG n'est pas dans mon territoire : je choisis ANN
if( ( ! o_fight_actor ) && o_perimetre && ( ! @o_perimetre COL_BV_PointCollide(@o_KONG OBJ_PosGet()) ) && @o_perimetre COL_BV_PointCollide(@o_ANN OBJ_PosGet()) )
{
	o_fight_actor = o_ANN
}


// ANN présente
if( 0 && ! o_fight_actor )
{
	if( MSG_GlobalIsValid(EVENT_FindEventPereTarget(Ci_LNK_EVENT_OFFSET + Ci_LNK_KKGRAB_OBJECT, o_ANN, o_KONG)) )
		o_fight_actor = o_KONG
	else
	{
		MSG_SetNull(tm_filter)
		tm_filter.msg_sender = o_ANN
		ti_rank = -1
		tmid_vision = MSG_GlobalSearchIntGao( C_EVENT_TYPE_Visibility, &ti_rank, tm_filter)
		if (MSG_GlobalIsValid(tmid_vision))	
		{
			// Test contexte de ANN
			ti_visibility_context = EVENT_VisionContextGet(tmid_vision)
			ti_type_sol = ti_visibility_context / 10
			ti_visibility_context -= ti_type_sol * 10
			if( ti_visibility_context != C_EVENT_CONTEXT_DEBOUT )
				o_fight_actor = o_KONG		// ne voit ANN que si elle est debout
			else
			{
				// Test distance intérêt sur ANN
				if ( OBJ_SqrDistHorz( o_ANN) <= Cf_dist_fight_ANN )
					o_fight_actor = o_ANN
				else
					o_fight_actor = o_KONG
			}
		}
		else
			o_fight_actor = o_KONG
	}
}


// KONG
if( ! o_fight_actor )
{
	MSG_SetNull(tm_filter)
	tm_filter.msg_sender = o_KONG
	ti_rank = -1
	tmid_vision = MSG_GlobalSearchIntGao( C_EVENT_TYPE_Visibility, &ti_rank, tm_filter)
	if (MSG_GlobalIsValid(tmid_vision))	
		o_fight_actor = o_KONG
}

// Fight Actor KONG => Restrictions
if( o_fight_actor == o_KONG )
{
	// N'attaque pas KONG s'il est en walling
	if( OBJ_SqrDistHorz(o_fight_actor) > Cf_dist_fight_KONG ) // || @get_global i_kong_camera_status == Ci_Kcamera_walling )
		o_fight_actor = nobody
}

// PERIMETRE DU TREX
if( o_fight_actor && o_perimetre && ( ! @o_perimetre COL_BV_PointCollide(@o_fight_actor OBJ_PosGet()) ) )
	o_fight_actor = nobody

// INTERET ==========================================================
if( o_fight_actor )
	KT_Interet_Update (o_fight_actor, C_EVENT_InteretStatusLock)

// INTERRUPTION TIMER KILL ANN PAR INTIMIDATION
if( o_fight_actor == o_KONG )
	i_fury_KANN_death_interrupted = faux		// KONG peut à nouveau détourner l'attention de REX pour sauver ANN

