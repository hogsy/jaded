
#include "PNJ_TREX_defines.var"

int				ti_lray
vector		tav_lray[2]
int				ti_coll
vector		tav_coll[Ci_max_wall]
int				ti_cumul
vector		tav_cumul[Ci_max_wall]
vector		tv_new_sight_init
vector		tv_new_sight_res_loc
vector		tv_new_sight_ok
int				ti_trace_res_loc_screen
int				ti_trace_res_loc_log
int				ti_res_loc_lray
int				ti_res_loc_coll
int				ti_flag_stop_resolution_locale
vector		tv_trace_res_loc_screen_pos 

ti_trace_res_loc_screen = faux
ti_trace_res_loc_log = faux
ti_res_loc_lray = vrai
ti_res_loc_coll = vrai
ti_flag_stop_resolution_locale = faux


// ORIENTATION SOUHAITEE
tv_new_sight_init = MATH_VecBlendRotate(OBJ_SightGet(), v_orientation_sens, f_orientation_coef * TIME_GetDt())


// DETECTION DES OBSTACLES
if( o_fight_actor && o_fight_actor == o_ANN )
	ti_res_loc_lray = faux

if( ti_res_loc_lray )
	PNJ_TREX_Obstacle_2LRay( v_orientation_sens, &tav_lray[0], ti_lray )
else
	ti_lray = 0

if( ti_res_loc_coll )
	PNJ_TREX_Obstacle_Collision( v_orientation_sens, &tav_coll[0], ti_coll )
else
	ti_coll = 0

PNJ_TREX_Array_Cumul( &tav_cumul[0], ti_cumul, &tav_lray[0], ti_lray, &tav_coll[0], ti_coll)

if( ti_trace_res_loc_log )
{
	DBG_TraceString("nb d'obstacles = ")
	DBG_TraceInt(ti_cumul)
	DBG_TraceString(" ( ")
	DBG_TraceInt(ti_lray)
	DBG_TraceString(" lray + ")
	DBG_TraceInt(ti_coll)
	DBG_TraceString(" coll)")
	DBG_TraceEOL()
}


if( DYN_SpeedGet() < Cf_charge_vitesse_peut_freiner )
{	
	// RESOLUTION LOCALE
	tv_new_sight_res_loc = PNJ_TREX_Obstacle_Contournement(tv_new_sight_init, v_orientation_sens, i_force_contourne_on, f_force_contourne_sens, &tav_cumul[0], ti_cumul)
	if( tv_new_sight_res_loc != tv_new_sight_init || i_force_contourne_on )
	{
		i_flag_resolution_locale = vrai
		tv_new_sight_ok = MATH_VecBlendRotate(OBJ_SightGet(), tv_new_sight_res_loc, 2 * TIME_GetDt())
		
		DBG_RenderVector(OBJ_PosGet(), tv_new_sight_res_loc * 5, color_cyan)
		if( i_etat_courant == ETAT_charge && ACT_ActionGet() == Action_Normal_Charge )
		{
			ACT_ActionSet(Action_Normal_Trot)
			f_time_start_etat = 0.0		// séquence de fin de charge
		}
	}
	else
		ti_flag_stop_resolution_locale = vrai
}
else
	ti_flag_stop_resolution_locale = vrai

// PAS DE RESOLUTION LOCALE
if( ti_flag_stop_resolution_locale )
{
	i_flag_resolution_locale = faux
	tv_new_sight_ok = tv_new_sight_init
	
	if( i_etat_courant == ETAT_charge && i_charge_exit == Ci_charge_en_cours && ACT_ActionGet() != Action_Normal_Charge )
		ACT_ActionSet(Action_Normal_Charge)		// on remet l'anim de charge	
}


// ORIENTATION DEFINITIVE	
OBJ_BankingGeneralSet(tv_new_sight_ok, Cv_VerticalVector)

if( ti_trace_res_loc_screen )
{
	if( i_flag_resolution_locale )
	{
		tv_trace_res_loc_screen_pos = Cv_NullVector
		Str_DisplayTextOnce("TREX RES LOC", tv_trace_res_loc_screen_pos)
		if( i_force_contourne_on )
		{
			Str_DisplayTextOnce("Sens Force", tv_trace_res_loc_screen_pos + cvector(0,0.05,0))
			if( f_force_contourne_sens == 1.0 )
				Str_DisplayTextOnce("Gauche", tv_trace_res_loc_screen_pos + cvector(0,0.1,0))
			else
				Str_DisplayTextOnce("Droite", tv_trace_res_loc_screen_pos + cvector(0,0.1,0))
		}
	}
}

