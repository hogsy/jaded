#include "KT_defines.var"

// SORTIE ETAT ===================================================================
if (i_sort_etat)
{
	i_sort_etat = faux
	DYN_GravitySet( cvector( 0.0, 0.0, -20.0))
	DYN_FrictionVectorSet(Cv_TREX_friction_marche)
	return
}

// INITIALISATION ETAT ==============================================================
if (i_etat_courant != ETAT_chute)
{
	i_dernier_etat = i_etat_courant
	i_etat_courant = ETAT_chute

	if (fct_last_etat)
	{
		i_sort_etat = vrai
		AI_Execute(fct_last_etat)
	}
	
	fct_last_etat = AI_TrackCurGet()
	
	DYN_GravitySet( cvector( 0.0, 0.0, -60.0))
	DYN_FrictionVectorSet( Cv_TREX_friction_chute)
	f_time_start_etat = 0.0
	ACT_ActionSet( Action_Fight_Chute)
	f_collide_ground_time = 0.0
	
	// SUPPRESSION DE L'INTERET (POUR L'ARRET DU TIMER DE MORT ANN)
	if( MSG_GlobalIsValid(mid_best_interet) )
		MSG_GlobalDelete(mid_best_interet, C_EVENT_EOFDEL)
}
else
{
	f_time_start_etat += TIME_GetDt()
}

if( f_time_start_etat > 5.0 )
	OBJ_Destroy()

//OBJ_BankingGeneralSet( OBJ_SightGet(), MATH_VecBlendRotate( OBJ_BankingGet(), cvector( 0.0, 0.0, -1.0), 6.0 * TIME_GetDt()))
if ( f_time_start_etat > 0.5)
	ACT_ActionSet( Action_Fight_Chute)

if ( ! KT_CheckChute())
{
	if( i_dernier_etat == ETAT_mort )
		macro_change_etat("KT_ETAT_mort")
	else
	{
		// NOUVELLE GESTION
//		f_fatigue_time += Cf_fatigue_add_paf_wall
		f_fatigue_time = 0.0
		macro_change_etat("KT_ETAT_KO_au_sol")
	}
}

