#include "KT_defines.var"

messageid		tmid_cadavre

float		tf_dot_avec_occluder
float		tf_dot_sans_occluder
float		tf_dist_can_eat

int			ti_cadavre_au_sol


// SORTIE ETAT ===================================================================
if (i_sort_etat)
{
	if (i_SND_instance_devore != -1)
	{
		SND_Stop(i_SND_instance_devore)
		i_SND_instance_devore = -1
	}
	o_cadavre = nobody
	o_cadavre_bone = nobody
	i_sort_etat = faux
	return
}

// INITIALISATION ETAT ==============================================================
if( i_etat_courant != ETAT_FoodChain )
{
	i_dernier_etat = i_etat_courant
	i_etat_courant = ETAT_FoodChain
	if (fct_last_etat)
	{
		i_sort_etat = vrai
		AI_Execute(fct_last_etat)
	}
	fct_last_etat = AI_TrackCurGet()
	f_time_start_etat = 0.0
	
	f_non_collide_ground_time = 0.0		// sinon bug cycle "chute -> KO sol -> chute -> KO sol..."
	ai_grabbed_availibility[ Ci_LNK_GRAB_KONG] = vrai	
	o_fight_actor = nobody
	ACT_ActionSet(Action_Fight_Cri_Bas | Ci_ActionSet_Force_SameAction | Ci_ActionSet_Force_FrameZero)	// selon le mode d'où l'on vient...
	i_foodchain_step = Ci_foodchain_step_1er_cri
	
	if( @o_cadavre AI_IsModel(get_PNJ_Bidoche_path) )
		o_cadavre_bone = @o_cadavre ANI_CanalObjectGet(2)
	else if( @o_cadavre AI_IsModel(get_PNJ_Scolo_Path) )
		o_cadavre_bone = @o_cadavre ANI_CanalObjectGet(7)
	else
		o_cadavre_bone = @o_cadavre ANI_CanalObjectGet(Anim_Canal_Bassin)
}
else
{
	f_time_start_etat += TIME_GetDt()
}

// ANALYSE ========================================================================

// Detection de GRAB
o_grabbed_actor_KK = LNK_ServeurGet(Ci_LNK_GRAB_KONG, mid_grabbed_by_Kong_LNK_ID, vrai, nofunc, nofunc)
if (o_grabbed_actor_KK)
{
	macro_change_etat("KT_ETAT_Grabbed_by_Kong")		
}

// Detection de PAF
AI_Execute("KT_exec_check_paf")
if (o_paf_actor)
{
	macro_change_etat("KT_ETAT_paf")					// ko delay nul -> simple paf
}

// Jack fait diversion
Macro_Check_Paf_Jauge_Crier

// Detection du vide
macro_checkchute


// COMPORTEMENT ===================================================================

// INTERET
KT_Interet_Update(o_cadavre, C_EVENT_InteretStatusFoodchainLocked)

// REGARD
i_flag_look = vrai
v_look_pos = KT_GetActorPosToLook(o_cadavre)

// ORIENTATION
KT_OrientationInitGet(o_cadavre, vrai)

// TEST D'OCCLUDER
KT_OccluderTest()

// DEPLACEMENT 
tf_dot_avec_occluder = MATH_VecDotProduct(OBJ_SightGet(), v_sight_avec_occluder)
tf_dot_sans_occluder = MATH_VecDotProduct(OBJ_SightGet(), v_sight_sans_occluder)

switch( i_foodchain_step )
{
	case Ci_foodchain_step_1er_cri :
		ti_cadavre_au_sol = vrai
		if( @o_cadavre AI_IsModel(get_PNJ_KBats_path) && ! @o_cadavre OBJ_CapaTest(Capa_BAT_is_Dead_on_Ground) )
			ti_cadavre_au_sol = faux
		if( KT_Action_Cri_EnCours() && ACT_ActionFinished() )
		{
			if( ti_cadavre_au_sol )
				i_foodchain_step = Ci_foodchain_step_avance
			else
				ACT_ActionSet(Action_Normal_Attente)
		}
		else if( ACT_ActionGet() == Action_Normal_Attente )
		{
			if( ti_cadavre_au_sol )
				i_foodchain_step = Ci_foodchain_step_avance
		}
		break
		
	case Ci_foodchain_step_avance :
		if( @o_cadavre AI_IsModel(get_PNJ_Scolo_Path) )
			tf_dist_can_eat = 7.0
		else
	 		tf_dist_can_eat = 5.5
		if( ! KT_Action_Cri_EnCours() || ACT_ActionFinished() )
		{
			if( f_move_dist < ( tf_dist_can_eat * 0.75) )
			{
				ACT_ActionSet(Action_Normal_Recul)			// trop près
			}
//			else if( tf_dot_sans_occluder < Cf_Cos15 )
//			{
//				ACT_ActionSet(i_Anim_marche)			// pas bien orienté
//			}
			else if( f_move_dist > tf_dist_can_eat )
			{
				ACT_ActionSet(i_Anim_marche)			// trop loin
			}
			else
			{
				// à la bonne distance
				ACT_ActionSet(Action_Mange)
				i_foodchain_step = Ci_foodchain_step_devore
				f_foodchain_mange_paf_delay = 1.0
			}
			// ORIENTATION
			v_orientation_sens = v_sight_avec_occluder
			KT_OrientationFinaleSet()
		}
		break

	case Ci_foodchain_step_devore :
		tmid_cadavre = EVENT_FindEventPereTarget(C_EVENT_TYPE_Cadavre, o_cadavre, nobody)
		if( ! MSG_GlobalIsValid(tmid_cadavre) )
		{
			// cadavre invalide (mangé par un autre ?)
			macro_change_etat("KT_ETAT_attente")
		}
		if( @o_cadavre AI_IsModel(get_PNJ_KBats_path)
			|| @o_cadavre AI_IsModel(get_PNJ_Scolo_Path) )
		{
			// cas particulier Kbats : choppe et croque
			if( ANI_CurrentFrameGet(0) > 30 )
			{
				o_grab_actor = LNK_ThisClientGet(o_cadavre, Ci_LNK_GRAB_RAPTOR, mid_grab_actor_LNK_ID, vrai, "KT_exec_grab_init", nofunc, "KT_exec_grab_init")
				if (o_grab_actor)
				{
					SND_RequestPlayOnObjCanal(Ci_SND_Mord, Anim_Canal_Tete)
					macro_change_etat("KT_ETAT_Grab_Proie")
				}
			}
		}
		else
		{
			// cas générique
			if (i_SND_instance_devore == -1)
				i_SND_instance_devore = SND_RequestPlayLoopOnObjCanal(Ci_SND_MangeAuSol, Anim_Canal_Tete)
			f_foodchain_mange_paf_delay -= MATH_FloatMin(f_foodchain_mange_paf_delay, TIME_GetDt())
			if( ! f_foodchain_mange_paf_delay )
			{
				f_foodchain_mange_paf_delay = 1.0
				EVENT_AddEventPaf(C_EVENT_FILTER_All, C_PAF_KK_FoodChain, OBJ_Me(), Cf_EVENT_Duree_1Trame, o_cadavre, f_foodchain_pts_viande_par_sec, OBJ_SightGet())
			}
		}
		break
}
