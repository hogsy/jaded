#include "KT_defines.var"

#define	Cf_delay_between_target_switching		2.0

// règle courante
int					ti_check_rule
int					ti_i
// last best interet
object			to_last_best_interet_gao
// new best interet
int					ti_is_best
int					ti_new_interet_index
messageid		tmid_new_best_interet
// event  vision
messageid		EVT_Visibility_ID
int					ti_ID_best


if( i_fight_actor_select_done )
	return
	
i_fight_actor_select_done = vrai


// BACKUP ANCIEN FIGHT ACTOR
if( o_fight_actor )
	o_fight_actor_backup = o_fight_actor

// BACKUP ANCIEN MEILLEUR INTERET
to_last_best_interet_gao = nobody
if( i_perceived_best_actor_index != -1 )
	to_last_best_interet_gao = ao_perceived_actor[i_perceived_best_actor_index]

// NOUVEAU BEST INTERET
ti_new_interet_index = -1

// TRACE DEBUG ======================================================
if( i_DBG_Trace_Check_Stimulis_ON )
{
	DBG_TraceString("==== NEW ==== ")
	DBG_TraceInt(i_perceived_actor_nb)
	DBG_TraceString(" acteurs détectés : ")
	DBG_TraceEOL()
	
	for (ti_i = 0; ti_i < i_perceived_actor_nb; ti_i++)
	{
		DBG_TraceObject(ao_perceived_actor[ti_i])
		if (ai_perceived_status[ti_i] & Ci_PERCEIVED_VISION_STANDARD)
			DBG_TraceString(" Ci_PERCEIVED_VISION_STANDARD ")
		if (ai_perceived_status[ti_i] & Ci_PERCEIVED_VISION_AGONISANT)
			DBG_TraceString(" Ci_PERCEIVED_VISION_AGONISANT")
		if (ai_perceived_status[ti_i] & Ci_PERCEIVED_SOUND)
			DBG_TraceString(" Ci_PERCEIVED_SOUND ")
		if (ai_perceived_status[ti_i] & Ci_PERCEIVED_PAF)
			DBG_TraceString(" Ci_PERCEIVED_PAF ")
		if (ai_perceived_status[ti_i] & Ci_PERCEIVED_BEST_PAF)
			DBG_TraceString(" Ci_PERCEIVED_BEST_PAF ")
		if (ai_perceived_status[ti_i] & Ci_PERCEIVED_COLLISION)
			DBG_TraceString(" Ci_PERCEIVED_COLLISION ")
		DBG_TraceEOL()
	}
}
// TRACE DEBUG ======================================================


// REGLE 1 : BEST PAF
if( ti_new_interet_index == -1 )
{
	// CHECK DE LA REGLE
	for (ti_i = 0; ti_i < i_perceived_actor_nb; ti_i++)
	{
		if (ai_perceived_status[ti_i] & Ci_PERCEIVED_BEST_PAF)
		{
			ti_new_interet_index = KT_Best_Interet_Update(ti_i)
			if( ( ti_new_interet_index != -1 ) && ( to_last_best_interet_gao != ao_perceived_actor[ti_new_interet_index] ) )
			{
				if( i_DBG_Trace_Check_Stimulis_ON )
				{
					DBG_TraceString("REGLE 1 : BEST PAF : ")
					DBG_TraceObject(ao_perceived_actor[ti_new_interet_index])
					DBG_TraceEOL()
				}
				break				// 1 seul acteur a le statut "best paf"
			}
		}
	}
}


// REGLE 2 : COLLISION
if( ti_new_interet_index == -1 )
{
	// CHECK DE LA REGLE
	for (ti_i = 0; ti_i < i_perceived_actor_nb; ti_i++)
	{
		ti_is_best = faux
		if (ai_perceived_status[ti_i] & Ci_PERCEIVED_COLLISION)
		{
			// Test meilleur intérêt du groupe
			if( ! MSG_GlobalIsValid(tmid_new_best_interet) )
				ti_is_best = vrai
			else if( KT_Is_Better_Priority( EVENT_VisionIDGet(amid_perceived_actor[ti_i]), EVENT_VisionIDGet(tmid_new_best_interet) ) )
				ti_is_best = vrai
			
			if( ti_is_best )
			{
				// événement courant meilleur que le "futur meilleur" temporaire
				ti_new_interet_index = KT_Best_Interet_Update(ti_i)
				tmid_new_best_interet = amid_perceived_actor[ti_new_interet_index]
				if( ( ti_new_interet_index != -1 ) && ( to_last_best_interet_gao != ao_perceived_actor[ti_new_interet_index] ) )
				{
					if( i_DBG_Trace_Check_Stimulis_ON )
					{
						DBG_TraceString("REGLE 2 : COLLISION : ")
						DBG_TraceObject(ao_perceived_actor[ti_new_interet_index])
						DBG_TraceEOL()
					}
				}
			}
		}
	}
}


// KONG est trop près de REX
if( ( ! o_fight_actor ) && ( OBJ_SqrDist(o_KONG) <= Cf_dist_fight_force_KONG ) )
	o_fight_actor = o_KONG


// REGLE 3 : KONG ATTIRE LE TREX
if( f_time_KONG )
{
	ti_i = ARR_ObjSearch(&ao_perceived_actor[0], i_perceived_actor_nb, o_KONG)
	if( ti_i == -1 )
	{
		// KONG PAS VU CETTE TRAME...
		EVT_Visibility_ID = EVENT_FindEventPereTarget(C_EVENT_TYPE_Visibility, o_KONG, nobody)		
		if( ! MSG_GlobalIsValid(EVT_Visibility_ID) )
		{
			DBG_Error("KONG n'a pas d'événement de vision")
		}
		else
		{
			ti_i = KT_Add_Perceived_Actor(o_KONG, 0, EVT_Visibility_ID)
			ai_perceived_status[ti_i] |= Ci_PERCEIVED_VISION_STANDARD			// on considère qu'on voit KONG
		}
	}
	
	if( ti_i != -1 )
	{
		// KONG EST PRESENT
		ti_new_interet_index = KT_Best_Interet_Update(ti_i)
		if( i_DBG_Trace_Check_Stimulis_ON )
		{
			DBG_TraceString("REGLE 3 : KONG ATTIRE LE TREX : ")
			DBG_TraceObject(o_KONG)
			DBG_TraceEOL()
		}
	}
}


// REGLE 4 : VISION DES ACTEURS AGONISANTS
if( ti_new_interet_index == -1 )
{
	// TEST DELAI POUR CHANGER DE CIBLE
	ti_check_rule = vrai
	if( ! TIME_Elapsed(f_time_choix_best_actor, Cf_delay_between_target_switching) )
		ti_check_rule = faux
	
	// CHECK DE LA REGLE
	if( ti_check_rule )
	{
		for (ti_i = 0; ti_i < i_perceived_actor_nb; ti_i++)
		{
			ti_is_best = faux
			if (ai_perceived_status[ti_i] & Ci_PERCEIVED_VISION_AGONISANT)
			{
				// Test meilleur intérêt du groupe
				if( ! MSG_GlobalIsValid(tmid_new_best_interet) )
					ti_is_best = vrai
				else if( KT_Is_Better_Priority( EVENT_VisionIDGet(amid_perceived_actor[ti_i]), EVENT_VisionIDGet(tmid_new_best_interet) ) )
					ti_is_best = vrai
				
				if( ti_is_best )
				{
					// événement courant meilleur que le "futur meilleur" temporaire
					ti_new_interet_index = KT_Best_Interet_Update(ti_i)
					tmid_new_best_interet = amid_perceived_actor[ti_new_interet_index]
					if( ( ti_new_interet_index != -1 ) && ( to_last_best_interet_gao != ao_perceived_actor[ti_new_interet_index] ) )
					{
						if( i_DBG_Trace_Check_Stimulis_ON )
						{
							DBG_TraceString("REGLE 4 : VISION DES ACTEURS AGONISANTS : ")
							DBG_TraceObject(ao_perceived_actor[ti_new_interet_index])
							DBG_TraceEOL()
						}
					}
				}
			}
		}
	}
}


// REGLE 5 : VISION DES ACTEURS (STANDARD)
if( ti_new_interet_index == -1 )
{
	// TEST DELAI POUR CHANGER DE CIBLE
	ti_check_rule = vrai
	if( ! TIME_Elapsed(f_time_choix_best_actor, Cf_delay_between_target_switching) )
		ti_check_rule = faux
	
	// CHECK DE LA REGLE
	if( ti_check_rule )
	{
		for (ti_i = 0; ti_i < i_perceived_actor_nb; ti_i++)
		{
			ti_is_best = faux
			if (ai_perceived_status[ti_i] & Ci_PERCEIVED_VISION_STANDARD)
			{
				// Test meilleur intérêt du groupe
				if( ! MSG_GlobalIsValid(tmid_new_best_interet) )
					ti_is_best = vrai
				else if( KT_Is_Better_Priority( EVENT_VisionIDGet(amid_perceived_actor[ti_i]), EVENT_VisionIDGet(tmid_new_best_interet) ) )
					ti_is_best = vrai
				
				if( ti_is_best )
				{
					// événement courant meilleur que le "futur meilleur" temporaire
					ti_new_interet_index = KT_Best_Interet_Update(ti_i)
					tmid_new_best_interet = amid_perceived_actor[ti_new_interet_index]
					if( ( ti_new_interet_index != -1 ) && ( to_last_best_interet_gao != ao_perceived_actor[ti_new_interet_index] ) )
					{
						if( i_DBG_Trace_Check_Stimulis_ON )
						{
							DBG_TraceString("REGLE 5 : VISION DES ACTEURS (STANDARD) : ")
							DBG_TraceObject(ao_perceived_actor[ti_new_interet_index])
							DBG_TraceEOL()
						}
					}
				}
			}
		}
	}
}


// REGLE 6 : SOUND
if( ti_new_interet_index == -1 )
{
	// TEST DELAI POUR CHANGER DE CIBLE
	ti_check_rule = vrai
	if( ! TIME_Elapsed(f_time_choix_best_actor, Cf_delay_between_target_switching) )
		ti_check_rule = faux
	
	// CHECK DE LA REGLE
	if( ti_check_rule )
	{
		for (ti_i = 0; ti_i < i_perceived_actor_nb; ti_i++)
		{
			ti_is_best = faux
			if (ai_perceived_status[ti_i] & Ci_PERCEIVED_SOUND)
			{
				// Test meilleur intérêt du groupe
				if( ! MSG_GlobalIsValid(tmid_new_best_interet) )
					ti_is_best = vrai
				else if( KT_Is_Better_Priority( EVENT_VisionIDGet(amid_perceived_actor[ti_i]), EVENT_VisionIDGet(tmid_new_best_interet) ) )
					ti_is_best = vrai
				
				if( ti_is_best )
				{
					// événement courant meilleur que le "futur meilleur" temporaire
					ti_new_interet_index = KT_Best_Interet_Update(ti_i)
					tmid_new_best_interet = amid_perceived_actor[ti_new_interet_index]
					if( ( ti_new_interet_index != -1 ) && ( to_last_best_interet_gao != ao_perceived_actor[ti_new_interet_index] ) )
					{
						if( i_DBG_Trace_Check_Stimulis_ON )
						{
							DBG_TraceString("REGLE 6 : SOUND : ")
							DBG_TraceObject(ao_perceived_actor[ti_new_interet_index])
							DBG_TraceEOL()
						}
					}
				}
			}
		}
	}
}


// UN BEST ACTOR A ETE CHOISI
if( ti_new_interet_index != -1 )
{
	i_perceived_best_actor_index = ti_new_interet_index
	f_time_choix_best_actor = TIME_Get()
}

