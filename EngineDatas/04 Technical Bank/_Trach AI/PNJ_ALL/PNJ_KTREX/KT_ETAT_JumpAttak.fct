#include "KT_defines.var"

int				ti_trame
int				ti_col

float			tf_interet
object		to_tete
object		to_col_ray_object
object		to_col_wall_object
vector		tv_new_sight
float			tf_dot
vector		tv_sens_collision
vector		tv_temp
int				ti_frame


// SORTIE ETAT ===================================================================
if (i_sort_etat)
{
	i_sort_etat = faux
	COL_ColSetActivationSet( none, C_bit_zde_fight)
	o_jumpattak_actor = nobody
	o_fury_actor = nobody		// il avait été conservé pour le test AwareOfKong
	i_debut_force = faux	
	return
}

// INITIALISATION ETAT ==============================================================
if (i_etat_courant != ETAT_JumpAttak)
{
	i_dernier_etat = i_etat_courant
	i_etat_courant = ETAT_JumpAttak

	if (fct_last_etat)
	{
		i_sort_etat = vrai
		AI_Execute(fct_last_etat)
	}

	fct_last_etat = AI_TrackCurGet()

	ai_grabbed_availibility[ Ci_LNK_GRAB_KONG] = vrai	

	if ( i_debut_force)
	{
		fct_main_etat = "KT_ETAT_fight_KONG"
		SND_RequestPlay(Ci_SND_Paf_Fort)
		ACT_ActionSet(Action_Fracasse)		
		ANI_CurrentFrameSet(0, @o_Kong ANI_CurrentFrameGet(0))
	}
	else
	{
		o_jumpattak_actor =  o_jumpattak_actor_msg
		KT_Action_Cri_Select(o_jumpattak_actor)
		v_jumpattak_sight = @o_jumpattak_actor OBJ_PosGet() - OBJ_PosGet()
		v_jumpattak_sight.z = 0.0
		if( ! MATH_VecNullEpsilon(v_jumpattak_sight) )
			MATH_VecSetNormalize(v_jumpattak_sight)
		else
			v_jumpattak_sight = OBJ_SightGet()
	}
	f_time_start_etat = 0.0
}
else
{
	f_time_start_etat += TIME_GetDt()
}

// ANALYSE ==============================================================
if( i_debut_force )
{
	if( ACT_ActionItemGet() == 0 ) // && ANI_CurrentFrameGet(0) < 18 )
		@o_Kong Proc_KK_Pafs_Effects(vrai)
}
else
{
	KT_Uncol_Add( o_jumpattak_actor)
	KT_Interet_Update(o_jumpattak_actor, C_EVENT_InteretStatusLock)
}


// Detection de PAF
AI_Execute("KT_exec_check_paf")
if (o_paf_actor)
{
	if ( i_paf_type & C_PAF_KK_Ecrasement)
	{
		SND_RequestPlay(Ci_SND_Paf_Fort)
		ACT_ActionSet(Action_Fracasse)
	}
	else
		macro_change_etat("KT_ETAT_paf")					// ko delay nul -> simple paf		
}

// GRAB
o_grabbed_actor_KK = LNK_ServeurGet(Ci_LNK_GRAB_KONG, mid_grabbed_by_Kong_LNK_ID, vrai, nofunc, nofunc)
if (o_grabbed_actor_KK)
{
	macro_change_etat("KT_ETAT_Grabbed_by_Kong")		
}

// NOUVELLE GESTION
if( f_time_start_etat > 3.0 || ( ACT_ActionGet() == Action_Fracasse && ACT_ActionFinished() ) )
{
	// act fracasse finie ou cri 3 sec max
	if( ACT_ActionGet() == Action_Fracasse )
	{
		if( EVENT_LIFE_CurLifeGet(ID_LIFE) <= 0.0 )
			f_fatigue_time = 5.0
		else
			f_fatigue_time = 0.0
		macro_change_etat("KT_ETAT_KO_au_sol")
	}
	else
		macro_change_etat("KT_ETAT_fight_KONG")
}


//if ( KT_AwareOfKong() && OBJ_SqrDistHorz( o_Kong) < 100.0)
//{
// 	i_fight_must_dodge = vrai
//	macro_change_etat( "KT_ETAT_fight")
//}
 
// COMPORTEMENT ==============================================================

i_flag_look = vrai
if ( ! i_debut_force)
	v_look_pos = @o_jumpattak_actor  OBJ_PosGet()
if ( KT_AwareOfKong())
	OBJ_BankingGeneralSet( MATH_VecBlendRotate( OBJ_SightGet(), v_jumpattak_sight, 5.0 * TIME_GetDt()), Cv_VerticalVector)

