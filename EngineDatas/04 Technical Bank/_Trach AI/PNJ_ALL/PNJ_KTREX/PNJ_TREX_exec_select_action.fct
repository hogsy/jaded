#include "KT_defines.var"

int			ti_flag_orientation

float		tf_dot_product

vector	tv_new_sight
vector	tv_new_banking
vector	tv_temp

int			ti_anim_frequence
int			ti_action_offset
int			ti_numero
int			ti_action_num
int			ti_non_loop_action
int			ti_context

object	to_main_actor
object	to_torse


//if( ACT_ActionGet() == Action_Fight_GrabTT_fin && !ACT_ActionFinished())
//	return
ti_flag_orientation = vrai
ti_non_loop_action = faux

ti_action_num = ACT_ActionGet()

if (ti_non_loop_action)
{
	// On ne fait rien tant qu'on est dans une anim "one shot"
}
else if (f_joy_norm)
{
	// LE JOY INDUIT UN DEPLACEMENT

	if (i_etat_courant == ETAT_search)
	{
//		if (i_flag_head_search)
//			ACT_ActionSet(Action_Renifle_Marche)
//		else
			ACT_ActionSet(Action_Normal_Marche_Rapide)
	}
	else if (i_etat_courant == ETAT_fight)
	{
		if (i_flag_run)
			ACT_ActionSet(Action_Normal_Trot)
		else
			ACT_ActionSet(Action_Normal_Marche_Rapide)
	}
	else
	{
		if (i_flag_run)
			ACT_ActionSet(Action_Normal_Trot)
		else
			ACT_ActionSet(Action_Normal_Marche_Rapide)
	}
}
else
{
	// PAS DE DEPLACEMENT
	ti_flag_orientation = faux

//	if (i_etat_courant == ETAT_watch)
//		ACT_ActionSet(Action_Observe)
//	else if (i_etat_courant == ETAT_search || i_etat_courant == ETAT_fight)
//		ACT_ActionSet(Action_Renifle_Attente)
//	else
		ACT_ActionSet(Action_Normal_Attente)
}


// ORIENTATION
if (ti_flag_orientation)
{
	f_way_rot_speed	= MATH_FloatBlend(f_way_rot_speed, 6.0, 2.0 * TIME_GetDt())

	tv_new_sight = OBJ_SightGet()

	if (MATH_VecDotProduct(tv_new_sight, v_joy_dir)	< 0.0)
	{
		if (MATH_VecDotProduct(v_joy_dir, OBJ_HorizonGet()) > 0.0)
			tv_new_sight = MATH_VecBlendRotate(tv_new_sight, OBJ_HorizonGet(), f_way_rot_speed * TIME_GetDt())
		else
			tv_new_sight = MATH_VecBlendRotate(tv_new_sight, -OBJ_HorizonGet(), f_way_rot_speed * TIME_GetDt())
	}
	else
	{
		tv_new_sight = MATH_VecBlendRotate(tv_new_sight, v_joy_dir, f_way_rot_speed * TIME_GetDt())
	}
	
	tv_new_banking = Cv_VerticalVector
	
	OBJ_BankingGeneralSet(tv_new_sight, tv_new_banking)
}
else
{
	f_way_rot_speed = 0.0
}

