#include "KT_defines.var"

float		tf_occluders[4]

object	to_occluder_jump
object	to_occluders[4]

int			ti_occluder_cette_trame

vector	tv_dest_temp



// DEST POS PAR DEFAUT
v_dest_pos_avec_occluder = v_dest_pos_sans_occluder


// TEST D'OCCLUDERS
ti_occluder_cette_trame = WAY_LIB_Test_Occluder(OBJ_PosGet() + Cv_VerticalVector, v_sight_sans_occluder, 2.0, v_dest_pos_sans_occluder, -1, tv_dest_temp, to_occluder_jump, &to_occluders[0], &tf_occluders[0], 0)
if( ti_occluder_cette_trame & Ci_OCCLUDER_DEST_POS_IS_IN_OCCLUDER )
{
	// ma cible est dans un occluder : j'ignore l'occluder et j'attaque quand même
	i_occluder_cette_trame = faux
	no_occluder_duration = Cf_no_occluder_duration_min		// permettre de paffer si ma cible est dans un occluder
	i_charge_interdite = vrai		// ne pas charger même si la cible est dans un occluder
}
else if( ti_occluder_cette_trame & Ci_OCCLUDER_START_POS_IS_IN_OCCLUDER )
{
	// pouvoir paffer ma cible qui est au contact alors que moi je suis dans un occluder
	i_occluder_cette_trame = vrai
	no_occluder_duration = Cf_no_occluder_duration_min		// permettre de paffer si ma cible est dans un occluder
	i_charge_interdite = vrai		// ne pas charger même si la cible est dans un occluder
}
else if( ti_occluder_cette_trame != 0 )
{
	// il y a un occluder entre ma cible et moi : je contourne
	i_occluder_cette_trame = vrai
	no_occluder_duration = 0.0
	DBG_RenderVector(OBJ_PosGet() + Cv_VerticalVector, v_sight_sans_occluder * 10, color_rouge)
	v_dest_pos_avec_occluder = tv_dest_temp
}
else
{
	// pas d'occluder : tout droit
	i_occluder_cette_trame = faux
	no_occluder_duration += TIME_GetDt()
}


// ORIENTATION APRES LE TEST D'OCCLUDERS
v_sight_avec_occluder =  v_dest_pos_avec_occluder - OBJ_PosGet()
v_sight_avec_occluder.z = 0.0
if( ! MATH_VecNullEpsilon(v_sight_avec_occluder) )
{
	f_move_dist = MATH_VecNorm(v_sight_avec_occluder)
	MATH_VecSetNormalize(v_sight_avec_occluder)
}
else
{
	v_sight_avec_occluder = OBJ_SightGet()
	f_move_dist = 0.0
}

DBG_RenderVector(OBJ_PosGet() + Cv_VerticalVector, v_sight_avec_occluder * 10, color_vert)

