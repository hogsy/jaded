#include "KT_defines.var"

object		to_old_fight_actor

messageid 	tmid_vision_ID
message	tm_search

int				ti_jack_proie_potentielle
int 			ti_visibility_context
int				ti_type_sol
int				ti_rank

vector		tv_me_to_KK
vector		tv_me_to_Jack

float			tf_dot
float			tf_norm


//====================================================================================
// CHOIX DU FIGHT ACTOR
//====================================================================================

if( i_fight_actor_select_done )
	return

i_fight_actor_select_done = vrai
to_old_fight_actor = o_fight_actor
o_fight_actor = nobody


// CINE ==============================================================================
if( OBJ_CapaTest(Capa_CINE_Attaque_Jack) )
{
	OBJ_CapaSet(none, Capa_CINE_Attaque_Jack)
	if( o_Jack && KT_Target_Check(o_Jack) )
	{
		o_fight_actor = o_Jack
		to_old_fight_actor = o_Jack
		f_time_KONG_not_on_me = 99.0
		f_time_KONG = 0.0
		goto TARGET_SELECTED
	}
}


// JACK ONLY =========================================================================
if( o_Jack && ! o_Kong )
{
	JACK_ONLY:
	if( KT_Target_Check(o_Jack) )
	{
		o_fight_actor = o_Jack
	}
	goto TARGET_SELECTED
}


// KONG ONLY =========================================================================
if( ! o_Jack && o_Kong )
{
	KONG_ONLY:
	if( KT_Target_Check(o_Kong) )
	{
		o_fight_actor = o_Kong
	}
	goto TARGET_SELECTED
}


// KONG & JACK PRESENTS, TEST DE LEUR VALIDITE =========================================

// Valide Jack ou considère qu'il n'y a que Kong
if( ! KT_Target_Check(o_Jack) )
{
	goto KONG_ONLY
}

// Valide Kong ou considère qu'il n'y a que Jack
if( ! KT_Target_Check(o_Kong) )
{
	goto JACK_ONLY
}


// KONG & JACK TOUS 2 VALIDES !!!! =======================================================


// Esquive
if( i_fight_must_dodge )
{
	o_fight_actor = o_Kong
	goto TARGET_SELECTED
}

// Timer force Kong
if( f_time_KONG )
{
	o_fight_actor = o_Kong
	goto TARGET_SELECTED
}

// Attaquer Kong s'il est déjà en danger (Kong ne peut pas protéger Jack
if( @o_Kong Proc_KK_IsInBadSituation(C_ID_Tyranosaure) )
{
	o_fight_actor = o_Kong
	goto TARGET_SELECTED
}

// Jack est sur Kong
if( @o_Jack Proc_KIndigene_Kong_LiaisonStatusGet() != Ci_Kong_KIndigene_LinkStatus_None )
{
	o_fight_actor = o_Kong
	goto TARGET_SELECTED
}

// Jack au sol
if( @o_Jack Proc_KIndigene_Kong_LiaisonStatusGet() == Ci_Kong_KIndigene_LinkStatus_None )
{
	tv_me_to_KK = @o_Kong OBJ_PosGet() - OBJ_PosGet()
	tf_norm = MATH_VecNorm(tv_me_to_KK)
	if (MATH_FloatNullEpsilon(tf_norm))
		tf_dot = 1.0
	else
	{
		tv_me_to_KK /= tf_norm
		tv_me_to_Jack = @o_Jack OBJ_PosGet() - OBJ_PosGet()
		MATH_VecSetNormalize(tv_me_to_Jack)
		tf_dot = MATH_VecDotProduct(tv_me_to_Jack, tv_me_to_KK)
	}
	
	// Kong est sur mon chemin vers Jack
	if( tf_norm < 10 && tf_dot > Cf_Cos45 )
		o_fight_actor = o_Kong
	else
		o_fight_actor = o_Jack
	goto TARGET_SELECTED
}


// TIMERS ================================================
TARGET_SELECTED:
if( ! o_Kong || @o_Kong Proc_KK_FightActorGet() != OBJ_Me() )
{
	f_time_KONG_not_on_me += TIME_GetDt()
}
if( o_Jack && o_fight_actor != o_Jack )
{
	f_time_on_Jack = 0.0
}

