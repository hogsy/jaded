#include "KT_defines.var"

#define		Cf_dist_ouvre_machoire			12.0

int				ti_action
int				ti_bave

object		to_tete
object		to_cou
object		to_torse
object		to_pied
object		to_snap
object		to_canal
object		to_machoire
object		to_bassin
object		to_bone

float			tf_grab
float			tf_dot
float			tf_blend
float			tf_coef
float			tf_dist
float			tf_aide_au_tir_prio
float			tf_sight_min
float			tf_sight_max
float			tf_horizon_min
float			tf_horizon_max
float			tf_banking_min
float			tf_banking_max

vector		tv_sight
vector		tv_pos
vector		tv_retour 
vector		tv_affiche
vector		tv_delta
vector		tv_speed
vector		tv_recal
vector		tv_temp
vector		tv_temp2
vector		tv_pos_min
vector		tv_pos_max


// IK ======================================================
AI_Execute("KT_exec_IK_legs")

AI_Execute("KT_exec_neck")


// Recalage ZDE Fight ======================================================
switch( i_flag_zde_fight_type )
{
	case Ci_zde_fight_type_coup_de_queue :
		to_canal = ANI_CanalObjectGet(103)
		tv_pos = @to_canal OBJ_PosGet()
		COL_ZonePosSet(C_zde_fight, MATH_VecGlobalToLocal( tv_pos - OBJ_PosGet()))
		COL_ZoneSizeSet(C_zde_fight, Cv_zde_fight_coup_de_queue_size)
		break
	
//	case Ci_zde_fight_type_se_releve :
	case Ci_zde_fight_type_corps :
		// corps (grabbed by kong, se relève après un KO au sol)
		tv_pos = OBJ_PosGet()
		tv_pos += OBJ_BankingGet() * 2.0
	//	DBG_RenderVector(OBJ_PosGet(), tv_pos - OBJ_PosGet(), color_jaune)
		COL_ZonePosSet(C_zde_fight, MATH_VecGlobalToLocal( tv_pos - OBJ_PosGet()))
		COL_ZoneSizeSet(C_zde_fight, Cv_zde_fight_corps_size)
		break
		
	case Ci_zde_fight_type_projection_laterale :
		// décalage spécifique pour les anims de proj latérale car perso en l'air alors que le pivot est encore au sol
		to_canal = ANI_CanalObjectGet(Anim_Canal_Ventre)
		tv_pos = @to_canal OBJ_PosGet()
	//	DBG_RenderVector(OBJ_PosGet(), tv_pos - OBJ_PosGet(), color_jaune)
		COL_ZonePosSet(C_zde_fight, MATH_VecGlobalToLocal( tv_pos - OBJ_PosGet()))
		COL_ZoneSizeSet(C_zde_fight, Cv_zde_fight_corps_size)
		break
		
	case Ci_zde_fight_type_charge :
	case Ci_zde_fight_type_projectile :
		// charge
		to_canal = ANI_CanalObjectGet( Anim_Canal_Cou)
		tv_pos = @to_canal OBJ_PosGet()
		tv_pos += @to_canal OBJ_SightGet() * 2.0
//		DBG_RenderVector(OBJ_PosGet(), tv_pos - OBJ_PosGet(), color_jaune)
		COL_ZonePosSet(C_zde_fight, MATH_VecGlobalToLocal( tv_pos - OBJ_PosGet()))
		COL_ZoneSizeSet(C_zde_fight, 	Cv_zde_fight_charge_size)
		break
		
	case Ci_zde_fight_type_coup_de_tete :
		// coup de tete
		to_canal = ANI_CanalObjectGet(Anim_Canal_Tete)
		tv_pos = @to_canal OBJ_PosGet()
		tv_pos += @to_canal OBJ_BankingGet() * 0.5
		tv_pos += @to_canal OBJ_SightGet() * 0.3
		COL_ZonePosSet(C_zde_fight, MATH_VecGlobalToLocal( tv_pos - OBJ_PosGet()))
		COL_ZoneSizeSet(C_zde_fight, 	Cv_zde_fight_coup_de_tete_size)
		break
	
	case Ci_zde_fight_type_machoire :
	default:				
		// machoire
		to_canal = ANI_CanalObjectGet( Anim_Canal_Tete)
		tv_pos = @to_canal OBJ_PosGet() + ( @to_canal OBJ_BankingGet() * 0.7)
		tv_pos += @to_canal OBJ_SightGet() * 0.8
	//	DBG_RenderVector(OBJ_PosGet(), tv_pos - OBJ_PosGet(), color_jaune)
		COL_ZonePosSet(C_zde_fight, MATH_VecGlobalToLocal( tv_pos - OBJ_PosGet()))
//		if( o_fight_actor == o_ANN )
		if( o_fight_actor == o_Jack )
			COL_ZoneSizeSet(C_zde_fight, Cv_zde_fight_machoire_size_ANN)
		else if( i_dernier_etat == ETAT_fight_cible_hauteur )
			COL_ZoneSizeSet(C_zde_fight, Cv_zde_fight_machoire_size_hauteur)
		else
			COL_ZoneSizeSet(C_zde_fight, Cv_zde_fight_machoire_size)
		break
}


// Recalage ZDE Corps ======================================================
to_canal = ANI_CanalObjectGet( Anim_Canal_Ventre) 
tv_pos = @to_canal OBJ_PosGet()
//tv_pos = @to_canal OBJ_PosGet() + ( @to_canal OBJ_BankingGet() * 1.5)
tv_pos += @to_canal OBJ_SightGet() * 1.0
COL_ZonePosSet(C_zde_corps, MATH_VecGlobalToLocal( tv_pos - OBJ_PosGet()))
COL_ZoneSizeSet(C_zde_corps, v_zde_corps_size)


// Recalage ZDE Tete =======================================================
to_canal = ANI_CanalObjectGet( Anim_Canal_Tete)
tv_pos = @to_canal OBJ_PosGet()
tv_pos += @to_canal OBJ_BankingGet() * 0.5
tv_pos += @to_canal OBJ_SightGet() * 0.3
//tv_pos += @to_canal OBJ_SightGet() * 1.0
COL_ZonePosSet(C_zde_tete, MATH_VecGlobalToLocal( tv_pos - OBJ_PosGet()))


// Position de Grab =========================================================
to_canal = ANI_CanalObjectGet( Anim_Canal_Tete)
v_grab_object_pos = @to_canal OBJ_PosGet()		// pour le grab du raptor dans la gueule du TREX
v_grab_object_pos += @to_canal OBJ_BankingGet()

// GFX POUSSIERE ========================================================
AI_Execute("KT_exec_GFX_Smoke")


// Speed anim en Z se cumule : corriger le bug moteur de merde
if ( ACT_CustomBitGet() & CBit_Fix_Cumul_Speed_Z)
{
	tv_speed = DYN_SpeedGetVector()
	tv_speed.z = 0.0
	DYN_SpeedSetVector( tv_speed)
}

// O'scour la bidouille
// RECALAGE EN GRAB
if (i_etat_courant == ETAT_KK_grabbedTT)
{
	if ( o_grabbed_actor_KK_ref && COL_CollideType(COL_C_Wall))
	{
		tv_recal = OBJ_PosGet() - v_grabbed_my_pos_before_rec
		tv_recal -= v_grabbed_my_speed_before_rec * TIME_GetDt()
		tv_recal.z = 0.0
		@o_grabbed_actor_KK_ref OBJ_PosSet( @o_grabbed_actor_KK_ref OBJ_PosGet() + tv_recal)
	}
}

// GFX BLOOD ==============================================================
//AI_Execute("KT_exec_GFX_Blood")


// Propositions des targets de Fight
if( i_etat_courant != ETAT_KK_grabbedTT && i_etat_courant != ETAT_mort )
{
//	if( i_etat_courant == ETAT_KK_choppe_projectile && o_Grab_Attak_Target == o_ANN )
//		tf_aide_au_tir_prio = C_AIDE_AU_TIR_Prio_GrabAnn
//	else if( o_fight_actor == o_ANN )
	if( o_fight_actor == o_Jack )
		tf_aide_au_tir_prio = C_AIDE_AU_TIR_Prio_AttackAnn
	else
		tf_aide_au_tir_prio = C_AIDE_AU_TIR_Prio_Ennemi
	Proc_KongFight_TargetAdd(OBJ_Me(), COL_ZonePosGet(C_zde_corps), COL_ZoneSizeGet(C_zde_corps), tf_aide_au_tir_prio, 0) 		// Valable pour tous les ennemis
	Proc_KongFight_TargetAdd(OBJ_Me(), COL_ZonePosGet(C_zde_tete), COL_ZoneSizeGet(C_zde_tete), tf_aide_au_tir_prio, 0)		// Valable pour les gros perso
}


// BAVE ==================================================================
if( KT_Bave_Enabled() )
{
	f_bave_elapse -= MATH_FloatMin(f_bave_elapse, TIME_GetDt())
	if (!f_bave_elapse)
	{
		f_bave_duration = MATH_RandFloat(5, 10)
		f_bave_elapse = MATH_RandFloat(15, 20)
	}
	
	f_bave_duration -= MATH_FloatMin(f_bave_duration, TIME_GetDt())
	if (f_bave_duration)
		ti_bave = vrai
	else
		ti_bave = faux
}
else
	ti_bave = faux

LIBGFX_BaveTRex(&GFX_Bave_ID[0], &GFX_Bave_Time[0], &GFX_Bave_Pos[0], &GXF_Bave_Length[0], ti_bave)


// POSITION DE MON PROPRE OCCLUDER =========================================
if( o_occluder )
{
	to_tete = ANI_CanalObjectGet(Anim_Canal_Tete)
	to_bassin = ANI_CanalObjectGet(Anim_Canal_Bassin)
	tv_temp = @to_tete OBJ_PosGet() - @to_bassin OBJ_PosGet()
	tv_temp.z = 0.0
	tf_dist = MATH_VecNorm(tv_temp)
	tv_pos = @to_bassin OBJ_PosGet() + (0.5 * tv_temp)
	@o_occluder OBJ_PosSet(tv_pos)
	@o_occluder OBJ_ZoomSet(tf_dist)
}


// OUVERTURE DE LA BOUCHE VS ANN ===========================================
//if( i_etat_courant == ETAT_fight_ANN && ACT_ActionGet() != i_Anim_attente )
//{
//	to_tete = ANI_CanalObjectGet(Anim_Canal_Tete)
//	tf_coef = MATH_FloatLimit(MATH_VecNorm(@to_tete OBJ_PosGet() - @o_fight_actor OBJ_PosGet()), 0.0, Cf_dist_ouvre_machoire)
//	tf_coef /= Cf_dist_ouvre_machoire
//	tf_coef *= tf_coef
//	tf_coef = 1.0 - tf_coef
//	
//	f_machoire_rot_coef = MATH_FloatBlend(f_machoire_rot_coef, tf_coef, 1.0 * TIME_GetDt())
//}
//else
//	f_machoire_rot_coef -= MATH_FloatMin(f_machoire_rot_coef, 4.0 * TIME_GetDt())
//
//to_machoire = ANI_CanalObjectGet(Anim_Canal_Machoire)
//@to_machoire OBJ_RotateLocalX(f_machoire_rot_coef * 0.8)


// OUVERTURE GUEULE VS JACK ===================================
//to_machoire = ANI_CanalObjectGet(Anim_Canal_Machoire)
//if( i_etat_courant == ETAT_fight_JACK 
//	&& ! KT_Action_Attack_EnCours() 
//	&& ! KT_Action_Cri_EnCours() 
//	&& ACT_ActionGet() != Action_Normal_Recul )
//{
//	// en déplacement vers Jack
//	tf_coef = MATH_FloatLimit(MATH_VecNorm(@ao_head_bones[0] OBJ_PosGet() - @get_Kamera OBJ_PosGet()) - 2.0, 0.0, 8.0)
//	tf_coef /= 8.0
//	tf_coef *= tf_coef
//	tf_coef = 1.0 - tf_coef
//	if (tf_coef > 0.5 && f_machoire_clap_duration > 2.0)
//		f_machoire_clap_duration = -0.35
//
//	if (tf_coef && i_SND_flag_play_growl && TIME_Elapsed(f_SND_between_growl_duration, 1.0))
//	{
//		i_SND_flag_play_growl = faux
//		f_SND_between_growl_duration = TIME_Get()
//		SND_RequestPlayOnObjCanal(Ci_SND_Growl, Anim_Canal_Tete)
//	}
//
//	f_machoire_rot_coef = MATH_FloatBlend(f_machoire_rot_coef, tf_coef, 10.0 * TIME_GetDt())
//	if (f_machoire_clap_duration < 0.0)
//		f_machoire_rot_coef *= f_machoire_clap_duration / -0.35
//
//	if (tf_coef)
//	{
//		i_flag_bite_ok = faux
////		i_flag_bite = vrai
//	}
//}
//else
//{
//	i_SND_flag_play_growl = vrai
//	f_machoire_rot_coef -= MATH_FloatMin(f_machoire_rot_coef, 4.0 * TIME_GetDt())
//}
//
//@to_machoire OBJ_RotateLocalX(f_machoire_rot_coef * 1.2)



// GFX PARTICULES ===================================
if( f_time_gfx_particules )
{
	// ZONE DE GENERATION DES PARTICULES PAR DEFAUT
	to_bone = ANI_CanalObjectGet(Anim_Canal_Tete)
//	tf_sight_min = - 5.0
//	tf_sight_max = 5.0
//	tf_horizon_min = - 5.0
//	tf_horizon_max = 5.0
//	tf_banking_min = - 5.0
//	tf_banking_max = 5.0
//	switch( ACT_ActionGet() )
//	{
//		case Action_PAF_Fort_Gauche :
//		case Action_PAF_Moy_Gauche :
//		case Action_PAF_Repousse :
//			tv_temp = @to_bone OBJ_HorizonGet()
////			tf_sight_min = - 0.25
////			tf_sight_max = 0.25
////			tf_horizon_min = 1.0
////			tf_horizon_max = 5.0
////			tf_banking_min = - 0.25
////			tf_banking_max = 0.25
//			tf_sight_min = - 2.0
//			tf_sight_max = 2.0
//			tf_horizon_min = 1.0
//			tf_horizon_max = 5.0
//			tf_banking_min = - 2.0
//			tf_banking_max = 2.0
//			break
//		case Action_PAF_Fort_Droite :
//		case Action_PAF_Moy_Droite :
//		case Action_PAF_Fort_Face :
//		case Action_PAF_Moy_Face :
//		case Action_PAF_Fort_Dos :
//		case Action_PAF_Moy_Dos :
//			tv_temp = - @to_bone OBJ_HorizonGet()
////			tf_sight_min = 0.25
////			tf_sight_max = - 0.25
////			tf_horizon_min = - 1.0
////			tf_horizon_max = - 5.0
////			tf_banking_min = 0.25
////			tf_banking_max = - 0.25
//			tf_sight_min = 2.0
//			tf_sight_max = - 2.0
//			tf_horizon_min = - 1.0
//			tf_horizon_max = - 5.0
//			tf_banking_min = 2.0
//			tf_banking_max = - 2.0
//			break
//		case Action_Fight_GrabTT_Paf :
//		case Action_Paf_Mur_Petit :
//		case Action_Paf_Mur_Tombe :
//		case Action_Paf_Rapide_Agonie_G :
//		case Action_Paf_Rapide_Agonie_D :
//			tv_temp = - @to_bone OBJ_SightGet()
////			tf_sight_min = - 5.0
////			tf_sight_max = - 1.0
////			tf_horizon_min = - 0.25
////			tf_horizon_max = 0.25
////			tf_banking_min = - 0.25
////			tf_banking_max = 0.25
//			tf_sight_min = 5.0
//			tf_sight_max = 1.0
//			tf_horizon_min = - 2.0
//			tf_horizon_max = 2.0
//			tf_banking_min = - 2.0
//			tf_banking_max = 2.0
//			break
//		default:
//			tv_temp = @to_bone OBJ_BankingGet()
//			break
//	}
//	tf_horizon_min *= -1
//	tf_horizon_max *= -1
//	tv_temp *= -1
//	tv_pos_min = (tf_sight_min * @to_bone OBJ_SightGet()) + (tf_horizon_min * @to_bone OBJ_HorizonGet()) + (tf_banking_min * @to_bone OBJ_BankingGet())	// Speed min
//	tv_pos_max = (tf_sight_max * @to_bone OBJ_SightGet()) + (tf_horizon_max * @to_bone OBJ_HorizonGet()) + (tf_banking_max * @to_bone OBJ_BankingGet())	// Speed max
//	DBG_RenderBox(to_bone, @to_bone MATH_VecGlobalToLocal(tv_pos_min), @to_bone MATH_VecGlobalToLocal(tv_pos_max), color_rouge)
//	DBG_RenderVector(@to_bone OBJ_PosGet(), tv_temp * 10.0, color_blanc)
	tv_pos = @to_bone OBJ_PosGet()
	if( v_gfx_particules_pos == Cv_NullVector )
		v_gfx_particules_pos = tv_pos
	else
		v_gfx_particules_pos = MATH_VecBlend(v_gfx_particules_pos, tv_pos, 10 * TIME_GetDt())
//	DBG_RenderSphere(v_gfx_particules_pos, 0.5, color_rouge)
//	KT_GFX_Particules_Salive(v_gfx_particules_pos, tv_pos_min, tv_pos_max, tv_temp)
	
	KT_GFX_Particules(v_gfx_particules_pos, v_particules_paf_dir)
}
else
{
	v_gfx_particules_pos = Cv_NullVector
}
f_time_gfx_particules -= MATH_FloatMin(f_time_gfx_particules, TIME_GetDt())

