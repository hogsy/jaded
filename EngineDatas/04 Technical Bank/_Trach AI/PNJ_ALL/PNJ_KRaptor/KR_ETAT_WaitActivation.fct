
#include"KR_defines.var"

message 	tmsg_trigger 

// SORTIE ETAT ===================================================================
if (i_sort_etat)
{
	f_wait_before_next_attack	= Cf_delai_fightAfterActive
	i_sort_etat = faux
	return
}

// INITIALISATION ETAT ==============================================================
if (i_etat_courant != ETAT_WaitActivation)
{
	i_dernier_etat = i_etat_courant
	i_etat_courant = ETAT_WaitActivation

	if (fct_last_etat)
	{
		i_sort_etat = vrai
		AI_Execute(fct_last_etat)
	}

//	i_script_running = faux
//	i_script_next = vrai
//	i_script_indice = 0

	fct_last_etat = AI_TrackCurGet()
	f_time_start_etat = 0.0
}
else
{
	f_time_start_etat += TIME_GetDt()
}

// ANALYSE =====================================================================

//// PAFS ------------------------------------------------------------------
//AI_Execute("KR_exec_check_paf")
//if( o_paf_actor )
//{
//	KR_Select_Paf_Etat(fct_track_change)
//	if( fct_track_change != nofunc )
//		macro_change_etat(fct_track_change)
//}
//
//// GRAB ------------------------------------------------------------------
//o_grabbed_actor_KK = LNK_ServeurGet(Ci_LNK_GRAB_KONG, mid_grabbed_by_Kong_LNK_ID, vrai, nofunc, nofunc)
//if (o_grabbed_actor_KK)
//	macro_change_etat("KR_ETAT_grabbed")


// check for activation
if ( i_wait_trigger_attack && AI_TriggerIsValid(trigger_attaque) && call_trigger(trigger_attaque) )
{
	switch(target_selection)	
	{
		case 0 :
			o_force_target = o_triggered_target
			o_fight_actor = o_force_target
			if (!o_fight_actor)
				DBG_Error("o_triggered_target est a nobody alors qu'on me demande de le considerer comme l'ennemi a attaquer")
			break
			
		case 1 :
			tmsg_trigger = AI_TriggerGetMsg(trigger_attaque)
			o_force_target = tmsg_trigger.msg_gao5
			o_fight_actor = o_force_target
			Check_This_Gao5(o_fight_actor)
			break
			
		case 2 :
			// normal fight actor
			break
	}

	if (o_fight_actor == o_KONG)
	{
		macro_change_etat("KR_ETAT_fight_KONG")
	}
	else if (o_ANN && o_fight_actor == o_ANN)
	{
		macro_change_etat("KR_ETAT_fight_ANN")
	}
}

if ( (i_net_mode == Ci_NETWORK_USE_Triggered) && AI_TriggerIsValid(t_net_triggerNavigation) && call_trigger(t_net_triggerNavigation) )
{
	KR_InitNetworkFollowing(o_net_head,i_net_preHeadLinkMove)	
	macro_change_etat("KR_ETAT_FollowNetwork")
}


// COMPORTEMENT ===============================================================

ACT_ActionSet(Action_Normal_Attente)
