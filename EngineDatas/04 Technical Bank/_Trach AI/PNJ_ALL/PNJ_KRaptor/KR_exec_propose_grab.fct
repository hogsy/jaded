#include "KR_defines.var"

messageid		tmid_proposition

object	to_serveur

float		tf_dist

vector	tv_temp
vector	tv_sens
vector	tv_serveur_pos
vector	tv_ma_pos

tmid_proposition = pop

if ( i_etat_courant == ETAT_Desintegrate)
{
	LNK_ServeurRefuse(tmid_proposition)
	return
}

to_serveur = MSG_GlobalGetGao(tmid_proposition, SERVEUR)
tv_ma_pos = OBJ_PosGet()
tv_serveur_pos = @to_serveur OBJ_PosGet()
if( to_serveur != o_bone_ride_KK && MATH_AbsFloat(tv_serveur_pos.z - tv_ma_pos.z) > 2.0 )
{
	LNK_ServeurRefuse(tmid_proposition)
	return	
}

tv_temp = tv_serveur_pos
tv_temp -= OBJ_PosGet()
tv_temp.z = 0.0
tf_dist = MATH_VecDotProduct(tv_temp, tv_temp)
KRDBG_DRAWVECTOR(Ci_DBG_DRAW_TMP,OBJ_PosGet(), tv_temp, color_bleu)

if( ( to_serveur == o_bone_ride_KK || tf_dist <= 64.0 )
	&& ( LNK_GrabStatusGet(tmid_proposition) & ( Ci_GrabKong_Type_Petit | Ci_GrabKong_Type_TRex_Choppe ) ) )
{
	// La distance est bonne
	tv_sens = LNK_GrabVectorGet(tmid_proposition)
	KRDBG_DRAWVECTOR(Ci_DBG_DRAW_TMP,OBJ_PosGet(), tv_sens, color_jaune)
	if ( to_serveur  == o_bone_ride_KK )	
		tf_dist = 0.001
	else
	{
		tf_dist = MATH_FloatMin(tf_dist, 999)
		tf_dist += Ci_Grab_Kong_Pond_Raptor_Kong
		if( ! EVENT_LIFE_CurLifeGet(ID_LIFE))
			tf_dist += Ci_Grab_Kong_Pond_Dead
		if( ( ! MATH_VecNullEpsilon(tv_sens) ) && MATH_VecDotProduct(tv_sens, tv_temp) > 0.0 )
			tf_dist += Ci_Grab_Kong_Pond_Bad_Axe 			// BAD AXE
	}
	LNK_ClientPropose(tmid_proposition, tf_dist)
	LNK_GrabKong_TypeSet( tmid_proposition, Ci_GrabKong_Type_Petit)
}
else
	LNK_ServeurRefuse(tmid_proposition)

