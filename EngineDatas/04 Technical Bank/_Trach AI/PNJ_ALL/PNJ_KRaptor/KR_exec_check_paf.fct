#include "KR_defines.var"

int					ti_rank
int					ti_paf_event_nb
int					EVT_Canal
int					ti_i
int					ti_paf_blood

float				tf_interet
float				tf_interet_courant
float				tf_puissance

vector			tv_bras_de_levier

object			EVT_Pere
object			EVT_Target
object			to_bone

message		tm_msg_filter

messageid		tmid_paf_event
messageid		tmid_interet_event
messageid		tmid_vision_event

float				tf_paf_coef
int					ti_life_moins_coef

int					ti_paf_type
int					ti_paf_projete

int					ti_life_avant


o_paf_actor = nobody				// avant le return pour dire qu'il n'y a pas de nouveau paf

if (i_flag_paf_check_done)
	return

i_flag_paf_check_done = vrai

ti_life_avant = EVENT_LIFE_CurLifeGet(ID_LIFE)

ti_paf_type = 0
ti_paf_projete = 0
ti_paf_blood = 0

MSG_SetNull(tm_msg_filter)
tm_msg_filter.msg_gao1 = OBJ_Me()
ti_rank = -1

for( 	tmid_paf_event = MSG_GlobalSearchIntGao(C_EVENT_TYPE_Paf, &ti_rank, tm_msg_filter);
		MSG_GlobalIsValid(tmid_paf_event);
		tmid_paf_event = MSG_GlobalSearchIntGao(C_EVENT_TYPE_Paf, &ti_rank, tm_msg_filter))
{
	EVT_Pere = EVENT_PereGet(tmid_paf_event)
	EVT_Canal = EVENT_PafCanalGet(tmid_paf_event)
	
	if( i_etat_courant == ETAT_KK_grabbed )
		if( EVT_Pere != o_grabbed_actor_KK )
			continue		// en état grabbé je ne prend que les pafs qui me sont envoyés par l'acteur qui me grabbe
	
	if( EVT_Pere == o_uncol_actor )
		continue		// qd KONG me grabbe et se fait paffer, il ne peut pas me paffer en tombant sur moi
	
	ti_paf_type |= EVENT_PafTypeGet(tmid_paf_event)		// cumul des types des pafs
	
	if( ! (ti_paf_type & C_PAF_KK_Repousse ) )	
		ti_paf_blood = vrai
	
	if (o_ANN && EVT_Pere == o_ANN)
	{
		if (ti_paf_type & (C_PAF_KK_Moyen | C_PAF_KK_Fort))
		{
			// eliminate anything but PAF FAIBLE from Ann
			ti_paf_type &= (~ (C_PAF_KK_Moyen | C_PAF_KK_Fort) )
			ti_paf_type |= C_PAF_KK_Faible
		}
	}	

	// if Kong paffed me, keep at him for a while
	if (EVT_Pere == o_KONG)
	{
		f_locked_FA_timer = Cf_delai_fightKongApresPaf
		o_locked_FA = o_KONG
		
		if( KR_Pafs_Effects_Check(ti_paf_type) )
			@o_KONG Proc_KK_Pafs_Effects(faux)
	}
	
// test du paf faible	
#ifdef Ci_DBG_ALL_KONG_PAF_FAIBLE
ti_paf_type &= (~C_PAF_KK_Moyen)
ti_paf_type |= C_PAF_KK_Faible
#endif

	if( ! ( ti_paf_type & C_PAF_KK_Ecrasement ) )
	{
		if( ti_paf_type & C_PAF_KK_Fort )
		{
			ti_paf_projete = 1
		}
		else if (ti_paf_type & C_PAF_KK_Moyen)
		{
			ti_paf_projete = 1
		}
	}
	else
	{
//		DBG_TraceString("- PAF_Mise_Au_Sol ")
		ti_paf_projete = -1	// ecrase au sol
		i_paf_mortel = vrai
	}

	if( ti_paf_type & C_PAF_KK_KiTue )
	{
//		DBG_TraceString("- PAF KK Tue ")
		i_paf_mortel = vrai
	}
	
	if ( KR_IsAirborne())
	{
		if ( ti_paf_type & C_PAF_KK_Repousse  )
			continue
		else
		{
			ti_paf_projete = 1		// dans tous les cas, paffé en l'air -> effet baseball
			DBG_TraceString("KRAPTOR : paf en l'air => projete")
			DBG_TraceEOL()
		}
	}
	
	tf_puissance = EVENT_PafPuisGet(tmid_paf_event)
	v_paf_dir = EVENT_PafDirGet(tmid_paf_event)
	v_paf_dir.z = 0.0
	if( MATH_VecNullEpsilon( v_paf_dir))
		v_paf_dir = OBJ_SightGet()
	else 
		MATH_VecSetNormalize(v_paf_dir)
	
	KRDBG_DRAWVECTOR(Ci_DBG_DRAW_PAF, OBJ_PosGet()+cvector(0,0,1.0), v_paf_dir * 5, color_cyan)
	if( ! i_DBG_immortal_ON )
	{
		if (i_paf_mortel)
			EVENT_LIFE_CurLifeSet(ID_LIFE, 0.0)
		else if ( !(ti_paf_type & C_PAF_KK_Repousse))
		{
			if( EVT_Canal == Anim_Canal_Tete )
				tf_puissance *= 2.0
			EVENT_LIFE_LifeChange(ID_LIFE, tf_puissance)
		}
	}
	o_paf_actor = EVT_Pere
	o_last_paf_actor = o_paf_actor
	
#ifdef Ci_DBG_ALL_KONG_PAF_FORT
//PAF FORT: revolle tout le temps
ti_paf_projete = 1
#endif
	
	// VISUAL PAF =========
	for (ti_i = 0; ti_i < 10; ti_i++)
	{
		if (! af_blood_delay[ti_i])
		{
			if( EVT_Canal == -1)
				EVT_Canal = Anim_Canal_Bassin
			ai_blood_bone_index[ti_i] = EVT_Canal
			
			af_blood_delay[ti_i] = 1.0
			av_blood_bone_offset[ti_i] = EVENT_PafBoneOffsetGet(tmid_paf_event)
			av_blood_bone_normale[ti_i] = EVENT_PafBoneNormalGet(tmid_paf_event)
			break
		}
	}
}

if (o_paf_actor)
{
	if( ti_paf_blood && ti_life_avant > 0.0 && i_etat_courant != ETAT_KK_grabbed)
		KR_GFX_Particules(OBJ_PosGet() + (OBJ_BankingGet()*2.0), v_paf_dir)
	
	i_paf_type = ti_paf_type
	i_paf_projete = ti_paf_projete
}

if( ti_life_avant && ! EVENT_LIFE_CurLifeGet(ID_LIFE) )
{
	i_paf_mortel = 2			// je viens de mourir : son différent
}

