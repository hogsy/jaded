#include "PNJ_KSpider_defines.var"

int			ti_flag_ok

vector	tv_pos

if (i_flag_sortie_etat)
{
	i_flag_sortie_etat = faux
	return
}

if (i_etat_courant != ETAT_Disparition)
{
	// INTIALISATION
	i_dernier_etat = i_etat_courant
	i_etat_courant = ETAT_Disparition
	
	if (fct_last_etat)
	{
		i_flag_sortie_etat = vrai
		AI_Execute(fct_last_etat)
	}
	
	fct_last_etat = AI_TrackCurGet()
	
	f_delay_before_jump = MATH_RandFloat(0.25, 0.75)

	f_time_start_etat = 0.0
}
else
{
	f_time_start_etat += TIME_GetDt()
}
	

// ANALYSE ===============================================================
if (f_time_start_etat > f_delay_before_jump)
{
//	if( ! OBJ_FlagsIdentityTest(OBJ_C_IdentityFlag_Generated) )
	if( ! o_father )
		macro_change_etat("PNJ_KSpider_ETAT_Attente")
	else
		OBJ_Destroy()		// pas destroy avec un else ensuite !!! (compilation IA en C)		
}

// COMPORTEMENT =========================================================
tv_pos = OBJ_PosGet()
tv_pos.z -= TIME_GetDt() / f_delay_before_jump
OBJ_PosSet(tv_pos)

