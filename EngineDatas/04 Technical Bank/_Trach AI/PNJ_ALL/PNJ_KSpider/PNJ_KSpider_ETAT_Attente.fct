#include "PNJ_KSpider_defines.var"

int			ti_i
int			ti_flag_ok

object	to_spider

if (i_flag_sortie_etat)
{
	i_flag_sortie_etat = faux
	return
}

if (i_etat_courant != ETAT_Attente)
{
	// INTIALISATION
	i_dernier_etat = i_etat_courant
	i_etat_courant = ETAT_Attente
	
	if (fct_last_etat)
	{
		i_flag_sortie_etat = vrai
		AI_Execute(fct_last_etat)
	}
	
	OBJ_FlagInvisibleSet(vrai)

	fct_last_etat = AI_TrackCurGet()
	
	f_time_start_etat = 0.0
}
else
{
	f_time_start_etat += TIME_GetDt()
}

// ANALYSE ===============================================================
if (i_flag_can_be_there)
{
	for (ti_i = 0; ti_i < spider_nb - 1; ti_i++)
	{
		to_spider = OBJ_Duplicate(OBJ_PosGet())
		@to_spider OBJ_FlagInvisibleSet(vrai)
		@get_PNJ_KSpider_path to_spider o_father = OBJ_Me()
	}
	
	macro_change_etat("PNJ_KSpider_ETAT_Apparition")
}

// COMPORTEMENT =========================================================

