// Define at least one function in a track
// function track0 = "name"
//function track1 = "ci_reflex"
function track2 = "ci_init"
// function track3 = "name"
// function track4 = "name"

// Capa0 = Ce Perso est Appararu au moins une fois
// Capa1 = Ce Perso est Mort

int		i_MainActor = enum("0-Kong" 0 "1-Jack" 1)

separator"Declanchement"
trigger				t_trigger_activ										// Trigger d'activation (Passe au dessus de tous les autres conditions)
object				o_decl_actor_capa								// Perso qui declanche (Distance si pas de Gao)
int						i_decl_capa					= Enum_AllCapa	// 0 = Acteur Declanché 1= Acteur Mort.
int						i_decl_actor_distance		= enum ( "Jack" 0 "Ann" 1 "Kong" 2 "Marin" 5)	// Perso principaux pour le test de distance (si pas de o_decl_actor_distance )
object				o_decl_actor_distance 							// Acteur specifique pour le test de distance (ex le radeau)
float					f_decl_distance				= 30				// Distance de declanchement (sauf si declancheur GAO Precisé)
float					f_decl_delay					= 0				// Attente avant Apparition

separator"Generateur"
int						i_duplicate										= enum("Non" 0 "Oui Type Projectile" 1 ) //"Oui Type Generateur" 2)
int						i_nbr_max_total_en_fight					= 4			// Nbr max d'enemi en fight (global a tous les acteurs generateurs)
int						i_nbr_max_fight_pourmoi					= 2			// Nbr max d'ennemi que ce perso genere en meme temps
int						i_nbr_max_a_generer						= 8			// Nbr Total d'ennemi a générer

separator"Visible"
float					f_delai_apparition				= 3.0				// Delai avant apparition
int						i_se_recache_si_paf			= vrai_faux		// Permet d'abborter une attaque
object				o_deplacement_simple							// Gao de desitination (si on veut un deplacement simple)
object				o_1st_wp 											// 1er Wp du Chemin a suivre avant Attaque. (si on veut un deplacement plus complex)
float					f_deplacement_speed		= 10.0			// Vitesse de deplacement
float					f_delai_disparition			= 0.0				// Delai avant disparition
float					f_delai_inactif					= 2.0				// Delai d'Inactivité avant Loop du comportement sur l'apparition.

separator"Life"
int						i_energie						= 6				// Nbr de point de vie.
int						i_energiecur					
int						i_attackslot						= 1

separator"Attaque"
object				o_attaque_object																							// Si precisé on attaque ce GAO
int						i_attaque_id					= enum ("none" -1 "Jack" 0 "Ann" 1 "Kong" 2 "Marin" 5)	// Perso a attaquer (None = Pas d'attaque)
int						i_attaque_type					= enum("Droite" 0 "Saut" 1 "Suivre" 2 "Cercle" 3)							// Type d'attaque
float					f_attaque_droite_speed 	= 15.0																	// Vitesse de l'attaque droite
float					f_attaque_saut_speed 		= 4.0																		// Vitesse de l'attaque saut
float					f_attaque_saut_distancemax = 0.0
float					f_attaque_suivre_speed 	= 3.0																		// Vitesse de l'attaque suivre
float					f_attente_apres_attaque	= 3.0																		// Attente apres un PAF (N'est plus dangeureux)
float					f_dist_attaque_suivre		= 5.0																		// Distance a partir de laquelle le perso approche pour attaquer
int						i_test_condition_entre_attaques	= faux_vrai														// Indique si apres une disparition, on reteste les conditions ou pas avant de resortir
float					f_hauteur_attaque			= 0.0																		// Offset Z d'attaque par rapport aux pivots
int						i_stop_speed_if_hit			= vrai_faux																// Indique si oui ou non on affecte la vitesse de deplacement lors des impactes
float					f_paf_acceleration 			= 1.0																		// Vitesse de reaceleration apres un paf.
int						i_suit_terrain					= vrai_faux																// Indique si oui ou non l'objet suit le terrain au cours de ses déplacements

private float			f_paf_coef = 1.0

separator "bull rush"
float					f_bullrush_distmin			= 0
float					f_bullrush_distmax			= 0
float					f_bullrush_speedfactor		= 4
int						i_bullrush_overrun			= vrai_faux
private	vector	v_bullrush_target
private	float		f_bullrush_distance
private	int			i_bullrush_hit = 0

separator "circular attack of the monk"
float					f_circular_radiusmin			= 0
float					f_circular_radiusmax			= 0
float					f_circular_attackperiodmin	= 2
float					f_circular_attackperiodmax= 4
float					f_circular_attackspeed
private float			f_circular_attacktime
private float			f_circular_sens
private float			f_circular_cursens
private float			f_circular_senstimer

separator "Snap'"
vector				v_snap_offset
float					f_snap_radius = 0.6

private vector		v_pos_init
private vector		v_pos_last
private float			f_time_ref
private float			f_delta_H
private vector		v_dir
private object		o_attaque
private object		o_paf_actor
private vector		v_paf_dir
private int			i_paf_type
private int			i_paf_puissance
private float			f_zoom
private float			f_zoom_init
private vector		v_target_pos
private int			i_cur_mode 
private int			i_old_mode
private object		o_simultanetch[20]
private int			i_nbr_de_generation
private network	n_network
private	int			mi_GFXPAF