float		tf_dist
vector	tv_deplacement 

#include "ci_defines.var"

i_cur_mode = Ci_mode_att_droite
if (i_cur_mode != i_old_mode)
{
	// INIT
	i_old_mode = i_cur_mode
	v_target_pos = @o_attaque OBJ_PosGet() + cvector(0,0, f_hauteur_attaque)
	v_dir = MATH_VecNormalize(v_target_pos - OBJ_PosGet())
	f_time_ref = TIME_Get()
	
	if (COL_HasZDM() && i_suit_terrain)
	{
		COL_ColSetActivationSet(C_bit_zdm_pied, none)
		DYN_On()
		DYN_FlagsSet(DYN_C_BasicForces + DYN_C_VectorFriction, none)
		DYN_GravitySet( Cv_NormalGravity )
		DYN_FrictionVectorSet( cvector( 1, 1, 1) )
		DYN_FrictionSet(1)
	}
}

AI_Execute("ci_exec_test_attaque_suivre")
AI_Execute("ci_exec_test_kill_target")
AI_Execute("ci_exec_timeout")

tv_deplacement = v_dir * (f_attaque_droite_speed * TIME_GetDt())
tv_deplacement *= f_paf_coef
if (COL_HasZDM() && i_suit_terrain)
	DYN_SpeedSetVector( v_dir * (f_attaque_suivre_speed * f_paf_coef ))
else
	OBJ_PosSet( OBJ_PosGet() + tv_deplacement )

OBJ_BankingGeneralSet(MATH_VecBlendRotate(OBJ_SightGet(),tv_deplacement,10.0 * TIME_GetDt()), Cv_VerticalVector)