#include "PNJ_Scorpion_defines.var"

// Define at least one function in a track
function track0 = "PNJ_Scorpion_Init"
// function track1 = "name"
// function track2 = "name"
// function track3 = "name"
// function track4 = "name"

separator "CONFIGURATION"
int								i_modele = enum("1 - Standard (Normal)" 1 "2 - Petit (No Grab)" 2 "3 - Gros (Special Grab)" 3)
int								i_grab_allowed = enum("Selon Modele" -1 "Grab Allowed" 1 "Grab Forbidden" 0)

separator "SF"
int								i_SF_NePasSeRejouerSiMort		= vrai_faux		// Flag qui indique si l'acteur gere ou pas un SF de mort
private int					i_SF_AlreadyDead						= -1				// N° du SF (Alloué Dynamiquement)

separator "TARGET"
trigger						trigger_attaque
int								target_selection = enum("IA" 0 "Trigger GAO5" 1)
object						o_force_target
object						o_ignore_target

separator "BV LIMITATION"
object			BV_ZoneTerritoire

separator "BALADE"
float							rayon_balade = 4.0

separator "APPARITION"
object						o_start_wp
float							on_net_speed_coef		= 1.5
private network			n_net	

separator "Deplacement"
#include "ROOT\EngineDatas\04 Technical Bank\AI Models\Global Library\exec_deplacements.var"

// ETAT
private int					i_etat_courant				= -1
private int					i_dernier_etat				= -1
private int					i_sort_etat
private int					i_etat_phase

private float					f_time_start_etat
private float					f_time_etat_phase

private function			fct_last_etat
private function			fct_main_etat

// ANALYSE
//private int				i_flag_audio_check_done
private int				i_flag_visual_check_done
private int				i_flag_paf_check_done
//private int				i_flag_collision_check_done
private int				i_flag_shoot_check_done
//private int				i_flag_budies_check_done
//private int				i_flag_vala_check_done
//private int				i_flag_check_best_interet_done

// MAIN ACTOR
private object				o_main_actor			

// ON SCREEN ?
private float					f_on_screen_pourcent
private float					f_on_screen_duration

// BEST TARGET
private int					i_flag_change_target
private float					f_time_change_target
private messageid		mid_best_interet

// PERCEIVED
private int					i_perceived_main_actor_index
private int					i_perceived_best_actor_index

private int					i_perceived_bit_field
private int					i_perceived_actor_nb
private int					ai_perceived_seen[20]
private int					ai_perceived_accessible[20]
private int					ai_perceived_territory[20]
private int					ai_perceived_status[20]
private int					ai_perceived_hiding_place_index[20]
private int					ai_perceived_ID[20]
private int					ai_perceived_in_small_cone[20]
	
private float					af_perceived_dist[20]
private float					af_perceived_interest[20]

private vector				av_perceived_position[20]

private object				ao_perceived_actor[20]

// UNCOLLIDE LIST
private int					i_uncollide_gao_nb
private float					af_uncollide_duration[100]
private object				ao_uncollide_gao[100]

// BUDY
private int					i_budy_nb
private object				o_nearest_budy
private object				ao_budy[20]
private messageid		amid_budy_vision_event[20]
private float					af_budy_size[20]

// VISIBILITY EVENT
messageid					mid_visibility

// DEPLACEMENT
private float					f_joy_norm
private float					f_way_length
private vector				v_joy_dir

private float					f_stop_duration

// GRID PONDERATION
private float					af_way_ponderation[16]
private float					af_way_dyn_ponderation[4] = (1.0, 0.0, 0.0, 0.0)

// ACTION SPEED COEF
private int					i_flag_dont_change_action

private float					f_action_speed_coef
private float					f_action_speed_max

// COLLISION
private float					f_delay_until_last_ground_col

private vector				v_ground_normale = Cv_VerticalVector

// PAF
//private object				o_paf_actor

private int					i_paf_type
private int					i_flag_paf_important
private int					i_flag_paf_moyen
private int					i_flag_paf_faible
private int					i_seuil_paf_important
private int					i_seuil_paf_moyen

private float					f_paf_rot_speed
private float					f_jauge_accumulation

private vector				v_paf_dir

// LIFE
separator "Life"
private float					f_lifecur
float							f_life = 100
float							f_size_coef							= -1.0		// -1 = Valeur par defaut taille aleatoire sinon c'est cette taille qui est utilisé.
float							f_randsize_coef_min				= 0.6			// Rand Min
float							f_randsize_coef_max			= 1.4			// Rand Max

// GRAB
private int					i_grab_disable
private int					i_grab_hit_enable

private float					f_duration_before_next_paf

private object				o_grab_actor

private messageid		mid_grab_actor_LNK_ID

// JUMP
private int					i_flag_dodge_shot_jump

private float					f_delay_before_next_jump
private float					f_jump_duration
private float					f_jump_freq_coef

private vector				v_jump_dest_pos
private vector 				v_jump_impulsion
private vector				v_jump_dodge_pos


// OBBOX
private float					f_obbox_size_coef = -1.0

// TRIGGER
private int					i_flag_trigger_used

// JAUGE ESQUIVE RESEVIL4
private float					f_jauge_esquive

// DASH
private float					f_dash_duration

// ANIM MIX
private int					i_bone_nb
private int					ai_bones[30]

// INIT POS
private vector				v_init_pos

// DEVORE
private float					f_delay_between_bite

// ULTRA TAG
private int					i_ultra_tag_nb
private object				ao_ultra_tag[20]

// TERRITOIRE
private int					i_my_territory = -1

// POINT DE VIANDE
private float					f_point_de_viande = Cf_Scorpion_Meat_Point

// TEST QUATERNION
private int					i_quat_index

private float					f_quat_last_time
private float					af_quat_time[10] = (-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0)
private float					af_quat_coef[10] 

private vector				av_quat_start[10]
private vector				av_quat_end[10]

// BONES
private object				o_bassin
private object				o_queue_2

// SOUND
private int					i_SND_flag_attaque_hors_champs
private int					i_SND_flag_death_played

private int					SND_move_1_loop	= -1
private int					SND_move_2_loop	= -1
private int					SND_grab_loop		= -1
private int					SND_burn_loop		= -1

private float					f_burn_duration
private float					f_burn_on_ground_duration
private float					f_time_last_paf_sound
private float					f_delay_between_paf_sound

private float					f_SND_burning_duration
private float					f_SND_between_scream_duration


// DESYNCRHO IDLE
private float					f_idle_rot_angle

// CUMUL
private	float				f_paf_cumul_dmg = 8.0
private	float				af_paf_cumul_time[20]
private	float				af_paf_cumul_dmg[20]
private	int					i_paf_cumul_nb = 0

// DODGE SIDE SIGN
private float					f_dodge_side_sign
private float					f_delay_before_next_dodge

// TRAME NB
private int					i_frame_nb

// PAF REPOUSSE CPT
private int					i_flag_grab_hit_cpt

// BLOOD
private int					i_flag_can_gen_blood