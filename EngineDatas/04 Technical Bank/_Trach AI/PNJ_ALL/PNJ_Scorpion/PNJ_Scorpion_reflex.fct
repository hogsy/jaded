#include "PNJ_Scorpion_defines.var"

int				ti_ani_mode

object		to_me

vector		tv_speed
vector		tv_ground_normale


// LIFE DISPLAY ==================================
#ifndef _FINAL_
if( f_lifecur && @"univ" i_cheat_page == 3 )
	Str_DisplayFloatOnce(f_lifecur, VIEW_3dWorldTo2d(0, OBJ_PosGet()))
#endif
// LIFE DISPLAY ==================================

// ATTAQUE HORS CHAMPS ===========================================================
if (i_SND_flag_attaque_hors_champs && i_perceived_best_actor_index != -1 && af_perceived_dist[i_perceived_best_actor_index] < 4.0 && f_on_screen_pourcent < 0.0)
{
	i_SND_flag_attaque_hors_champs = faux
	SND_RequestPlay(SND_BITE)
}

// MORT ??? =======================================================================
if (i_etat_courant != ETAT_FADE && COL_GMatReportGet(Gmat_KK_Face_de_mort) != -1)
	OBJ_Destroy()

// PONDERATION ===================================================================
AI_Execute("PNJ_Scorpion_exec_set_ponderation")

// ANALYSE =======================================================================
//i_flag_audio_check_done			= faux
i_flag_visual_check_done			= faux
i_flag_paf_check_done				= faux
//i_flag_collision_check_done		= faux
i_flag_shoot_check_done			= faux
//i_flag_budies_check_done			= faux
//i_flag_vala_check_done				= faux
//i_flag_check_best_interet_done	= faux

// JAUGE ACCUMULATION ============================================================
f_jauge_accumulation -=  MATH_FloatMin(f_jauge_accumulation, TIME_GetDt())

PNJ_Scorpion_Paf_Cumul_Check_Time()

// ACTION ========================================================================
i_flag_dont_change_action = faux
ACT_LIB_ActionFrequencyMultiply(1.0)

// DODGE ========================================================================
f_delay_before_next_dodge -= MATH_FloatMin(f_delay_before_next_dodge, TIME_GetDt())

// JUMP ==========================================================================
i_flag_dodge_shot_jump = faux
f_delay_before_next_jump -= MATH_FloatMin(f_delay_before_next_jump, TIME_GetDt())

// DYN ===========================================================================
//if (IO_KeyJustPressed(VK_SPACE))
//{
//	to_me = OBJ_Me()
//	EVENT_AddEventPaf(C_EVENT_FILTER_All, C_EVENT_PAF_Feu | C_EVENT_PAF_Tuant, to_me, Cf_EVENT_Duree_1Trame, to_me, 1000, cvector(MATH_RandFloat(-0.5, 0.5), MATH_RandFloat(-0.5, 0.5), 1.0))
//}

if (OBJ_FlagsIdentityTest(OBJ_C_IdentityFlag_Dyna))
{
	DYN_FlagsSet(DYN_C_OptimizeColDisable, none)
	DYN_TractionSet(Cv_NullVector)

	if (COL_CollideType(COL_C_Ground))
	{
		f_delay_until_last_ground_col = 0.0
		
		tv_ground_normale = COL_ZonePosGet(C_zdm_pied)
		tv_ground_normale -= COL_CollidedPointGet(COL_C_Ground)
		
		MATH_VecSetNormalize(tv_ground_normale)
		
		if (tv_ground_normale.z < 0.0)
			tv_ground_normale*= -1.0
			
//		v_ground_normale = tv_ground_normale
		v_ground_normale = MATH_VecBlendRotate(v_ground_normale, tv_ground_normale, 6.0 * TIME_GetDt())

		// ON BRULE ????			
		if (@get_global i_nbr_de_feux_en_cours)
		{
			GRID_CurrentSet(1)
			if (GRID_CapaGet(OBJ_PosGet()) & Ci_Grid2_EnFeu)
			{
				f_SND_burning_duration = 1.0
				f_burn_on_ground_duration -= MATH_FloatMin(f_burn_on_ground_duration, TIME_GetDt())
				if  (!f_burn_on_ground_duration)
				{
					f_burn_on_ground_duration = MATH_RandFloat(0.5, 1.5)
					to_me = OBJ_Me()
					EVENT_AddEventPaf(C_EVENT_FILTER_All, C_PAF_KK_Fire | C_PAF_KK_KiTue, o_main_actor, Cf_EVENT_Duree_1Trame, to_me, 1000.0 * PAF_Unit, cvector(MATH_RandFloat(-0.5, 0.5), MATH_RandFloat(-0.5, 0.5), 1.0))
					SND_RequestPlay(SND_FIRE_SCREAM)
				}
			}
			GRID_CurrentSet(0)
		}
	}
	else
	{
		f_delay_until_last_ground_col += TIME_GetDt()
		
		if (f_delay_until_last_ground_col > 0.2)
			v_ground_normale = MATH_VecBlendRotate(v_ground_normale, Cv_VerticalVector, 4.0 * TIME_GetDt())
	}

	ti_ani_mode = ANI_ModeGet(0)
	switch(ti_ani_mode)
	{
		case ani_mode3 :
			break

		default:
			tv_speed = DYN_SpeedGetVector()
			tv_speed.z = MATH_FloatMin(tv_speed.z, 0.0)
			DYN_SpeedSetVector(tv_speed)
	}
}

// MAIN ACTOR ====================================================================
o_main_actor = AI_MainActorGet(C_ID_Joueur)
if( AI_MainActorGet(C_ID_Kong) )
	COL_UnCollidableAdd(AI_MainActorGet(C_ID_Kong))

// BUDIES ========================================================================
i_budy_nb = 0

// PERCEIVED =====================================================================
//i_perceived_actor_nb					= 0
i_perceived_bit_field 					= 0

i_perceived_main_actor_index		= -1
//i_perceived_best_actor_index			= -1

// SCREEN VISIBILITY ===============================================================
if (f_on_screen_pourcent > 0.5)
	f_on_screen_duration += TIME_GetDt()
else
	f_on_screen_duration = 0.0

// EVENT VISIBILITY =================================================================
switch(i_etat_courant)
{
	case ETAT_FADE :
		break
		
	default:
		if( f_lifecur || f_point_de_viande )
		{
			mid_visibility = EVENT_AddEventVision
			(
				C_ID_Scorpion,
				C_EVENT_FILTER_Enemy, 
				OBJ_Me(), 
				Cf_EVENT_Duree_1Trame, 
				OBJ_PosGet() + cvector( 0, 0, 1),
				C_EVENT_Visibility_Full_Mvt, 
				0.4, 
				100.0, 
				C_EVENT_CONTEXT_STANDARD, 
				2,
				f_lifecur / f_life
			)
			i_my_territory = EVENT_VisionTerritoryGet(mid_visibility)
		}
}

// SOUND =======================================================================
f_SND_burning_duration -= MATH_FloatMin(f_SND_burning_duration, TIME_GetDt())
if (f_SND_burning_duration)
{
	if (SND_burn_loop == -1)
	{
		SND_burn_loop = SND_RequestPlayLoop(SND_FIRE_LOOP)
		SND_RequestPlay(SND_FIRE_START)
	}
}
else if (SND_burn_loop != -1)
{
	SND_Stop(SND_burn_loop)
	SND_burn_loop = -1
}

