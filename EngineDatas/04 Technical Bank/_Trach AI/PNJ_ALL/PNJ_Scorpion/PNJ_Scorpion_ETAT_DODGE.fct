#include "PNJ_Scorpion_defines.var"

float			tf_speed

vector		tv_speed
vector		tv_new_sight
vector		tv_dest_sight
vector		tv_new_banking

// SORTIE ETAT ====================================================================
if (i_sort_etat)
{
	i_sort_etat = faux
	
	f_delay_before_next_dodge = MATH_RandFloat(5.0, 10.0)

	return
}

// INITIALISATION ETAT ==============================================================
if (i_etat_courant != ETAT_DODGE)
{
	i_dernier_etat = i_etat_courant
	i_etat_courant = ETAT_DODGE
	
	if (fct_last_etat)
	{
		i_sort_etat = vrai
		AI_Execute(fct_last_etat)
	}
	
	fct_last_etat = AI_TrackCurGet()

	ACT_ActionSet(Action_Marche)

	f_time_start_etat = 0.0
}
else
{
	f_time_start_etat += TIME_GetDt()
}

// ANALYSE ========================================================================
AI_Execute("PNJ_Scorpion_exec_check_vision")

AI_Execute("PNJ_Scorpion_exec_check_paf")
if (i_flag_paf_faible)
	macro_change_etat("PNJ_Scorpion_ETAT_PAF")

AI_Execute("PNJ_Scorpion_exec_check_shoot")

AI_Execute("PNJ_Scorpion_exec_check_best_interet")

if ( ! f_jauge_esquive && f_time_start_etat > 1.0)
	macro_change_etat(fct_main_etat)

// COMPORTEMENT ==================================================================
if (MSG_GlobalIsValid(mid_best_interet))
{
	tv_dest_sight = EVENT_InteretPositionGet(mid_best_interet)
	tv_dest_sight -= OBJ_PosGet()

	tv_new_sight = MATH_VecBlendRotate(OBJ_SightGet(), tv_dest_sight, 6.0 * TIME_GetDt())
	tv_new_banking = MATH_VecBlendRotate(OBJ_BankingGet(), v_ground_normale, 6.0 * TIME_GetDt())
	OBJ_BankingGeneralSet(tv_new_sight , tv_new_banking)

	tv_speed = DYN_SpeedGetVector()
	tv_speed.z = 0.0

	tf_speed = MATH_VecNorm(tv_speed)
	tf_speed *= 0.5
	
	if (GRID_LIB_IsReachableFrom(OBJ_PosGet(), OBJ_PosGet() + (f_dodge_side_sign * OBJ_HorizonGet() * 3.0), 0b0, 0.0, faux, 0))
	{
		tv_speed = f_dodge_side_sign * OBJ_HorizonGet() * tf_speed
		tv_speed.z = DYN_SpeedGetVector().z
		DYN_SpeedSetVector(tv_speed)
	}
	else
	{
		f_jauge_esquive = 0.0
		macro_change_etat(fct_main_etat)
	}
}