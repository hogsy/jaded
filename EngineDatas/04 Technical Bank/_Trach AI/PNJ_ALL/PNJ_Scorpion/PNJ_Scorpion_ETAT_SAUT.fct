#include "PNJ_Scorpion_defines.var"

float			tf_speed

vector		tv_new_sight
vector		tv_dest_sight
vector		tv_new_banking

// SORTIE ETAT ====================================================================
if (i_sort_etat)
{
	i_sort_etat = faux
	
	DYN_GravitySet(Cv_Scorpion_Gravity)
	DYN_FrictionVectorSet(Cv_Scorpion_Friction)	
	f_delay_before_next_jump = MATH_RandFloat(4.0, 6.0)

	return
}

// INITIALISATION ETAT ==============================================================
if (i_etat_courant != ETAT_SAUT)
{
	i_dernier_etat = i_etat_courant
	i_etat_courant = ETAT_SAUT
	
	if (fct_last_etat)
	{
		i_sort_etat = vrai
		AI_Execute(fct_last_etat)
	}
	
	fct_last_etat = AI_TrackCurGet()

	ACT_ActionSet(Action_Saut_deb)

	f_time_start_etat = 0.0
}
else
{
	f_time_start_etat += TIME_GetDt()
}

// ANALYSE ========================================================================
AI_Execute("PNJ_Scorpion_exec_check_vision")

AI_Execute("PNJ_Scorpion_exec_check_paf")
if (i_flag_paf_faible)
	macro_change_etat("PNJ_Scorpion_ETAT_PAF")

AI_Execute("PNJ_Scorpion_exec_check_best_interet")

// COMPORTEMENT ==================================================================
switch(ACT_ActionGet())
{
	case Action_Saut_deb :

		tv_dest_sight = v_jump_dest_pos - OBJ_PosGet()

		if (ACT_ActionFinished())
		{
			DYN_GravitySet(Cv_Scorpion_jump_Gravity)
			DYN_FrictionVectorSet(Cv_Scorpion_Jump_Friction)

			f_jump_duration = 0.0
			v_jump_impulsion = DYN_LIB_ImpulsionGet_Friction(OBJ_PosGet(), v_jump_dest_pos, Cv_Scorpion_Gravity, Cf_Scorpion_Jump_Friction, f_jump_duration, faux, 0.2 * f_size_coef)
			DYN_SpeedSetVector(v_jump_impulsion)

			ACT_ActionSet(Action_Saut_cycl)

			f_jump_freq_coef = ACT_DurationGet(ACT_ActionGet(), 0)
			f_jump_freq_coef /= f_jump_duration
			ACT_LIB_ActionFrequencyMultiply(f_jump_freq_coef)
		}
		break
		
	case Action_Saut_cycl :

		f_jump_duration -= MATH_FloatMin(f_jump_duration, TIME_GetDt())

		tv_dest_sight = DYN_SpeedGetVector()
		ACT_LIB_ActionFrequencyMultiply(f_jump_freq_coef)

		if (!f_jump_duration || COL_CollideType(COL_C_Ground))
		{
			DYN_FrictionVectorSet(Cv_Scorpion_Friction)	
			ACT_ActionSet(Action_Saut_fin)
		}
	
		break
		
	case Action_Saut_fin :
	
		tv_dest_sight = OBJ_SightGet()

		if (ACT_ActionFinished())
			macro_change_etat(fct_main_etat)
}

if (MSG_GlobalIsValid(mid_best_interet))
{
	tv_dest_sight = EVENT_InteretPositionGet(mid_best_interet)
	tv_dest_sight -= OBJ_PosGet()
}

//tf_speed = DYN_SpeedGet()
//
//if (tf_speed)
//{
//	tv_new_sight = DYN_SpeedGetVector()
//	tv_new_sight /= tf_speed
//}
//else
//{
//	tv_new_sight = OBJ_SightGet()
//}

tv_new_sight = MATH_VecBlendRotate(OBJ_SightGet(), tv_dest_sight, 6.0 * TIME_GetDt())
tv_new_banking = MATH_VecBlendRotate(OBJ_BankingGet(), v_ground_normale, 6.0 * TIME_GetDt())
OBJ_BankingGeneralSet(tv_new_sight , tv_new_banking)