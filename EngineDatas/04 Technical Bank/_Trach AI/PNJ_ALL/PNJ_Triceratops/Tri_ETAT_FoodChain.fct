#include "Tri_defines.var"

vector	tv_sight
vector	tv_dest_pos
vector	tv_move
vector	tv_banking
int			ti_i
int			ti_action
int			ti_move_on
float		tf_dist


// SORTIE ETAT ==========================================
if( i_etat_sortie )
{
	Tri_SND_Devore_Stop()
	i_etat_sortie = faux
	return
}

// ENTREE ETAT =========================================
if( i_etat_courant != ETAT_FOODCHAIN )
{
	i_etat_ancien = i_etat_courant
	i_etat_courant = ETAT_FOODCHAIN
	if( fct_etat_ancien )
	{
		i_etat_sortie = vrai
		AI_Execute(fct_etat_ancien)
	}
	fct_etat_ancien = AI_TrackCurGet()
	f_etat_duree = 0.0
	f_cadavre_paf_delai = 1.0
}
else
{
	f_etat_duree += TIME_GetDt()
}

// ANALYSE =============================================
AI_Execute("Tri_exec_Check_Pafs")
if( o_paf_actor )
	macro_change_etat("Tri_ETAT_Paf")

AI_Execute("Tri_exec_Check_Cadavres")
if( ! o_cadavre )
	macro_change_etat("Tri_ETAT_Idle")

// COMPORTEMENT =======================================

// default : don't move
tv_sight = OBJ_SightGet()
tv_dest_pos = OBJ_PosGet()
ti_action = Action_Devore
tv_move = Cv_NullVector
ti_move_on = faux
// test retour

tv_move = @o_cadavre OBJ_PosGet() - OBJ_PosGet()
tv_move.z = 0.0
tf_dist = MATH_VecNorm(tv_move)
if( tf_dist > ( 4.0 * @o_cadavre OBJ_ZoomGet()) )
{
	ti_move_on = vrai
	tv_dest_pos = @o_cadavre OBJ_PosGet()
	tv_sight = tv_dest_pos - OBJ_PosGet()
}

if( ti_move_on )
{
	if( MATH_VecNorm(tv_move) > 5.0 )
		ti_action = Action_Trot_10ms
	else
		ti_action = Action_Marche
}
DBG_RenderVector(OBJ_PosGet() + Cv_VerticalVector, tv_sight, color_vert)
tv_banking = Cv_VerticalVector
if( ti_move_on )
{
	tv_banking = macro_banking	// ne pas s'adapter à la normale du sol en attente
	if( Tri_Occluder_Test(tv_dest_pos, tv_sight) )
		DBG_RenderVector(OBJ_PosGet() + Cv_VerticalVector, tv_sight, color_rouge)
}
OBJ_BankingGeneralSet(MATH_VecBlendRotate(OBJ_SightGet(), tv_sight, 2 * TIME_GetDt()), tv_banking)
Tri_ActionSet(ti_action)

// SND LOOP --------------------------
switch( ti_action )
{
	case Action_Devore :
		Tri_SND_Devore_Start()
		f_cadavre_paf_delai -= MATH_FloatMin(f_cadavre_paf_delai, TIME_GetDt())
		if( ! f_cadavre_paf_delai )
		{
			EVENT_AddEventPaf(C_EVENT_FILTER_All, C_PAF_KK_FoodChain, OBJ_Me(), Cf_EVENT_Duree_1Trame, o_cadavre, 1.0, OBJ_SightGet())
			f_cadavre_paf_delai = 1.0
		}
		break
	default:
		Tri_SND_Devore_Stop()
		break
}

