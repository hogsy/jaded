#include "Tri_defines.var"

vector	tv_temp
int			ti_SF_AlreadyDead


AI_CBAdd(OBJ_Me(), CallBack_WhenDestroy, "Tri_callback_When_Destroy")

// SPECIAL FLAGS ================================
if( ! OBJ_FlagsIdentityTest(OBJ_C_IdentityFlag_Generated) )
{
	if( i_SF_NePasSeRejouerSiMort )
	{
		i_SF_AlreadyDead = AI_SFDynGet(0, SF_MinById, SF_MaxById)		// Alloc
		Super_SpecialFlag_get(i_SF_AlreadyDead, ti_SF_AlreadyDead)			// Test SF
		if (ti_SF_AlreadyDead)																	// Si SF = 1 alors DESTROY
			OBJ_Destroy()
	}
}

// MECA ========================================
// Zoom
OBJ_ZoomSet(MATH_RandFloat(0.8, 1.2))
// BV
tv_temp = cvector(7.0, 7.0, 7.0) * OBJ_ZoomGet()
BV_MinSet(-tv_temp)
BV_MaxSet(tv_temp)
// Dyna
AI_Execute("Tri_exec_Dyna")
// Colmaps
COL_ColMapActivationSet(all, none)
COL_CrossableSet(Gmat_KK_Crossable_Default, none)
// ZDM
COL_SwapToSpecific(C_zdm_pied)
COL_ZoneSizeSet(C_zdm_pied, cvector(3.0, 3.0, 3.0))
COL_ZonePosSet(C_zdm_pied, cvector(0.0, 0.0, 3.0))
COL_ColSetActivationSet(C_bit_zdm_pied, none)
// ZDE Corps
COL_SwapToSpecific(C_zde_corps)
COL_ZoneSizeSet(C_zde_corps, cvector(2.5, 2.5, 2.5))
COL_ZonePosSet(C_zde_corps, cvector(0, 0, 2.5))
// ZDE Fight
COL_SwapToSpecific(C_zde_fight)
COL_ZoneSizeSet(C_zde_fight, cvector(2.5, 2.5, 2.5))

f_HP_max = MATH_FloatMax(0.0, f_HP_max)
ID_LIFE = EVENT_AddEventLife(f_HP_max, f_HP_max, 0.0)

AI_Execute("Tri_exec_obbox")

// TRACKS ======================================
if( i_test_anim != -1 )
	AI_TrackCurChangeNow("Tri_TestAnim")
else
{
	AI_TrackChange(Ci_Track_TagOff, "Tri_TagOff")
	AI_TrackChange(Ci_Track_Reflex, "Tri_Reflex")
	AI_TrackChange(Ci_Track_TagOn, "Tri_TagOn")
	if( EVENT_LIFE_CurLifeGet(ID_LIFE) )
		AI_TrackChange(Ci_Track_Etat,"Tri_ETAT_Idle")
	else
		AI_TrackChange(Ci_Track_Etat,"Tri_ETAT_Dead")
}
