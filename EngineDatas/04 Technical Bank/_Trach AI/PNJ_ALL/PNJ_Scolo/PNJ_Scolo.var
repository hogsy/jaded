#include "PNJ_Scolo_defines.var"

// Define at least one function in a track
function track0 = "PNJ_Scolo_Init"
// function track1 = "name"
// function track2 = "name"
// function track3 = "name"
// function track4 = "name"

separator "CONFIGURATION"
int					i_modele = enum("0 - Clair (Facile)"  0 "1 - Standard (Normal)" 1 "2 - Sombre (Difficile)" 2 "C - Custom (Test Only)" -1 "3 - BIG" 3 "4 - PIT" 4 "5 - CINE" 5)
object			o_pit_target
object			o_cine_target
float				f_size_coef				= 1.0
int					type = enum("Fixe" 0 "Rampant" 2)
int					tutorial = vrai_faux
int					grab_allowed = faux_vrai
int					attack_allowed = faux_vrai
int					killed_by_javelin = vrai_faux
int					instant_getup = vrai_faux
int					wait_for_look = vrai_faux
int					dont_scare_budies = vrai_faux
int					i_Modifier_Splash = vrai_faux

separator "SF"
int								i_SF_NePasSeRejouerSiMort		= vrai_faux		// Flag qui indique si l'acteur gere ou pas un SF de mort
private int					i_SF_AlreadyDead						= -1				// N° du SF (Alloué Dynamiquement)

separator "INSTANT ATTACK"
trigger			trigger_instant_attack

separator "EDITION TRAJECTOIRE"
int					EDIT						= enum("NORMAL" 0 "TEST DEPLACEMENT" 667)
int					AUTO_COMPUTE	= faux_vrai			// Orientation automatique des WPs
int					AUTO_BANKING		= vrai_faux
private float		STEP_LENGTH		= 0.25				
 
separator "RESEAU"
int							net_mode = enum("Bezier" 0 "Reach Next BV" 1)
object					o_start_wp
private object			o_next_wp
private int				i_net_wp_nb
private int				i_net_loop
private object			ao_net_wp[100]
private network		n_net
private vector			v_net_next_pos

separator "TARGET"
int					target_selection = enum("IA" 0 "Trigger GAO5" 1)
object			o_force_target
object			o_ignore_target
object			o_ignore_target1
object			o_ignore_target2
object			o_ignore_target3
object			o_ignore_target4
object			o_ignore_target5
object			o_ignore_target6
object			o_ignore_target7
object			o_ignore_target8
object			o_ignore_target9
private object	o_trigger_target

separator "BV LIMITATION"
object			BV_ZoneTerritoire
object			BV_ZoneCobra

separator "ACTIVATION"
trigger			trigger_apparition
int					apparition_trigger_test = enum("ET" 0 "OU" 1)
trigger			trigger_apparition2
private int		i_trigger_apparition_nb
trigger			trigger_attaque
private int		i_trigger_attaque_nb

separator "DELAI ANNONCE"
int					modele_settings			= faux_vrai
float				delai_annonce				= 1.25

separator "DEPLACEMENT"
float				rayon_balade				= 4.0
float				move_speed				= 4.0
float				balade_speed
//float				move_acceleration		= 2.0

private int			i_modules_nb			= 15
private float			dist_between_module 	= 0.3
private float			dist_tail						= 0.2

// ETAT
private int			i_etat_courant		= -1
private int			i_dernier_etat		= -1
private int			i_flag_sortie_etat

private int			i_etat_phase

private float			f_time_start_etat
private float			f_etat_phase_duration

//private function	fct_main_etat
private function	fct_last_etat

// ANALYSE
//private int				i_flag_audio_check_done
private int				i_flag_visual_check_done
private int				i_flag_paf_check_done
//private int				i_flag_collision_check_done
private int				i_flag_shoot_check_done
//private int				i_flag_budies_check_done
//private int				i_flag_vala_check_done
//private int				i_flag_check_best_interet_done

private int					i_flag_change_target
private float					f_time_change_target

// PERCEIVED
//private int					i_perceived_main_actor_index
private int					i_perceived_kong_index = -1
private int					i_perceived_jack_index = -1
private int					i_perceived_best_actor_index
private int					i_perceived_bit_field
// KONG MODE
//private int					i_flag_kong_mode

private int					i_perceived_actor_nb
private int					ai_perceived_seen[50]
private int					ai_perceived_accessible[50]
//private int					ai_perceived_territory[50]
private int					ai_perceived_status[50]
private int					ai_perceived_ID[50]
	
private float					af_perceived_dist[50]
private float					af_perceived_interest[50]

private vector				av_perceived_position[50]

private object				ao_perceived_actor[50]

// DEPLACEMENT
private int					i_flag_net_start = vrai
private int					i_flag_net_end
private int					i_flag_half_exited
private int					i_current_wp_index
private int					i_flag_inverse_sight
private int					i_flag_update_all_modules

private float			f_move_length
private float			f_move_speed
//private float			f_net_length
//private float			f_diplayed_length
private float			f_link_coef
private float			f_Z_noise
private float			f_angle_oscillation

private float			f_rand_pos_duration
private vector		v_rand_dest_pos

// MODULES
private int			i_on_ground_modules_nb = 0
private int			i_in_water_modules_nb = 0
private int			i_on_virtual_net_modules_nb = 0

private int			i_perfored_module_index = -1

private float			f_delay_before_bend

private object		ao_modules[15]
private int			ai_modules_locked[15]
private int			ai_modules_perfored[15]
private float			af_modules_length[15]
//private float			af_modules_water_Z[15]
private float			af_modules_archimede[15] 
private vector		av_modules_speed[15]
private vector		av_modules_forces[15]
private vector		av_modules_quat[15]
//private vector		av_modules_last_pos[15]
private vector		v_head_last_pos


// ANiMATION SINUS
private float			f_Z_angle

// APPARITION
//private float			f_delay_out
//private float			f_delay_pause

// PAF
private int			i_flag_paf
private int			i_paf_type		// VINC
private int			i_modules_pafed_index

private float			f_time_last_paf
private float			f_time_javelin_paf

private vector		v_module_paf_dir

private object		ao_javelin[10]
private int			ai_javelin_bone_index[10]

private vector		v_javelin_friction
private vector		v_javelin_gravity

// COLLISION
private float			f_on_ground_dist
private float			f_delay_until_last_ground_col
private float			f_delay_until_last_wall_col

private vector		v_last_collided_pos
private vector		v_ground_pos
private vector		v_ground_normal				= Cv_VerticalVector
private vector		v_wall_normal
private vector		v_dest_banking				= Cv_VerticalVector

private vector		v_ray_pos
private vector		v_ray_normal


// ATTAQUE
private int			i_flag_hit
private int			i_flag_instant_jump

//private float			f_rot_sign
private float			f_delay_before_next_attack
private float			f_wait_duration

// VIRTUAL NET
private int			i_virtual_net_last_wp_index = -1

private float			f_virtual_net_offset

private int			ai_virtual_wp_flag[Ci_virtual_wp_nb]
private float			af_virtual_link_length[Ci_virtual_wp_nb]
private vector		av_virtual_wp_pos[Ci_virtual_wp_nb]
private vector		av_virtual_wp_sight[Ci_virtual_wp_nb]
private vector		av_virtual_wp_banking[Ci_virtual_wp_nb]
private object		ao_virtual_wp_father[Ci_virtual_wp_nb]

// BEST INTERET
private messageid		mid_best_interet
private object				o_best_interet_target

// IK
//separator "IK TEST"
private object						o_test_pilotage_tete

private int					i_ik_modules_nb

private float					f_IK_bezier_coef
private float					f_IK_B_weight
private float					f_IK_C_weight
private float					af_IK_bezier_coef[15]

private vector				v_IK_pos
private vector				v_IK_sight
private vector				v_IK_banking
//private vector				av_IK_bone_start_pos[15]	

// ATTAQUE
private float					f_jump_duration

// GRAB
private float					f_grab_Z
private float					f_grab_Z_speed

// GRABED
private object				o_predateur
private object				o_snap_bone
private messageid		mid_predateur_LNK

// GRAB
private object				o_proie
private messageid		mid_proie_LNK

// KONG GRAB OBJECT
private object				o_KK_Grabbed_actor
private messageid		mid_kong_LNK

private float					f_arround_neck_dist

private vector				v_snap_pos
private vector				v_snap_sight
private vector				v_snap_banking

// MAIN ACTOR
//private object				o_main_actor
private	object			o_kong
private	object			o_jack

// UNCOLLIDE LIST
private int					i_uncollide_gao_nb
private float					af_uncollide_duration[20]
private object				ao_uncollide_gao[20]

// LIFE
separator "VIE"
float							f_life = 20.0
private float					f_lifecur
private float					f_point_de_viande = 5.0
float							override_point_de_viande = -1.0
private messageid 		ID_LIFE

// TRIGGER
private int					i_flag_trigger_attack_used
private int					i_flag_trigger_appear_used

// DEATH
private float					f_death_Z

// DEATH FIXE
private float					f_angle_death

// MAIN PAF TIMER
private float					f_timer_after_main_collision

// SOUND
private int					SND_move_1_loop = -1
private int					SND_move_2_loop = -1
private int					SND_rollup_loop = -1
private int					SND_eat_loop = -1
private int					SND_burn_loop = -1

private int					i_flag_death_sound_played

private float					f_real_speed
private vector				v_last_pos

private float					f_time_last_paf_sound
private float					f_delay_between_paf_sound
private float					f_time_last_bite_sound
private float					f_SND_burning_duration
private float					f_SND_between_scream_duration

// MIAM MIAM LES CADAVRES
private float					f_time_eat = -Cf_Infinit

// DISPARITION
private int					i_flag_desappear

// RAGDOLL RIGIDITE
private int					i_flag_start_ragdoll_damping

private float					f_ragdoll_damping
private float					f_rigidity_coef
private float					f_gravity = -10.0
private float					f_n2_dist
private float					f_n3_dist
private float					f_n5_dist

private float					af_bone_ground_col_timer[15]
private float					af_bone_col_timer[15]

private vector				av_bone_col_normal[15]

// INIT POS
private vector				v_init_pos

// TEST DEBILE
private int					i_flag_grab_paf
private int					i_snaped_bone_index		= -1

private float					f_snaped_speed
private float					f_delay_before_moving_again
private float					f_snaped_bone_length
private float					f_on_snaped_bone_length

// MORPH
private float					f_morpg_prog

// SPRING
float							f_spring_coef = 10.0
float							f_damping_coef = 0.8

// ON SCREEN ?
private int					i_flag_on_screen_attack
private float					f_on_screen_pourcent
private float					f_on_screen_duration

// ANTI BOULE
private float					f_last_module_min_dist
private float					f_middle_module_min_dist

// FORCE Z AXIS
private float					f_force_Z_axis_duration

// FIRE
private int					i_fire_gao_nb

private object				ao_fire_gao[50]

// SECTO MON LUC
private int					i_frame_nb

// DEATH TROY
private int					i_flag_force_death
private int					i_flag_net_death
private int					i_gmat_death_bit
private int					i_gmat_water_bit

// JUMP
private int					i_flag_jump

private vector				v_jump_dest_pos


separator "KK Specific"
float							KK_Size					= 1.5				// Taille
float							KK_life						= 10.0			// Vie
float							KK_MoveSpeed			= 4.0				// Vitesse de deplacement
float							KK_AnounceDelay		= 4.0				// Temps de Cobra avant l'attaque
trigger						KK_TrigBreakDelay							// Trigger qui break le temps de d'attente avant Attaque.
private int					KK_PafForce				// = enum("1 - Moyen" 1 "0 - Faible" 0 "2 - Fort" 2)
float							KK_DetectionDist		= 30.0			// Distance de Detection
int								KK_Grab2Hands			= vrai_faux		// Grab a 1 ou 2 main
int								KK_IsTargetable			= vrai_faux		// Targetable par Kong ou pas ?
int								KK_Is_Reward			= faux_vrai		// Permet de lancer un reward ou pas
private float					KK_DistAttaqueTropProche = 5.0		// Dist min a Kong en Cobra.
private vector				v_Scolo_Gravity

// CAMERA
private vector				v_cam_pos

// KONG WEAPON
private float					f_ray_can_paf_duration

// MORT
private float					f_death_duration

// KK FINISH
private object				o_kk_finish
private messageid		mid_kk_finish_LNK
private messageid		mid_kk_I_finish_LNK
private int					i_kk_I_finish_paf
private int					i_kk_I_finish_kong_a_gagne

// WATER
private float					f_water_Z = -Cf_Infinit
private int					GFX_Water_Trace = -1
private float					f_time_trace_off

// OBBOX
private float					f_obbox_size_coef = -1.0

color		color_test = 0x001F1F2C

// DEVORE
private float					f_decceleration
private float					f_eat_speed

// DETECT FURY
private	float				f_fury_detect

// BURN
private float					f_burn_on_ground_duration

// DODGE KONG
private float					f_dodge_kong_duration



// FOODCHAIN
private	int				i_foodchain_eat_slots_nb = 1
private	int				i_foodchain_eat_slots_free
