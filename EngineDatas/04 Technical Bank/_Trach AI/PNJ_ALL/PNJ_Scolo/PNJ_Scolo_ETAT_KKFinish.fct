#include "PNJ_Scolo_defines.var"

int				ti_i
int				ti_finish_action_get

float			tf_coef
float			tf_dist
float			tf_speed

object		to_target
object		to_client

vector		tv_pos
vector		tv_new_sight
vector		tv_new_banking
vector		tv_speed
vector		tv_traction

object		to_me
object		to_serveur

messageid	tmid_LNK

if (i_flag_sortie_etat)
{
	i_flag_sortie_etat = faux
	
	COL_StartMatrixSet(OBJ_PosGet())

	COL_ColSetActivationSet(C_bit_zde_corps, none)

	i_snaped_bone_index = -1
	f_delay_before_moving_again = 0.0

	if (@get_global o_KNMI_finish_leader == OBJ_Me())
		@get_global o_KNMI_finish_leader = nobody

	i_flag_paf = vrai
	i_modules_pafed_index = i_modules_nb >> 1	
	v_module_paf_dir = @ao_modules[i_modules_pafed_index] OBJ_PosGet() - @o_proie OBJ_PosGet()
	MATH_VecSetNormalize(v_module_paf_dir)
	v_module_paf_dir = MATH_VecBlendRotate(v_module_paf_dir, Cv_VerticalVector, 0.5)
	v_module_paf_dir *= 100.0

	AI_TrackChange(4, "PNJ_Scolo_After_ETAT")
	AI_CBDel(o_proie, CallBack_After_Blend, "PNJ_Scolo_callback_set_pos")
	o_proie = LNK_ThisClientGet(o_proie, Ci_LNK_RIDE_DINO, mid_proie_LNK, faux, nofunc, nofunc, nofunc)
	o_kk_finish = LNK_ThisClientGet(o_kk_finish, Ci_LNK_KKFINISH_ON_KONG, mid_kk_finish_LNK, faux, nofunc, nofunc, nofunc)

	if (SND_rollup_loop != -1)
	{
		SND_Stop(SND_rollup_loop)
		SND_rollup_loop = -1
	}

	return
}

if (i_etat_courant != ETAT_KKFinish)
{
	// INTIALISATION
	i_dernier_etat = i_etat_courant
	i_etat_courant = ETAT_KKFinish
	
	if (fct_last_etat)
	{
		i_flag_sortie_etat = vrai
		AI_Execute(fct_last_etat)
	}

	fct_last_etat = "PNJ_Scolo_ETAT_KKFinish"
	
	PNJ_Scolo_Virtual_Net_Init(vrai, nobody)

	f_grab_Z_speed = DYN_SpeedGetVector().z

	AI_TrackStop(4)
	AI_TrackChange(Ci_Track_Reflex, "PNJ_Scolo_Reflex")

	COL_ColSetActivationSet(none, all)

	f_time_start_etat = 0.0
	
	i_etat_phase = 0
	f_time_start_etat = 0.0
	
	if (SND_rollup_loop == -1)
		SND_rollup_loop = SND_RequestPlayLoop(SND_ROLLUP)
}
else
{
	f_time_start_etat += TIME_GetDt()
}

// ANALYSE ===============================================================
AI_Execute("PNJ_Scolo_exec_check_vision")

o_KK_Grabbed_actor = LNK_ServeurGet(Ci_LNK_GRAB_KONG, mid_kong_LNK, vrai, nofunc, nofunc)
if (o_KK_Grabbed_actor)
	macro_change_etat("PNJ_Scolo_ETAT_Grabbed_By_Kong")

o_predateur = LNK_ServeurGet(Ci_LNK_GRAB_RAPTOR, mid_predateur_LNK, vrai, "PNJ_Scolo_exec_LNK_predateur", nofunc)
if (o_predateur)
{
	switch(LNK_GrabServeurVisionIDGet(mid_predateur_LNK))
	{
		case C_ID_Scolo :
			macro_change_etat("PNJ_Scolo_ETAT_Wait_For_Grab")
			break	
	
		default:
			macro_change_etat("PNJ_Scolo_ETAT_Grabbed_Predateur")
	}
}

to_client = LNK_ThisClientGet(o_proie, Ci_LNK_RIDE_DINO, mid_proie_LNK, vrai, nofunc, nofunc, nofunc)
if (!to_client)
	macro_change_etat("PNJ_Scolo_ETAT_Paf")

// SI JE SUIS LE LEADER
if (o_kk_finish)
{
	to_serveur = LNK_ThisClientGet(o_kk_finish, Ci_LNK_KKFINISH_ON_KONG, mid_kk_finish_LNK, vrai, nofunc, nofunc, nofunc)
	if ( to_serveur )
	{
		ti_finish_action_get = LNK_Finish_ActionGet(mid_kk_finish_LNK)
		if (ti_finish_action_get == Ci_GrabKong_FinishGagne)
		{
			if( @to_serveur ANI_CurrentFrameGet(0) > 20 )
			{
				to_serveur = LNK_ThisClientGet(o_kk_finish, Ci_LNK_KKFINISH_ON_KONG, mid_kk_finish_LNK, faux, nofunc, nofunc, nofunc)
				@get_global o_KNMI_finish_leader = nobody
			}
		}
	}
	else
	{
		@get_global o_KNMI_finish_leader = nobody
	}
}

if ( ! @get_global o_KNMI_finish_leader )
{
	if( @get_global i_KNMI_finish_kong_a_gagne )
		f_lifecur = 0.0
	macro_change_etat("PNJ_Scolo_ETAT_Paf")
}

tmid_LNK = EVENT_FindEventPereTarget(Ci_LNK_EVENT_OFFSET + Ci_LNK_KKFINISH_ON_KONG, o_proie, @get_global o_KNMI_finish_leader)
if( ! MSG_GlobalIsValid(tmid_LNK) )
	macro_change_etat("PNJ_Scolo_ETAT_Paf")

AI_Execute("PNJ_Scolo_exec_check_paf")
if (i_flag_paf  || ! f_lifecur || ! MSG_GlobalIsValid(mid_best_interet))
	macro_change_etat("PNJ_Scolo_ETAT_Paf")

AI_Execute("PNJ_Scolo_exec_check_best_interet")

// COMPORTEMENT =========================================================
EVENT_InteretStatusSet(mid_best_interet, C_EVENT_InteretStatusRide)

tv_pos = @ao_modules[i_modules_nb - 1] OBJ_PosGet()
tv_pos.z = MATH_FloatMax(tv_pos.z, OBJ_PosGet().z)

if (COL_RayObject_Dist(tv_pos, -Cv_VerticalVector, 10.0, all, none, Ci_Filter_IdentityFlag, COL_C_Ray_on_ColMap_NoCrossable))
{
	v_ray_pos = MATH_VecBlend(v_ray_pos, COL_RayObject_PosGet(), 6.0 * TIME_GetDt())
	v_ray_normal = MATH_VecBlendRotate(v_ray_normal, COL_RayObject_NormalGet(), 4.0 * TIME_GetDt())
}


