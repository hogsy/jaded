#include "PNJ_Car_defines.var"

int				ti_string_ID
int				ti_freq

float			tf_ratio
float			tf_dot_product

vector		tv_pos
vector		tv_shooter_to_main
vector		tv_quat
vector		tv_start_sight
vector		tv_dest_sight

object		to_bone
object		to_camera
object		to_annex

if (flingue_man)
{
	if ( ! o_shooter && i_flag_start_shoot )
	{
		o_shooter = @flingue_man OBJ_Duplicate(OBJ_PosGet())
		@o_shooter ACT_ActionSet(Ci_Action_Sort)
		@o_shooter ANI_Pause(faux)
		@o_shooter ANI_ShapeSelect(125, 2)
		@o_shooter OBJ_FlagsControlSet(OBJ_C_ControlFlag_RayInsensitive, none)
		@o_shooter COL_ColSetActivationSet(none, all)
		@o_shooter COL_ColMapActivationSet(none, all)
		@o_shooter OBJ_HierarchyReset()
		@o_shooter DYN_Off()
		f_shooter_ratio = 0.0
	}

	if ( o_shooter )
	{
		tv_pos = OBJ_PosGet()
		tv_pos += OBJ_SightGet() * 0.2
		tv_pos += OBJ_BankingGet() * 0.1
		tv_pos -= OBJ_HorizonGet() * 0.25
		@o_shooter OBJ_PosSet(tv_pos)
		@o_shooter OBJ_BankingGeneralSet(OBJ_SightGet(), OBJ_BankingGet())
		
		switch(@o_shooter ACT_ActionGet())
		{
			case Ci_Action_Sort :
		
				@o_shooter ANI_Pause(faux)
				v_shoot_dest_pos = @o_main_actor OBJ_PosGet() + cvector(0.0, 0.0, 2.0)
		
				if (@o_shooter ACT_ActionFinished())
					@o_shooter ACT_ActionSet(Ci_Action_360)
				break
				
			case Ci_Action_360 :
		
				to_bone = @o_shooter ANI_CanalObjectGet(Anim_Canal_EpauleDroite)

				if ( ! i_flag_start_shoot )
					v_shoot_dest_pos = MATH_VecBlend(v_shoot_dest_pos, @o_main_actor OBJ_PosGet() + cvector(0.0, 0.0, 2.0), 8.0 * TIME_GetDt())

				tv_shooter_to_main = v_shoot_dest_pos - @to_bone OBJ_PosGet()
				tv_shooter_to_main -= MATH_VecDotProduct(tv_shooter_to_main, OBJ_BankingGet()) * OBJ_BankingGet()
				MATH_VecSetNormalize(tv_shooter_to_main)

				DBG_RenderVector(@to_bone OBJ_PosGet(), tv_shooter_to_main * 10.0, color_blanc)	
	
				tf_dot_product = MATH_VecAngle(OBJ_SightGet(), -tv_shooter_to_main, OBJ_BankingGet())
				tf_dot_product += Cf_Pi
				tf_dot_product /= Cf_2Pi
	
				tf_ratio = MATH_FloatLimit(tf_dot_product, 0.0, 1.0)
				
				f_shooter_ratio = tf_ratio
//				f_shooter_ratio = MATH_FloatBlend(f_shooter_ratio, tf_ratio, 6.0 * TIME_GetDt())

				@o_shooter ANI_RatioSet(0, f_shooter_ratio)
//				@o_shooter ACT_ActionSet(Ci_Action_360 | Ci_ActionSet_Force_SameAction  | Ci_ActionSet_Force_No_Blend)
				@o_shooter ANI_Pause(vrai)

	//			ti_string_ID = STR_CreateText("Ratio : ", VIEW_3dWorldTo2d(0, @to_bone OBJ_PosGet()), 0.0)
	//			STR_AppendFloat(ti_string_ID, tf_ratio, 2)
	
//				if ( ! i_flag_start_shoot )
				if ( ! f_time_reverse_camera || i_etat_courant != ETAT_Deplacement || f_me_to_main_dist < 10.0)
				{
					if (i_SND_shoot_loop != -1)
					{
						SND_RequestPlay(Ci_SND_shoot_end)	
					
						SND_Stop(i_SND_shoot_loop)
						i_SND_shoot_loop = -1
						
					}

					@o_shooter ANI_Pause(faux)
					@o_shooter ACT_ActionSet(Ci_Action_Rentre)
				}

				to_bone = @o_shooter ANI_CanalObjectGet(Anim_Canal_Tete)
				to_annex = @o_main_actor ANI_CanalObjectGet(Anim_Canal_Cou)
				@to_bone OBJ_Rotate_FromTo(cvector(0.0, -1.0, 0.0), @to_bone MATH_VecGlobalToLocal(@to_annex OBJ_PosGet() - @to_bone OBJ_PosGet()))

				to_annex = @o_shooter ANI_CanalObjectGet(Anim_Canal_Annex1)
				tv_quat = @to_annex OBJ_SightGet()
				tv_quat = MATH_VecRotate(tv_quat, @to_annex OBJ_HorizonGet(), 0.15)

				to_bone = @o_shooter ANI_CanalObjectGet(Anim_Canal_EpauleGauche)
				@to_bone OBJ_Rotate_FromTo(@to_bone MATH_VecGlobalToLocal(tv_quat), @to_bone MATH_VecGlobalToLocal(v_shoot_dest_pos - @to_annex OBJ_PosGet()))
				to_bone = @o_shooter ANI_CanalObjectGet(Anim_Canal_EpauleDroite)
				@to_bone OBJ_Rotate_FromTo(@to_bone MATH_VecGlobalToLocal(tv_quat), @to_bone MATH_VecGlobalToLocal(v_shoot_dest_pos - @to_annex OBJ_PosGet()))

//				tv_quat = @to_annex OBJ_SightGet()
//				tv_quat = MATH_VecRotate(tv_quat, @to_annex OBJ_HorizonGet(), 0.1)
//				DBG_RenderVector(@to_annex OBJ_PosGet(), tv_quat * 2.0, color_vert)
//				DBG_RenderVector(@to_annex OBJ_PosGet(), v_shoot_dest_pos - @to_annex OBJ_PosGet(), color_cyan)

				break
				
			case Ci_Action_Rentre :
	
				@o_shooter ANI_Pause(faux)

				if (i_etat_courant != ETAT_Deplacement)
				{
					ti_freq = @o_shooter ACT_FrequencyGet(@o_shooter ACT_ActionGet(), @o_shooter ACT_ActionItemGet())
					ti_freq = MATH_FloatLimit(ti_freq * 3.0, 1.0, 255.0)
					@o_shooter ANI_FrequencySet(0, ti_freq)
				}

				if (@o_shooter ACT_ActionFinished())
				{
					@o_shooter OBJ_Destroy()
					o_shooter = nobody
				}
	
				break
		}
	}
}