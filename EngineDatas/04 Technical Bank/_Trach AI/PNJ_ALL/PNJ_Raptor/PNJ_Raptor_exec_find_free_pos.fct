int			ti_i
int			ti_nb_good_move
int			ti_axis_move

vector	tv_pos
vector	tv_new_pos

GRID_CurrentSet(0)

tv_pos = OBJ_PosGet()
tv_pos += OBJ_SightGet()
tv_pos = GRID_PosGet(tv_pos)

ti_axis_move = 0
ti_i = 0
ti_nb_good_move = 0

while(ti_i < 10 && ti_nb_good_move < 5)
{
	tv_new_pos = tv_pos

	switch(ti_axis_move)
	{
		case 0 :
			tv_new_pos += OBJ_HorizonGet() * f_projection_side
			break

		case 1 :
			tv_new_pos += OBJ_SightGet()
			break
			
		case 2 :
			tv_new_pos -= OBJ_SightGet()
			break
			
		default:
			tv_new_pos += OBJ_SightGet()
			break
	}

	if (PNJ_Raptor_Blocked(tv_new_pos, 0b1))
	{
		ti_axis_move++
	}
	else
	{
		ti_nb_good_move++
		ti_axis_move = 0
		tv_pos = GRID_PosGet(tv_new_pos)
	}

	ti_i++
}

v_projection_pos = tv_pos
v_projection_pos.z = OBJ_PosGet().z
DBG_RenderVector(v_projection_pos, cvector(0.0, 0.0, 1000.0), color_jaune)

return