#include "PNJ_Raptor_defines.var"

int				ti_i
int				ti_flag_orientation
int				ti_freq
int				ti_action
int				ti_flag_reception
int				ti_current_frame
int				ti_frame_nb
int				ti_flag_ok

float			tf_coef
float			tf_friction
float			tf_amplitude
float			tf_action_duration
float			tf_delay
float			tf_dist
float			tf_left_coef_min
float			tf_left_coef_max
float			tf_right_coef_min
float			tf_right_coef_max 
float			tf_altitude

vector		tv_temp
vector		tv_new_sight
vector		tv_new_banking

restart:

// SORTIE ETAT ===================================================================
if (i_sort_etat)
{
	i_sort_etat = faux
	
	i_flag_saut = faux

	if (o_occluder_jump_wp)
	{
		@o_occluder_jump_wp OBJ_CapaSet(OBJ_Capa_0, none)
		o_occluder_jump_wp = nobody
		
		o_occluder_jump = nobody
	}

	if (i_flag_change_target_while_jumping)
	{
		i_flag_change_target_while_jumping = faux
		i_flag_change_target = vrai
	}

	if (! ( COL_ColSetActivationGet() & C_bit_zdm_pied) )
	{
		COL_ColSetActivationSet(C_bit_zdm_pied, none)
//		COL_ColMapActivationSet(all, none)
		COL_StartMatrixSet(OBJ_PosGet())
	}
	
	return
}

tv_temp	= v_jump_dest_pos
tv_temp -= OBJ_PosGet()
tv_temp.z = 0.0

tf_dist = MATH_VecNorm(tv_temp)
if (tf_dist)
	tv_temp /= tf_dist

// INITIALISATION ETAT ==============================================================
if (!i_flag_saut)
{
	i_flag_saut	= vrai

	if (fct_last_etat && fct_last_etat != AI_TrackCurGet())
	{
		i_sort_etat = vrai
		AI_Execute(fct_last_etat)
	}

	fct_last_etat = AI_TrackCurGet()

	f_jump_total_duration = 0.0

	if (o_current_wp)
		v_way_case_dest = @o_current_wp OBJ_PosGet()
	else
		v_way_case_dest = OBJ_PosGet()

	ti_flag_ok = vrai
	if (i_way_computation_mode != Ci_WAY_MODE_FIGHT)
		ti_flag_ok = faux
	else if (i_perceived_best_actor_index == -1)
		ti_flag_ok = faux
	else if ( ! ai_perceived_accessible[i_perceived_best_actor_index] )
		ti_flag_ok = faux
		
	if (ti_flag_ok)
		SND_RequestPlayOnObjCanal(Ci_SND_Roar, Anim_Canal_Tete)

	switch(ACT_ActionGet())
	{
		case Action_Saut_Pied_G :
			PNJ_Raptor_Next_Impulsion_Set(Ci_IK_pied_gauche)
			PNJ_Raptor_ActionSet(Action_Saut_Reception_D)
			DYN_FrictionVectorSet(cvector(f_friction, f_friction, 0.0))	
			break
	
		case Action_Saut_Pied_D :
			PNJ_Raptor_Next_Impulsion_Set(Ci_IK_pied_droit)
			PNJ_Raptor_ActionSet(Action_Saut_Reception_G)
			DYN_FrictionVectorSet(cvector(f_friction, f_friction, 0.0))	
			break

		default:

			if (MATH_VecDotProduct(tv_temp, OBJ_SightGet()) < -Cf_Cos60)
			{
				if (MATH_VecDotProduct(tv_temp, OBJ_HorizonGet()) > 0.0)
					PNJ_Raptor_ActionSet(Action_Demi_Tour_G_deb)
				else
					PNJ_Raptor_ActionSet(Action_Demi_Tour_D_deb)
			}
			else
			{
				switch(ACT_ActionGet())
				{
//					case Action_Normal_Marche :
					case Action_Normal_Marche_Rapide :
					case Action_Normal_Trot :
					case Action_Normal_Course :
			
//					case Action_Blesse_Marche :
					case Action_Blesse_Marche_Rapide :
			
//					case Action_Renifle_Marche :
					case Action_Renifle_Marche_Rapide :
					case Action_Renifle_Trot :
					
					case Action_Stop :
					case Action_Stop_Rapide :
						f_jump_reception_link_coef = 0.0
						PNJ_Raptor_ActionSet(Action_Saut_deb_move)
						DYN_FrictionVectorSet(cvector(f_friction, f_friction, 0.0))
						break
			
			
					default:
						f_jump_reception_link_coef = 0.0
						PNJ_Raptor_ActionSet(Action_Saut_deb)
						DYN_FrictionVectorSet(cvector(f_friction, f_friction, 0.0))	
				}
			}
	}

	i_flag_change_target_while_jumping = faux

	f_time_start_etat = 0.0
}
else
{
	f_time_start_etat += TIME_GetDt()
}

// ANALYSE =======================================================================================================
AI_Execute("PNJ_Raptor_exec_check_msg")

AI_Execute("PNJ_Raptor_exec_check_vision")

AI_Execute("PNJ_Raptor_exec_check_sound")

AI_Execute("PNJ_Raptor_exec_check_collision")

AI_Execute("PNJ_Raptor_exec_check_paf")

AI_Execute("PNJ_Raptor_exec_check_shoot")
	
AI_Execute("PNJ_Raptor_exec_update_best_interest")

//if (i_flag_change_target)
//	i_flag_change_target_while_jumping = vrai

if (i_flag_paf_fly)
	macro_change_etat("PNJ_Raptor_ETAT_PAF_FLY")
if (i_flag_paf_fall)
	macro_change_etat("PNJ_Raptor_ETAT_PAF_FALL")
if (i_flag_paf_repousse || i_flag_paf_slide || !f_lifecur)
	macro_change_etat("PNJ_Raptor_ETAT_PAF_SLIDE")

// COMPORTEMENT =================================================================================================
ti_flag_orientation = vrai

if (i_flag_change_target)
{
	f_delay_before_next_shout_mix = 0.0
	PNJ_Raptor_Shout_Mix()
}

if (MSG_GlobalIsValid(mid_best_interet) && i_dernier_etat == ETAT_FIGHT)
	EVENT_InteretStatusSet(mid_best_interet, C_EVENT_InteretStatusLock)

ti_action = ACT_ActionGet()
switch(ti_action)
{
	case Action_Demi_Tour_D_deb :
	case Action_Demi_Tour_G_deb :
	case Action_Demi_Tour_D_deb_tr_att :
	case Action_Demi_Tour_G_deb_tr_att :
	case Action_Demi_Tour_Rapide :
	case Action_Demi_Tour_Rapide_tr_course :

		if (MATH_VecDotProduct(OBJ_SightGet(), tv_temp) > 0.0)
			ti_flag_orientation = vrai
		else
			ti_flag_orientation = faux

		if (ACT_ActionFinished())	
			PNJ_Raptor_ActionSet(Action_Saut_deb)

		break

	case Action_Normal_Marche :
	case Action_Normal_Marche_Rapide :
	case Action_Normal_Trot :
	case Action_Normal_Course :

		switch( ti_action )
		{
			case Action_Normal_Marche_Rapide :
				tf_left_coef_min = 0.4
				tf_left_coef_max = 0.6
				tf_right_coef_min = 0.8
				tf_right_coef_max = 1.0
				break

			case Action_Normal_Marche :
				tf_left_coef_min = 0.15
				tf_left_coef_max = 0.4
				tf_right_coef_min = 0.75
				tf_right_coef_max = 1.0
				break

			case Action_Normal_Trot :
			case Action_Normal_Course :
				tf_left_coef_min = 0.25
				tf_left_coef_max = 0.5
				tf_right_coef_min = 0.75
				tf_right_coef_max = 1.0
				break
		}

		ti_flag_orientation = faux

		if (! PNJ_Raptor_Bezier_Move(f_wanted_speed * f_wanted_speed_modifier))
		{
			f_jump_reception_link_coef = 0.0
			PNJ_Raptor_ActionSet(Action_Saut_deb)
			DYN_FrictionVectorSet(cvector(f_friction, f_friction, 0.0))	
		}

		ti_current_frame = ANI_CurrentFrameGet(0)
		ti_frame_nb = ANI_NbFrameGet(0)
		
		tf_coef = ti_current_frame
		tf_coef /= ti_frame_nb

		if (tf_coef >= tf_left_coef_min && tf_coef <= tf_left_coef_max)
		{
			PNJ_Raptor_Next_Impulsion_Set(Ci_IK_pied_gauche)
			PNJ_Raptor_ActionSet(Action_Saut_Reception_G)
			DYN_FrictionVectorSet(cvector(f_friction, f_friction, 0.0))
		}
		else if (tf_coef > tf_right_coef_min && tf_coef <= tf_right_coef_max)
		{
			PNJ_Raptor_Next_Impulsion_Set(Ci_IK_pied_droit)
			PNJ_Raptor_ActionSet(Action_Saut_Reception_D)
			DYN_FrictionVectorSet(cvector(f_friction, f_friction, 0.0))	
		}			

		break
	
	case Action_Saut_deb :
	case Action_Saut_deb_move :

		ti_flag_orientation = vrai

		if (ACT_ActionFinished())
		{
			tv_temp = v_jump_dest_pos	
			tv_temp -= OBJ_PosGet()
			tf_altitude = tv_temp.z
			tf_dist = MATH_VecNorm(tv_temp)
			tv_temp /= tf_dist
			
			if (MATH_VecDotProduct(tv_temp, Cv_VerticalVector) > Cf_Cos70)
				PNJ_Raptor_ActionSet(Action_Saut_Impulse_High)
			else if (tf_altitude < -1.5 || tf_dist < 4.0)
				PNJ_Raptor_ActionSet(Action_Saut_Impulse_Mid)
			else
				PNJ_Raptor_ActionSet(Action_Saut_Impulse_Long)
		}
		else if (MATH_VecDotProduct(v_way_case_dest - OBJ_PosGet(), tv_temp) > 0.0)
		{
			f_wanted_speed = MATH_VecDotProduct(DYN_SpeedGetVector(), OBJ_SightGet())
			PNJ_Raptor_Bezier_Move(f_wanted_speed)

	 		if (f_wanted_speed > 0.5)
				ti_flag_orientation = faux
		}
		
		break

	case Action_Saut_Impulse_Mid :
	case Action_Saut_Impulse_Long :
	case Action_Saut_Impulse_High :

			ti_flag_orientation = vrai

			if (ACT_ActionFinished())
			{
				PNJ_Raptor_Jump()
			}
			else if (MATH_VecDotProduct(v_way_case_dest - OBJ_PosGet(), tv_temp) > 0.0)
			{
				f_wanted_speed = MATH_VecDotProduct(DYN_SpeedGetVector(), OBJ_SightGet())
			
		 		if (f_wanted_speed > 0.001 && PNJ_Raptor_Bezier_Move(f_wanted_speed))
					ti_flag_orientation = faux
			}
			
			break

	case Action_Saut_Reception_G :
	case Action_Saut_Reception_D :

		ti_flag_orientation = faux		

		if (ACT_ActionFinished() || f_jump_reception_link_coef == 1.0)
			PNJ_Raptor_Jump()
			
		break


	case Action_Saut_cycl :
	case Action_Saut_Pied_G : 
	case Action_Saut_Pied_D :

		ACT_LIB_ActionFrequencyMultiply(f_jump_freq_coef)

		f_jump_duration -= MATH_FloatMin(f_jump_duration, TIME_GetDt())

		if (f_jump_duration <= 0.0)
		{
			ANI_RatioSet(0, 1.0)
			OBJ_PosSet(v_jump_dest_pos)

//			f_force_GFX_Feet_Smoke_duration	 = 0.05
		
			ti_flag_orientation = faux

//			tv_temp = DYN_SpeedGetVector()
			tv_temp = v_jump_bassin_reception_speed
			tv_temp.z = 0.0
			DYN_SpeedSetVector(tv_temp)
			DYN_FrictionVectorSet(cvector(f_friction, f_friction, 0.0))	

			if (! ( COL_ColSetActivationGet() & C_bit_zdm_pied) )
			{
				f_ground_col_time = 0.0
			
				COL_StartMatrixSet(OBJ_PosGet())
				COL_ColSetActivationSet(C_bit_zdm_pied, none)
//				COL_ColMapActivationSet(all, none)
			}
			
			switch(ti_action)
			{
				case Action_Saut_Pied_D :
				case Action_Saut_Pied_G :

					i_flag_snap_pos = vrai
					v_snap_pos = OBJ_PosGet()

					if (o_occluder_jump)
					{
						i_flag_saut = faux
			
						@o_occluder_jump_wp OBJ_CapaSet(none, OBJ_Capa_0)
						if (n_occluder_jump_net)
						{
							o_occluder_jump_wp = WAY_NetNextWP(n_occluder_jump_net, o_occluder_jump_wp, 3, 0)
							if (o_occluder_jump_wp)
							{
								v_jump_dest_pos = @o_occluder_jump_wp OBJ_PosGet()
							}
							else
							{
								switch(i_jump_reception_action)
								{
									case Action_Saut_fin_surplace :
									case Action_Grosse_Reception :
									case Action_Saut_fin : 
										PNJ_Raptor_ActionSet(i_jump_reception_action)
										break
								}
								
								o_current_wp = nobody
								o_occluder_jump = nobody
								
								i_etat_courant = -1
								macro_change_etat(fct_main_etat)
							}
						}
						else
						{
							v_jump_dest_pos = @o_occluder_jump OBJ_PosGet()
							v_jump_dest_pos += OBJ_SightGet() * MATH_FloatMax(1.0 + (0.5 * @o_occluder_jump OBJ_ZoomGet()), 4.0)
							v_jump_dest_pos.z += 10.0
							COL_RayObject_Dist(v_jump_dest_pos, -Cv_VerticalVector, 20.0, all, OBJ_C_IdentityFlag_Anims | OBJ_C_IdentityFlag_Dyna, Ci_Filter_IdentityFlag, COL_C_Ray_on_ColMap_NoCrossable)	
							v_jump_dest_pos = COL_RayObject_PosGet()
			
							o_occluder_jump_wp = nobody
							o_occluder_jump = nobody
						}
						
						DBG_RenderVector(v_jump_dest_pos, Cv_VerticalVector * 110.0, color_jaune)
			
						v_jump_impulsion_banking = OBJ_BankingGet()
						v_jump_reception_banking = Cv_VerticalVector
			
//						returntrack
						goto restart
					}
					else
					{
						i_etat_courant = -1
						macro_change_etat(fct_main_etat)
						break
					}
			}

			switch(i_jump_reception_action)
			{
				case Action_Saut_fin_surplace :
				case Action_Grosse_Reception :
				case Action_Saut_fin : 
					PNJ_Raptor_ActionSet(i_jump_reception_action)
					break
			}
		}

		break
			
	case Action_Saut_fin :
	case Action_Saut_fin_surplace :
	case Action_Grosse_Reception :
	case Action_Agonie_fin_lent :
	case Action_Agonie_fin_rapide :

		ti_flag_orientation = faux

//		if (i_flag_dont_use_grid)
//		{
//			i_flag_snap_pos = vrai
//			v_snap_pos = v_jump_dest_pos	
//
//			OBJ_PosSet(v_jump_dest_pos)
//			DYN_SpeedSetVector(Cv_NullVector)
//		}

		if (o_occluder_jump)
		{
			i_flag_saut = faux

			@o_occluder_jump_wp OBJ_CapaSet(none, OBJ_Capa_0)
			if (n_occluder_jump_net)
			{
				o_occluder_jump_wp = WAY_NetNextWP(n_occluder_jump_net, o_occluder_jump_wp, 3, 0)
				if (o_occluder_jump_wp)
				{
					v_jump_dest_pos = @o_occluder_jump_wp OBJ_PosGet()
				}
				else
				{
					o_current_wp = nobody
					o_occluder_jump = nobody
					
					i_etat_courant = -1
					macro_change_etat(fct_main_etat)
				}
			}
			else
			{
				v_jump_dest_pos = @o_occluder_jump OBJ_PosGet()
				v_jump_dest_pos += OBJ_SightGet() * MATH_FloatMax(1.0 + (0.5 * @o_occluder_jump OBJ_ZoomGet()), 4.0)
				v_jump_dest_pos.z += 10.0
				COL_RayObject_Dist(v_jump_dest_pos, -Cv_VerticalVector, 20.0, all, OBJ_C_IdentityFlag_Anims | OBJ_C_IdentityFlag_Dyna, Ci_Filter_IdentityFlag, COL_C_Ray_on_ColMap_NoCrossable)	
				v_jump_dest_pos = COL_RayObject_PosGet()

				o_occluder_jump_wp = nobody
				o_occluder_jump = nobody
			}
			
			DBG_RenderVector(v_jump_dest_pos, Cv_VerticalVector * 110.0, color_jaune)

			v_jump_impulsion_banking = OBJ_BankingGet()
			v_jump_reception_banking = Cv_VerticalVector

//			returntrack
			goto restart
		}
		else
		{
			i_etat_courant = -1
			macro_change_etat(fct_main_etat)
		}

		break
}

if (o_next_next_wp)
{
	i_flag_look = vrai

	v_look_pos = @o_next_next_wp OBJ_PosGet()
	v_look_pos.z += 1.0
}

if (ti_flag_orientation)
{
	if (f_jump_total_duration)
	{
		tv_new_sight = v_jump_dest_pos
		tv_new_sight -= v_jump_start_pos
		tv_new_sight.z = 0.0

		tf_coef = 1.0
		tf_coef -= f_jump_duration / f_jump_total_duration
		tv_new_banking = MATH_VecBlendRotate(v_jump_impulsion_banking, v_jump_reception_banking, tf_coef)	
	}
	else
	{
		tv_new_sight = v_jump_dest_pos
		tv_new_sight -= OBJ_PosGet()
		tv_new_sight.z = 0.0

		tf_coef = 6.0 * TIME_GetDt()
		tv_new_banking = MATH_VecBlendRotate(OBJ_BankingGet(), v_virtual_banking, tf_coef)	
	}

	tv_new_sight = MATH_VecBlendRotate(OBJ_SightGet(), tv_new_sight, 6.0 * TIME_GetDt())
	OBJ_BankingGeneralSet(tv_new_sight, tv_new_banking)
}


