int			ti_flag_in_my_territory

vector	tv_dest_pos
vector	tv_temp

object	to_collide_object

if (i_flag_dont_use_grid)
{
	i_way_moving = vrai	
	v_way_case_dest = v_way_destpos
	return
}

// TERRITOIRES ===================================
ti_flag_in_my_territory = GST_Climb_Is_In_Territory_List(&ai_territory_ID[0], i_territory_ID_nb, i_my_territory_ID)

if (!ti_flag_in_my_territory)
{
	i_target_territory_ID = GST_Climb_Territory_Get(v_way_destpos)
	
	ti_flag_in_my_territory = GST_Climb_Is_In_Territory_List(&ai_territory_ID[0], i_territory_ID_nb, i_target_territory_ID)

	if (!ti_flag_in_my_territory)
	{
		i_way_moving = faux
		return
	}
}

i_way_algo_limitdestpos = 60
f_way_len_big = 60

switch(raptor_type)
{
	case C_ID_Raptor :

		f_way_tolerance_sqr_dist = 2.0
		
		if (COL_CollideType(COL_C_Wall))
		{
			to_collide_object = COL_ObjectGet(COL_C_Wall)
			
			if (! (@to_collide_object OBJ_FlagsIdentityGet() & (OBJ_C_IdentityFlag_Anims | OBJ_C_IdentityFlag_Dyna)))
				f_way_tolerance_sqr_dist = 0.0
		}
		
		break
}

//// ON PASSE PAR LES CASES ROUGE !!!!
//f_way_test_born = 0.1

v_way_currentpos = OBJ_PosGet()

tv_dest_pos = GRID_PosGet(v_way_destpos) 

tv_temp = tv_dest_pos - v_way_last_destpos
tv_temp.z = 0.0

if (MATH_VecDotProduct(tv_temp, tv_temp) > 4.0)
{
	i_way_force_recompute = vrai
	v_way_last_destpos = tv_dest_pos
}

if (i_way_moving && (i_way_case_nbr && !i_way_force_recompute))
{
	tv_temp = v_way_case_dest
	tv_temp -= v_way_currentpos
	tv_temp.z = 0.0
	
	if (MATH_VecDotProduct(tv_temp, tv_temp) > f_way_sqr_next_case_dist)
		i_way_force_recompute = vrai
}


i_way_moving = vrai

AI_Execute("PNJ_Raptor_exec_way_compute")

