#include "PNJ_Raptor_defines.var"

int			ti_i
int			ti_index
int			ti_action

float		tf_coef
float		tf_time

object	to_head

vector	tv_temp

// SORTIE ETAT ===================================================================
if (i_sort_etat)
{
	i_sort_etat = faux

	o_grab_actor = LNK_ClientGet(Ci_LNK_GRAB_RAPTOR, mid_grab_actor_LNK_ID, faux, nofunc, nofunc, nofunc)

	return
}

// INITIALISATION ETAT ==============================================================
if (i_etat_courant != ETAT_LANCE)
{
	i_dernier_etat = i_etat_courant
	i_etat_courant = ETAT_LANCE

	if (fct_last_etat)
	{
		i_sort_etat = vrai
		AI_Execute(fct_last_etat)
	}

	fct_last_etat = AI_TrackCurGet()

//	PNJ_Raptor_ActionSet(Action_Observe)

	i_flag_projection_done = faux
	f_projection_side = MATH_FloatSign(MATH_RandFloat(-1.0, 1.0))

//	// OK on a rempli notre mission
//	if (MSG_GlobalIsValid(mid_force_target))
//	{
//		switch(EVENT_Int2Get(mid_force_target))	
//		{
//			case 1 :
//				EVENT_AddEventPaf(C_EVENT_FILTER_All, C_EVENT_PAF_Blessant, OBJ_Me(), 0.01, o_grab_actor, 0, OBJ_SightGet())
//				break
//
//			case 2 :
//				EVENT_AddEventPaf(C_EVENT_FILTER_All, C_EVENT_PAF_Agonisant, OBJ_Me(), 0.01, o_grab_actor, 0, OBJ_SightGet())
//				break
//		}
//	
//		MSG_GlobalDelete(mid_force_target, C_EVENT_DEL)
//	}

	f_time_start_etat = 0.0
}
else
{
	f_time_start_etat += TIME_GetDt()
}

// ANALYSE =======================================================================================================
AI_Execute("PNJ_Raptor_exec_check_msg")

AI_Execute("PNJ_Raptor_exec_check_vision")

AI_Execute("PNJ_Raptor_exec_check_sound")

AI_Execute("PNJ_Raptor_exec_check_collision")

AI_Execute("PNJ_Raptor_exec_check_paf")
if (i_flag_paf_fly)
	macro_change_etat("PNJ_Raptor_ETAT_PAF_FLY")
if (i_flag_paf_fall)
	macro_change_etat("PNJ_Raptor_ETAT_PAF_FALL")
if (i_flag_paf_repousse || i_flag_paf_slide || !f_lifecur)
	macro_change_etat("PNJ_Raptor_ETAT_PAF_SLIDE")

AI_Execute("PNJ_Raptor_exec_check_shoot")

AI_Execute("PNJ_Raptor_exec_update_best_interest")

AI_Execute("PNJ_Raptor_exec_check_requin")

AI_Execute("PNJ_Raptor_exec_check_client")

if (!o_grab_actor)
{
	AI_Execute("PNJ_Raptor_exec_check_vala")
	if (MSG_GlobalIsValid(mid_vala))
		macro_change_etat("PNJ_Raptor_ETAT_VALA")
	else if (MSG_GlobalIsValid(mid_best_interet))
		macro_change_etat("PNJ_Raptor_ETAT_HESITE")
	else
		macro_change_etat(fct_main_etat)
}

// COMPORTEMENT =================================================================================================
i_flag_look = vrai
i_flag_look_best_interet = faux

if (i_flag_projection_done)
{
	v_look_pos = @o_grab_actor	OBJ_PosGet()

	if (f_time_start_etat > 1.2)
	{
		if (i_flag_force_fuite)	
			macro_change_etat("PNJ_Raptor_ETAT_VALA")
		else if (! i_flag_in_my_territory)
			macro_change_etat("PNJ_Raptor_ETAT_VALA")
		else if (MSG_GlobalIsValid(mid_best_interet))
			macro_change_etat("PNJ_Raptor_ETAT_HESITE")
		else
			macro_change_etat(fct_main_etat)
	}
}
else
{
	tf_coef = f_time_start_etat / 0.8
	tf_coef = MATH_FloatMin(tf_coef, 1.0)
	tf_coef *= tf_coef 
	tf_coef *= tf_coef 
	
	f_look_angle_blend_speed = 2.0 + (tf_coef * 20.0)
	
	v_look_pos = OBJ_PosGet()
	v_look_pos += MATH_VecRotate(OBJ_SightGet() * 5.0, Cv_VerticalVector, f_projection_side * ((tf_coef * Cf_Pi) - Cf_PiBy2))
	v_look_pos.z += (tf_coef * 15.0) - 10.0

	if (f_time_start_etat > 0.8)
	{
		i_flag_projection_done = vrai

		ti_index = ARR_ObjSearch(& ao_perceived_actor[0], i_perceived_actor_nb, o_grab_actor)
		if (ti_index != -1 && IsThis_ID_Marin(ai_perceived_ID[ti_index]) )
		{
			AI_Execute("PNJ_Raptor_exec_find_free_pos")
	
			tv_temp = DYN_LIB_ImpulsionGet_Friction(@o_grab_actor OBJ_PosGet(), v_projection_pos, Cv_NormalGravity, @o_grab_actor DYN_FrictionVectorGet().x, tf_time, faux, 4.0)
			@o_grab_actor DYN_GravitySet(Cv_NormalGravity)
			@o_grab_actor DYN_SpeedSetVector(tv_temp)
		}
	
		// Je previens mon client qu'il est lancé
		LNK_GrabStatusSet(mid_grab_actor_LNK_ID, 4)
	}
}

f_joy_norm = 0.0
AI_Execute("PNJ_Raptor_exec_select_action")