//#include "PNJ_Raptor_defines.var"
//
//int			ti_i
//int			ti_flag_collision
//
//float		tf_offset
//float		tf_coef
//
//vector	tv_pied_pos
//vector	tv_collide_pos
//vector	tv_ray_start
//vector	tv_ray_dir
//vector	tv_ray_normale	
//
//object		to_bone
//
//if (raptor_type != C_ID_Raptor || OBJ_FlagsStatusGet() & OBJ_C_StatusFlag_Culled)
//	return
//
//tv_ray_dir = OBJ_BankingGet()
//
//for (ti_i = 2; ti_i < 4; ti_i++)
//{
//	if (! i_flag_leg_IK[ti_i] ) // || IO_KeyPressed(VK_SPACE))
//	{
//		v_IK_dest_pos[ti_i] = @ao_IK_bones[ti_i][2] OBJ_PosGet()
//		continue
//	}
//
//	v_IK_bone_last_valid_sight[ti_i] = @ao_IK_bones[ti_i][2] OBJ_SightGet()
//	v_IK_bone_last_valid_banking[ti_i] = @ao_IK_bones[ti_i][2] OBJ_BankingGet()
//
//	if (f_IK_coef[ti_i] < 1.0)
//	{
//		tv_pied_pos = @ao_IK_bones[ti_i][2] OBJ_PosGet()
//	}
//	else
//	{
//		tv_pied_pos = MATH_VecDotProduct(@ao_IK_bones[ti_i][2] OBJ_PosGet() - v_IK_ground_pos[ti_i], tv_ray_dir) * tv_ray_dir
//		tv_pied_pos += 0.1 * tv_ray_dir
//		tv_pied_pos += v_IK_ground_pos[ti_i]
//	}
//		
//	tv_ray_start = tv_pied_pos
//	tv_ray_start -= MATH_VecDotProduct(tv_ray_start - @ao_IK_bones[ti_i][0] OBJ_PosGet(), tv_ray_dir) * tv_ray_dir
//
//	ti_flag_collision = faux
//
//	@get_global i_raptor_ray_on_colmap_nb++
//	if (COL_RayObject_Dist(tv_ray_start, -tv_ray_dir, f_IK_leg_length[ti_i], all, OBJ_C_IdentityFlag_Anims, Ci_Filter_IdentityFlag, COL_C_Ray_on_ColMap_NoCrossable))
//	{
//		// OK ON TOUCHE UN SOL, ON VA POUVOIR POSITIONNER EN IK ==============================================
//		tv_collide_pos = COL_RayObject_PosGet()
//		tv_ray_normale = COL_RayObject_NormalGet()
//
////		DBG_RenderVector(tv_ray_start, tv_collide_pos - tv_ray_start, color_vert)
////		DBG_RenderVector(tv_collide_pos, tv_ray_normale, color_jaune)
//		
//		v_IK_ground_pos[ti_i] = tv_collide_pos
//		tf_offset = MATH_VecDotProduct(tv_collide_pos - v_IK_ref_ground_pos, tv_ray_dir)
//	}
//	else
//	{
//		v_IK_ground_pos[ti_i] = tv_pied_pos
//		tf_offset = 0.0	
////		DBG_RenderVector(tv_ray_start, -tv_ray_dir * f_IK_leg_length[ti_i], color_rouge)	
//	}		
//
//	tf_offset = MATH_FloatMin(tf_offset, f_IK_leg_length[ti_i] * 0.33)
//	
//	if (tf_offset && tf_offset > f_IK_Z_offset[ti_i])
//		f_IK_Z_offset[ti_i] = tf_offset // MATH_FloatBlend(f_IK_Z_offset[ti_i], tf_offset, 20.0 * TIME_GetDt())
//	else
//		f_IK_Z_offset[ti_i] = MATH_FloatBlend(f_IK_Z_offset[ti_i], tf_offset, 20.0 * TIME_GetDt())
//
//	v_IK_dest_pos[ti_i] = tv_pied_pos
//	v_IK_dest_pos[ti_i] += tv_ray_dir * f_IK_Z_offset[ti_i]
//	
////	DBG_RenderVector(v_IK_dest_pos[ti_i], -tv_ray_dir * f_IK_Z_offset[ti_i], color_cyan)
//
//	i_flag_leg_IK[ti_i] = vrai
//	f_IK_speed[ti_i] = 1.0
//}
//
//
//// ON EXECUTE L'IK =============================================================================================================
//for (ti_i = 2; ti_i < 4; ti_i++)
//{
//	if (i_flag_leg_IK[ti_i])
//	{
//		f_IK_coef[ti_i] += MATH_FloatMin(1.0 - f_IK_coef[ti_i], TIME_GetDt() * 8.0)	
//	
//		tv_pied_pos = MATH_VecBlend(MATH_VecLocalToGlobal(v_IK_local_offset[ti_i]), v_IK_dest_pos[ti_i] - OBJ_PosGet(), f_IK_speed[ti_i])
//		v_IK_local_offset[ti_i] = MATH_VecGlobalToLocal(tv_pied_pos)
//		tv_pied_pos += OBJ_PosGet()
//	}
//	else if (f_IK_coef[ti_i])
//	{
//		f_feet_contact_duration[ti_i] = 0.0
//	
//		f_IK_coef[ti_i] -= MATH_FloatMin(f_IK_coef[ti_i], TIME_GetDt() * 12.0)
//		f_IK_Z_offset[ti_i] *= f_IK_coef[ti_i]
//	
//		v_IK_dest_pos[ti_i] = @ao_IK_bones[ti_i][2] OBJ_PosGet()
//		tv_pied_pos = MATH_VecBlendRotate(v_IK_dest_pos[ti_i] - OBJ_PosGet(), MATH_VecLocalToGlobal(v_IK_local_offset[ti_i]), f_IK_coef[ti_i])
//		v_IK_local_offset[ti_i] = MATH_VecGlobalToLocal(tv_pied_pos)
//		tv_pied_pos += OBJ_PosGet()
//	}
//	else
//		continue
//
//	OBJ_LIB_IK(	ao_IK_bones[ti_i][0], ao_IK_bones[ti_i][1], 
//						af_IK_bones_length[ti_i][0], af_IK_bones_length[ti_i][1],
//						tv_pied_pos,
//						 - @ao_IK_bones[ti_i][1] OBJ_BankingGet(), 
//						f_IK_coef[ti_i] )
//
//	@ao_IK_bones[ti_i][2] OBJ_BankingGeneralSet(v_IK_bone_last_valid_sight[ti_i], v_IK_bone_last_valid_banking[ti_i])
//}
//
//
//