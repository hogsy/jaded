#include "PNJ_Raptor_defines.var"

int				ti_flag_ok
int				ti_i
int				ti_action

float			tf_coef
float			tf_dot_X
float			tf_dot_Y
float			tf_sight_speed

vector		tv_speed
vector		tv_new_sight
vector		tv_dest_sight

// SORTIE ETAT ===================================================================
if (i_sort_etat)
{
	i_sort_etat = faux

	f_way_bezier_sight_weight = 0.0

	f_force_requin_mode_duration = Cf_after_paf_force_requin_duration
	f_force_run_duration = Cf_after_paf_force_run_duration

	COL_ZoneSizeSet(C_zdm_pied, cvector(0.75, 0.75, 0.75))
	COL_ZonePosSet(C_zdm_pied, cvector(0.0, 0.0, 0.75))

	DYN_FrictionVectorSet(cvector(f_friction, f_friction, 0.0))
	DYN_GravitySet(Cv_Raptor_Gravity)

	return
}

// INITIALISATION ETAT ==============================================================
if (i_etat_courant != ETAT_PAF_FLY)
{
	i_dernier_etat = i_etat_courant
	i_etat_courant = ETAT_PAF_FLY

	if (fct_last_etat)
	{
		i_sort_etat = vrai
		AI_Execute(fct_last_etat)
	}

	fct_last_etat = AI_TrackCurGet()

	PNJ_Raptor_Way_Reset()

	o_grab_actor = LNK_ClientGet(Ci_LNK_GRAB_RAPTOR, mid_grab_actor_LNK_ID, faux, nofunc, nofunc, nofunc)

	DYN_FrictionVectorSet(cvector(f_friction, f_friction, 0.0))	

	DBG_RenderVector(v_look_head_pos, v_paf_dir * 10.0, color_jaune)

	i_flag_snap_pos = faux
	i_flag_cri = faux

	if( ! (i_paf_type & C_PAF_KK_Fire) )
		SND_RequestPlayOnObjCanal(Ci_SND_Paf_Important, Anim_Canal_Tete)

	i_SND_flag_play_bodyfall = vrai

	DYN_FrictionVectorSet(cvector(1.0, 1.0, 0.0))	

	tf_dot_X = MATH_VecDotProduct(v_paf_dir, OBJ_HorizonGet())
	tf_dot_Y = MATH_VecDotProduct(v_paf_dir, OBJ_SightGet())
	
	if (MATH_AbsFloat(tf_dot_X) > MATH_AbsFloat(tf_dot_Y))
	{
		if (tf_dot_X > 0.0)
			PNJ_Raptor_ActionSet(Action_Paf_Air_D)
		else
			PNJ_Raptor_ActionSet(Action_Paf_Air_G)
	}
	else
	{
		if (tf_dot_Y > 0.0)
			PNJ_Raptor_ActionSet(Action_Paf_Air_Dos)
		else
			PNJ_Raptor_ActionSet(Action_Paf_Air_Face)
	}

	DYN_GravitySet(cvector(0.0, 0.0, -25.0))
	DYN_FrictionVectorSet(cvector(1.0, 1.0, 0.0))

	tv_speed = v_paf_dir
	DBG_RenderVector(OBJ_PosGet(), tv_speed * 10.0, color_rouge)
	tv_speed = MATH_VecInCone(tv_speed, -Cv_VerticalVector, Cf_PiBy2 * 1.5, 0)
	DBG_RenderVector(OBJ_PosGet(), tv_speed * 10.0, color_vert)
	tv_speed *= 12.0
	tv_speed.z = MATH_FloatMax(tv_speed.z, 6.0)

	if (raptor_type == C_ID_Galiminus)
		tv_speed *= 0.75

	DYN_SpeedSetVector(tv_speed)	

	f_jump_freq_coef = ACT_DurationGet(ACT_ActionGet(), 0)
	f_jump_duration = 2.0
	if (DYN_LIB_Test_Trajectory(OBJ_PosGet(), DYN_SpeedGetVector(), DYN_GravityVectorGet(), DYN_FrictionVectorGet(), f_jump_duration, 30, 0.0) && f_jump_duration > 0.3)
		f_jump_freq_coef /= f_jump_duration
	else
		f_jump_freq_coef /= 1.0

	COL_ZoneSizeSet(C_zdm_pied, cvector(1.25, 1.25, 1.25))
	COL_ZonePosSet(C_zdm_pied, cvector(0.0, 0.0, 1.25))

	f_time_start_etat = 0.0
}
else
{
	f_time_start_etat += TIME_GetDt()
}

ti_action = ACT_ActionGet()
switch(ti_action)
{
	case Action_Paf_Air_G :
	case Action_Paf_Air_D :
	case Action_Paf_Air_Face :
	case Action_Paf_Air_Dos :
		if (ACT_ActionItemGet())
		{
			ACT_LIB_ActionFrequencyMultiply(1.0)
			DYN_FrictionVectorSet(cvector(f_friction, f_friction, 0.0))
		}
		else
		{
			if (f_time_start_etat && COL_CollideType(COL_C_Ground))
				ACT_LIB_ActionFrequencyMultiply(1.0)
			else
				ACT_LIB_ActionFrequencyMultiply(f_jump_freq_coef)
		}
		break
	
	default:
		ACT_LIB_ActionFrequencyMultiply(1.0)
		DYN_FrictionVectorSet(cvector(f_friction, f_friction, 0.0))
}

// ANALYSE =======================================================================================================
AI_Execute("PNJ_Raptor_exec_check_msg")

AI_Execute("PNJ_Raptor_exec_check_vision")

AI_Execute("PNJ_Raptor_exec_check_sound")

AI_Execute("PNJ_Raptor_exec_check_collision")

//AI_Execute("PNJ_Raptor_exec_check_paf")

AI_Execute("PNJ_Raptor_exec_check_shoot")

AI_Execute("PNJ_Raptor_exec_update_best_interest")

AI_Execute("PNJ_Raptor_exec_check_requin")

// COMPORTEMENT =================================================================================================
if (ACT_ActionFinished())
{
	if (f_burning_duration)	
		macro_change_etat("PNJ_Raptor_ETAT_BURN")
	else if (f_lifecur <= 0.0)
		macro_change_etat("PNJ_Raptor_ETAT_MORT")
	else
		macro_change_etat("PNJ_Raptor_ETAT_A_TERRE")
}

if ( ! ACT_ActionItemGet() ) //&& DYN_SpeedGet() )
{
	switch(ti_action)
	{
		case Action_Paf_Air_G :
			tv_new_sight = cvector(1.0, 0.0, 0.0)
			break
		case Action_Paf_Air_D :
			tv_new_sight = cvector(-1.0, 0.0, 0.0)
			break
		case Action_Paf_Air_Face :
			tv_new_sight = cvector(0.0, -1.0, 0.0)
			break
		case Action_Paf_Air_Dos :
			tv_new_sight = cvector(0.0, 1.0, 0.0)
			break
	}

//	tv_dest_sight = DYN_SpeedGetVector()
	tv_dest_sight = v_paf_dir
	tv_dest_sight.z = 0.0
	tv_dest_sight = MATH_VecGlobalToLocal(-tv_dest_sight)
	tv_dest_sight.z = 0.0
	OBJ_Rotate_FromTo(tv_new_sight, MATH_VecBlendRotate(tv_new_sight, tv_dest_sight, 12.0 * TIME_GetDt()))
}

v_virtual_banking = MATH_VecBlendRotate(v_virtual_banking, v_ground_normal, 4.0 * TIME_GetDt())
OBJ_BankingGeneralSet(OBJ_SightGet(), v_virtual_banking)
