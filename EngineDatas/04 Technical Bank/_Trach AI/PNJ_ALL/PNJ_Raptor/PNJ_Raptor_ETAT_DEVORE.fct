#include "PNJ_Raptor_defines.var"

int			ti_i
int			ti_nearest_actor_index

float		tf_norm
float		tf_dist
float		tf_dist_in
float		tf_dist_out
float		tf_dist_fight
float		tf_dist_can_eat

vector	tv_pos
vector	tv_offset
vector	tv_temp
vector	tv_hor_dist
vector	tv_new_sight
vector	tv_new_banking

object	to_head

// SORTIE ETAT ===================================================================
if (i_sort_etat)
{
	i_sort_etat = faux

	f_look_force_duration = 0.0

	o_charogne = nobody
	o_charogne_bone = nobody

	if (i_SND_instance_devore != -1)
	{
		SND_Stop(i_SND_instance_devore)
		i_SND_instance_devore = -1
	}

	return
}

// INITIALISATION ETAT ==============================================================
if (i_etat_courant != ETAT_DEVORE)
{
	i_dernier_etat = i_etat_courant
	i_etat_courant = ETAT_DEVORE

	if (fct_last_etat)
	{
		i_sort_etat = vrai
		AI_Execute(fct_last_etat)
	}

	fct_last_etat = AI_TrackCurGet()
//	fct_main_etat = AI_TrackCurGet()

	if (i_dernier_etat != -1 && f_activation_duration > 0.5)
	{
		i_flag_cri = vrai
		i_SND_roar_index = Ci_SND_Choose_Jack
	}

	f_devore_paf_jauge = 0.0
	f_devore_near_actor_duration = 0.0

	f_time_start_etat = 0.0
}
else
{
	f_time_start_etat += TIME_GetDt()
}

// ANALYSE =======================================================================================================
AI_Execute("PNJ_Raptor_exec_check_msg")

AI_Execute("PNJ_Raptor_exec_check_vision")

AI_Execute("PNJ_Raptor_exec_check_sound")

AI_Execute("PNJ_Raptor_exec_check_collision")

AI_Execute("PNJ_Raptor_exec_check_paf")
if (i_flag_paf_fly)
	macro_change_etat("PNJ_Raptor_ETAT_PAF_FLY")
if (i_flag_paf_fall)
	macro_change_etat("PNJ_Raptor_ETAT_PAF_FALL")
if (i_flag_paf_repousse || i_flag_paf_slide || !f_lifecur)
	macro_change_etat("PNJ_Raptor_ETAT_PAF_SLIDE")

if (i_flag_force_fuite)
	macro_change_etat("PNJ_Raptor_ETAT_VALA")
if (! i_flag_in_my_territory)
	macro_change_etat("PNJ_Raptor_ETAT_VALA")

AI_Execute("PNJ_Raptor_exec_check_shoot")

AI_Execute("PNJ_Raptor_exec_check_client")

AI_Execute("PNJ_Raptor_exec_check_vala")
if (MSG_GlobalIsValid(mid_vala))
	macro_change_etat("PNJ_Raptor_ETAT_VALA")

AI_Execute("PNJ_Raptor_exec_update_best_interest")

AI_Execute("PNJ_Raptor_exec_check_requin")

// SI LE CADAVRE N'EST PLUS LA OU QU'IL N'EST PLUS UN CADAVRE
if ( ! MSG_GlobalIsValid(mid_best_interet))
{
	macro_change_etat("PNJ_Raptor_ETAT_ATTENTE")
}
else if (f_force_requin_mode_duration)
{
//	PNJ_Raptor_Forget_Body(o_last_cadavre)
	macro_change_etat("PNJ_Raptor_ETAT_ATTENTE")
}
else if (i_perceived_best_actor_index == -1 || (! ai_perceived_accessible[i_perceived_best_actor_index] || ! (ai_perceived_status[i_perceived_best_actor_index] & Ci_PERCEIVED_IS_DEAD) ) )
{
	macro_change_etat("PNJ_Raptor_ETAT_ATTENTE")
}
else if (raptor_type == C_ID_Tyranosaure)
{
	if (@o_main_actor OBJ_HierarchyGet() && f_me_to_main_dist > 50.0)
	{
		PNJ_Raptor_Del_Interest()
		macro_change_etat("PNJ_Raptor_ETAT_ATTENTE")
	}
	
	tf_dist = MATH_VecSquareNorm(@ao_head_bones[0] OBJ_PosGet() - @o_main_actor COL_ZonePosGet(C_zde_corps)) 
	if (tf_dist < 6.0)
		AI_Execute("PNJ_Raptor_exec_hard_grab")
}

	
// COMPORTEMENT =================================================================================================
i_way_computation_mode = Ci_WAY_MODE_FIGHT
AI_Execute("PNJ_Raptor_exec_way_find_dest_pos")
AI_Execute("PNJ_Raptor_exec_way_move")

i_flag_run = vrai

o_charogne = ao_perceived_actor[i_perceived_best_actor_index]
switch(ai_perceived_ID[i_perceived_best_actor_index])
{
	case C_ID_Bidoche	:
		o_charogne_bone = @o_charogne ANI_CanalObjectGet(2)
		break

	case C_ID_Scolo :
		o_charogne_bone = @o_charogne ANI_CanalObjectGet(7)
		break

	default:
		o_charogne_bone = @o_charogne ANI_CanalObjectGet(Anim_Canal_Bassin)
}

if (o_charogne_bone == nobody)
{
	o_charogne_bone = o_charogne
}
else
{
	tv_pos = @o_charogne_bone OBJ_PosGet()
	 if ( ! PNJ_Raptor_Is_Accessible(tv_pos, i_target_territory_ID) )
		o_charogne_bone = o_charogne
}

//tv_temp = EVENT_InteretPositionGet(mid_best_interet)
tv_temp = @o_charogne_bone OBJ_PosGet()
tv_temp -= OBJ_PosGet()

switch(raptor_type)
{
	case C_ID_Tyranosaure :
//		tf_dist_in = 15.0
//		tf_dist_out = 20.0
		tf_dist_in = 0.0
		tf_dist_out = 0.0
		tf_dist_fight = 0.0
		tf_dist_can_eat = 8.0
		break

	case C_ID_Raptor :
		tf_dist_in = 10.0
		tf_dist_out = 12.0
		tf_dist_fight = 7.0
		tf_dist_can_eat = 3.0 * OBJ_ZoomGet()
		break

	case C_ID_Galiminus :
 		tf_dist_in = 6.0
		tf_dist_out = 7.0
		tf_dist_fight = 5.0
		tf_dist_can_eat = 3.0 * OBJ_ZoomGet()
		break
}

// Distance 3D
tf_dist = MATH_VecNorm(tv_temp)

tv_hor_dist = tv_temp
tv_hor_dist.z = 0.0

// Distance 2D
tf_norm = MATH_VecNorm(tv_hor_dist)
if (tf_norm > 0.001)
	tv_hor_dist /= tf_norm
else
	tv_hor_dist = OBJ_SightGet()

if (raptor_type == C_ID_Galiminus)
	tf_dist = tf_norm

if (i_flag_cri)
{
	// ON CRI VERS LE CADAVRE
	i_flag_look = vrai
	i_flag_look_best_interet = vrai
}
else if (raptor_type != C_ID_Tyranosaure && tf_norm < tf_dist_can_eat && MATH_AbsFloat(tv_temp.z) > 0.75)
{
	// ON NE PEUT PAS ACCEDER AU CADAVRE	

	ai_perceived_status[i_perceived_best_actor_index] |= Ci_PERCEIVED_BODY_UNREACHABLE

	PNJ_Raptor_Del_Interest()

	macro_change_etat("PNJ_Raptor_ETAT_ATTENTE")
} 
else if (tf_dist < tf_dist_can_eat * 0.75)
{
	i_flag_look = vrai
	i_flag_look_best_interet = vrai

	tv_new_sight = MATH_VecBlendRotate(OBJ_SightGet(), tv_hor_dist, 4.0 * TIME_GetDt())
	tv_new_banking = MATH_VecBlendRotate(OBJ_BankingGet(), v_virtual_banking, 60. * TIME_GetDt())
	OBJ_BankingGeneralSet(tv_new_sight, tv_new_banking)

	PNJ_Raptor_ActionSet(Action_Recul)
	i_flag_dont_change_action = vrai
}
else if (tf_dist > tf_dist_can_eat)
{
	// ON N'EST PAS ENCORE ARRIVE AU CADAVRE	
	
	i_flag_look = vrai
	i_flag_look_best_interet = vrai

	f_delay_between_eat = 1.0
}
else
{
	i_flag_look = vrai
	i_flag_dont_change_action = vrai

	f_joy_norm = 0.0

	ti_nearest_actor_index = PNJ_Raptor_Nearest_Actor_Index()

	// EST-CE QU'ON REGARDE DANS LA DIRECTION D'UN SON ?
	switch(raptor_type)
	{
		case C_ID_Tyranosaure :
			// NON
			break
			
		default:

			for (ti_i = 0; ti_i < i_perceived_actor_nb; ti_i++)
			{
				if (ti_i == i_perceived_best_actor_index)
					continue	
			
				if (ai_perceived_status[ti_i] & Ci_PERCEIVED_HEARD)
				{
					f_look_force_duration = 2.0
					v_look_force_pos = @ao_perceived_actor[ti_i] OBJ_PosGet()
					break
				}
			}
	}

	if (ti_nearest_actor_index == -1)
	{
		tf_dist = Cf_Infinit
	}
	else
	{
		tf_dist = af_perceived_dist[ti_nearest_actor_index]
	
		if (tf_dist < tf_dist_fight)
		{
			// OK, celui là il me cherche, je ne m'interesse plus à ma charogne

#ifndef _FINAL_
			if (DBG_Log_Allowed)
			{
				DBG_TraceFloat(TIME_Get())
				DBG_TraceString(" => ")
				DBG_TraceObject(OBJ_Me())
				DBG_TraceString(" préfère ")
				DBG_TraceObject(ao_perceived_actor[ti_nearest_actor_index])
				DBG_TraceString(" à ")
				DBG_TraceObject(EVENT_InteretTargetGet(mid_best_interet))
				DBG_TraceString(" ACTEUR TROP PRES")
				DBG_TraceEOL()
			}
#endif
	
			PNJ_Raptor_Best_Interet_Update(ti_nearest_actor_index)
//			macro_change_etat("PNJ_Raptor_ETAT_HESITE")
			macro_change_etat("PNJ_Raptor_ETAT_FIGHT")
		}
		else if (f_devore_near_actor_duration > 3.0)
		{
#ifndef _FINAL_
			if (DBG_Log_Allowed)
			{
				DBG_TraceFloat(TIME_Get())
				DBG_TraceString(" => ")
				DBG_TraceObject(OBJ_Me())
				DBG_TraceString(" préfère ")
				DBG_TraceObject(ao_perceived_actor[ti_nearest_actor_index])
				DBG_TraceString(" à ")
				DBG_TraceObject(EVENT_InteretTargetGet(mid_best_interet))
				DBG_TraceString(" ACTEUR PRES TROP LOGTEMPS")
				DBG_TraceEOL()
			}
#endif

			PNJ_Raptor_Best_Interet_Update(ti_nearest_actor_index)
//			macro_change_etat("PNJ_Raptor_ETAT_HESITE")
			macro_change_etat("PNJ_Raptor_ETAT_FIGHT")
		}
	
		if (ti_nearest_actor_index == i_perceived_main_actor_index)
			to_head = o_camera
		else
			to_head = @ao_perceived_actor[ti_nearest_actor_index] ANI_CanalObjectGet(Anim_Canal_Tete)
	}

	switch(ACT_ActionGet())
	{
		case Action_Mange_Au_Sol :

			switch(raptor_type)
			{
				case C_ID_Tyranosaure :
				
					switch(ai_perceived_ID[i_perceived_best_actor_index])
					{
						case C_ID_BatCharognard :
							if (ANI_CurrentFrameGet(0) > 30)
							{
								o_grab_actor = LNK_ThisClientGet(o_charogne, Ci_LNK_GRAB_RAPTOR, mid_grab_actor_LNK_ID, vrai, "PNJ_Raptor_exec_GRAB_init", nofunc, "PNJ_Raptor_exec_GRAB_init")
								if (o_grab_actor)
								{
									SND_RequestPlayOnObjCanal(Ci_SND_Mord, Anim_Canal_Tete)
									macro_change_etat("PNJ_Raptor_ETAT_GRAB")
								}
							}
							break
							
						default:
							if (i_SND_instance_devore == -1)
								i_SND_instance_devore = SND_RequestPlayLoopOnObjCanal(Ci_SND_MangeAuSol, Anim_Canal_Tete)
					}
					
					break
					
				default:
					if (i_SND_instance_devore == -1)
						i_SND_instance_devore = SND_RequestPlayLoopOnObjCanal(Ci_SND_MangeAuSol, Anim_Canal_Tete)
			}

			if (tf_dist < tf_dist_in)
			{
				f_devore_near_actor_duration	+= TIME_GetDt()
			
				PNJ_Raptor_ActionSet(Action_Observe)

				f_delay_before_next_shout_mix = MATH_RandFloat(0.0, 1.0)

				f_look_force_duration = TIME_GetDt()	
				v_look_force_pos = @to_head OBJ_PosGet()
			}
			else if (f_look_force_duration)
			{
				f_devore_near_actor_duration	= 0.0
			
				PNJ_Raptor_ActionSet(Action_Observe)
			}
			else
			{
				f_devore_near_actor_duration	 = 0.0
			
//				i_flag_look_best_interet = vrai
	
				i_flag_look = faux
				i_flag_look_best_interet = faux

				f_delay_between_eat -= MATH_FloatMin(f_delay_between_eat, TIME_GetDt())
	
				if (!f_delay_between_eat)
				{
					f_delay_between_eat = 1.0
	
					switch(raptor_type)
					{
						case C_ID_Galiminus :
							EVENT_AddEventPaf(C_EVENT_FILTER_All, C_PAF_KK_FoodChain, OBJ_Me(), Cf_EVENT_Duree_1Trame, ao_perceived_actor[i_perceived_best_actor_index], Ci_Galiminus_Eat_Point, OBJ_SightGet())
							break

						case C_ID_Raptor :
							EVENT_AddEventPaf(C_EVENT_FILTER_All, C_PAF_KK_FoodChain, OBJ_Me(), Cf_EVENT_Duree_1Trame, ao_perceived_actor[i_perceived_best_actor_index], Ci_Raptor_Eat_Point, OBJ_SightGet())
							break
							
						case C_ID_Tyranosaure :
							EVENT_AddEventPaf(C_EVENT_FILTER_All, C_PAF_KK_FoodChain, OBJ_Me(), Cf_EVENT_Duree_1Trame, ao_perceived_actor[i_perceived_best_actor_index], Ci_Rex_Eat_Point, OBJ_SightGet())
							break
					}
				}
			}
		
			break
			
		case Action_Observe :

			if (i_SND_instance_devore != -1)
			{
				SND_Stop(i_SND_instance_devore)
				i_SND_instance_devore = -1
			}

			if (tf_dist < tf_dist_out)
			{
				f_devore_near_actor_duration	+= TIME_GetDt()
			
				f_delay_before_next_shout_mix -= MATH_FloatMin(f_delay_before_next_shout_mix, TIME_GetDt())

				f_look_force_duration = TIME_GetDt()	
				v_look_force_pos = @to_head OBJ_PosGet()
			}
			else if (!f_look_force_duration)
			{
				f_devore_near_actor_duration	= 0.0
			
				PNJ_Raptor_ActionSet(Action_Mange_Au_Sol)
			}
			else
			{
				f_devore_near_actor_duration	= 0.0
			}
			
			break
	
		default:

			if (i_SND_instance_devore != -1)
			{
				SND_Stop(i_SND_instance_devore)
				i_SND_instance_devore = -1
			}

			f_delay_between_eat = 1.0

		 	if (tf_dist < tf_dist_in)
			{
				f_devore_near_actor_duration	+= TIME_GetDt()
	
				PNJ_Raptor_ActionSet(Action_Observe)

				f_delay_before_next_shout_mix = 0.0

				f_look_force_duration = TIME_GetDt()
				v_look_force_pos = @to_head OBJ_PosGet()
			}
			else if (f_look_force_duration)
			{
				f_devore_near_actor_duration	= 0.0
			
				PNJ_Raptor_ActionSet(Action_Observe)
			}
			else if ( ! (@o_charogne AI_IsModel(get_PNJ_Bats_path)) || @o_charogne OBJ_CapaTest(OBJ_Capa_15))
			{
				f_devore_near_actor_duration	= 0.0
		
				PNJ_Raptor_ActionSet(Action_Mange_Au_Sol)
			}
			else
			{
				i_flag_dont_change_action = faux
			
				f_devore_near_actor_duration	= 0.0
			}
			
			break
	}
	
	tv_new_sight = MATH_VecBlendRotate(OBJ_SightGet(), tv_hor_dist, 4.0 * TIME_GetDt())
	tv_new_banking = MATH_VecBlendRotate(OBJ_BankingGet(), v_virtual_banking, 6.0 * TIME_GetDt())
	OBJ_BankingGeneralSet(tv_new_sight, tv_new_banking)
}

AI_Execute("PNJ_Raptor_exec_select_action")
