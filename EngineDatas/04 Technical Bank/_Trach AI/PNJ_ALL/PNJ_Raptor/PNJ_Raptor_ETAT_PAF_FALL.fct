#include "PNJ_Raptor_defines.var"

int				ti_flag_ok
int				ti_i

float			tf_coef
float			tf_dot_X
float			tf_dot_Y

vector		tv_speed
vector		tv_new_sight
vector		tv_dest_sight

// SORTIE ETAT ===================================================================
if (i_sort_etat)
{
	i_sort_etat = faux

	f_way_bezier_sight_weight = 0.0

	f_force_requin_mode_duration = Cf_after_paf_force_requin_duration
	f_force_run_duration = Cf_after_paf_force_run_duration

	COL_ZoneSizeSet(C_zdm_pied, cvector(0.75, 0.75, 0.75))
	COL_ZonePosSet(C_zdm_pied, cvector(0.0, 0.0, 0.75))

	DYN_FrictionVectorSet(cvector(f_friction, f_friction, 0.0))	

	return
}

// INITIALISATION ETAT ==============================================================
if (i_etat_courant != ETAT_PAF_FALL)
{
	i_dernier_etat = i_etat_courant
	i_etat_courant = ETAT_PAF_FALL

	if (fct_last_etat)
	{
		i_sort_etat = vrai
		AI_Execute(fct_last_etat)
	}

	fct_last_etat = AI_TrackCurGet()

	PNJ_Raptor_Way_Reset()

	o_grab_actor = LNK_ClientGet(Ci_LNK_GRAB_RAPTOR, mid_grab_actor_LNK_ID, faux, nofunc, nofunc, nofunc)

	DYN_FrictionVectorSet(cvector(f_friction, f_friction, 0.0))	

	DBG_RenderVector(v_look_head_pos, v_paf_dir * 10.0, color_jaune)

	i_flag_snap_pos = faux
	i_flag_cri = faux

	SND_RequestPlayOnObjCanal(Ci_SND_Paf_Important, Anim_Canal_Tete)

	tf_dot_X = MATH_VecDotProduct(v_paf_dir, OBJ_HorizonGet())
	tf_dot_Y = MATH_VecDotProduct(v_paf_dir, OBJ_SightGet())
	
	if (i_flag_paf_bronto)
	{
		SND_RequestPlayOnObjCanal(Ci_SND_Paf_Important, Anim_Canal_Tete)
		PNJ_Raptor_ActionSet(Action_Meurt_Ecrase)
	}
	else if (MATH_AbsFloat(tf_dot_X) > MATH_AbsFloat(tf_dot_Y))
	{
		if (tf_dot_X > 0.0)
		{
			PNJ_Raptor_ActionSet(Action_Paf_Sol_D)

			COL_BackFaceSet(DYN_SpeedGetVector() + (OBJ_HorizonGet() * 0.5))

			COL_ZoneSizeSet(C_zdm_pied, cvector(0.75, 0.75, 0.75))
			COL_ZonePosSet(C_zdm_pied, cvector(0.5, 0.0, 0.75))
		}
		else
		{
			PNJ_Raptor_ActionSet(Action_Paf_Sol_G)

			COL_BackFaceSet(DYN_SpeedGetVector() - (OBJ_HorizonGet() * 0.5))

			COL_ZoneSizeSet(C_zdm_pied, cvector(0.75, 0.75, 0.75))
			COL_ZonePosSet(C_zdm_pied, cvector(-0.5, 0.0, 0.75))
		}
	}
	else
	{
		if (tf_dot_Y > 0.0)
		{
			PNJ_Raptor_ActionSet(Action_Paf_Sol_Dos)

			COL_BackFaceSet(DYN_SpeedGetVector() + (OBJ_SightGet() * 0.75))

			COL_ZoneSizeSet(C_zdm_pied, cvector(0.75, 0.75, 0.75))
			COL_ZonePosSet(C_zdm_pied, cvector(0.0, -0.75, 0.75))
		}
		else
		{
			PNJ_Raptor_ActionSet(Action_Paf_Sol_Face)

			COL_BackFaceSet(DYN_SpeedGetVector() - (OBJ_SightGet() * 0.75))

			COL_ZoneSizeSet(C_zdm_pied, cvector(0.75, 0.75, 0.75))
			COL_ZonePosSet(C_zdm_pied, cvector(0.0, 0.75, 0.75))
		}
	}

	f_time_start_etat = 0.0
}
else
{
	f_time_start_etat += TIME_GetDt()
}

//if (f_time_start_etat > 0.2)
//{
//	COL_ZoneSizeSet(C_zdm_pied, cvector(1.25, 1.25, 1.25))
//	COL_ZonePosSet(C_zdm_pied, cvector(0.0, 0.0, 1.25))
//}

// ANALYSE =======================================================================================================
AI_Execute("PNJ_Raptor_exec_check_msg")

AI_Execute("PNJ_Raptor_exec_check_vision")

AI_Execute("PNJ_Raptor_exec_check_sound")

AI_Execute("PNJ_Raptor_exec_check_collision")

//AI_Execute("PNJ_Raptor_exec_check_paf")

AI_Execute("PNJ_Raptor_exec_check_shoot")

AI_Execute("PNJ_Raptor_exec_update_best_interest")

AI_Execute("PNJ_Raptor_exec_check_requin")

// COMPORTEMENT =================================================================================================
if (ACT_ActionFinished())
{
	if (f_burning_duration)	
		macro_change_etat("PNJ_Raptor_ETAT_BURN")
	else if (f_lifecur <= 0.0)
		macro_change_etat("PNJ_Raptor_ETAT_MORT")
	else
		macro_change_etat("PNJ_Raptor_ETAT_A_TERRE")
}

if ( ! ACT_ActionItemGet() && DYN_SpeedGet() )
{
	switch(ACT_ActionGet())
	{
		case Action_Paf_Sol_G :
			tv_new_sight = cvector(1.0, 0.0, 0.0)

			tv_dest_sight = v_paf_dir
			tv_dest_sight.z = 0.0
			tv_dest_sight = MATH_VecGlobalToLocal(-tv_dest_sight)
			tv_dest_sight.z = 0.0
			OBJ_Rotate_FromTo(tv_new_sight, MATH_VecBlendRotate(tv_new_sight, tv_dest_sight, 12.0 * TIME_GetDt()))

			break

		case Action_Paf_Sol_D :
			tv_new_sight = cvector(-1.0, 0.0, 0.0)

			tv_dest_sight = v_paf_dir
			tv_dest_sight.z = 0.0
			tv_dest_sight = MATH_VecGlobalToLocal(-tv_dest_sight)
			tv_dest_sight.z = 0.0
			OBJ_Rotate_FromTo(tv_new_sight, MATH_VecBlendRotate(tv_new_sight, tv_dest_sight, 12.0 * TIME_GetDt()))

			break

		case Action_Paf_Sol_Face :
			tv_new_sight = cvector(0.0, -1.0, 0.0)

			tv_dest_sight = v_paf_dir
			tv_dest_sight.z = 0.0
			tv_dest_sight = MATH_VecGlobalToLocal(-tv_dest_sight)
			tv_dest_sight.z = 0.0
			OBJ_Rotate_FromTo(tv_new_sight, MATH_VecBlendRotate(tv_new_sight, tv_dest_sight, 12.0 * TIME_GetDt()))

			break

		case Action_Paf_Sol_Dos :
			tv_new_sight = cvector(0.0, 1.0, 0.0)

			tv_dest_sight = v_paf_dir
			tv_dest_sight.z = 0.0
			tv_dest_sight = MATH_VecGlobalToLocal(-tv_dest_sight)
			tv_dest_sight.z = 0.0
			OBJ_Rotate_FromTo(tv_new_sight, MATH_VecBlendRotate(tv_new_sight, tv_dest_sight, 12.0 * TIME_GetDt()))

			break
	}
}

v_virtual_banking = MATH_VecBlendRotate(v_virtual_banking, v_ground_normal, 4.0 * TIME_GetDt())
OBJ_BankingGeneralSet(OBJ_SightGet(), v_virtual_banking)
