#include "PNJ_Spider_defines.var"

int				ti_i

vector		tv_pos
vector		tv_new_sight
vector		tv_new_banking

if (i_flag_sortie_etat)
{
	i_flag_sortie_etat = faux
	return
}

if (i_etat_courant != ETAT_Paf)
{
	// INTIALISATION
	i_dernier_etat = i_etat_courant
	i_etat_courant = ETAT_Paf
	
	if (fct_last_etat)
	{
		i_flag_sortie_etat = vrai
		AI_Execute(fct_last_etat)
	}

	DYN_On()
	DYN_FlagsSet(DYN_C_BasicForces | DYN_C_VectorFriction | DYN_C_GlobalFriction | DYN_C_NeverDynamicFather | DYN_C_NeverDynamicHierarchy, none)
	DYN_GravitySet(Cv_Spider_Gravity)
	DYN_FrictionVectorSet(cvector(2.0, 2.0, 0.0))
	DYN_SpeedSetVector(v_paf_dir)

	COL_ColSetActivationSet(C_bit_zdm_pied, none)
	
	fct_last_etat = AI_TrackCurGet()
	
	f_delay_until_last_wall_col = 1000.0

	f_time_start_etat = 0.0
}
else
{
	f_time_start_etat += TIME_GetDt()
}
	
// ANALYSE ===============================================================
AI_Execute("PNJ_Spider_exec_check_vision")

AI_Execute("PNJ_Spider_exec_check_paf")

AI_Execute("PNJ_Spider_exec_check_best_interet")

// COMPORTEMENT =========================================================
if (COL_CollideType(COL_C_Ground))
{
	f_delay_until_last_ground_col = 0.0

	v_ground_pos = COL_CollidedPointGet(COL_C_Ground)

	v_ground_normal	= COL_ZonePosGet(C_zdm_pied)
	v_ground_normal -= v_ground_pos
	
	MATH_VecSetNormalize(v_ground_normal)
}
else
{
	f_delay_until_last_ground_col += TIME_GetDt()
	
	v_ground_normal = MATH_VecBlendRotate(v_ground_normal, Cv_VerticalVector, f_delay_until_last_ground_col)
}

if (f_time_start_etat > 5.0)
	macro_change_etat("PNJ_Spider_ETAT_Sol")

if (f_time_start_etat > 1.0 && f_delay_until_last_ground_col < 0.1)
{
//	if (f_lifecur) 
		macro_change_etat("PNJ_Spider_ETAT_Sol")
//	else
//		OBJ_Destroy()
}

tv_new_sight = DYN_SpeedGetVector()
tv_new_sight.z = 0.0
tv_new_sight = MATH_VecBlendRotate(OBJ_SightGet(), tv_new_sight, 4.0 * TIME_GetDt())

tv_new_banking = MATH_VecBlendRotate(OBJ_BankingGet(), v_ground_normal, 6.0 * TIME_GetDt())

OBJ_SightGeneralSet(tv_new_sight, tv_new_banking)