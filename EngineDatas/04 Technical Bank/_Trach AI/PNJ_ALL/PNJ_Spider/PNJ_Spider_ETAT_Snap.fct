#include "PNJ_Spider_defines.var"

int				ti_i

float			tf_time

vector		tv_pos
vector		tv_new_sight
vector		tv_new_banking
vector		tv_speed

object		to_camera

#define Cf_Init_Fall_Speed				8.0

if (i_flag_sortie_etat)
{
	i_flag_sortie_etat = faux
	if (o_snap_actor)
	{
//		AI_CBDel(o_snap_actor, CallBack_After_Blend, "PNJ_Spider_callback_setpos")
		macro_del_callback_after_cam("PNJ_Spider_callback_setpos")
		AI_TrackChange(4, "PNJ_Spider_After_ETAT")
		
		@get_global i_spider_on_camera_nb --
		o_snap_actor = nobody
	}
	return
}

to_camera = @get_global o_camera

if (i_etat_courant != ETAT_Snap)
{
	// INTIALISATION
	i_dernier_etat = i_etat_courant
	i_etat_courant = ETAT_Snap
	
	if (fct_last_etat)
	{
		i_flag_sortie_etat = vrai
		AI_Execute(fct_last_etat)
	}

	if (@get_global i_spider_on_camera_nb < 3)
	{
		i_etat_phase = -1
	
		o_snap_actor = to_camera
		@get_global i_spider_on_camera_nb ++

		DYN_Off()
		COL_ColSetActivationSet(none, C_bit_zdm_pied)
//		AI_CBAdd(o_snap_actor, CallBack_After_Blend, "PNJ_Spider_callback_setpos")	
		macro_add_callback_after_cam("PNJ_Spider_callback_setpos")
		AI_TrackStop(4)
	
		v_snap_sight = @to_camera MATH_VecGlobalToLocal(OBJ_SightGet())
		v_snap_banking = @to_camera MATH_VecGlobalToLocal(OBJ_BankingGet())
		v_snap_pos = @to_camera MATH_VecGlobalToLocal(OBJ_PosGet() - @to_camera OBJ_PosGet())
	
		f_rot_angle = MATH_RandFloat(0.0, Cf_2Pi)
		f_rot_speed = MATH_RandFloat(1.0, 3.0)
	}
	else
	{
		DYN_On()
		DYN_FlagsSet(DYN_C_BasicForces | DYN_C_VectorFriction | DYN_C_GlobalFriction | DYN_C_NeverDynamicFather | DYN_C_HorizontalGrounds, DYN_C_NeverDynamicHierarchy)
		DYN_GravitySet(cvector(0.0, 0.0, -12.0))
		DYN_FrictionVectorSet(cvector(4.0, 4.0, 0.0))
	
		COL_ColSetActivationSet(C_bit_zdm_pied, none)

		tv_pos = @to_camera OBJ_PosGet()
		tv_pos += @to_camera OBJ_BankingGet() * 0.5
		tv_pos -= @to_camera OBJ_SightGet() * 0.5
		OBJ_PosSet(tv_pos) 
		COL_StartMatrixSet(OBJ_PosGet())
		
		tv_pos = MATH_VecRotate(@o_main_actor OBJ_SightGet(), @o_main_actor OBJ_BankingGet(), MATH_RandFloat(-Cf_PiBy3, Cf_PiBy3))
		tv_pos *= MATH_RandFloat(1.0, MATH_FloatMax(MATH_VecDotProduct(@o_main_actor DYN_SpeedGetVector(), @o_main_actor OBJ_SightGet()), 3.0))
		tv_pos += @o_main_actor OBJ_PosGet()

		tf_time = 0.0
		tv_speed = DYN_LIB_ImpulsionGet_Friction(OBJ_PosGet(), tv_pos, DYN_GravityVectorGet(), DYN_FrictionVectorGet().x, tf_time, faux, 0.0)
		DYN_SpeedSetVector(tv_speed)
	
		f_rot_speed = MATH_RandFloat(-0.2, 0.2)

		f_etat_phase_duration = 0.0
		i_etat_phase = 0
	}

 	fct_last_etat = AI_TrackCurGet()
	
	f_delay_until_last_wall_col = 1000.0

	f_time_start_etat = 0.0

}
else
{
	f_time_start_etat += TIME_GetDt()
}
	
// ANALYSE ==============================================================================
AI_Execute("PNJ_Spider_exec_check_vision")
if (i_perceived_best_actor_index == -1)
	macro_change_etat("PNJ_Spider_ETAT_Paf")
 
AI_Execute("PNJ_Spider_exec_check_paf")
if (i_flag_paf)
	macro_change_etat("PNJ_Spider_ETAT_Paf")

AI_Execute("PNJ_Spider_exec_check_best_interet")
if (i_perceived_best_actor_index == -1 || ! MSG_GlobalIsValid(mid_best_interet))
	macro_change_etat("PNJ_Spider_ETAT_Paf")

if (ai_perceived_status[i_perceived_best_actor_index] & (Ci_PERCEIVED_IS_DEAD | Ci_PERCEIVED_NEAR_FIRE | Ci_PERCEIVED_GET_FIRE))
	macro_change_etat("PNJ_Spider_ETAT_Paf")

// COMPORTEMENT =========================================================
if (TIME_Elapsed(@get_global f_spider_time_last_bite, 1.0))
{
	@get_global f_spider_time_last_bite = TIME_Get()
	EVENT_AddEventPaf(C_EVENT_FILTER_All, C_PAF_KK_Faible, OBJ_Me(), Cf_EVENT_Duree_1Trame, ao_perceived_actor[i_perceived_best_actor_index], 10.0 * PAF_Unit, OBJ_SightGet())
}

//f_morph_progression += 6.0 * TIME_GetDt()

if (i_etat_phase == -1)
	returntrack

PNJ_Spider_UncollideAdd(o_main_actor, Cf_EVENT_Duree_1Trame)

if ( ! i_etat_phase )
{
	f_etat_phase_duration += TIME_GetDt()

	if (f_etat_phase_duration > 5.0 || (COL_CollideType(COL_C_Ground) && COL_NormalGet(COL_C_Ground).z > 0.0))
	{
		i_etat_phase++
		f_etat_phase_duration = 0.0
	}
	else
	{
		tv_new_sight = -DYN_SpeedGetVector()
		tv_new_sight = MATH_VecBlendRotate(OBJ_SightGet(), tv_new_sight, 6.0 * TIME_GetDt())
		OBJ_SightGeneralSet(tv_new_sight, Cv_VerticalVector)
	
		OBJ_RotateLocalZ(f_rot_speed * TIME_GetDt())
	}
}
else if (i_etat_phase == 1)
{
	tv_pos = @o_main_actor OBJ_PosGet()
	tv_pos -= @o_main_actor OBJ_SightGet() * 2.0
	
	tv_new_sight = tv_pos - OBJ_PosGet()
	tv_new_sight = MATH_VecBlendRotate(OBJ_SightGet(), tv_new_sight, 6.0 * TIME_GetDt())
	tv_new_banking = MATH_VecBlendRotate(OBJ_BankingGet(), Cv_VerticalVector, 6.0 * TIME_GetDt())
	OBJ_BankingGeneralSet(tv_new_sight, tv_new_banking)
	
	tv_speed = OBJ_SightGet() * 4.5
	tv_speed.z = 0.0
	DYN_SpeedSetVector(tv_speed)

	if (TIME_Elapsed(@get_global f_spider_time_last_jump, 0.05) && MATH_VecDotProduct(OBJ_PosGet() - @to_camera OBJ_PosGet(), @to_camera OBJ_SightGet()) < -0.5)
	{
		@get_global f_spider_time_last_jump	= TIME_Get()
	
		tv_pos = @to_camera OBJ_PosGet()
		tv_pos += @to_camera OBJ_BankingGet() * 0.25
		tv_pos -= @to_camera OBJ_SightGet() * 0.25
		OBJ_PosSet(tv_pos) 
		COL_StartMatrixSet(OBJ_PosGet())
		
		tv_pos = MATH_VecRotate(@o_main_actor OBJ_SightGet(), @o_main_actor OBJ_BankingGet(), MATH_RandFloat(-Cf_PiBy4, Cf_PiBy4))
		tv_pos *= MATH_RandFloat(1.0, MATH_FloatMax(MATH_VecDotProduct(@o_main_actor DYN_SpeedGetVector(), @o_main_actor OBJ_SightGet()), 2.0))
		tv_pos += @o_main_actor OBJ_PosGet()

		tf_time = 0.0
		tv_speed = DYN_LIB_ImpulsionGet_Friction(OBJ_PosGet(), tv_pos, DYN_GravityVectorGet(), DYN_FrictionVectorGet().x, tf_time, faux, 0.0)
		DYN_SpeedSetVector(tv_speed)
	
		f_rot_speed = MATH_RandFloat(-0.2, 0.2)

		f_etat_phase_duration = 0.0
		i_etat_phase = 0
	}
}