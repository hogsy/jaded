#include "PNJ_Spider_defines.var"

int			ti_i

float		tf_dist
float		tf_coef
float		tf_speed
float		tf_norm
float		tf_pow_coef

object	to_target
object	to_head_target

vector	tv_impulsion
vector	tv_new_sight
vector	tv_new_banking
vector	tv_horizon
vector	tv_speed
vector	tv_me_to_target
vector	tv_collide_pos
vector	tv_jump_pos

vector	tv_ray_start_pos
vector	tv_ray_dir
vector	tv_ray_col_normal

if (i_flag_sortie_etat)
{
	i_flag_sortie_etat = faux

	DYN_On()
	DYN_FlagsSet(DYN_C_BasicForces | DYN_C_VectorFriction | DYN_C_GlobalFriction | DYN_C_NeverDynamicFather | DYN_C_NeverDynamicHierarchy, DYN_C_HorizontalGrounds)
	DYN_GravitySet(Cv_Spider_Gravity)

	COL_ColSetActivationSet(C_bit_zdm_pied, none)
	
	return
}

if (i_etat_courant != ETAT_Attaque)
{
	// INTIALISATION
	i_dernier_etat = i_etat_courant
	i_etat_courant = ETAT_Attaque
	
	if (fct_last_etat)
	{
		i_flag_sortie_etat = vrai
		AI_Execute(fct_last_etat)
	}
	
	fct_last_etat = AI_TrackCurGet()
	
	DYN_On()
	DYN_FlagsSet(DYN_C_BasicForces | DYN_C_VectorFriction | DYN_C_GlobalFriction | DYN_C_NeverDynamicFather | DYN_C_HorizontalGrounds, DYN_C_NeverDynamicHierarchy)
	DYN_GravitySet(Cv_Spider_Gravity)
	DYN_FrictionVectorSet(cvector(8.0, 8.0, 0.0))

	COL_ColSetActivationSet(C_bit_zdm_pied, none)

	f_delay_until_last_ground_col = 1000.0
	f_delay_until_last_wall_col = 1000.0

	f_etat_phase_duration = 0.0
	i_etat_phase = 0

	@get_global f_spider_time_last_jump = TIME_Get()

	f_time_start_etat = 0.0
}
else
{
	f_time_start_etat += TIME_GetDt()
}

// ANALYSE ==============================================================================
AI_Execute("PNJ_Spider_exec_check_vision")
if (i_perceived_best_actor_index == -1)
	macro_change_etat("PNJ_Spider_ETAT_Paf")
 
AI_Execute("PNJ_Spider_exec_check_paf")
if (i_flag_paf)
	macro_change_etat("PNJ_Spider_ETAT_Paf")

AI_Execute("PNJ_Spider_exec_check_best_interet")
if (! MSG_GlobalIsValid(mid_best_interet))
	macro_change_etat("PNJ_Spider_ETAT_Paf")

if (ai_perceived_status[i_perceived_best_actor_index] & (Ci_PERCEIVED_IS_DEAD | Ci_PERCEIVED_NEAR_FIRE | Ci_PERCEIVED_GET_FIRE))
	macro_change_etat("PNJ_Spider_ETAT_Paf")

// COMPORTEMENT ========================================================================
to_target = EVENT_InteretTargetGet(mid_best_interet)
if (to_target == o_main_actor)
	to_head_target = @get_global o_camera
else
	to_head_target = @to_target ANI_CanalObjectGet(Anim_Canal_Tete)

switch(i_etat_phase)
{
	case 0 :

//		tv_new_sight = MATH_VecBlendRotate(OBJ_SightGet(), @to_target OBJ_PosGet() - OBJ_PosGet(), 4.0 * TIME_GetDt())
//		tv_new_banking = MATH_VecBlendRotate(OBJ_BankingGet(), v_dest_banking, 4.0 * TIME_GetDt())
//		OBJ_BankingGeneralSet(tv_new_sight, tv_new_banking)
//
//		f_etat_phase_duration += TIME_GetDt()
//		if (f_etat_phase_duration > 0.5)
		{
			f_etat_phase_duration = 0.0
			i_etat_phase++

			DYN_On()
			DYN_FlagsSet(DYN_C_BasicForces | DYN_C_VectorFriction | DYN_C_GlobalFriction | DYN_C_NeverDynamicFather | DYN_C_NeverDynamicHierarchy, none)
			DYN_GravitySet(Cv_Spider_Jump_Gravity)
			DYN_FrictionVectorSet(Cv_Spider_Jump_Friction)	
			DYN_TractionSet(Cv_NullVector	)	
		
			COL_ColSetActivationSet(C_bit_zdm_pied, none)
			COL_StartMatrixSet(OBJ_PosGet())
		
			if (to_target == o_main_actor)
			{
				tv_jump_pos = @to_target DYN_SpeedGetVector() * 0.5
				tv_jump_pos.z = 0.0
				tv_jump_pos += @to_head_target OBJ_PosGet()
				tv_jump_pos += @to_head_target OBJ_HorizonGet() * MATH_RandFloat(-0.25, 0.25)
				tv_jump_pos.z += MATH_RandFloat(-0.4, 0.0)
			}
			else
			{
				tv_jump_pos = @o_best_interet_target COL_ZonePosGet(C_zde_corps)
			}

			f_jump_duration = 0.0
			tv_impulsion = DYN_LIB_ImpulsionGet_Friction(OBJ_PosGet(), tv_jump_pos, Cv_Spider_Jump_Gravity, Cf_Spider_Jump_Friction, f_jump_duration, faux, 0.35)
			f_jump_duration = MATH_FloatMin(f_jump_duration, 0.5)
			tv_impulsion = DYN_LIB_ImpulsionGet_Friction(OBJ_PosGet(), tv_jump_pos, Cv_Spider_Jump_Gravity, Cf_Spider_Jump_Friction, f_jump_duration, faux, 0.0)
			
//			tf_norm = MATH_VecNorm(tv_impulsion)	
//			if (tf_norm > Cf_impulsion_max)
//			{
//				tv_impulsion /= tf_norm
//				tv_impulsion *= Cf_impulsion_max
//			}
		
			DYN_SpeedSetVector(tv_impulsion)
		}

		break

	case 1 :

		if (COL_CollideType(COL_C_Ground))
		{
			macro_change_etat("PNJ_Spider_ETAT_Sol")	
		}
		else if (IsThis_ID_Humain(ai_perceived_ID[i_perceived_best_actor_index]))
		{
			if (COL_ObjectCollide(to_target) || OBJ_LIB_Virtual_Collision(OBJ_Me(), to_target, faux))
			{
				if (TIME_Elapsed(@get_global f_spider_time_last_bite, 1.0))
				{
					@get_global f_spider_time_last_bite = TIME_Get()
					EVENT_AddEventPaf(C_EVENT_FILTER_All, C_PAF_KK_Faible, OBJ_Me(), Cf_EVENT_Duree_1Trame, ao_perceived_actor[i_perceived_best_actor_index], 10.0 * PAF_Unit, OBJ_SightGet())
				}

				macro_change_etat("PNJ_Spider_ETAT_Snap")

				PNJ_Spider_UncollideAdd(to_target, 1.0)

				tv_jump_pos = @to_target OBJ_PosGet()
				tv_jump_pos += @to_target OBJ_SightGet() * MATH_RandFloat(2.0, 3.0)
				tv_jump_pos += @to_target OBJ_HorizonGet() * MATH_RandFloat(-1.0, 1.0)
				tv_jump_pos.z += MATH_RandFloat(0.0, 1.0)

				f_jump_duration = 0.0
				tv_impulsion = DYN_LIB_ImpulsionGet_Friction(OBJ_PosGet(), tv_jump_pos, Cv_Spider_Jump_Gravity, Cf_Spider_Jump_Friction, f_jump_duration, faux, 0.1)
				f_jump_duration = MATH_FloatMin(f_jump_duration, 0.5)
				tv_impulsion = DYN_LIB_ImpulsionGet_Friction(OBJ_PosGet(), tv_jump_pos, Cv_Spider_Jump_Gravity, Cf_Spider_Jump_Friction, f_jump_duration, faux, 0.0)
				
//				tf_norm = MATH_VecNorm(tv_impulsion)	
//				if (tf_norm > Cf_impulsion_max)
//				{
//					tv_impulsion /= tf_norm
//					tv_impulsion *= Cf_impulsion_max
//				}
			
				DYN_SpeedSetVector(tv_impulsion)
	
				f_etat_phase_duration = 0.0
				i_etat_phase++

				f_delay_until_last_ground_col = 1000.0
				f_delay_until_last_wall_col = 1000.0
			}
		}

		tf_speed = DYN_SpeedGet()
	
		if (tf_speed)
		{
			tv_new_sight = DYN_SpeedGetVector()
			tv_new_sight /= tf_speed
			
			tv_new_sight = MATH_VecBlendRotate(OBJ_SightGet(), tv_new_sight, 12.0 * TIME_GetDt())
			tv_new_banking = MATH_VecBlendRotate(OBJ_BankingGet(), Cv_VerticalVector, 12.0 * TIME_GetDt())
		
			OBJ_SightGeneralSet(tv_new_sight, tv_new_banking)
//			OBJ_BankingGeneralSet(tv_new_sight, tv_new_banking)
		}

		break
		
	case 2 :

		if (COL_CollideType(COL_C_Ground) || COL_CollideType(COL_C_Wall))
			macro_change_etat("PNJ_Spider_ETAT_Sol")
		
		tf_speed = DYN_SpeedGet()
	
		if (tf_speed)
		{
			tv_new_sight = DYN_SpeedGetVector()
			tv_new_sight /= tf_speed
			
			tv_new_sight = MATH_VecBlendRotate(OBJ_SightGet(), tv_new_sight, 8.0 * TIME_GetDt())
			tv_new_banking = MATH_VecBlendRotate(OBJ_BankingGet(), -tv_new_sight, 8.0 * TIME_GetDt())
		
			OBJ_SightGeneralSet(tv_new_sight, MATH_VecBlend(OBJ_BankingGet(), Cv_VerticalVector, 6.0 * TIME_GetDt()))
		}
		
		break
}

