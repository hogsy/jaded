#include "PNJ_EatMe_defines.var"

int				ti_i
int				ti_flag_stop
int				ti_index

float			tf_speed
float			tf_coef
float			tf_target_speed
float			tf_Z_offset
float			tf_dot_product
float			tf_ray_length

vector		tv_pos
vector		tv_new_sight
vector		tv_new_banking
vector		tv_speed
vector		tv_traction
vector		tv_temp
vector		tv_ray_start
vector		tv_ray_dir

object		to_collide_object

if (i_flag_sortie_etat)
{
	i_flag_sortie_etat = faux

	OBJ_FlagsControlSet(none, OBJ_C_ControlFlag_RayInsensitive)

	COL_StartMatrixSet(OBJ_PosGet())

//	macro_del_callback_after_cam("PNJ_EatMe_callback_set_pos")
	macro_del_callback_tir("PNJ_EatMe_callback_set_pos")
	
	if (o_javelin)
	{
		tv_ray_dir = @o_javelin OBJ_SightGet()
		tv_ray_start = @o_javelin OBJ_PosGet() - (tv_ray_dir * 1.5)
		tf_ray_length = 3.0
		o_javelin = nobody
	}
	else
	{
		tv_ray_dir = v_perfored_module_last_sight
		tv_ray_start = v_perfored_module_last_pos - (tv_ray_dir * 1.5)
		tf_ray_length = 3.0
	}

	if (PNJ_EatMe_IsWater(OBJ_PosGet()) && f_water_Z < -1000.0)
		to_collide_object = COL_RayObject_Dist(tv_ray_start, tv_ray_dir, tf_ray_length, all, none, Ci_Filter_IdentityFlag, COL_C_Ray_on_ColMap_Crossable)
	else
		to_collide_object = COL_RayObject_Dist(tv_ray_start, tv_ray_dir, tf_ray_length, all, none, Ci_Filter_IdentityFlag, COL_C_Ray_on_ColMap_NoCrossable)

	if (to_collide_object)
	{
		v_ray_pos = COL_RayObject_PosGet()
		v_ray_normal = COL_RayObject_NormalGet()
		
		if (COL_GMAT_FlagsGet(COL_C_Ray) & Gmat_KK_Face_eau)
		{
			f_water_Z = v_ray_pos.z

			if (COL_RayObject_Dist(tv_ray_start, tv_ray_dir, tf_ray_length, all, none, Ci_Filter_IdentityFlag, COL_C_Ray_on_ColMap_NoCrossable))
			{
				v_ray_pos = COL_RayObject_PosGet()
				v_ray_normal = COL_RayObject_NormalGet()
				OBJ_PosSet(v_ray_pos + (v_ray_normal * COL_ZoneSizeGet(C_zdm_pied)))
			}
		}
		else
		{
			OBJ_PosSet(v_ray_pos + (v_ray_normal * COL_ZoneSizeGet(C_zdm_pied)))
		}
	}

	i_perfored_module_index = -1
	i_flag_snap = faux

	OBJ_CapaSet(none, CAPA_Bidoche_Snapped_Jack | CAPA_Bidoche_Snapped_On_Javelin)
	
	f_time_last_snap = TIME_Get()

	return
}

if (i_etat_courant != ETAT_Snap)
{
	// INTIALISATION
	i_dernier_etat = i_etat_courant
	i_etat_courant = ETAT_Snap
	
	if (fct_last_etat)
	{
		i_flag_sortie_etat = vrai
		AI_Execute(fct_last_etat)
	}
	
	AI_TrackStop(4)
//	macro_add_callback_after_cam("PNJ_EatMe_callback_set_pos")
	macro_add_callback_tir("PNJ_EatMe_callback_set_pos")

	DYN_Off()
	OBJ_FlagsIdentitySet(none, OBJ_C_IdentityFlag_Dyna)
	OBJ_FlagsControlSet(OBJ_C_ControlFlag_RayInsensitive, none)
	COL_ColSetActivationSet(none, C_bit_zdm_pied)
	OBJ_HierarchyReset()	

	fct_last_etat = AI_TrackCurGet()

	f_time_start_etat = 0.0
	f_water_Z = -Cf_Infinit

	OBJ_CapaSet(CAPA_Bidoche_Snapped_Jack, none)
}
else
{
	f_time_start_etat += TIME_GetDt()
}


// ANALYSE ===============================================================
f_death_duration = 0.0

if (o_javelin && @o_javelin AI_IsModel(get_Arme_Lance_path) )
{
	if( @get_Arme_Lance_path o_javelin mi_State == Ci_bambou_state_launch )
	{
		i_flag_smell_food = vrai
		OBJ_CapaSet(CAPA_Bidoche_Snapped_On_Javelin, none)
	}
}
//else
//	OBJ_DrawAtEnd()

if (OBJ_CapaTest(CAPA_Bidoche_Snapped_SeDetacher))
	macro_change_etat("PNJ_EatMe_ETAT_Fall")

//if (@get_global i_bidoche_coup && f_time_start_etat > 1.0)
//	macro_change_etat("PNJ_EatMe_ETAT_Fall")

// COMPORTEMENT =========================================================

if( o_javelin && @o_main_actor_Jack H_Weapon_Gao_Get() != o_javelin )
	i_hidden = vrai
//if( @o_main_actor_Jack H_Weapon_ID_Get() != Ci_weapon_ID_bambou )
//	i_hidden = vrai

