#include "PNJ_EatMe_defines.var"

int			ti_crossable
int			ti_capa

int			sect0
int			sect1
int			sect2
int			sect3

object	to_bone
object		to_main_actor

//#ifndef _FINAL_
//SCT_GetOf(&sect0, &sect1, &sect2, &sect3)
//if (sect0)
//	DBG_Error("Je ne dois pas être sectorisé")
//if (sect1)
//	DBG_Error("Je ne dois pas être sectorisé")
//if (sect2)
//	DBG_Error("Je ne dois pas être sectorisé")
//if (sect3)
//	DBG_Error("Je ne dois pas être sectorisé")
//#endif

SCT_SetOf(0, 0, 0, 0)

COL_ColSetActivationSet(none, all)
OBJ_FlagInvisibleSet(faux)

o_main_actor_Jack = AI_MainActorGet(C_ID_Joueur)
o_main_actor_Kong = AI_MainActorGet(C_ID_Kong)

// MAIN ACTOR
if( @get_global i_Player_is_Kong )
	to_main_actor = o_main_actor_Kong
else
	to_main_actor = o_main_actor_Jack


if ( ! i_flag_hide )
{
	i_flag_hide = vrai

	switch(i_bidoche_type)
	{
		case Ci_Bidoche_Gali :
		case Ci_Bidoche_Crab :
		case Ci_Bidoche_Bat :
		case Ci_Bidoche_Scorpion :
			move_speed = 0.5
	//		f_size_coef = MATH_RandFloat(1.8, 2.2)
			f_cylinder_size = 0.05 * f_size_coef
			i_modules_nb = 5
			COL_ZoneSizeSet(C_zdm_pied, cvector(0.06, 0.06, 0.06))
			BV_MinSet(cvector(-f_size_coef, -f_size_coef, -f_size_coef) * 0.35)
			BV_MaxSet(cvector(f_size_coef, f_size_coef, f_size_coef) * 0.35)
			break
	
		case Ci_Bidoche_Larve :
		case Ci_Bidoche_Scolo :
			move_speed = 0.5
			f_size_coef = MATH_RandFloat(1.8, 2.2)
			f_cylinder_size = 0.05 * f_size_coef
			i_modules_nb = 5
			COL_ZoneSizeSet(C_zdm_pied, cvector(0.06, 0.06, 0.06))
			BV_MinSet(cvector(-f_size_coef, -f_size_coef, -f_size_coef) * 0.35)
			BV_MaxSet(cvector(f_size_coef, f_size_coef, f_size_coef) * 0.35)
			break
			
		case Ci_Bidoche_Swamp :
			move_speed = 0.5
			f_size_coef = MATH_RandFloat(1.8, 2.2)
			f_cylinder_size = 0.05 * f_size_coef
			i_modules_nb = 5
			COL_ZoneSizeSet(C_zdm_pied, cvector(0.025, 0.025, 0.025))
			BV_MinSet(cvector(-f_size_coef, -f_size_coef, -f_size_coef) * 0.35)
			BV_MaxSet(cvector(f_size_coef, f_size_coef, f_size_coef) * 0.35)
			break
	
		case Ci_Bidoche_Crochax :
			move_speed = 1.5
			f_size_coef = MATH_RandFloat(1.8, 2.2)
			f_cylinder_size = 0.05 * f_size_coef
			i_modules_nb = 5
			COL_ZoneSizeSet(C_zdm_pied, cvector(0.025, 0.025, 0.025))
			BV_MinSet(cvector(-f_size_coef, -f_size_coef, -f_size_coef) * 0.35)
			BV_MaxSet(cvector(f_size_coef, f_size_coef, f_size_coef) * 0.35)
			break
	}

	to_bone = ANI_CanalObjectGet(0)
	@to_bone OBJ_FlagInvisibleSet(vrai)
	to_bone = ANI_CanalObjectGet(1)
	@to_bone OBJ_FlagInvisibleSet(vrai)
	
	if (i_bidoche_type == Ci_Bidoche_Crochax)
	{
		to_bone = ANI_CanalObjectGet(20)
		@to_bone OBJ_FlagInvisibleSet(vrai)
		to_bone = ANI_CanalObjectGet(30)
		@to_bone OBJ_FlagInvisibleSet(vrai)
	}
}

i_etat_phase++

if (@get_global i_frame_nbr > 10)
{
	GRID_CurrentSet(1)
	ti_capa = GRID_CapaGet(OBJ_PosGet()) 
	GRID_CurrentSet(0)

	if (ti_capa & Ci_Grid2_EnFeu)
		returntrack

	if (i_etat_phase < 2)
		returntrack

	if (OBJ_LodVisGet() > 0.05)
		returntrack

//	o_main_actor = @get_global o_camera 
//
//	if (MATH_VecDotProduct(@o_main_actor OBJ_SightGet(), OBJ_PosGet() - @o_main_actor OBJ_PosGet()) > 0.0)
//		returntrack
}

if (! OBJ_FlagsIdentityTest( OBJ_C_IdentityFlag_Generated) )
{
	switch(i_bidoche_type)
	{
		case Ci_Bidoche_Gali :
			@get_global o_bidoche_gali = OBJ_Me()
			OBJ_Destroy()
			break

		case Ci_Bidoche_Crab :
			@get_global o_bidoche_crab = OBJ_Me()
			OBJ_Destroy()
			break

		case Ci_Bidoche_Bat :
			@get_global o_bidoche_bat = OBJ_Me()
			OBJ_Destroy()
			break

		case Ci_Bidoche_Scorpion :
			@get_global o_bidoche_scorpion = OBJ_Me()
			OBJ_Destroy()
			break
	}
}

f_point_de_viande = Cf_Bidoche_Meat_Point
if (override_meat_point != -1.0)
	f_point_de_viande = override_meat_point

AI_RunContext(CTX_AfterRec)
DYN_Off()


v_init_pos = OBJ_PosGet()

f_delay_until_last_ground_col = 1000.0
f_delay_until_last_wall_col = 1000.0

f_time_last_bite_sound = -1000.0
f_time_last_snap = -1000.0

COL_ZoneSizeSet(C_zde_corps, cvector(1.5, 1.5, 1.5))

//COL_CrossableSet(none, all)
//ti_crossable = Gmat_Jack_DefaultCrossable
//ti_crossable |= Gmat_Jack_Face_eau
//ti_crossable |= Gmat_Jack_Face_de_Bord
//ti_crossable |= Gmat_Jack_BordHumain_TraversableNMI
//ti_crossable |= Gmat_Jack_Crossable_All_But_TREX
//ti_crossable |= Gmat_Jack_Crossable_All_But_RAPTORS
//COL_CrossableSet(ti_crossable, none)

COL_CrossableSet(Gmat_KK_Crossable_Default, none)

COL_SwapToSpecific(C_zdm_pied)
COL_ZoneFlagSet(C_zdm_pied, COL_C_Zone_ZDM | COL_C_Zone_ZDE, none)

COL_SwapToSpecific(C_zde_corps)
COL_ZonePosSet(C_zde_corps, Cv_NullVector)

AI_CBAdd(OBJ_Me(), CallBack_WhenDestroy,"PNJ_EatMe_callback_WhenDestroy")

OBJ_FlagsIdentitySet(OBJ_C_IdentityFlag_DesignStruct,none)
//OBJ_Me().des_int1 = Ci_DISPLAY_FIGHT
OBJ_Me().des_int1 = 0

//OBJ_InfoPhotoParamSet( 0, 0, 4, 4, 0.0, 0.0, 0.0, 1.5 * OBJ_ZoomGet())

v_Scolo_Gravity = Cv_ScoloJack_Gravity

v_last_pos = OBJ_PosGet()
v_head_last_pos = OBJ_PosGet()

// On cache le visuel

OBJ_FlagsControlSet(OBJ_C_ControlFlag_AlwaysVisible, none)
TIME_Wait(Cf_EVENT_Duree_1Trame)
PNJ_EatMe_Init_Modules()
OBJ_FlagsControlSet(none, OBJ_C_ControlFlag_AlwaysVisible)

OBJ_CapaSet(none, all)

AI_TrackChange(Ci_Track_Reflex, "PNJ_EatMe_Reflex")
AI_TrackChange(Ci_Track_TagOn, "PNJ_EatMe_Post")

switch(i_bidoche_type)
{
	case Ci_Bidoche_Larve :
	case Ci_Bidoche_Scolo :
		AI_TrackChange(Ci_Track_Etat, "PNJ_EatMe_ETAT_Ground")
		break
		
	case Ci_Bidoche_Swamp :
		AI_TrackChange(Ci_Track_Etat, "PNJ_EatMe_ETAT_Water")
		break	
		
	case Ci_Bidoche_Crochax :
		AI_TrackChange(Ci_Track_Etat, "PNJ_EatMe_ETAT_Fly")
		break	
		
	case Ci_Bidoche_Gali :
	case Ci_Bidoche_Crab :
	case Ci_Bidoche_Scorpion :
	case Ci_Bidoche_Bat :
		i_perfored_module_index = i_modules_pafed_index
		v_perfored_module_last_pos = @ao_modules[i_modules_pafed_index] OBJ_PosGet()

		f_snap_paf_side = MATH_FloatSign(MATH_VecDotProduct(@to_main_actor OBJ_SightGet(), - @ao_modules[i_modules_pafed_index] OBJ_HorizonGet()))
			
		@get_global o_bidoche_gao = OBJ_Me()
		@get_global o_bidoche_plug_jack = ao_modules[i_modules_pafed_index]

		AI_TrackChange(Ci_Track_Etat, "PNJ_EatMe_ETAT_Snap")
		break	
}

//AI_TrackChange(4, "PNJ_EatMe_After_ETAT")

//if (o_start_wp)
//{
//	n_net = @o_start_wp WAY_NetOfObj()
//	
//	o_next_wp = o_start_wp
//	v_net_next_pos = @o_next_wp BV_RandomPosGet(0)
//
//	if (WAY_RootGet(n_net) != o_start_wp)
//		DBG_Error("Le root n'est pas le premier wp donné")
//
//	PNJ_EatMe_Init_Net()
//	PNJ_EatMe_Position_Set()
//	PNJ_EatMe_Virtual_Net_Init(faux, nobody)
//
//	COL_ColSetActivationSet(C_bit_zde_corps, C_bit_zdm_pied)
//
//#ifndef _FINAL_
//	if (EDIT)
//		AI_TrackChange(Ci_Track_Etat, "PNJ_EatMe_ETAT_TEST")
//#endif
//}

PNJ_EatMe_Virtual_Net_Init(faux, nobody)

AI_TrackCurStop()