#include "KNa_defines.var"

int 		ti_i
vector 	tv_new_sight
float		tf_dist
float 		tf_dot
vector	tv_direction
float		tf_coef_dist
vector	tv_pos_safe_wp, tv_pos_old_safe_wp
float		tf_dist_vert_ref, tf_dist_horiz_ref, tf_dist_horiz_ann
vector	tv_pos_ann
int			i_wp_action_type

// SORTIE ETAT ===================================================================
if (i_flag_sort_etat)
{
	i_flag_sort_etat = faux
	return
}

// INITIALISATION ETAT ==============================================================
if (i_etat_courant != ETAT_follow_network)
{
	i_dernier_etat = i_etat_courant
	i_etat_courant = ETAT_follow_network

	if (fct_last_etat)
	{
		i_flag_sort_etat = vrai
		AI_Execute(fct_last_etat)
	}

	fct_last_etat = AI_TrackCurGet()
	
	f_time_start_etat = 0.0

	if ( ! o_cur_wp)	
		AI_Execute("KNa_Exec_get_wp")

	if (o_cur_wp)	
	{
		n_current_net = @o_cur_wp WAY_NetOfObj()	
		ACT_ActionSet(Ci_AnimNative_Deplacement)
	}
	else
	{
		DBG_Error("No destination WP for Native")	
	}
}
else
{
	f_time_start_etat += TIME_GetDt()
}

// ANALYSE =======================================================================================================
// PAFs -----------------------------------------------------
AI_Execute("KNa_Exec_CheckPaf")

if (EVT_Paf_Pere)
{
	macro_change_etat("KNa_ETAT_Paf")
}

// COMPORTEMENT =================================================================================================

// orientation
if (o_cur_wp && ! i_action)
{
	tv_new_sight = @o_cur_wp OBJ_PosGet() - OBJ_PosGet() 

	tf_dist = MATH_VecNorm(tv_new_sight)
	tf_dot = MATH_VecDotProduct(OBJ_SightGet(),tv_new_sight)
	
	if ( ! MATH_VecNull(tv_new_sight) )
	{
		tv_new_sight = MATH_VecNormalize(tv_new_sight)
		tv_new_sight = MATH_VecBlend(OBJ_SightGet(),tv_new_sight,TIME_GetDt() * 4.0)
		OBJ_BankingGeneralSet(tv_new_sight , Cv_VerticalVector)
	}
}

if (o_cur_wp)
{
	// arrivé a destination
	if (COL_Pivot_BVCollide(o_cur_wp))
	{
		i_action = 0
		// lecture d'actions
		if (@o_cur_wp OBJ_FlagsIdentityTest(OBJ_C_IdentityFlag_DesignStruct))
			i_action = o_cur_wp.des_int1 
		
		// if no action, go to next waypoint
		if ( ! i_action)			
		{
			o_old_wp = o_cur_wp 
			
			if (n_current_net)
			{
				o_cur_wp = WAY_NetNextWP(n_current_net,o_cur_wp,0,0)
				if (o_cur_wp)
				{
					//i_old_link_action_type = i_link_action_type
					//i_link_action_type = WAY_LinkDesignGet(n_current_net,o_old_wp,o_cur_wp )	
				}
			}
			else
				o_cur_wp = nobody			
		
			if ( ! o_cur_wp)
				i_at_end = 1
		}
	}

}

if ( i_action)
{
	if (@o_cur_wp OBJ_FlagsIdentityTest(OBJ_C_IdentityFlag_DesignStruct) )
		i_wp_action_type = o_cur_wp.des_int1
	
	switch (i_wp_action_type)
	{
		case Ci_Action_Wait :
			ACT_ActionSet(Ci_AnimNative_Attente)
			break
		case Ci_Spread :							
			break		
		case Ci_Throw_Spears_Normal : 		
			break		
		case Ci_Throw_Spears_Digwazai :	
			break		
		case Ci_Destroy :	
			if (o_projectile)
			{
				@o_projectile OBJ_Destroy()
			}
			OBJ_Destroy()
			AI_TrackCurChangeNow("KNa_ETAT_Mort")						
			break		
		case Ci_Teleport :	
			o_cur_wp = o_cur_wp.des_object1 
			OBJ_PosSet(@o_cur_wp OBJ_PosGet())
			COL_StartMatrixSet(OBJ_PosGet())
			n_current_net = @o_cur_wp WAY_NetOfObj()	
			break		
	}
}
else if (o_cur_wp)
{
	if (i_at_end)
	{
	}
}

