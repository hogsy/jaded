#include "prs_RaptorSlim_defines.var"

int				ti_i
int				ti_action

float			tf_norm
float			tf_delay

vector		tv_pos
vector		tv_traction
vector		tv_speed
vector		tv_new_sight

// SORTIE ETAT ===================================================================
if (i_sort_etat)
{
	i_sort_etat = faux

	COL_ZoneSizeSet(C_zdm_pied, cvector(0.75, 0.75, 0.75))
	COL_ZonePosSet(C_zdm_pied, cvector(0.0, 0.0, 0.75))

	f_force_run_duration = Cf_after_paf_force_run_duration
	
	DYN_FrictionVectorSet(cvector(f_friction, f_friction, 0.0))	

	return
}

// INITIALISATION ETAT ==============================================================
if (i_etat_courant != ETAT_PRS_A_TERRE)
{
	i_dernier_etat = i_etat_courant
	i_etat_courant = ETAT_PRS_A_TERRE

	if (fct_last_etat)
	{
		i_sort_etat = vrai
		AI_Execute(fct_last_etat)
	}

	fct_last_etat = AI_TrackCurGet()

	PRS_ActionSet(Action_Agonie_cycl)

	DYN_FrictionVectorSet(cvector(6.0, 6.0, 0.0))	

	COL_ZoneSizeSet(C_zdm_pied, cvector(1.25, 1.25, 1.25))
	COL_ZonePosSet(C_zdm_pied, cvector(0.0, 0.0, 1.25))

//	i_SND_flag_play_agonie = vrai

	f_time_start_etat = 0.0
}
else
{
	f_time_start_etat += TIME_GetDt()
}

if (i_dernier_etat == -1)
	f_time_start_etat = 0.0

// ANALYSE =====================================================================

AI_Execute("prs_exec_check_cadavre")
AI_Execute("prs_exec_check_vision")
AI_Execute("prs_exec_check_paf")
if (i_flag_paf_fly)
	macro_change_etat("prs_ETAT_PAF_FLY")
if (i_flag_paf_fall)
	macro_change_etat("prs_ETAT_PAF_FALL")

AI_Execute("prs_exec_update_best_interest")

// GRABBED ----------------------------------------------------------
o_grabbed_actor_KK = LNK_ServeurGet(Ci_LNK_GRAB_KONG, mid_grabbed_by_Kong_LNK_ID, vrai, nofunc, nofunc)
if (o_grabbed_actor_KK)
	macro_change_etat("prs_ETAT_GRABBED")

// RIDED -----------------------------------------------------------------
o_Rided_Actor = LNK_ServeurGet(Ci_LNK_RIDE_ON_NMI, mid_Rided_LNK_ID, vrai, nofunc, nofunc)
if( o_Rided_Actor )
	macro_change_etat("prs_ETAT_RIDED")

if (!f_lifecur)
	macro_change_etat("prs_ETAT_MORT")

// COMPORTEMENT ===============================================================
if ( ACT_ActionFinished() )
{
	switch(ACT_ActionGet())
	{
		case Action_Agonie_fin_lent :
		case Action_Agonie_fin_rapide :
			if (f_ground_col_time)
				macro_change_etat("prs_ETAT_FALL")
			else
				macro_change_etat(fct_main_etat)
			break
	}
}
else
{
	switch(ACT_ActionGet())
	{
		case 	Action_Agonie_cycl :

//			if (i_SND_flag_play_agonie && f_me_to_main_dist < 8.0)
//			{
//				i_SND_flag_play_agonie = faux
//				SND_RequestPlayOnObjCanal(Ci_SND_Agonie, Anim_Canal_Tete)
//			}


			tf_delay = f_lifecur / f_life
			if (tf_delay > 0.75)
			{
				tf_delay = 0.0
			}
			else if (tf_delay > Cf_Life_Agonisant)
			{
				tf_delay -= Cf_Life_Agonisant
				tf_delay /= 0.75 - Cf_Life_Agonisant
				tf_delay = 1.0 - tf_delay
				tf_delay *= 4.0
			}
			else
			{
				tf_delay = 4.0
			}
		
			if (f_time_start_etat > tf_delay && f_ground_col_time < 0.1)
				PRS_ActionSet(Action_Agonie_fin_lent)
			else
			{
				AI_Execute("prs_exec_on_ground_stuff")
			}
			
			v_virtual_banking = MATH_VecBlendRotate(v_virtual_banking, v_ground_normal, 4.0 * TIME_GetDt())
			OBJ_BankingGeneralSet(OBJ_SightGet(), v_virtual_banking)
		
			break
		
		case Action_Agonie_fin_lent :
		case Action_Agonie_fin_rapide :

			AI_Execute("prs_exec_test_bite")

//			if (i_flag_paf_fly)
//				macro_change_etat("PNJ_Raptor_ETAT_PAF_FLY")
//			if (i_flag_paf_fall)
//				macro_change_etat("PNJ_Raptor_ETAT_PAF_FALL")

			v_virtual_banking = MATH_VecBlendRotate(v_virtual_banking, Cv_VerticalVector, 4.0 * TIME_GetDt())
			OBJ_BankingGeneralSet(OBJ_SightGet(), v_virtual_banking)
				
			break
	}
}

if (i_flag_paf_fall || i_flag_paf_fly || i_flag_paf_visual || i_flag_paf_slide)
{
	if (TIME_Elapsed(f_SNF_last_paf_time, f_SNF_between_paf_duration))
	{
		f_SNF_last_paf_time = TIME_Get()
		f_SNF_between_paf_duration = MATH_RandFloat(0.5, 1.0)
		SND_RequestPlayOnObjCanal(Ci_SND_Paf_Faible, Anim_Canal_Tete)
	}
}