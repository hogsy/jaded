#include "prs_RaptorSlim_defines.var"

int			ti_i
int			ti_nearest_actor_index

float		tf_norm
float		tf_dist
float		tf_dist_in
float		tf_dist_out
float		tf_dist_fight
float		tf_dist_can_eat

vector	tv_pos
vector	tv_offset
vector	tv_temp
vector	tv_hor_dist
vector	tv_new_sight
vector	tv_new_banking

object	to_head

// SORTIE ETAT ===================================================================
if (i_sort_etat)
{
	i_sort_etat = faux

	f_look_force_duration = 0.0

	o_charogne = nobody
	o_charogne_bone = nobody

//	if (i_SND_instance_devore != -1)
//	{
//		SND_Stop(i_SND_instance_devore)
//		i_SND_instance_devore = -1
//	}

	return
}

// INITIALISATION ETAT ==============================================================
if (i_etat_courant != ETAT_PRS_DEVORE)
{
	i_dernier_etat = i_etat_courant
	i_etat_courant = ETAT_PRS_DEVORE

	if (fct_last_etat)
	{
		i_sort_etat = vrai
		AI_Execute(fct_last_etat)
	}

	fct_last_etat = AI_TrackCurGet()

	f_devore_near_actor_duration = 0.0

	f_time_start_etat = 0.0
}
else
{
	f_time_start_etat += TIME_GetDt()
}

// ANALYSE =======================================================================================================

AI_Execute("prs_exec_check_cadavre")
AI_Execute("prs_exec_check_vision")

AI_Execute("prs_exec_check_paf")
if (i_flag_paf_fly)
	macro_change_etat("prs_ETAT_PAF_FLY")
if (i_flag_paf_fall)
	macro_change_etat("prs_ETAT_PAF_FALL")
if (i_flag_paf_repousse || i_flag_paf_slide || !f_lifecur)
	macro_change_etat("prs_ETAT_PAF_SLIDE")

AI_Execute("prs_exec_update_best_interest")

// GRABBED ----------------------------------------------------------
o_grabbed_actor_KK = LNK_ServeurGet(Ci_LNK_GRAB_KONG, mid_grabbed_by_Kong_LNK_ID, vrai, nofunc, nofunc)
if (o_grabbed_actor_KK)
	macro_change_etat("prs_ETAT_GRABBED")

// SI LE CADAVRE N'EST PLUS LA OU QU'IL N'EST PLUS UN CADAVRE
if ( ! MSG_GlobalIsValid(mid_best_interet)
|| ( ! ai_perceived_accessible[i_perceived_best_actor_index] || ! (ai_perceived_status[i_perceived_best_actor_index] & Ci_PERCEIVED_IS_DEAD)))
{
	macro_change_etat("prs_ETAT_ATTENTE")
}

	
// COMPORTEMENT =================================================================================================
i_way_computation_mode = Ci_WAY_MODE_FIGHT
o_charogne = ao_perceived_actor[i_perceived_best_actor_index]
i_target_territory_ID = PROC_GAO_GET_TERRITORY( o_charogne )
v_way_destpos = @o_charogne  OBJ_PosGet()
			
AI_Execute("prs_exec_way_find")

AI_Execute("prs_exec_way_move")

i_flag_run = vrai

switch(ai_perceived_ID[i_perceived_best_actor_index])
{
	case C_ID_Bidoche	:
		o_charogne_bone = @o_charogne ANI_CanalObjectGet(2)
		break

	case C_ID_Monture_Serpent :
		o_charogne_bone = @o_charogne ANI_CanalObjectGet(7)
		break

	default:
		o_charogne_bone = @o_charogne ANI_CanalObjectGet(Anim_Canal_Bassin)
}

if (o_charogne_bone == nobody)
{
	o_charogne_bone = o_charogne
}
else
{
	if ( ! PROC_WAY_TERRITORY_ID_ALLOWED( i_target_territory_ID) )
		o_charogne_bone = o_charogne
}

//tv_temp = EVENT_InteretPositionGet(mid_best_interet)
tv_temp = @o_charogne_bone OBJ_PosGet()
tv_temp -= OBJ_PosGet()

tf_dist_in = 10.0
tf_dist_out = 12.0
tf_dist_fight = 7.0
tf_dist_can_eat = 3.0 * OBJ_ZoomGet()

// Distance 3D
tf_dist = MATH_VecNorm(tv_temp)

tv_hor_dist = tv_temp
tv_hor_dist.z = 0.0

// Distance 2D
tf_norm = MATH_VecNorm(tv_hor_dist)
if (tf_norm > 0.001)
	tv_hor_dist /= tf_norm
else
	tv_hor_dist = OBJ_SightGet()

if (i_flag_cri)
{
	// ON CRI VERS LE CADAVRE
	i_flag_look = vrai
	i_flag_look_best_interet = vrai
}
else if (tf_norm < tf_dist_can_eat && MATH_AbsFloat(tv_temp.z) > 0.75)
{
	// ON NE PEUT PAS ACCEDER AU CADAVRE	

	ai_perceived_status[i_perceived_best_actor_index] |= Ci_PERCEIVED_BODY_UNREACHABLE

	PRS_Del_Interest()

	macro_change_etat("prs_ETAT_ATTENTE")
} 
else if (tf_dist < tf_dist_can_eat * 0.75)
{
	i_flag_look = vrai
	i_flag_look_best_interet = vrai

	tv_new_sight = MATH_VecBlendRotate(OBJ_SightGet(), tv_hor_dist, 4.0 * TIME_GetDt())
	tv_new_banking = MATH_VecBlendRotate(OBJ_BankingGet(), v_virtual_banking, 60. * TIME_GetDt())
	OBJ_BankingGeneralSet(tv_new_sight, tv_new_banking)

	PRS_ActionSet(Action_Recul)
	i_flag_dont_change_action = vrai
}
else if (tf_dist > tf_dist_can_eat)
{
	// ON N'EST PAS ENCORE ARRIVE AU CADAVRE	
	
	i_flag_look = vrai
	i_flag_look_best_interet = vrai

	f_delay_between_eat = 1.0
}
else
{
	i_flag_look = vrai
	i_flag_dont_change_action = vrai

	f_joy_norm = 0.0

	ti_nearest_actor_index = -1
//	ti_nearest_actor_index = PNJ_Raptor_Nearest_Actor_Index()
//
//	// EST-CE QU'ON REGARDE DANS LA DIRECTION D'UN SON ?
//	for (ti_i = 0; ti_i < i_perceived_actor_nb; ti_i++)
//	{
//		if (ti_i == i_perceived_best_actor_index)
//			continue	
//	
//		if (ai_perceived_status[ti_i] & Ci_PERCEIVED_HEARD)
//		{
//			f_look_force_duration = 2.0
//			v_look_force_pos = @ao_perceived_actor[ti_i] OBJ_PosGet()
//			break
//		}
//	}

	if (ti_nearest_actor_index == -1)
	{
		tf_dist = Cf_Infinit
	}
	else
	{
		tf_dist = af_perceived_dist[ti_nearest_actor_index]
	
		if (tf_dist < tf_dist_fight)
		{
			// OK, celui là il me cherche, je ne m'interesse plus à ma charogne

//#ifndef _FINAL_
//			if (DBG_Log_Allowed)
//			{
				DBG_TraceFloat(TIME_Get())
				DBG_TraceString(" => ")
				DBG_TraceObject(OBJ_Me())
				DBG_TraceString(" préfère ")
				DBG_TraceObject(ao_perceived_actor[ti_nearest_actor_index])
				DBG_TraceString(" à ")
				DBG_TraceObject(EVENT_InteretTargetGet(mid_best_interet))
				DBG_TraceString(" ACTEUR TROP PRES")
				DBG_TraceEOL()
//			}
//#endif
	
			PRS_Best_Interet_Update(ti_nearest_actor_index)
			macro_change_etat("prs_ETAT_FIGHT")
		}
		else if (f_devore_near_actor_duration > 3.0)
		{
//#ifndef _FINAL_
//			if (DBG_Log_Allowed)
//			{
				DBG_TraceFloat(TIME_Get())
				DBG_TraceString(" => ")
				DBG_TraceObject(OBJ_Me())
				DBG_TraceString(" préfère ")
				DBG_TraceObject(ao_perceived_actor[ti_nearest_actor_index])
				DBG_TraceString(" à ")
				DBG_TraceObject(EVENT_InteretTargetGet(mid_best_interet))
				DBG_TraceString(" ACTEUR PRES TROP LOGTEMPS")
				DBG_TraceEOL()
//			}
//#endif

			PRS_Best_Interet_Update(ti_nearest_actor_index)
//			macro_change_etat("PNJ_Raptor_ETAT_HESITE")
			macro_change_etat("prs_ETAT_FIGHT")
		}

		to_head = @ao_perceived_actor[ti_nearest_actor_index] ANI_CanalObjectGet(Anim_Canal_Tete)
	}

	switch(ACT_ActionGet())
	{
		case Action_Mange_Au_Sol :

//			if (i_SND_instance_devore == -1)
//				i_SND_instance_devore = SND_RequestPlayLoopOnObjCanal(Ci_SND_MangeAuSol, Anim_Canal_Tete)

			if (tf_dist < tf_dist_in)
			{
				f_devore_near_actor_duration	+= TIME_GetDt()
			
				PRS_ActionSet(Action_Observe)

				f_delay_before_next_shout_mix = MATH_RandFloat(0.0, 1.0)

				f_look_force_duration = TIME_GetDt()	
				v_look_force_pos = @to_head OBJ_PosGet()
			}
			else if (f_look_force_duration)
			{
				f_devore_near_actor_duration	= 0.0
			
				PRS_ActionSet(Action_Observe)
			}
			else
			{
				f_devore_near_actor_duration	 = 0.0
			
//				i_flag_look_best_interet = vrai
	
				i_flag_look = faux
				i_flag_look_best_interet = faux

				f_delay_between_eat -= MATH_FloatMin(f_delay_between_eat, TIME_GetDt())
	
//				if (!f_delay_between_eat)
//				{
//					f_delay_between_eat = 1.0
//	
//					EVENT_AddEventPaf(C_EVENT_FILTER_All, C_PAF_RM_FoodChain, OBJ_Me(), Cf_EVENT_Duree_1Trame, ao_perceived_actor[i_perceived_best_actor_index], Ci_Raptor_Eat_Point, OBJ_SightGet())
//				}
			}
		
			break
			
		case Action_Observe :

//			if (i_SND_instance_devore != -1)
//			{
//				SND_Stop(i_SND_instance_devore)
//				i_SND_instance_devore = -1
//			}

			if (tf_dist < tf_dist_out)
			{
				f_devore_near_actor_duration	+= TIME_GetDt()
			
				f_delay_before_next_shout_mix -= MATH_FloatMin(f_delay_before_next_shout_mix, TIME_GetDt())

				f_look_force_duration = TIME_GetDt()	
				v_look_force_pos = @to_head OBJ_PosGet()
			}
			else if (!f_look_force_duration)
			{
				f_devore_near_actor_duration	= 0.0
			
				PRS_ActionSet(Action_Mange_Au_Sol)
			}
			else
			{
				f_devore_near_actor_duration	= 0.0
			}
			
			break
	
		default:

//			if (i_SND_instance_devore != -1)
//			{
//				SND_Stop(i_SND_instance_devore)
//				i_SND_instance_devore = -1
//			}

			f_delay_between_eat = 1.0

		 	if (tf_dist < tf_dist_in)
			{
				f_devore_near_actor_duration	+= TIME_GetDt()
	
				PRS_ActionSet(Action_Observe)

				f_delay_before_next_shout_mix = 0.0

				f_look_force_duration = TIME_GetDt()
				v_look_force_pos = @to_head OBJ_PosGet()
			}
			else if (f_look_force_duration)
			{
				f_devore_near_actor_duration	= 0.0
			
				PRS_ActionSet(Action_Observe)
			}
// FRED
//			else if ( ! (@o_charogne AI_IsModel(get_PNJ_Bats_path)) || @o_charogne OBJ_CapaTest(OBJ_Capa_15))
//			{
//				f_devore_near_actor_duration	= 0.0
//		
//				PRS_ActionSet(Action_Mange_Au_Sol)
//			}
			else
			{
				i_flag_dont_change_action = faux
			
				f_devore_near_actor_duration	= 0.0
			}
			
			break
	}
	
	tv_new_sight = MATH_VecBlendRotate(OBJ_SightGet(), tv_hor_dist, 4.0 * TIME_GetDt())
	tv_new_banking = MATH_VecBlendRotate(OBJ_BankingGet(), v_virtual_banking, 6.0 * TIME_GetDt())
	OBJ_BankingGeneralSet(tv_new_sight, tv_new_banking)
}

AI_Execute("prs_exec_select_action")
