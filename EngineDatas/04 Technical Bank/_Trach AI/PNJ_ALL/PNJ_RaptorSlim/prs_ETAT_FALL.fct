#include "prs_RaptorSlim_defines.var"

int				ti_i
int				ti_action

float			tf_dot_X
float			tf_dot_Y
float			tf_sight_speed

vector		tv_new_sight
vector		tv_dest_sight
vector		tv_speed

// SORTIE ETAT ===================================================================
if (i_sort_etat)
{
	i_sort_etat = faux

	COL_ZoneSizeSet(C_zdm_pied, cvector(0.75, 0.75, 0.75))
	COL_ZonePosSet(C_zdm_pied, cvector(0.0, 0.0, 0.75))

	return
}

// INITIALISATION ETAT ==============================================================
if (i_etat_courant != ETAT_PRS_FALL)
{
	i_dernier_etat = i_etat_courant
	i_etat_courant = ETAT_PRS_FALL

	i_flag_reinit_etat = faux

	if (fct_last_etat)
	{
		i_sort_etat = vrai
		AI_Execute(fct_last_etat)
	}

	fct_last_etat = AI_TrackCurGet()

	i_flag_snap_pos = faux
	i_flag_cri = faux

	f_time_start_etat = 0.0
}
else
{
	f_time_start_etat += TIME_GetDt()
	
	// Rided duration
//	if( i_dernier_etat == ETAT_PRS_FALL )
//		f_Rided_duration += TIME_GetDt()
}

// ANALYSE =======================================================================================================
AI_Execute("prs_exec_check_vision")

AI_Execute("prs_exec_check_paf")
if (i_flag_paf_fly)
	macro_change_etat("prs_ETAT_PAF_FLY")
if (i_flag_paf_fall)
	macro_change_etat("prs_ETAT_PAF_FALL")
if (i_flag_paf_repousse || i_flag_paf_slide || !f_lifecur)
	macro_change_etat("prs_ETAT_PAF_SLIDE")

AI_Execute("prs_exec_update_best_interest")


// COMPORTEMENT =================================================================================================
if ( ! f_ground_col_time )
{
	if( i_dernier_etat == ETAT_PRS_RIDED )
		macro_change_etat("prs_ETAT_RIDED")		// ce n'est pas un main_etat
	else
		macro_change_etat(fct_main_etat)
}

if( f_time_start_etat > 5.0 )
	OBJ_Destroy()

PRS_ActionSet(Action_Chute)
