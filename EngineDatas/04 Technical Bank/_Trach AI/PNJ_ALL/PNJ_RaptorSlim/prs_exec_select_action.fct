#include "prs_RaptorSlim_defines.var"

float		tf_computed_speed_coef
float		tf_sqr_dist
float		tf_dot_product
float		tf_min
float		tf_average
float		tf_speed_ask
float		tf_used_speed
float		tf_real_speed
int			ti_action_num
int			ti_flag_could_run
int			ti_i
int			ti_freq
int			ti_start_action_index
int			ti_last_action_index
int			ti_min
vector	tv_temp
vector	tv_new_sight
vector	tv_traction
vector	tv_speed


// ACTION DETERMINEE PAR UN WP DU RESEAU
if (f_use_current_wp_action_duration)
{
	ti_action_num = o_current_wp.des_int1
	switch(ti_action_num)
	{
		case Action_Cri :
		case Action_Cri_Haut :	

			// CRI
			switch(ACT_ActionGet())
			{
				case Action_Cri :
				case Action_Cri_Haut :
					if (ACT_ActionFinished())
						f_use_current_wp_action_duration = 0.0
					break
					
				default:
					i_SND_roar_index = Ci_SND_Choose_Jack
					i_flag_cri = vrai
			}
			
			break

		default:

			i_flag_dont_change_action = vrai	
	
			if (f_use_current_wp_action_duration > 0.0)
			{
				// LOOP ACTION
				f_use_current_wp_action_duration -= MATH_FloatMin(f_use_current_wp_action_duration, TIME_GetDt())
				PRS_ActionSet(ti_action_num)
			}
			else
			{
				// ONE SHOT ACTION
				if (ACT_ActionGet() != ti_action_num)
				{
					PRS_ActionSet(ti_action_num)
				}
				else if (ACT_ActionFinished())
				{
					i_flag_dont_change_action = faux
					f_use_current_wp_action_duration = 0.0
				}
			}	
	}
}


// ACTIONS A NE PAS INTERROMPRE =====================================
switch(ACT_ActionGet())
{
	case Action_Attaque_Colonne :
	case Action_Attaque_Colonne_Rex :

		if ( ! ACT_ActionFinished()	)
		{
			i_flag_look = faux
			i_flag_look_best_interet = faux
			i_flag_dont_change_action = vrai
		}
		
		break

//	case Action_Saut_Pied_G :
//	case Action_Saut_Pied_D :

//		if (i_flag_alien_move)
//		{
//			v_jump_bassin_reception_speed.z = 0.0
//			f_wanted_speed = MATH_VecNorm(v_jump_bassin_reception_speed)
//
//			PNJ_Raptor_Bezier_Move(f_wanted_speed)
//		}
//		else
//		{
//			DYN_SpeedSetVector(v_jump_bassin_reception_speed)
//			f_wanted_speed = DYN_SpeedGet()
//		}
//
//		i_flag_dont_change_action = vrai
//		PNJ_Raptor_ActionSet(i_jump_reception_action)
//		break

	case Action_Demi_Tour_G_deb :
	case Action_Demi_Tour_G_deb_tr_att :
	case Action_Demi_Tour_D_deb :
	case Action_Demi_Tour_D_deb_tr_att :
	case Action_Demi_Tour_Rapide :
	case Action_Demi_Tour_Rapide_tr_course :

	case Action_Rex_Cri_G :
	case Action_Rex_Cri_D :
	case Action_Coup_Mur_G : 
	case Action_Coup_Mur_D : 

		if ( ! ACT_ActionFinished() )
		{
			f_wanted_speed = 0.0
			i_flag_dont_change_action = vrai
		}
		break


//	case Action_Saut_fin :
//	case Action_Saut_fin_surplace :
//	case Action_Grosse_Reception :		
//
//		if (!ACT_ActionFinished())
//		{
//			f_wanted_speed = DYN_SpeedGet()
//			PNJ_Raptor_Bezier_Move(f_wanted_speed)
//			i_flag_dont_change_action = vrai
//		}
//		
//		break

//	case Action_Agonie_fin_lent :
//	case Action_Agonie_fin_lent_tr_att :
//	case Action_Agonie_fin_rapide :
//	case Action_Agonie_fin_rapide_tr_att :
//
//		f_wanted_speed = DYN_SpeedGet()
//
//		if (!ACT_ActionFinished())
//		{
//			i_flag_dont_change_action = vrai
//			if (i_flag_alien_move)
//				PNJ_Raptor_Bezier_Move(f_wanted_speed)
//		}
//		break

	case Action_Stop :
	case Action_Stop_tr_att :
	case Action_Stop_Rapide :
	case Action_Stop_Rapide_tr_att :

		f_wanted_speed = DYN_SpeedGet()

		if (!ACT_ActionFinished())
		{
			i_flag_dont_change_action = vrai
//			PNJ_Raptor_Bezier_Move(f_wanted_speed)
		}
		break

	case Action_Rex_Enjambe :
	case Action_Rex_Enjambe_tr_att :
	case Action_Rex_Enjambe_tr_marche :

		f_wanted_speed = DYN_SpeedGet()

		if (!ACT_ActionFinished())
			i_flag_dont_change_action = vrai
		break

	case Action_Paf_Petit_Sol_G :
	case Action_Paf_Petit_Sol_D :
	case Action_Paf_Petit_Sol_Dos :
	case Action_Paf_Petit_Sol_Face :

		if ( ! ACT_ActionFinished() )
		{
			f_wanted_speed = 0.0
			i_flag_dont_change_action = vrai
		}
		break
}

if ( i_flag_cri && ! i_flag_dont_change_action )
{
	f_wanted_speed = 0.0

	i_flag_perfect_look = vrai

	switch(ACT_ActionGet())
	{
		case Action_Cri :
			if (ACT_ActionFinished())
			{
				i_flag_cri = faux
			}
			else
			{
				i_flag_dont_change_action = vrai

				PRS_ActionSet(Action_Cri)
				ACT_LIB_ActionFrequencyMultiply(f_anim_speed_coef)
			}
			break

		default:
		
			@get_global f_time_last_raptor_roar = TIME_Get()	

			if (i_SND_roar_index == -1)
			{
				if (i_perceived_best_actor_index != -1 && ai_perceived_ID[i_perceived_best_actor_index] == C_ID_Rayman)
					i_SND_roar_index = Ci_SND_Choose_Jack
				else
					i_SND_roar_index = Ci_SND_Choose_Another
			}
	
			PRS_ActionSet(Action_Cri)
			i_flag_dont_change_action = vrai
			
			f_anim_speed_coef = MATH_RandFloat(0.8, 1.2)
			ACT_LIB_ActionFrequencyMultiply(f_anim_speed_coef)
	
			ACT_PartialActionOnOff(faux)
			break
	}
}



	
// TRACTION ???
DYN_TractionSet(v_Traction_Exterieure)
DBG_RenderVector(OBJ_PosGet() + Cv_VerticalVector, v_Traction_Exterieure, color_cyan)

if (i_flag_dont_change_action)
{
	// ON NE CHANGE PAS L'ACTION !!!
}
else
{
	ti_flag_could_run = vrai
	tf_computed_speed_coef = 1.0
	if( ! o_Rided_Actor )
	{
		switch(ACT_ActionGet())
		{
			case Action_Normal_Course :
			case Action_Normal_Marche_Rapide :
			case Action_Stop_Rapide :						
				if ( ! (i_way_status & Ci_WAY_STATUS_OCCLUDER_USED ) )
				{
					if ( ACT_ActionItemGet() )
					{
						if ( i_way_wp_nb <= 1 )
						{
							f_way_tolerance_sqr_dist = 7.0
							f_way_tolerance_sqr_dist *= OBJ_ZoomGet()
							f_way_tolerance_sqr_dist *= f_way_tolerance_sqr_dist
							
							tv_temp = v_way_destpos
							tv_temp -= OBJ_PosGet()
							tv_temp.z = 0.0
							
							tf_sqr_dist = MATH_VecDotProduct(tv_temp, tv_temp)
							if (tf_sqr_dist < f_way_tolerance_sqr_dist)
								f_joy_norm = 0.0
						}
					}
					else if (i_way_wp_nb <= 1)
					{
						f_way_tolerance_sqr_dist = 4.0
						f_way_tolerance_sqr_dist *= OBJ_ZoomGet()
						f_way_tolerance_sqr_dist *= f_way_tolerance_sqr_dist
						
						tv_temp = v_way_destpos
						tv_temp -= OBJ_PosGet()
						tv_temp.z = 0.0
						
						tf_sqr_dist = MATH_VecDotProduct(tv_temp, tv_temp)
						if (tf_sqr_dist < f_way_tolerance_sqr_dist)
							ti_flag_could_run = faux
					}
				}
				break
		}
	}

//	if( ! f_joy_norm )
//	{
//		f_wanted_speed = 0.0
//	}
//	else if ( ti_flag_could_run && (i_flag_run || f_force_run_duration ) )// || ! MATH_VecNullToler(v_Traction_Exterieure, 0.01) ) )
//	{
//		if (i_flag_blesse)
//			f_wanted_speed = MATH_FloatBlend(f_wanted_speed, af_action_speed[i_blesse_action_last_index], 6.0 * TIME_GetDt())
//		else if (f_wanted_speed > af_action_speed[i_normal_action_last_index] * tf_computed_speed_coef)
//			f_wanted_speed = MATH_FloatBlend(f_wanted_speed, af_action_speed[i_normal_action_last_index] * tf_computed_speed_coef, 6.0 * TIME_GetDt())
//		else
//			f_wanted_speed += MATH_FloatMin((af_action_speed[i_normal_action_last_index] * tf_computed_speed_coef) - f_wanted_speed, 10.0 * TIME_GetDt())
//	}
//	else if (i_etat_courant == ETAT_PRS_SEARCH)
//	{
//		f_wanted_speed = MATH_FloatBlend(f_wanted_speed, af_action_speed[i_renifle_action_first_index], 6.0 * TIME_GetDt())
//	}
//	else
//	{
//		if (i_flag_blesse)
//			f_wanted_speed = MATH_FloatBlend(f_wanted_speed, af_action_speed[i_blesse_action_first_index], 6.0 * TIME_GetDt())
//		else
//			f_wanted_speed = MATH_FloatBlend(f_wanted_speed, af_action_speed[i_normal_action_first_index] * tf_computed_speed_coef, 6.0 * TIME_GetDt())
//	}
//	
//	if (f_current_wp_speed)
//		f_wanted_speed = MATH_FloatMin(f_wanted_speed, f_current_wp_speed)

	tv_speed = DYN_SpeedGetVector()
	tv_speed.z = 0.0
	tf_real_speed = MATH_VecDotProduct(tv_speed, OBJ_SightGet())
	
	DBG_RenderVector(OBJ_PosGet() + Cv_VerticalVector, v_Traction_Joy, color_vert)
	DYN_TractionSet(DYN_TractionVectorGet() + (v_Traction_Joy * Cf_Raptor_friction) )
	tv_traction = DYN_TractionVectorGet()
	tv_traction.z = 0.0
	tv_traction /= DYN_FrictionVectorGet().x
	f_wanted_speed = MATH_VecDotProduct(tv_traction, OBJ_SightGet())
	
	if (f_wanted_speed)
	{
		tv_new_sight = OBJ_SightGet()

		if (i_flag_recul)
		{
			PRS_ActionSet(Action_Recul)
		}
		else
		{
			switch(ACT_ActionGet())
			{
				case Action_Fight_Secoue :
					ACT_LIB_ActionFrequencyMultiply(tf_computed_speed_coef)
					break
				
				case Action_Demi_Tour_D_deb :
				case Action_Demi_Tour_D_deb_tr_att :
				case Action_Demi_Tour_G_deb :
				case Action_Demi_Tour_G_deb_tr_att :
				case Action_Demi_Tour_Rapide :
				case Action_Demi_Tour_Rapide_tr_course :
					if ( ! ACT_ActionFinished())
						break
				
				default:
//					tf_computed_speed_coef = PRS_Choose_Best_Action(f_wanted_speed)
//					tf_dot_product = MATH_VecDotProduct(v_ground_normal, Cv_VerticalVector)
//					tf_computed_speed_coef /= tf_dot_product
//					ACT_LIB_ActionFrequencyMultiply(tf_computed_speed_coef)

//					tf_speed_ask = f_joy_norm * Cf_Traction_Walk
//					if ( MATH_AbsFloat(tf_speed_ask - f_cur_speed) > 1.0)
//						tf_used_speed = tf_speed_ask
//					else
//						tf_used_speed = f_cur_speed
					
					if (tf_real_speed > f_wanted_speed * 0.85)
						tf_used_speed = tf_real_speed
					else
						tf_used_speed = f_wanted_speed
					if( tf_used_speed > 0.0 )
					{
						tf_min = 100.0
						if (i_flag_blesse)
						{
							ti_start_action_index = i_blesse_action_first_index
							ti_last_action_index = i_blesse_action_last_index
						}
						else if (i_etat_courant == ETAT_PRS_SEARCH && i_flag_head_search)
						{
							ti_start_action_index = i_renifle_action_first_index
							ti_last_action_index = i_renifle_action_last_index
						}
						else
						{
							ti_start_action_index = i_normal_action_first_index
							ti_last_action_index = i_normal_action_last_index
						}
	
						for ( ti_i =ti_start_action_index; ti_i <= ti_last_action_index && ! MATH_FloatNullEpsilon(af_action_speed[ti_i]); ti_i++)
						{
							tf_average = tf_used_speed / af_action_speed[ti_i]
							tf_average=tf_average
							if ( MATH_AbsFloat(tf_average - 1.0) < tf_min)
							{
								tf_min = tf_average
								ti_min = ti_i
							}
						}
						ACT_ActionSet(ai_action_index[ti_min])
						ti_freq = MATH_FloatLimit( ACT_FrequencyGet(ACT_ActionGet(), ACT_ActionItemGet()) * tf_min, 1.0, 255.0)
						ANI_FrequencySet(0, ti_freq)
					}
					else
					{
						if (i_flag_blesse)
							PRS_ActionSet(Action_Blesse_Attente)
				//		else if (i_flag_head_search)
				//			PRS_ActionSet(Action_Renifle_Attente)
						else
							PRS_ActionSet(Action_Normal_Attente)	
					}
					break
			}
		}
	}
	else
	{
		// PAS DE DEPLACEMENT
		f_wanted_speed = 0.0
			
		if (i_flag_blesse)
			PRS_ActionSet(Action_Blesse_Attente)
//		else if (i_flag_head_search)
//			PRS_ActionSet(Action_Renifle_Attente)
		else
			PRS_ActionSet(Action_Normal_Attente)
	}
}

