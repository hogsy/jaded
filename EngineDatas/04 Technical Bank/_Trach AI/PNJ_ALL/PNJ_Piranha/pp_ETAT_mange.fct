#include "PNJ_piranha_defines.var"

// SORTIE ETAT ===================================================================
if (i_sort_etat)
{
	EVENT_Delete(mid_interet, C_EVENT_EOFDEL)
	i_sort_etat = faux
	return
}

// INIT ETAT ======================================================================
if ( i_etat_courant != ETAT_PP_EAT)
{
	i_etat_courant = ETAT_PP_EAT
	
	if (fct_last_etat)
	{
		i_sort_etat = vrai
		AI_Execute(fct_last_etat)
	}
	fct_last_etat = AI_TrackCurGet()
}


AI_Execute( "pp_exec_chec_water")

if( ! o_cadavre )
{
	if( o_target)
		macro_change_etat("pp_ETAT_chasse")
	else
		macro_change_etat("pp_ETAT_wait")
}

// COMPORTEMENT ===============================================================
if( TIME_Elapsed( @get_global f_time_to_eat, 1.0) )
{
	@get_global f_time_to_eat = TIME_Get()
	EVENT_AddEventPaf(C_EVENT_FILTER_All, C_PAF_KK_FoodChain, OBJ_Me(), Cf_EVENT_Duree_1Trame, o_cadavre, 0.5, OBJ_SightGet())
}

if( ! MSG_GlobalIsValid(mid_interet) )
	mid_interet = EVENT_AddEventInteret(OBJ_Me(), Cf_EVENT_Duree_1Trame, 10.0, @o_cadavre OBJ_PosGet(), o_cadavre)
EVENT_InteretStatusSet(mid_interet, C_EVENT_InteretStatusFoodchain)		// la décomposition doit attente qu'il reste 0 point de viande

