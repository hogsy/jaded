#include "CR_defines.var"

vector			tv_2D_pos

string				str_texte

int					ti_k


#ifndef _FINAL_

// DEBUG =========================================================================
tv_2D_pos = VIEW_3dWorldTo2d(0, OBJ_PosGet())

if( i_DBG_display_all_infos )
{
	// POINTS DE VIE
	Str_DisplayTextOnce("HP", tv_2D_pos + cvector(0.0, -0.15, 0.0))
	Str_DisplayFloatOnce(f_HP_cur, tv_2D_pos + cvector(0.03, -0.15, 0.0))
	Str_DisplayTextOnce(" / ", tv_2D_pos + cvector(0.07, -0.15, 0.0))
	Str_DisplayFloatOnce(f_HP_max, tv_2D_pos + cvector(0.09, -0.15, 0.0))
	
	// DISTANCE A LA CIBLE
	if( o_fight_actor )
	{
		Str_DisplayTextOnce("DIST", tv_2D_pos + cvector(0.0, -0.1, 0.0))
		Str_DisplayFloatOnce(MATH_VecNorm(@ o_fight_actor OBJ_PosGet() - OBJ_PosGet()), tv_2D_pos + cvector(0.06, -0.1, 0.0))
	}
	
	// VITESSE
	Str_DisplayTextOnce("SPEED", tv_2D_pos + cvector(0.0, -0.05, 0.0))
	Str_DisplayFloatOnce(DYN_SpeedGet(), tv_2D_pos + cvector(0.06, -0.05, 0.0))

	// SENS PREFERENCIEL DE STRAFE (OBSTACLE)
	Str_DisplayTextOnce("STRAFE SENS PREF", tv_2D_pos + cvector(0.0, 0.1, 0.0))
	if( f_way_strafe_sens_pref == 1.0 )
		str_texte = "GAUCHE"
	else if( f_way_strafe_sens_pref == -1.0 )
		str_texte = "DROITE"
	else
		str_texte = "aucun"
	Str_DisplayTextOnce(str_texte, tv_2D_pos + cvector(0.17, 0.1, 0.0))
	if( i_DBG_trace_move_infos )
	{
		DBG_TraceString(str_texte)
		DBG_TraceString(" - ")
	}

	if( i_DBG_trace_move_infos )
	{
		if( CR_Strafe_En_Cours() )
			DBG_TraceString(" strafe en cours - ")
		else
			DBG_TraceString(" pas de strafe - ")
	}

	// VULNERABLE
	if( ACT_CustomBitTest(CBit_Vulnerable_Devant) )
		Str_DisplayTextOnce("VULNERABLE", tv_2D_pos + cvector(0.0, 0.15, 0.0))
	
	// INTIMIDATION DEBUT COMBAT
	if( i_attack_intimidation_done )
		Str_DisplayTextOnce("INTIMIDATION DONE", tv_2D_pos + cvector(0.0, 0.20, 0.0))
	
	// OBSTACLE
//	if( i_way_obstacle_strafe_flag )
//	{
//		Str_DisplayTextOnce("OBSTACLE", tv_2D_pos + cvector(0.0, 0.25, 0.0))
//		if( i_DBG_trace_move_infos )
//			DBG_TraceString("OBSTACLE")
//	}
	
	if( i_DBG_trace_move_infos )
		DBG_TraceEOL()
}


//switch( i_way_mode_strafe )
//{
//	case Ci_way_mode_strafe_attack_cote :
//		str_texte = "cote"
//		break
//	case Ci_way_mode_strafe_attack_face :
//		str_texte = "face"
//		break
//	case Ci_way_mode_strafe_attack_face_debut :
//		str_texte = "tourne"
//		break
//	case Ci_way_mode_strafe_attack_face_retour :
//		str_texte = "retour"
//		break
//	case Ci_way_mode_strafe_aucun_ou_requin :
//		str_texte = "requin"
//		break
//}
//Str_DisplayTextOnce(str_texte, cvector(0,0.5,0))


if( i_DBG_display_etat )
{
	Str_DisplayTextOnce(str_etat, tv_2D_pos)
}


// VAGUE ================================================================================
if( i_DBG_vague )
{
	tv_2D_pos = Cv_NullVector
	Str_DisplayIntOnce(@get_global i_CRAB_humain_attack_compteur, tv_2D_pos)
	Str_DisplayTextOnce(" / ", tv_2D_pos + cvector(0.02,0,0))
	Str_DisplayIntOnce(@get_global i_CRAB_humain_attack_max_nb, tv_2D_pos + cvector(0.05,0,0))
	
	for(ti_k = 0; ti_k < @get_global i_CRAB_humain_attack_compteur; ti_k++)
	{
		Str_DisplayGaoOnce(@get_global ao_CRAB_attacking_humans[ti_k], tv_2D_pos + ((ti_k+1) * cvector(0,0.05,0)))
	}
}

// COEF ROTATION ===================================================
if( i_DBG_display_rot_coef )
{
	switch( i_etat_courant )
	{
		case ETAT_FIGHT :
		case ETAT_APPARITION :
		case ETAT_IDLE :
			Str_DisplayFloatOnce(f_way_rotation_coef_cur, tv_2D_pos + cvector(0,0.05,0))
			Str_DisplayTextOnce("/", tv_2D_pos + cvector(0.05,0.05,0))
			Str_DisplayFloatOnce(f_way_rotation_coef, tv_2D_pos + cvector(0.07,0.05,0))
			break
	}
}

// EXPLOSE =======================
//if( i_paf_explose )
//	Str_DisplayTextOnce("EXPLOSE", tv_2D_pos)

#endif
