#include "CR_defines.var"

vector		tv_sight
object		to_bone
object		to_duplicated


// SORTIE ETAT ==============================================================================
if (i_sort_etat)
{
	i_sort_etat = faux
	return
}


// ENTREE ETAT ==============================================================================
if (i_etat_courant != ETAT_MORT && i_etat_courant != ETAT_FADE )
{
	i_etat_ancien = i_etat_courant
	i_etat_courant = ETAT_MORT
	str_etat = "Mort"
	if (fct_etat_courant)
	{
		i_sort_etat = vrai
		AI_Execute(fct_etat_courant)
	}
	
	fct_etat_courant = AI_TrackCurGet()
	f_time_start_etat = 0.0
	
	// ACTIONSET fait à la sortie de l'état paf
	
//	if( i_paf_lance_backup_flag )
//		ACT_ActionSet(ACTION_Mort_Paf_Lance)
//	else
//		ACT_ActionSet(ACTION_Mort)

	CR_InfosMort()
	
	if( i_DBG_trace_etat )
	{
		DBG_TraceObject(OBJ_Me())
		DBG_TraceString(" : ETAT MORT")
		DBG_TraceEOL()
	}
	
	if( i_modele == MODELE_Geant )
	{
		DYN_Off()
		ODE_Enable(faux)
		COL_ColMapActivationSet(all, none)
	}
	
	f_mort_delai_depuis_dernier_paf = 0.0
	CR_TagSize(faux)
}
else
{
	f_time_start_etat += TIME_GetDt()
	f_mort_delai_depuis_dernier_paf += TIME_GetDt()
}

// UNCOL ===================
if( i_modele == MODELE_Geant )
{
	CR_UncollideAdd(o_Ann, Cf_EVENT_Duree_1Trame)
	CR_UncollideAdd(o_Denham, Cf_EVENT_Duree_1Trame)
	CR_UncollideAdd(o_Hayes, Cf_EVENT_Duree_1Trame)
}

// ANALYSE ===================================================================================
AI_Execute("CR_exec_CHECK_Paf")		// PAF VIANDE !!!

// COMPORTEMENT =============================================================================
if( ! CR_Check_Presence_Interet_Statut_Model(OBJ_Me(), faux, -1, faux, faux) || ! f_viande_cur )
	f_time_mort = MATH_FloatMax(0.0, f_time_mort - TIME_GetDt())

switch( ACT_ActionGet() )
{
	case ACTION_Mort :
	case ACTION_Mort_Paf_Lance :
	case ACTION_Mort_Variante :
		if( ! i_fade_flag 	// pas encore décomposé
			&& ( o_force_decompose_BV && ( CR_Gao_in_BV(OBJ_Me(), o_force_decompose_BV) && f_time_start_etat > f_force_decompose_duree ) 	// 10 sec dans la BV force destruction
					|| ( ! f_time_mort && i_modele == MODELE_Petit ) ) )	// délai fade petit crabe
		{
			i_fade_flag = vrai
			i_etat_courant = ETAT_FADE
			to_bone = ANI_CanalObjectGet(Anim_Canal_Bassin)
			to_duplicated = @get_SFX_decomposition OBJ_Duplicate(cvector(0,0,0))			// ALOC (C'est l'AI qui va gerer la decomposition)
			@to_duplicated Proc_Decomposition_Init(OBJ_Me(), 2.0, 0, 1, -1)				// INIT (Vas y decompose moi :))
			@to_duplicated Proc_Decomposition_Init(OBJ_Me(), 2.0, 0, 1, -1)				// INIT (Vas y decompose moi :))
			@to_duplicated Proc_Decomposition_Init(OBJ_Me(), 2.0, -1, -1, -1)				// INIT (Vas y decompose moi :))
			@to_duplicated Proc_Decomposition_Init(OBJ_Me(), 2.0, 0, 1, -1)				// INIT (Vas y decompose moi :))
		}
		break
}

// ORIENTATION -----------------------------------------------------------
if( ! MATH_VecNullToler(v_paf_dyn_speed, 0.1) && i_paf_explose )
	tv_sight = MATH_VecBlendRotate(OBJ_SightGet(), v_paf_dyn_speed, 5 * TIME_GetDt())		// shotgun = me retourner
else
	tv_sight = OBJ_SightGet()
OBJ_BankingGeneralSet(tv_sight, macro_banking)

