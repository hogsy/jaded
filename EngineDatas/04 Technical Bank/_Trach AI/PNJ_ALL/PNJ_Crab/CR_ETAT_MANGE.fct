#include "CR_defines.var"

messageid			tmid_vision


// SORTIE ETAT ==============================================================================
if (i_sort_etat)
{
	SND_Stop(i_snd_eat)
	i_snd_eat = -1
	i_sort_etat = faux
	return
}


// ENTREE ETAT ==============================================================================
if (i_etat_courant != ETAT_MANGE )
{
	i_etat_ancien = i_etat_courant
	i_etat_courant = ETAT_MANGE
	str_etat = "Mange"
	if (fct_etat_courant)
	{
		i_sort_etat = vrai
		AI_Execute(fct_etat_courant)
	}
	
	fct_etat_courant = AI_TrackCurGet()
	f_time_start_etat = 0.0
	
	ACT_ActionSet(ACTION_Mange)
	o_mange_actor = o_fight_actor
	
	if( i_DBG_trace_etat )
	{
		DBG_TraceObject(OBJ_Me())
		DBG_TraceString(" : ETAT MANGE")
		DBG_TraceEOL()
	}
	
	if( MSG_GlobalIsValid(mid_grab) )
		LNK_GrabStatusSet(mid_grab, Ci_Grab_Crab_Type_Traine_Mange)
	
	i_snd_eat = SND_Request(Ci_SND_Eat, C_SND_Request_3DSound | C_SND_Request_DestroyWhenFinished )
	SND_PlayLooped(i_snd_eat, -1)
}
else
{
	f_time_start_etat += TIME_GetDt()
}

// EMERGENCY ABORT =============================
o_emergency_abort_actor = o_mange_actor
Macro_Emergency_Abort

// ANALYSE ===================================================================================
AI_Execute("CR_exec_CHECK_Vision")

if( @o_mange_actor AI_IsModel(get_PNJ_Bidoche_path) && @o_mange_actor OBJ_CapaTest(CAPA_Bidoche_Snapped_Jack) )
{
	if( i_DBG_trace_etat )
	{
		DBG_TraceObject(OBJ_Me())
		DBG_TraceString(" : ma proie était une bidoche qui vient d'être ramassée")
		DBG_TraceEOL()
	}
	macro_change_etat("CR_ETAT_IDLE")	// perte d'intérêt et aucune autre cible -> IDLE
}
	
AI_Execute("CR_exec_CHECK_Paf")
if( CR_Paf_Check_Change_Etat() )
{
	if( MSG_GlobalIsValid(mid_grab) )
		CR_Grab_Reset()
	
	macro_change_etat("CR_ETAT_PAF")
}
else if( o_paf_actor && ( ! MSG_GlobalIsValid(mid_grab) || i_paf_grab_lache_flag ) )
{
	// pas de liaison ou alors liaison coupée
	CR_Interet_Update(mid_best_interet, C_EVENT_InteretStatusAttack, o_paf_actor, tmid_vision)
	macro_change_etat("CR_ETAT_FIGHT")		// retourne en fight
}


// COMPORTEMENT =============================================================================

tmid_vision = EVENT_FindEventPereTarget(C_EVENT_TYPE_Visibility, o_mange_actor, nobody)
if( ! MSG_GlobalIsValid(tmid_vision) || EVENT_VisionLifeStateGet(tmid_vision) == -1 )
{
	CR_Cadavre_Del(o_mange_actor)
	EVENT_Delete(mid_best_interet, C_EVENT_EOFDEL)		// raz intérêt
	// Changement de cible
	AI_Execute("CR_exec_CHECK_Target")
	if( i_change_target_flag )
		macro_change_etat("CR_ETAT_FIGHT")
	else
		macro_change_etat("CR_ETAT_IDLE")
}

// PAFS COLLISION
//AI_Execute("CR_exec_CHECK_Collision")

// INTERET (cadavre) ----------------------------------------------------------------
CR_Interet_Update(mid_best_interet, C_EVENT_InteretStatusAttack, o_mange_actor, tmid_vision)

// PAF MANGE
if( f_time_start_etat >= f_mange_paf_delai && CR_Cadavre_Find(o_mange_actor))
{
	f_time_start_etat = 0.0
	EVENT_AddEventPaf(C_EVENT_FILTER_Enemy, C_PAF_KK_FoodChain, OBJ_Me(), Cf_EVENT_Duree_1Trame, o_mange_actor, f_mange_paf_dmg, OBJ_SightGet())
	CR_Paffed_Actor_Add(o_mange_actor)
}

OBJ_BankingGeneralSet(OBJ_SightGet(), macro_banking)


// UNCOL ------------------------------------------------------------------------------
CR_UncollideAdd(o_mange_actor, Cf_EVENT_Duree_1Trame)


