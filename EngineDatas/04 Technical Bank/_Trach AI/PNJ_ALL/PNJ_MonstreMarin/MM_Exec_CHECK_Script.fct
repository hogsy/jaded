//#include "MM_defines.var"
//
//vector		tv_temp
//
//object		to_wp
//
//
//if( AI_TriggerIsValid(trig_script[i_script_indice]) )
//{
//	call_trigger(trig_script[i_script_indice])
//	m_script = AI_TriggerGetMsg(trig_script[i_script_indice])
//
//	switch( m_script.msg_id )
//	{
//		case CINE_MONSTREMARIN_MoveTo :
//			// destination
//			o_script_move_wp = m_script.msg_gao1
//			if( ! MM_Est_Sur_Mon_Reseau(o_script_move_wp) )
//			{
//				o_script_net_nearest_wp = @o_script_move_wp WAY_WPNearestOfOBJ(net_move, all, none, Ci_Filter_CapaFlag)	// le wp de destination n'appartient pas au réseau du monstre
//				if( o_script_net_nearest_wp == o_net_wp_last )
//				{
//					// ne pas faire un demi tour, aller au wp suivant
//					o_script_net_nearest_wp = WAY_NetNextWP(net_move, o_script_net_nearest_wp, 0, 0)
//				}
//			}
//			else
//				o_script_net_nearest_wp = nobody		// le wp de destination appartient au réseau du monstre
//			
//			// Mode
//			switch( m_script.msg_int1 )
//			{
//				case 0 :
//					i_move_mode = Ci_move_mode_move
//					break
//				case 1 :
//					i_move_mode = Ci_move_mode_attack
//					break
//				default:
//					DBG_Error("i_move_mode = ???")
//					i_move_mode = Ci_move_mode_move
//					break
//			}
//			
//			// vitesses
//			tv_temp = m_script.msg_vec1
//			f_speed_max = tv_temp.x
//			f_speed_blend = tv_temp.y
//			tv_temp = m_script.msg_vec2
//			f_speed_idle_max = tv_temp.x
//			f_speed_idle_blend = tv_temp.y
//			
//			MM_Beziers_Init_Way_To_Wp(WAY_WPNearestOfOBJ(net_move, all, none, Ci_Filter_CapaFlag))		// je pars de ma position courante
//			
//			if( i_DBG_trace_etat )
//			{
//				DBG_TraceString("Script indice")
//				DBG_TraceInt(i_script_indice)
//				DBG_TraceEOL()
//			}
//			
//			AI_TrackChange(Ci_Track_Etat, "MM_ETAT_MOVE")
//			break
//			
//		default:
//			DBG_Error("Message inatendu !!!")
//			break
//	}
//}
//
//