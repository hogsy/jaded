#include "it_defines.var"

int					ti_fire, i
vector			tv_pos, tv_sight
int					capa, oui
vector			tv_temp

i_track = faux

tv_pos = mv_FlammeCenter
tv_pos = MATH_VecLocalToGlobal( tv_pos )
tv_pos += OBJ_PosGet()

tv_sight = Cv_NullVector

if (OBJ_CapaTest( CAPA_Force_On ) )
{
	mi_On = vrai
	OBJ_CapaSet( CAPA_Allumee, CAPA_Force_On | CAPA_Force_Off )
	AI_TrackCurChangeNow( "it_loop_on" )
	return
}

if (!i_callback)
	SpecialFlag_reset( i_SF_State )

if ( mi_Vasque )
{
	if (	mi_GFX != -1 || mai_GFX[ 0 ] != -1 )
	{
		for ( i = 0; i < mi_GFXnb; i++)
		{
			SPG2_FireStateSet( mai_GFX[ i ], 2 )
			mai_GFX[ i ] = -1
		}
	}
}
else
{
//	if ( mi_ComplexFlamme && (GFX_Flamme2_Halo != -1) )
//		LIBGFX_JavelinFire2( tv_pos, tv_sight, 2.0, 0, &GFX_Flamme2[0], GFX_Flamme2_Halo, GFX_Flamme2_lastlastpos, GFX_Flamme2_lastpos)
//	else 
	{
		if (	mi_GFX != -1 || mai_GFX[ 0 ] != -1 )
			GFX_Seti( mi_GFX, 13106, 0)	
		mi_GFX = -1
	}
}

if (mi_Snd != -1 )
{
	SND_Stop(mi_Snd)
	mi_Snd = -1
}

if(mi_GFX1 != -1)
{
	GFX_Del(mi_GFX1)
	GFX_Del(mi_GFX2)
	mi_GFX1 = -1
	mi_GFX2 = -1
}

if( ! mi_Type )
{
	// FEU
	if ( !mi_Optim_NoEvent && !i_callback)
	{
		if ( mi_Vasque )
			ti_fire = EVENT_FIRE_IsCylinderInFire( OBJ_PosGet() - cvector(0,0,0.25), OBJ_BankingGet() * (mv_VasqueSize.z * 2), MATH_FloatMax( mv_VasqueSize.x, mv_VasqueSize.y) * mf_VasqueEffectRatio, OBJ_Me() )
		else 
			ti_fire = EVENT_FIRE_IsPosInFire( tv_pos, OBJ_Me() )
			
		if(GRID_Has(1))
		{
			GRID_CurrentSet(1)
			tv_temp.x = MATH_RandInt(-1, 2)
			tv_temp.y = MATH_RandInt(-1, 2)
			tv_temp.z = 0
			capa = GRID_CapaGet(OBJ_PosGet() + tv_temp)
			if(capa & Ci_Grid2_EnFeu) ti_fire = vrai
			GRID_CurrentSet(0)
		}
		
		if ( ti_fire)
		{
			mi_On = vrai
			OBJ_CapaSet( CAPA_Allumee, 0)
			AI_TrackCurChangeNow( "it_loop_on" )
		}
	}
}

