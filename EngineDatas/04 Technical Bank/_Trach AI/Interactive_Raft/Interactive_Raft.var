#include "Interactive_Raft_defs.var"

/////////////////////////////////////////////////////////////////////////////////////
// CAPA sur les WP du réseau
//		CAPA_0 : le radeau s'oriente selon l'orientation du radeau
//		CAPA_1 : coupure du network, des.object1 = WP suivant
// DESIGN STRUCT
//		si CAPA1 : des_object1 = WP suivant
//		des_float1 : vitesse
//		des_float2 : vitesse de rotation
//		des_int1 : 	1 : synchro on (des_object1 = synchro avec)
//						2 : synchro off
//		des_object2 : obstacle
/////////////////////////////////////////////////////////////////////////////////////
// CAPA sur le radeau
//		CAPA_0 : take a paf
//		CAPA_1 : stop
// 		CAPA_2 : redémarre
//		CAPA_3 : passager ne sont pas sur le radeau
/////////////////////////////////////////////////////////////////////////////////////
// CAPA sur le lien du réseau
//		lors du choix du WP suivant on regarde d'abord les liens
//		qui ont la capa_0 à vrai (puis les autres)
/////////////////////////////////////////////////////////////////////////////////////


function track2 = "raft_init"

separator	"etat"
	private	int				i_etat_courant = -1
	private	float			f_time_start_etat
	
separator	"voyage voyage"
				object		ao_Who[ 4 ]
				object		ao_PosOnRaft[ 4 ]
				object		ao_EjectWP[ RAFT_WPEject_NumberMax ][ 4 ]
				object		ao_EjectedPerso[ 4 ]
	
separator	"move"
// RESEAU
				object		o_1st_wp
				object		o_colmap_add
				float			f_speed
				float			f_speed_whenpersoejected = 0.25
				float			f_speed_factor = 1.0
				
	private	network		n_net
	
	private 	float			f_link_coef
	private 	float			f_link_length
	
	private	object		move_o_WP[ 2 ]
	private	vector		move_v_Pos[ 2 ]
	private	vector		move_v_Sight[ 2 ]
	private	vector		move_v_Orient[ 2 ]
	private	vector		move_v_Bank[ 2 ]
	private	int				move_b_Orient
	private	vector		move_v_Banking
	private	int				move_i_Stop
	
	private	vector		move_v_dir
	
	private	vector		move_v_sightideal
	private	vector		move_v_bankingideal
		
	private	float			move_f_speedideal 
	private	float			move_f_speed
	private	float			move_f_speed_add
	private	float			move_f_speed_factor
		
	private	float			move_f_z_time
	private	float			move_f_z_cur
	private	float			move_f_z_speed
	
	private	float			orient_f_speed
	private	float			orient_f_curspeed
	
	private	float			banking_f_anglespeed
	private	float			banking_f_prevangle
	private	float			banking_f_time
	private	vector		banking_v_axerot
	
	private	float			force_f_anglespeed
	private	float			force_f_prevangle
	private	float			force_f_time
	private	vector		force_v_axerot

separator "ES"
				object		ES_Object[ 16 ]
				object		ES_Start[ 16 ]
	
separator	"synchro"
				object		sync_o_With
				int				sync_i_slave = vrai_faux
	private	int				sync_i_On = vrai_faux
	private	object		sync_o_WPMe
	private	object		sync_o_WPOther
	private	float			sync_f_Time
	private	float			sync_f_Dist
	private	float			sync_f_DistNext
	private	float			sync_f_TimeNext
	private	float			sync_f_SpeedAdd
	
separator "perturbateur"
				object		perturb_o_Object[ 4 ]
				float			perturb_f_DistMax[ 4 ]
				float			perturb_f_Delay[ 4 ]
				float			perturb_f_Force[ 4 ]
	private	float			perturb_f_Timer[ 4 ]
				
	
separator "gigote" 
	private	vector		gigot_v_axe[ RAFT_GIGOT_MAX ]
	private	float			gigot_f_timer[ RAFT_GIGOT_MAX ]
	private	float			gigot_f_angle[ RAFT_GIGOT_MAX ]
	private	float			gigot_f_oldsin[ RAFT_GIGOT_MAX ]
	private	float			gigot_f_horiztimer[ RAFT_GIGOT_MAX ]
	private	float			gigot_f_speed[ RAFT_GIGOT_MAX ]
	
	private	float			tang_f_force
	private	float			tang_f_delay
	private	float			tang_f_timer
	private	int				tang_i_on
	private	int				tang_i_count
	
separator "paf"
	private	float			paf_f_force
	private	float			paf_f_time
	private	vector		paf_v_dir
	private	float			paf_f_coefcourant 
	private	float			paf_f_ztime 
	private	float			paf_f_zspeed
	private	float			paf_f_z
	private	float			paf_f_oldz
	private	vector		paf_v_pos 
	private	float			paf_f_zangle
	private	int				paf_i_flag
	private	object		paf_o_by
	private	int				paf_i_canal
	
separator "obstacle"
	private	int				obstacle_i_show = faux_vrai
	private	vector		obstacle_v_pos
	private	int				obstacle_i_type = enum( "none" 0 "sphere" 1 "plan" 2 )
	private	float			obstacle_f_radius
	private	vector		obstacle_v_norm
	private	vector		obstacle_v_colpos
	private   vector			obstacle_v_colnorm

	private	int				GFX_Airtrace1 = -1
//object test

separator "limitation de lance"
				int				lance_max = enum( "0" 0 "1" 1 "2" 2 "3" 3 "4" 4 "5" 5 "6" 6 "7" 7 "8" 8 )
	private	object		lance_obj[ 8 ]
	private	float			lance_time[ 8 ]


separator "divers"
// SPEED
private vector				v_last_pos
private vector				v_speed
private float					alpha_profile