#include "Interactive_Door_defs.var"

///////////////////////////////////////////////////////////////////////////////
// Compute parameters
///////////////////////////////////////////////////////////////////////////////
procedure_local void DOOR_ComputeParams( )
{
	float	tf_val
	
	if ( mf_OpeningSpeed_inmeterpersecond <= 0)
		mf_OpeningSpeed_inmeterpersecond = 0.1
	if (mf_ClosingSpeed_inmeterpersecond <= 0)
		mf_ClosingSpeed_inmeterpersecond = 0.1

	mf_OpeningRatio = mf_OpeningSpeed_inmeterpersecond 
	mf_ClosingRatio = mf_ClosingSpeed_inmeterpersecond 
	// accélération de la fermeture x3
	mf_ClosingRatio /= 3

	// vitesse de rotation en ouverture des piliers fixe
	mf_PD_rotspeed_open = 0.576
	
	// vitesse de fermeture
	tf_val = mf_PD_rotspeed_open * mf_OpeningRatio
	mf_PD_rotspeed_close = tf_val / mf_ClosingRatio
	
	// set capa 13 to zero, capa 13 indicate to recompute params
	OBJ_CapaSet( 0, OBJ_Capa_13 )
}


///////////////////////////////////////////////////////////////////////////////
// DENHAM DOOR
///////////////////////////////////////////////////////////////////////////////
procedure_local void DOORPilar_Opened( )
{
	int			i
	object	o_levier
	object	o_main
	object	o_pilar
	
	o_main = AI_MainActorGet(C_ID_Joueur)
	if( o_main )
	{
		for (i = 0; i < mi_PD_NbPilar; i++)
		{
			o_levier = mao_PD_PilarLevier[ i ]
			o_pilar = mao_PD_Pilar[ i ]
			o_levier.des_int1 = 0
	
			// joueur actionne le levier
			if (@o_levier OBJ_CapaTest( OBJ_Capa_15 ) )
			{
				@o_levier OBJ_CapaSet( 0, OBJ_Capa_15 )
				@get_Humain_path o_main f_speed_porte = mf_PD_rotspeed_open
				@get_Humain_path o_main o_obj_porte = o_pilar
				@get_Humain_path o_main o_obj_levier = o_levier
			}
			else if ( @o_levier OBJ_SqrDist( o_main ) < 4 )
				o_levier.des_int1 = Ci_DISPLAY_TAKE
	
			
			// pas d'interaction pour les compagnons		
			@o_pilar OBJ_CapaSet( OBJ_Capa_10, 0 )
		}
	}
	if ( !mi_PD_SpeechState[ DOOR_SPEECH_DoorOpened ] )
	{
		mi_Speech = DOOR_SPEECH_DoorOpened
		AI_Execute( "InteractiveDoor_exec_speech" )
	}
}

procedure_local void DOORPilar_HumainInteract( )
{
	int 		index, ref, pilier
	float		d, aad[4][10], f_distfactor
	object	o
	
	if ( mi_HumainInit > 0)
		return
	mi_HumainInit = 10
		
	mi_HumainNb = 0
//	for ( index= C_ID_Ann; index < C_ID_Marin1; index++)
//	{
//		if ( !@"univ" ai_HumainIsHere[ index] || !@"univ" ao_AllHumains[ index])
//			continue
//		if ( mi_JackForceActivation )
//		{
//			switch( index)
//			{
//			case C_ID_Ann : 			f_distfactor = 4 break
//			case C_ID_Denham : 	f_distfactor = 5 break
//			case C_ID_Jimmy :		f_distfactor = 2 break
//			default:						f_distfactor = 1 break
//			}
//		}
//		else
//			 f_distfactor = 1
//
//		for (pilier = 0; pilier < mi_PD_NbPilar; pilier++)
//		{
//			o = mao_PD_Pilar[ pilier ]	
//			maao_Humain[pilier][ mi_HumainNb ] = @"univ" ao_AllHumains[ index]
//			aad[pilier][ mi_HumainNb ] = @o OBJ_SqrDist( maao_Humain[ pilier ][ mi_HumainNb ] )
//			aad[pilier][ mi_HumainNb ] *= f_distfactor
//		}
//		mi_HumainNb++
//		if (mi_HumainNb == 10)
//			break
//	}
	
	// tri du plus proche au plus loin
	for (pilier = 0; pilier < mi_PD_NbPilar; pilier++)
	{
		for ( index = 1; index < mi_HumainNb ; index++)
		{
			o = maao_Humain[ pilier ][ index ]
			d = aad[ pilier ][ index ]
			ref = index
			while ( ref > 0 )
			{
				if (aad[ pilier ][ ref - 1] > d)
				{
					aad[ pilier ][ ref ] = aad[ pilier ][ ref - 1 ]
					maao_Humain[ pilier ][ ref ] = maao_Humain[ pilier ][ ref - 1 ]
					ref--
					if (ref) continue
				}
			
				aad[ pilier ][ ref ] = d
				maao_Humain[ pilier ][ ref ] = o
				break
			}
		}
	}
}

procedure_local void DOORPilar_SetInteraction( int i_pilar, int i_active )
{
	int			index
	int			count
	object	perso, pilar
	
	pilar = mao_PD_Pilar[ i_pilar ]	
	if ( !i_active )
	{
		@pilar OBJ_CapaSet( 0, OBJ_Capa_0 )
		return
	}
	
	@"Interactive/Interaction" pilar nombre_de_client = 0
	
	if ( mi_PD_UsePreferedHumain && maao_PD_PreferedHumain[ i_pilar ][ 0 ] )
	{
		for (index = 0; index < 4; index++)
		{
			perso = maao_PD_PreferedHumain[ i_pilar ][ index ]
			if ( !perso ) break
			@"Interactive/Interaction" pilar ao_liste_clients[ index ] = perso
			@"KingKong/Humain" perso  f_speed_porte = mf_PD_rotspeed_open
			@"Interactive/Interaction" pilar nombre_de_client = index + 1
		}
	}
	else
	{
		DOORPilar_HumainInteract()
		for ( index = 0; index < mi_HumainNb; index++)
		{
			@"Interactive/Interaction" pilar ao_liste_clients[ index ] = maao_Humain[ i_pilar ][ index ]
			@"KingKong/Humain" maao_Humain[ i_pilar ][ index ] f_speed_porte = mf_PD_rotspeed_open
		}
		@"Interactive/Interaction" pilar nombre_de_client = mi_HumainNb
	}

	if ( !@"Interactive/Interaction" pilar nombre_de_client )
	{
		@pilar OBJ_CapaSet( 0, OBJ_Capa_0 )
		return
	}
	
	@"Interactive/Interaction" pilar mode_i_onlyoneclient  = vrai
	@"Interactive/Interaction" pilar activate_always = vrai
	@pilar OBJ_CapaSet( OBJ_Capa_0, 0 )
	
	if (mi_JackForceActivation)
		@pilar OBJ_CapaSet( OBJ_Capa_1, 0 )
	else
		@pilar OBJ_CapaSet( 0, OBJ_Capa_1 )
}
	

///////////////////////////////////////////////////////////////////////////////
// DENHAM DOOR
///////////////////////////////////////////////////////////////////////////////
//procedure_local void DoorDenham( )
//{
//	if ( mi_Type != DOOR_Denham ) 
//		return
//
//	if (mi_DD_CurSwitch == mi_DD_NbSwitch )
//	{
//		OBJ_CapaSet( OBJ_Capa_9, 0 )
//	}
//	else
//	{
//		o_switch = mao_DD_Switch[ mi_DD_CurSwitch ]
//		if ( !OBJ_CapaTest( OBJ_Capa_0) )
//		{
//			// demande à Denham de venir analyser le code + flag init
//			if ( AI_TriggerIsValid( mat_DD_ScriptStart[ mi_DD_CurSwitch ] ) )
//				ti_res = call_trigger( mat_DD_ScriptStart[ mi_DD_CurSwitch ]  )
//			else
//				ti_res = vrai
//			
//			if ( ti_res )
//			{
//				@mo_DD_Script OBJ_FlagInactiveSet( 0 )
//				OBJ_CapaSet( OBJ_Capa_0 | OBJ_Capa_1, 0 )
//			}
//		}
//		else
//		{
//			// Denham à analysé le code
//			if (OBJ_CapaTest( OBJ_Capa_2))
//			{
//				OBJ_CapaSet(0, OBJ_Capa_1 | OBJ_Capa_2)
//				@o_switch OBJ_FlagInactiveSet( 0 )
//			}
//			
//			// timer a rajouter pour répeter le code
//	
//			// code activé
//			if ( ! OBJ_CapaTest( OBJ_Capa_3 ) )
//			{
//				if (@o_switch OBJ_CapaTest( OBJ_Capa_1 ) )
//					OBJ_CapaSet( OBJ_Capa_3, 0 )
//			}
//			else
//			{
//				if (OBJ_CapaTest( OBJ_Capa_4 ))
//				{
//					if ( AI_TriggerIsValid( mat_DD_ScriptEnd[ mi_DD_CurSwitch ] ) )
//						call_trigger( mat_DD_ScriptEnd[ mi_DD_CurSwitch ] )
//
//					OBJ_CapaSet( 0, OBJ_Capa_0 | OBJ_Capa_3 | OBJ_Capa_4 )
//					mi_DD_CurSwitch++
//					// reinit script
//					if (mi_DD_CurSwitch < mi_DD_NbSwitch )
//						AI_Execute( "InteractiveDoor_exec_DenhamScriptSet" )
//				}
//			}
//		}
//	}
//}
//