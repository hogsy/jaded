#include "Wall_Effect_defines.var"
M_DeclareInteraction_Common


//======================================================================================================
//This file contains an ultra procedure to test other actors (TREX, RAPTOR) contact with the environment, and then to launch the approproate GFX
//======================================================================================================

//Call this ultra procedure with the approprate message to launch a GFX 
procedure_ultra message fn_Wall_Effect_InteractionMsg(message tm_request)
{
	int i
	int i_1
	int i_2
	message tm_reply
	object o_duplicatedGFX

	vector tv_pos
	vector tv_normal
	int i_soundID
	int i_displayTexture
	
	message m_Msg

	MSG_SetNull( tm_reply )
	DBG_StartRaster(0,"GFX")

	switch(tm_request.msg_int1)
	{
		tm_reply.msg_id = C_Interaction_ResultSuccess
			
		//Raptor GFX for walking and running on right hand
		case SFX_ID_RaptorImpactOnRightHand :	
		case SFX_ID_RaptorImpactOnRightHand_Walk :
				if(Proc_KK_TestFoot(tm_request.msg_vec1, tm_request.msg_vec2,  tv_pos, tv_normal, i_soundID, i_displayTexture ))
				{
					 for(i_1=0; i_1<i_number_GFX; i_1++)
			   		 {
				   		 if(o_RaptorMovementSoundID[i_soundID][i_1])
				   		 {   
				  			@o_RaptorMovementSoundID[i_soundID][i_1]		OBJ_BankingSet(tv_normal +  cvector(0.1, 0.0, 0.0) )	
				  			m_Msg.msg_sender =  @o_RaptorMovementSoundID[i_soundID][i_1]		OBJ_Duplicate(tv_pos + cvector(0.0,0.0,0.1))    
				  			o_duplicatedGFX = m_Msg.msg_sender                                                             
							Dispatch_Interaction(o_duplicatedGFX, m_Msg )  
							f_raptor_RightfootGFX_time = TIME_Get()
						
				  		}
					}
				}
		
			break
			
		//Raptor GFX for walking and running on left hand
		case SFX_ID_RaptorImpactOnLeftHand :
		case SFX_ID_RaptorImpactOnLeftHand_Walk :
				if(Proc_KK_TestFoot(tm_request.msg_vec1, tm_request.msg_vec2,  tv_pos, tv_normal, i_soundID, i_displayTexture ))
				{
					 for(i_1=0; i_1<i_number_GFX; i_1++)
			   		 {
				   		 if(o_RaptorMovementSoundID[i_soundID][i_1])
				   		 {   
				  			@o_RaptorMovementSoundID[i_soundID][i_1]		OBJ_BankingSet(tv_normal +  cvector(0.1, 0.0, 0.0) )	
				  			m_Msg.msg_sender =  @o_RaptorMovementSoundID[i_soundID][i_1]		OBJ_Duplicate(tv_pos + cvector(0.0,0.0,0.1))    
				  			o_duplicatedGFX = m_Msg.msg_sender                                                             
							Dispatch_Interaction(o_duplicatedGFX, m_Msg )  
							f_raptor_LeftfootGFX_time = TIME_Get()
						
				  		}
					}
				}
			break
			
		//Trex GFX for walking and running on right hand
		case SFX_ID_TrexImpactOnRightHand :	
		case 	SFX_ID_TrexImpactOnRightHand_Walk :
				if(Proc_KK_TestFoot(tm_request.msg_vec1, tm_request.msg_vec2,  tv_pos, tv_normal, i_soundID, i_displayTexture ))
				{
					 for(i_1=0; i_1<i_number_GFX; i_1++)
			   		 {
				   		 if(o_TrexMovementSoundID[i_soundID][i_1])
				   		 {   
				  			@o_TrexMovementSoundID[i_soundID][i_1]		OBJ_BankingSet(tv_normal+  cvector(0.1, 0.0, 0.0) )//OBJ_SightSet(tv_normal)	
				  			m_Msg.msg_sender = @o_TrexMovementSoundID[i_soundID][i_1]		OBJ_Duplicate(tv_pos + cvector(0.0,0.0,0.1))                                                                 
					  		o_duplicatedGFX = m_Msg.msg_sender                                                             
							Dispatch_Interaction(o_duplicatedGFX, m_Msg )  
							f_Trex_RightfootGFX_time = TIME_Get()
						
				  		}
					}
				}
			break
			
		//Trex GFX for walking and running on left hand
		case SFX_ID_TrexImpactOnLeftHand :
		case 	SFX_ID_TrexImpactOnLeftHand_Walk :
				if(Proc_KK_TestFoot(tm_request.msg_vec1, tm_request.msg_vec2,  tv_pos, tv_normal, i_soundID, i_displayTexture ))
				{
					 for(i_1=0; i_1<i_number_GFX; i_1++)
			   		 {
				   		 if(o_TrexMovementSoundID[i_soundID][i_1])
				   		 {   
				  			@o_TrexMovementSoundID[i_soundID][i_1]		OBJ_BankingSet(tv_normal+  cvector(0.1, 0.0, 0.0) )//OBJ_SightSet(tv_normal)	
				  			m_Msg.msg_sender = @o_TrexMovementSoundID[i_soundID][i_1]		OBJ_Duplicate(tv_pos + cvector(0.0,0.0,0.1))                                                                 
					  		o_duplicatedGFX = m_Msg.msg_sender                                                             
							Dispatch_Interaction(o_duplicatedGFX, m_Msg )  
							f_Trex_LeftfootGFX_time = TIME_Get()
											
				  		}
					}
				}
			break
			
		//Raptor GFX for when he is thrown on the ground/wall
		case SFX_ID_RaptorImpactOnGround :
		
			if(Proc_KK_TestImpact(tm_request.msg_vec1, tm_request.msg_vec2,  tv_pos, tv_normal, i_soundID, i_displayTexture ))
			{
     				 for(i_1=0; i_1<i_number_GFX; i_1++)
		   		 {
			   		 if(o_RaptorImpactSoundID[i_soundID][i_1])
			   		 {   
			   		 
			   		
			   			o_duplicatedGFX = @o_RaptorImpactSoundID[i_soundID][i_1]			OBJ_Duplicate(tv_pos + cvector(0.0,0.0,0.1))   
			  			@o_duplicatedGFX OBJ_BankingSet(tv_normal+  cvector(0.1, 0.0, 0.0) )
			  			m_Msg.msg_sender    =  o_duplicatedGFX 
			  			Dispatch_Interaction(o_duplicatedGFX, m_Msg )  
			 				
			  		}
				}
			}
			if(Proc_KK_TestThrowImpact(tm_request.msg_vec1, tm_request.msg_vec2,  tv_pos,  tv_normal, i_soundID, i_displayTexture))
			{
				if(i_displayTexture)
				{ 			
					if(k <= i_numberPunchObjects-1)
					{
						if(o_num_punchTextures[k])
						{
							//m_Msg.msg_int1 = i_wall_punch_fade_delay
							//Dispatch_Interaction(o_num_punchTextures[k], m_Msg )  
							@o_num_punchTextures[k] OBJ_Destroy()
						}
		 				o_num_punchTextures[k] = @o_WallPunch_Impact_Textures[i_soundID] OBJ_Duplicate(tv_pos)
		 			
		 			}
		 			else
		 			{
			 			k=0
			 			if(o_num_punchTextures[k])
			 			{
				 			//m_Msg.msg_int1 = i_wall_punch_fade_delay
				 			//Dispatch_Interaction(o_num_punchTextures[k], m_Msg )  
				 			@o_num_punchTextures[k] OBJ_Destroy()
				 		}
							
		 				o_num_punchTextures[k] = @o_WallPunch_Impact_Textures[i_soundID] OBJ_Duplicate(tv_pos)
		 			}

		 			//set the position/sight/heirarchy of the texture
		 			@o_num_punchTextures[k] OBJ_PosSet(tv_pos)	
					
					//CHECK FOR NAN ERROR after setting sight! 
					if(  MATH_VecNull(MATH_VecCrossProduct(tv_normal, @o_num_punchTextures[k] OBJ_HorizonGet()))  || MATH_VecNull(MATH_VecCrossProduct(tv_normal, @o_num_punchTextures[k]  OBJ_BankingGet())) 	)
						@o_num_punchTextures[k] OBJ_SightSet(tv_normal + cvector(0.1, 0.1, 0.1))
					else
						@o_num_punchTextures[k] OBJ_SightSet(tv_normal)
			
		 			@o_num_punchTextures[k] OBJ_RotateLocalZ(Cf_PiBy2)
		 			@o_num_punchTextures[k] OBJ_RotateLocalX(MATH_RandFloat(0.0,Cf_2Pi)) //randomly rotate the textures on the wall MATH_RandFloat(0.0,Cf_2Pi)
					k++
				}
			}
			break
			
		//Trex GFX for when he is thrown on the ground/wall
		case SFX_ID_TrexImpactOnGround :

			if(Proc_KK_TestImpact(tm_request.msg_vec1, tm_request.msg_vec2,  tv_pos, tv_normal, i_soundID, i_displayTexture ))
			{
     				 for(i_1=0; i_1<i_number_GFX; i_1++)
		   		 {
			   		 if(o_TrexImpactSoundID[i_soundID][i_1])
			   		 {   
			  			
			  			o_duplicatedGFX = @o_TrexImpactSoundID[i_soundID][i_1]		OBJ_Duplicate(tv_pos + cvector(0.0,0.0,0.1))   
			  			@o_duplicatedGFX OBJ_BankingSet(tv_normal+  cvector(0.1, 0.0, 0.0) )
			  			m_Msg.msg_sender    =  o_duplicatedGFX 
			  			Dispatch_Interaction(o_duplicatedGFX, m_Msg )  
			
			  		}
				}
			}
			break
			
	}

	return tm_reply

}

