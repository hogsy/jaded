MAKEFILE       = eeMakefile.mak
#
# project dependent macros (generated by mkmf)
#
include eeGheader.mak

#
# system dependent macros:
# - directories
#
SYS_DIR_TOP    = /usr/local/sce/ee
SYS_DIR_LIB    = $(SYS_DIR_TOP)/lib
SYS_DIR_INC    = $(SYS_DIR_TOP)/include
SYS_OPT_LIB    = -lm    \
                -lpc  \
                -lpad  \
                -ldev \
                -lpkt  \
                -lvu0  \
                -ldma  \
                -lgraph
# - tools
CCPP         = $(SYS_DIR_TOP)/gcc/bin/ee-g++
CC           = $(SYS_DIR_TOP)/gcc/bin/ee-gcc
AS           = $(SYS_DIR_TOP)/gcc/bin/ee-gcc
DVPASM       = $(SYS_DIR_TOP)/gcc/bin/ee-dvp-as
AR           = $(SYS_DIR_TOP)/gcc/bin/ee-ar 
LD           = $(SYS_DIR_TOP)/gcc/bin/ee-gcc
GDB          = $(SYS_DIR_TOP)/gcc/bin/ee-gdb -w
RUN          = /usr/local/sce/bin/dsedb -r run
# - tool flags
CCFLAGS_O3  = -O3 -fstrength-reduce -Wall -Wa,-al -fno-common \
                  -I $(SYS_DIR_INC) $(PRJ_OPT_INC) 
CCFLAGS_O2  = -O2 -fstrength-reduce -Wall -Wa,-al -fno-common \
                  -I $(SYS_DIR_INC) $(PRJ_OPT_INC) 
CCFLAGS_O1  = -O1 -fstrength-reduce -Wall -Wa,-al -fno-common \
                  -I $(SYS_DIR_INC) $(PRJ_OPT_INC) -ggdb
CCFLAGS_O0   = -O0 -Winline -Wpointer-arith -Wall -fstack-check -Wa,-ahlsdn -fno-common \
                  -I $(SYS_DIR_INC) $(PRJ_OPT_INC) -ggdb
ASFLAGS      = -c -xassembler-with-cpp -Wa,-al $(PRJ_OPT_INC)
DVPASMFLAGS  = -g $(PRJ_OPT_INC)
ARFLAGS      = rc
LDFLAGS      = -Wl,-Map,$(@:.elf=.map) -nostartfiles $(SYS_OPT_LIB) -L$(SYS_DIR_LIB)

#
# OS dependent macros:
#
RM           = /bin/rm -f
RMDIR        = /bin/rm -rf
MKDIR		 = /bin/mkdir
SED			 = /bin/sed
PRINT	     = /bin/echo
CP           = /bin/cp
CHMOD        = /bin/chmod
TOUCH        = /bin/touch
DOS2UNIX     = /usr/bin/dos2unix -U


#
# targets
#
.SILENT:

.PHONY: dirs clean cleanall

#
# building rules, depend on project (generated by mkmf)
include eeGbody.mak
#

#
# building rules, depend on system
#
$(PRJ_DIR_OBJ)/crt0.o: $(SYS_DIR_LIB)/crt0.s
	$(PRINT) "++ New version of boot file: crt0.s"
	$(AS) $(ASFLAGS) -o $@ $< > $(@F:.o=.lst)

$(PRJ_DIR_WORK)/app.cmd: $(SYS_DIR_LIB)/app.cmd
	$(PRINT) "++ New version of linker command: file app.cmd"
	$(SED) "s+crt0.o+$(PRJ_DIR_OBJ)/crt0.o+g" $< > $(PRJ_DIR_WORK)/app.cmd

dirs:
	if ! [ -d $(PRJ_DIR_LIB) ]; then $(MKDIR) $(PRJ_DIR_LIB); fi
	if ! [ -d $(PRJ_DIR_OBJ) ]; then $(MKDIR) $(PRJ_DIR_OBJ); fi

cleanall:
	$(PRINT) Cleaning $(PRJ_DIR_OBJ)...
	$(RMDIR) $(PRJ_DIR_OBJ)
	$(PRINT) Cleaning $(PRJ_DIR_LIB)...
	$(RMDIR) $(PRJ_DIR_LIB)
	$(PRINT) Cleaning $(PRJ_EXEDIR)...
	$(RMDIR) $(PRJ_EXEDIR)

