MAKEFILE       = iopMakefile.mak
#
# project dependent macros (generated by mkmf)
#
include iopGheader.mak

#
# system dependent macros:
# - directories
#
SYS_DIR_TOP    = /usr/local/sce/iop
SYS_DIR_LIB    = $(SYS_DIR_TOP)/gcc/lib
SYS_DIR_INC    = $(SYS_DIR_TOP)/install/include
SYS_OPT_LIB    = 
# - tools
CC           = $(SYS_DIR_TOP)/gcc/bin/iop-elf-gcc
LD           = $(SYS_DIR_TOP)/gcc/bin/iop-elf-gcc
AS           = $(SYS_DIR_TOP)/gcc/bin/iop-elf-gcc
# - tool flags
CCFLAGS_O3   = -O3 -Wall -G0 -I$(SYS_DIR_INC) $(PRJ_OPT_INC)
CCFLAGS_O2   = -O2 -Wall -G0 -I$(SYS_DIR_INC) $(PRJ_OPT_INC)
CCFLAGS_O1   = -O1 -Wall -G0 -I$(SYS_DIR_INC) $(PRJ_OPT_INC)
CCFLAGS_O0   = -Wall -G0 -I$(SYS_DIR_INC) $(PRJ_OPT_INC)
LDFLAGS      = -ilb=libsd.ilb  -ilb=cdvdman.ilb
ASFLAGS      = -xassembler-with-cpp -I$(SYS_DIR_INC) $(PRJ_OPT_INC) -G0

#
# OS dependent macros:
#
RM           = /bin/rm -f
RMDIR        = /bin/rm -rf
MKDIR		 = /bin/mkdir
SED			 = /bin/sed
PRINT	     = /bin/echo
CP           = /bin/cp
CHMOD        = /bin/chmod
TOUCH        = /bin/touch
DOS2UNIX     = /usr/bin/dos2unix -U
MV           = /bin/mv


#
# targets
#
.SILENT:

.PHONY: dirs clean cleanall

#
# building rules, depend on project (generated by mkmf)
include iopGbody.mak
#

#
# building rules, depend on system
#

dirs:
	if ! [ -d $(PRJ_DIR_LIB) ]; then $(MKDIR) $(PRJ_DIR_LIB); fi
	if ! [ -d $(PRJ_DIR_OBJ) ]; then $(MKDIR) $(PRJ_DIR_OBJ); fi

cleanall:
	$(PRINT) Cleaning $(PRJ_DIR_OBJ)...
	$(RMDIR) $(PRJ_DIR_OBJ)
	$(PRINT) Cleaning $(PRJ_DIR_LIB)...
	$(RMDIR) $(PRJ_DIR_LIB)
	$(PRINT) Cleaning $(PRJ_EXEDIR)...
	$(RMDIR) $(PRJ_EXEDIR)

